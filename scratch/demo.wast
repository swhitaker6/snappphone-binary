(module
 (type $FUNCSIG$vii (func (param i32 i32)))
 (type $FUNCSIG$iii (func (param i32 i32) (result i32)))
 (type $FUNCSIG$viiii (func (param i32 i32 i32 i32)))
 (type $FUNCSIG$viii (func (param i32 i32 i32)))
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$iiii (func (param i32 i32 i32) (result i32)))
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $FUNCSIG$iiiii (func (param i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$viiiii (func (param i32 i32 i32 i32 i32)))
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$iiiiii (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$viiiiii (func (param i32 i32 i32 i32 i32 i32)))
 (import "env" "memory" (memory $memory 256 256))
 (data (i32.const 1024) "+~\15\16(\ae\d2\a6\ab\f7\15\88\t\cfO<k\c1\be\e2.@\9f\96\e9=~\11s\93\17*\ae-\8aW\1e\03\ac\9c\9e\b7o\acE\af\8eQ0\c8\1cF\a3\\\e4\11\e5\fb\c1\19\1a\nR\ef\f6\9f$E\dfO\9b\17\ad+A{\e6l7\10c|w{\f2ko\c50\01g+\fe\d7\abv\ca\82\c9}\faYG\f0\ad\d4\a2\af\9c\a4r\c0\b7\fd\93&6?\f7\cc4\a5\e5\f1q\d81\15\04\c7#\c3\18\96\05\9a\07\12\80\e2\eb\'\b2u\t\83,\1a\1bnZ\a0R;\d6\b3)\e3/\84S\d1\00\ed \fc\b1[j\cb\be9JLX\cf\d0\ef\aa\fbCM3\85E\f9\02\7fP<\9f\a8Q\a3@\8f\92\9d8\f5\bc\b6\da!\10\ff\f3\d2\cd\0c\13\ec_\97D\17\c4\a7~=d]\19s`\81O\dc\"*\90\88F\ee\b8\14\de^\0b\db\e02:\nI\06$\\\c2\d3\acb\91\95\e4y\e7\c87m\8d\d5N\a9lV\f4\eaez\ae\08\bax%.\1c\a6\b4\c6\e8\ddt\1fK\bd\8b\8ap>\b5fH\03\f6\0ea5W\b9\86\c1\1d\9e\e1\f8\98\11i\d9\8e\94\9b\1e\87\e9\ceU(\df\8c\a1\89\0d\bf\e6BhA\99-\0f\b0T\bb\16\01\01\02\04\08\10 @\80\1b6l\d8\00\00\001.2.3")
 (data (i32.const 1412) "\04\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\01")
 (data (i32.const 1440) "\08\00\00\00\08\00\00\00\04\00\00\00\04\00\00\00\02\00\00\00\02\00\00\00\01")
 (data (i32.const 1480) "\04\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\08\00\00\00\04\00\00\00\04\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\10\00\00\00!\00\00\00B\00\00\00\84\00\00\00\10\01\00\00H\02\00\00P\05\00\00\f0\0f\00\00Error decoding compressed text\00\00\00@\80\c0\10P\90\d0 `\a0\e00p\b0\f0\04D\84\c4\14T\94\d4$d\a4\e44t\b4\f4\08H\88\c8\18X\98\d8(h\a8\e88x\b8\f8\0cL\8c\cc\1c\\\9c\dc,l\ac\ec<|\bc\fc\01A\81\c1\11Q\91\d1!a\a1\e11q\b1\f1\05E\85\c5\15U\95\d5%e\a5\e55u\b5\f5\tI\89\c9\19Y\99\d9)i\a9\e99y\b9\f9\0dM\8d\cd\1d]\9d\dd-m\ad\ed=}\bd\fd\02B\82\c2\12R\92\d2\"b\a2\e22r\b2\f2\06F\86\c6\16V\96\d6&f\a6\e66v\b6\f6\nJ\8a\ca\1aZ\9a\da*j\aa\ea:z\ba\fa\0eN\8e\ce\1e^\9e\de.n\ae\ee>~\be\fe\03C\83\c3\13S\93\d3#c\a3\e33s\b3\f3\07G\87\c7\17W\97\d7\'g\a7\e77w\b7\f7\0bK\8b\cb\1b[\9b\db+k\ab\eb;{\bb\fb\0fO\8f\cf\1f_\9f\df/o\af\ef?\7f\bf\ff\00\10 0@P`p\80\90\a0\b0\c0\d0\e0\f0\01\11!1AQaq\81\91\a1\b1\c1\d1\e1\f1\02\12\"2BRbr\82\92\a2\b2\c2\d2\e2\f2\03\13#3CScs\83\93\a3\b3\c3\d3\e3\f3\04\14$4DTdt\84\94\a4\b4\c4\d4\e4\f4\05\15%5EUeu\85\95\a5\b5\c5\d5\e5\f5\06\16&6FVfv\86\96\a6\b6\c6\d6\e6\f6\07\17\'7GWgw\87\97\a7\b7\c7\d7\e7\f7\08\18(8HXhx\88\98\a8\b8\c8\d8\e8\f8\t\19)9IYiy\89\99\a9\b9\c9\d9\e9\f9\n\1a*:JZjz\8a\9a\aa\ba\ca\da\ea\fa\0b\1b+;K[k{\8b\9b\ab\bb\cb\db\eb\fb\0c\1c,<L\\l|\8c\9c\ac\bc\cc\dc\ec\fc\0d\1d-=M]m}\8d\9d\ad\bd\cd\dd\ed\fd\0e\1e.>N^n~\8e\9e\ae\be\ce\de\ee\fe\0f\1f/?O_o\7f\8f\9f\af\bf\cf\df\ef\ff\00\80@\c0 \a0`\e0\10\90P\d00\b0p\f0\08\88H\c8(\a8h\e8\18\98X\d88\b8x\f8\04\84D\c4$\a4d\e4\14\94T\d44\b4t\f4\0c\8cL\cc,\acl\ec\1c\9c\\\dc<\bc|\fc\02\82B\c2\"\a2b\e2\12\92R\d22\b2r\f2\n\8aJ\ca*\aaj\ea\1a\9aZ\da:\baz\fa\06\86F\c6&\a6f\e6\16\96V\d66\b6v\f6\0e\8eN\ce.\aen\ee\1e\9e^\de>\be~\fe\01\81A\c1!\a1a\e1\11\91Q\d11\b1q\f1\t\89I\c9)\a9i\e9\19\99Y\d99\b9y\f9\05\85E\c5%\a5e\e5\15\95U\d55\b5u\f5\0d\8dM\cd-\adm\ed\1d\9d]\dd=\bd}\fd\03\83C\c3#\a3c\e3\13\93S\d33\b3s\f3\0b\8bK\cb+\abk\eb\1b\9b[\db;\bb{\fb\07\87G\c7\'\a7g\e7\17\97W\d77\b7w\f7\0f\8fO\cf/\afo\ef\1f\9f_\df?\bf\7f\ff\00\00\00\00\960\07w,a\0e\ee\baQ\t\99\19\c4m\07\8f\f4jp5\a5c\e9\a3\95d\9e2\88\db\0e\a4\b8\dcy\1e\e9\d5\e0\88\d9\d2\97+L\b6\t\bd|\b1~\07-\b8\e7\91\1d\bf\90d\10\b7\1d\f2 \b0jHq\b9\f3\deA\be\84}\d4\da\1a\eb\e4\ddmQ\b5\d4\f4\c7\85\d3\83V\98l\13\c0\a8kdz\f9b\fd\ec\c9e\8aO\\\01\14\d9l\06cc=\0f\fa\f5\0d\08\8d\c8 n;^\10iL\e4A`\d5rqg\a2\d1\e4\03<G\d4\04K\fd\85\0d\d2k\b5\n\a5\fa\a8\b55l\98\b2B\d6\c9\bb\db@\f9\bc\ac\e3l\d82u\\\dfE\cf\0d\d6\dcY=\d1\ab\ac0\d9&:\00\deQ\80Q\d7\c8\16a\d0\bf\b5\f4\b4!#\c4\b3V\99\95\ba\cf\0f\a5\bd\b8\9e\b8\02(\08\88\05_\b2\d9\0c\c6$\e9\0b\b1\87|o/\11LhX\ab\1da\c1=-f\b6\90A\dcv\06q\db\01\bc \d2\98*\10\d5\ef\89\85\b1q\1f\b5\b6\06\a5\e4\bf\9f3\d4\b8\e8\a2\c9\07x4\f9\00\0f\8e\a8\t\96\18\98\0e\e1\bb\0dj\7f-=m\08\97ld\91\01\\c\e6\f4Qkkbal\1c\d80e\85N\00b\f2\ed\95\06l{\a5\01\1b\c1\f4\08\82W\c4\0f\f5\c6\d9\b0eP\e9\b7\12\ea\b8\be\8b|\88\b9\fc\df\1d\ddbI-\da\15\f3|\d3\8ceL\d4\fbXa\b2M\ceQ\b5:t\00\bc\a3\e20\bb\d4A\a5\dfJ\d7\95\d8=m\c4\d1\a4\fb\f4\d6\d3j\e9iC\fc\d9n4F\88g\ad\d0\b8`\das-\04D\e5\1d\033_L\n\aa\c9|\0d\dd<q\05P\aaA\02\'\10\10\0b\be\86 \0c\c9%\b5hW\b3\85o \t\d4f\b9\9f\e4a\ce\0e\f9\de^\98\c9\d9)\"\98\d0\b0\b4\a8\d7\c7\17=\b3Y\81\0d\b4.;\\\bd\b7\adl\ba\c0 \83\b8\ed\b6\b3\bf\9a\0c\e2\b6\03\9a\d2\b1t9G\d5\ea\afw\d2\9d\15&\db\04\83\16\dcs\12\0bc\e3\84;d\94>jm\0d\a8Zjz\0b\cf\0e\e4\9d\ff\t\93\'\ae\00\n\b1\9e\07}D\93\0f\f0\d2\a3\08\87h\f2\01\1e\fe\c2\06i]Wb\f7\cbge\80q6l\19\e7\06knv\1b\d4\fe\e0+\d3\89Zz\da\10\ccJ\ddgo\df\b9\f9\f9\ef\be\8eC\be\b7\17\d5\8e\b0`\e8\a3\d6\d6~\93\d1\a1\c4\c2\d88R\f2\dfO\f1g\bb\d1gW\bc\a6\dd\06\b5?K6\b2H\da+\0d\d8L\1b\n\af\f6J\036`z\04A\c3\ef`\dfU\dfg\a8\ef\8en1y\beiF\8c\b3a\cb\1a\83f\bc\a0\d2o%6\e2hR\95w\0c\cc\03G\0b\bb\b9\16\02\"/&\05U\be;\ba\c5(\0b\bd\b2\92Z\b4+\04j\b3\\\a7\ff\d7\c21\cf\d0\b5\8b\9e\d9,\1d\ae\de[\b0\c2d\9b&\f2c\ec\9c\a3ju\n\93m\02\a9\06\t\9c?6\0e\eb\85g\07r\13W\00\05\82J\bf\95\14z\b8\e2\ae+\b1{8\1b\b6\0c\9b\8e\d2\92\0d\be\d5\e5\b7\ef\dc|!\df\db\0b\d4\d2\d3\86B\e2\d4\f1\f8\b3\ddhn\83\da\1f\cd\16\be\81[&\b9\f6\e1w\b0owG\b7\18\e6Z\08\88pj\0f\ff\ca;\06f\\\0b\01\11\ff\9ee\8fi\aeb\f8\d3\ffkaE\cfl\16x\e2\n\a0\ee\d2\0d\d7T\83\04N\c2\b3\039a&g\a7\f7\16`\d0MGiI\dbwn>Jj\d1\ae\dcZ\d6\d9f\0b\df@\f0;\d87S\ae\bc\a9\c5\9e\bb\de\7f\cf\b2G\e9\ff\b50\1c\f2\bd\bd\8a\c2\ba\ca0\93\b3S\a6\a3\b4$\056\d0\ba\93\06\d7\cd)W\deT\bfg\d9#.zf\b3\b8Ja\c4\02\1bh]\94+o*7\be\0b\b4\a1\8e\0c\c3\1b\df\05Z\8d\ef\02-\00\00\00\00A1\1b\19\82b62\c3S-+\04\c5ldE\f4w}\86\a7ZV\c7\96AO\08\8a\d9\c8I\bb\c2\d1\8a\e8\ef\fa\cb\d9\f4\e3\0cO\b5\acM~\ae\b5\8e-\83\9e\cf\1c\98\87Q\12\c2J\10#\d9S\d3p\f4x\92A\efaU\d7\ae.\14\e6\b57\d7\b5\98\1c\96\84\83\05Y\98\1b\82\18\a9\00\9b\db\fa-\b0\9a\cb6\a9]]w\e6\1cll\ff\df?A\d4\9e\0eZ\cd\a2$\84\95\e3\15\9f\8c F\b2\a7aw\a9\be\a6\e1\e8\f1\e7\d0\f3\e8$\83\de\c3e\b2\c5\da\aa\ae]]\eb\9fFD(\cckoi\fdpv\aek19\efZ* ,\t\07\0bm8\1c\12\f36F\df\b2\07]\c6qTp\ed0ek\f4\f7\f3*\bb\b6\c21\a2u\91\1c\894\a0\07\90\fb\bc\9f\17\ba\8d\84\0ey\de\a9%8\ef\b2<\ffy\f3s\beH\e8j}\1b\c5A<*\deX\05Oy\f0D~b\e9\87-O\c2\c6\1cT\db\01\8a\15\94@\bb\0e\8d\83\e8#\a6\c2\d98\bf\0d\c5\a08L\f4\bb!\8f\a7\96\n\ce\96\8d\13\t\00\cc\\H1\d7E\8bb\fan\caS\e1wT]\bb\ba\15l\a0\a3\d6?\8d\88\97\0e\96\91P\98\d7\de\11\a9\cc\c7\d2\fa\e1\ec\93\cb\fa\f5\\\d7br\1d\e6yk\de\b5T@\9f\84OYX\12\0e\16\19#\15\0f\dap8$\9bA#=\a7k\fde\e6Z\e6|%\t\cbWd8\d0N\a3\ae\91\01\e2\9f\8a\18!\cc\a73`\fd\bc*\af\e1$\ad\ee\d0?\b4-\83\12\9fl\b2\t\86\ab$H\c9\ea\15S\d0)F~\fbhwe\e2\f6y?/\b7H$6t\1b\t\1d5*\12\04\f2\bcSK\b3\8dHRp\deey1\ef~`\fe\f3\e6\e7\bf\c2\fd\fe|\91\d0\d5=\a0\cb\cc\fa6\8a\83\bb\07\91\9axT\bc\b19e\a7\a8K\98\83;\n\a9\98\"\c9\fa\b5\t\88\cb\ae\10O]\ef_\0el\f4F\cd?\d9m\8c\0e\c2tC\12Z\f3\02#A\ea\c1pl\c1\80Aw\d8G\d76\97\06\e6-\8e\c5\b5\00\a5\84\84\1b\bc\1a\8aAq[\bbZh\98\e8wC\d9\d9lZ\1eO-\15_~6\0c\9c-\1b\'\dd\1c\00>\12\00\98\b9S1\83\a0\90b\ae\8b\d1S\b5\92\16\c5\f4\ddW\f4\ef\c4\94\a7\c2\ef\d5\96\d9\f6\e9\bc\07\ae\a8\8d\1c\b7k\de1\9c*\ef*\85\edyk\ca\acHp\d3o\1b]\f8.*F\e1\e16\def\a0\07\c5\7fcT\e8T\"e\f3M\e5\f3\b2\02\a4\c2\a9\1bg\91\840&\a0\9f)\b8\ae\c5\e4\f9\9f\de\fd:\cc\f3\d6{\fd\e8\cf\bck\a9\80\fdZ\b2\99>\t\9f\b2\7f8\84\ab\b0$\1c,\f1\15\0752F*\1esw1\07\b4\e1pH\f5\d0kQ6\83Fzw\b2]cN\d7\fa\cb\0f\e6\e1\d2\cc\b5\cc\f9\8d\84\d7\e0J\12\96\af\0b#\8d\b6\c8p\a0\9d\89A\bb\84F]#\03\07l8\1a\c4?\151\85\0e\0e(B\98Og\03\a9T~\c0\fayU\81\cbbL\1f\c58\81^\f4#\98\9d\a7\0e\b3\dc\96\15\aa\1b\00T\e5Z1O\fc\99bb\d7\d8Sy\ce\17O\e1IV~\faP\95-\d7{\d4\1c\ccb\13\8a\8d-R\bb\964\91\e8\bb\1f\d0\d9\a0\06\ec\f3~^\ad\c2eGn\91Hl/\a0Su\e86\12:\a9\07\t#jT$\08+e?\11\e4y\a7\96\a5H\bc\8ff\1b\91\a4\'*\8a\bd\e0\bc\cb\f2\a1\8d\d0\ebb\de\fd\c0#\ef\e6\d9\bd\e1\bc\14\fc\d0\a7\0d?\83\8a&~\b2\91?\b9$\d0p\f8\15\cbi;F\e6Bzw\fd[\b5ke\dc\f4Z~\c57\tS\eev8H\f7\b1\ae\t\b8\f0\9f\12\a13\cc?\8ar\fd$\93\00\00\00\007j\c2\01n\d4\84\03Y\beF\02\dc\a8\t\07\eb\c2\cb\06\b2|\8d\04\85\16O\05\b8Q\13\0e\8f;\d1\0f\d6\85\97\0d\e1\efU\0cd\f9\1a\tS\93\d8\08\n-\9e\n=G\\\0bp\a3&\1cG\c9\e4\1d\1ew\a2\1f)\1d`\1e\ac\0b/\1b\9ba\ed\1a\c2\df\ab\18\f5\b5i\19\c8\f25\12\ff\98\f7\13\a6&\b1\11\91Ls\10\14Z<\15#0\fe\14z\8e\b8\16M\e4z\17\e0FM8\d7,\8f9\8e\92\c9;\b9\f8\0b:<\eeD?\0b\84\86>R:\c0<eP\02=X\17^6o}\9c76\c3\da5\01\a9\184\84\bfW1\b3\d5\950\eak\d32\dd\01\113\90\e5k$\a7\8f\a9%\fe1\ef\'\c9[-&LMb#{\'\a0\"\"\99\e6 \15\f3$!(\b4x*\1f\de\ba+F`\fc)q\n>(\f4\1cq-\c3v\b3,\9a\c8\f5.\ad\a27/\c0\8d\9ap\f7\e7Xq\aeY\1es\993\dcr\1c%\93w+OQvr\f1\17tE\9b\d5ux\dc\89~O\b6K\7f\16\08\0d}!b\cf|\a4t\80y\93\1eBx\ca\a0\04z\fd\ca\c6{\b0.\bcl\87D~m\de\fa8o\e9\90\fanl\86\b5k[\ecwj\02R1h58\f3i\08\7f\afb?\15mcf\ab+aQ\c1\e9`\d4\d7\a6e\e3\bddd\ba\03\"f\8di\e0g \cb\d7H\17\a1\15IN\1fSKyu\91J\fcc\deO\cb\t\1cN\92\b7ZL\a5\dd\98M\98\9a\c4F\af\f0\06G\f6N@E\c1$\82DD2\cdAsX\0f@*\e6IB\1d\8c\8bCPh\f1Tg\023U>\bcuW\t\d6\b7V\8c\c0\f8S\bb\aa:R\e2\14|P\d5~\beQ\e89\e2Z\dfS [\86\edfY\b1\87\a4X4\91\eb]\03\fb)\\ZEo^m/\ad_\80\1b5\e1\b7q\f7\e0\ee\cf\b1\e2\d9\a5s\e3\\\b3<\e6k\d9\fe\e72g\b8\e5\05\0dz\e48J&\ef\0f \e4\eeV\9e\a2\eca\f4`\ed\e4\e2/\e8\d3\88\ed\e9\8a6\ab\eb\bd\\i\ea\f0\b8\13\fd\c7\d2\d1\fc\9el\97\fe\a9\06U\ff,\10\1a\fa\1bz\d8\fbB\c4\9e\f9u\ae\\\f8H\e9\00\f3\7f\83\c2\f2&=\84\f0\11WF\f1\94A\t\f4\a3+\cb\f5\fa\95\8d\f7\cd\ffO\f6`]x\d9W7\ba\d8\0e\89\fc\da9\e3>\db\bc\f5q\de\8b\9f\b3\df\d2!\f5\dd\e5K7\dc\d8\0ck\d7\eff\a9\d6\b6\d8\ef\d4\81\b2-\d5\04\a4b\d03\ce\a0\d1jp\e6\d3]\1a$\d2\10\fe^\c5\'\94\9c\c4~*\da\c6I@\18\c7\ccVW\c2\fb<\95\c3\a2\82\d3\c1\95\e8\11\c0\a8\afM\cb\9f\c5\8f\ca\c6{\c9\c8\f1\11\0b\c9t\07D\ccCm\86\cd\1a\d3\c0\cf-\b9\02\ce@\96\af\91w\fcm\90.B+\92\19(\e9\93\9c>\a6\96\abTd\97\f2\ea\"\95\c5\80\e0\94\f8\c7\bc\9f\cf\ad~\9e\96\138\9c\a1y\fa\9d$o\b5\98\13\05w\99J\bb1\9b}\d1\f3\9a05\89\8d\07_K\8c^\e1\0d\8ei\8b\cf\8f\ec\9d\80\8a\db\f7B\8b\82I\04\89\b5#\c6\88\88d\9a\83\bf\0eX\82\e6\b0\1e\80\d1\da\dc\81T\cc\93\84c\a6Q\85:\18\17\87\0dr\d5\86\a0\d0\e2\a9\97\ba \a8\ce\04f\aa\f9n\a4\ab|x\eb\aeK\12)\af\12\aco\ad%\c6\ad\ac\18\81\f1\a7/\eb3\a6vUu\a4A?\b7\a5\c4)\f8\a0\f3C:\a1\aa\fd|\a3\9d\97\be\a2\d0s\c4\b5\e7\19\06\b4\be\a7@\b6\89\cd\82\b7\0c\db\cd\b2;\b1\0f\b3b\0fI\b1Ue\8b\b0h\"\d7\bb_H\15\ba\06\f6S\b81\9c\91\b9\b4\8a\de\bc\83\e0\1c\bd\da^Z\bf\ed4\98\be\00\00\00\00eg\bc\b8\8b\c8\t\aa\ee\af\b5\12W\97b\8f2\f0\de7\dc_k%\b98\d7\9d\ef(\b4\c5\8aO\08}d\e0\bdo\01\87\01\d7\b8\bf\d6J\dd\d8j\f23w\df\e0V\10cX\9fW\19P\fa0\a5\e8\14\9f\10\faq\f8\acB\c8\c0{\df\ad\a7\c7gC\08ru&o\ce\cdp\7f\ad\95\15\18\11-\fb\b7\a4?\9e\d0\18\87\'\e8\cf\1aB\8fs\a2\ac \c6\b0\c9Gz\08>\af2\a0[\c8\8e\18\b5g;\n\d0\00\87\b2i8P/\0c_\ec\97\e2\f0Y\85\87\97\e5=\d1\87\86e\b4\e0:\ddZO\8f\cf?(3w\86\10\e4\ea\e3wXR\0d\d8\ed@h\bfQ\f8\a1\f8+\f0\c4\9f\97H*0\"ZOW\9e\e2\f6oI\7f\93\08\f5\c7}\a7@\d5\18\c0\fcmN\d0\9f5+\b7#\8d\c5\18\96\9f\a0\7f*\'\19G\fd\ba| A\02\92\8f\f4\10\f7\e8H\a8=X\14\9bX?\a8#\b6\90\1d1\d3\f7\a1\89j\cfv\14\0f\a8\ca\ac\e1\07\7f\be\84`\c3\06\d2p\a0^\b7\17\1c\e6Y\b8\a9\f4<\df\15L\85\e7\c2\d1\e0\80~i\0e/\cb{kHw\c3\a2\0f\0d\cb\c7h\b1s)\c7\04aL\a0\b8\d9\f5\98oD\90\ff\d3\fc~Pf\ee\1b7\daVM\'\b9\0e(@\05\b6\c6\ef\b0\a4\a3\88\0c\1c\1a\b0\db\81\7f\d7g9\91x\d2+\f4\1fn\93\03\f7&;f\90\9a\83\88?/\91\edX\93)T`D\b41\07\f8\0c\df\a8M\1e\ba\cf\f1\a6\ec\df\92\fe\89\b8.Fg\17\9bT\02p\'\ec\bbH\f0q\de/L\c90\80\f9\dbU\e7Ec\9c\a0?k\f9\c7\83\d3\17h6\c1r\0f\8ay\cb7]\e4\aeP\e1\\@\ffTN%\98\e8\f6s\88\8b\ae\16\ef7\16\f8@\82\04\9d\'>\bc$\1f\e9!AxU\99\af\d7\e0\8b\ca\b0\\3;\b6Y\ed^\d1\e5U\b0~PG\d5\19\ec\ffl!;b\tF\87\da\e7\e92\c8\82\8e\8ep\d4\9e\ed(\b1\f9Q\90_V\e4\82:1X:\83\t\8f\a7\e6n3\1f\08\c1\86\0dm\a6:\b5\a4\e1@\bd\c1\86\fc\05/)I\17JN\f5\af\f3v\"2\96\11\9e\8ax\be+\98\1d\d9\97 K\c9\f4x.\aeH\c0\c0\01\fd\d2\a5fAj\1c^\96\f7y9*O\97\96\9f]\f2\f1#\e5\05\19kM`~\d7\f5\8e\d1b\e7\eb\b6\de_R\8e\t\c27\e9\b5z\d9F\00h\bc!\bc\d0\ea1\df\88\8fVc0a\f9\d6\"\04\9ej\9a\bd\a6\bd\07\d8\c1\01\bf6n\b4\adS\t\08\15\9aNr\1d\ff)\ce\a5\11\86{\b7t\e1\c7\0f\cd\d9\10\92\a8\be\ac*F\11\198#v\a5\80uf\c6\d8\10\01z`\fe\ae\cfr\9b\c9s\ca\"\f1\a4WG\96\18\ef\a99\ad\fd\cc^\11E\06\eeMvc\89\f1\ce\8d&D\dc\e8A\f8dQy/\f94\1e\93A\da\b1&S\bf\d6\9a\eb\e9\c6\f9\b3\8c\a1E\0bb\0e\f0\19\07iL\a1\beQ\9b<\db6\'\845\99\92\96P\fe..\99\b9T&\fc\de\e8\9e\12q]\8cw\16\e14\ce.6\a9\abI\8a\11E\e6?\03 \81\83\bbv\91\e0\e3\13\f6\\[\fdY\e9I\98>U\f1!\06\82lDa>\d4\aa\ce\8b\c6\cf\a97~8A\7f\d6]&\c3n\b3\89v|\d6\ee\ca\c4o\d6\1dY\n\b1\a1\e1\e4\1e\14\f3\81y\a8K\d7i\cb\13\b2\0ew\ab\\\a1\c2\b99\c6~\01\80\fe\a9\9c\e5\99\15$\0b6\a06nQ\1c\8e\a7\16f\86\c2q\da>,\deo,I\b9\d3\94\f0\81\04\t\95\e6\b8\b1{I\0d\a3\1e.\b1\1bH>\d2C-Yn\fb\c3\f6\db\e9\a6\91gQ\1f\a9\b0\ccz\ce\0ct\94a\b9f\f1\06\05\de\00\00\00\00w\070\96\ee\0ea,\99\tQ\ba\07m\c4\19pj\f4\8f\e9c\a55\9ed\95\a3\0e\db\882y\dc\b8\a4\e0\d5\e9\1e\97\d2\d9\88\t\b6L+~\b1|\bd\e7\b8-\07\90\bf\1d\91\1d\b7\10dj\b0 \f2\f3\b9qH\84\beA\de\1a\da\d4}m\dd\e4\eb\f4\d4\b5Q\83\d3\85\c7\13l\98Vdk\a8\c0\fdb\f9z\8ae\c9\ec\14\01\\Oc\06l\d9\fa\0f=c\8d\08\0d\f5;n \c8Li\10^\d5`A\e4\a2gqr<\03\e4\d1K\04\d4G\d2\0d\85\fd\a5\n\b5k5\b5\a8\faB\b2\98l\db\bb\c9\d6\ac\bc\f9@2\d8l\e3E\df\\u\dc\d6\0d\cf\ab\d1=Y&\d90\acQ\de\00:\c8\d7Q\80\bf\d0a\16!\b4\f4\b5V\b3\c4#\cf\ba\95\99\b8\bd\a5\0f(\02\b8\9e_\05\88\08\c6\0c\d9\b2\b1\0b\e9$/o|\87XhL\11\c1a\1d\ab\b6f-=v\dcA\90\01\dbq\06\98\d2 \bc\ef\d5\10*q\b1\85\89\06\b6\b5\1f\9f\bf\e4\a5\e8\b8\d43x\07\c9\a2\0f\00\f94\96\t\a8\8e\e1\0e\98\18\7fj\0d\bb\08m=-\91dl\97\e6c\\\01kkQ\f4\1clab\85e0\d8\f2b\00Nl\06\95\ed\1b\01\a5{\82\08\f4\c1\f5\0f\c4We\b0\d9\c6\12\b7\e9P\8b\be\b8\ea\fc\b9\88|b\dd\1d\df\15\da-I\8c\d3|\f3\fb\d4LeM\b2aX:\b5Q\ce\a3\bc\00t\d4\bb0\e2J\df\a5A=\d8\95\d7\a4\d1\c4m\d3\d6\f4\fbCi\e9j4n\d9\fc\adg\88F\da`\b8\d0D\04-s3\03\1d\e5\aa\nL_\dd\0d|\c9P\05q<\'\02A\aa\be\0b\10\10\c9\0c \86Wh\b5% o\85\b3\b9f\d4\t\cea\e4\9f^\de\f9\0e)\d9\c9\98\b0\d0\98\"\c7\d7\a8\b4Y\b3=\17.\b4\0d\81\b7\bd\\;\c0\bal\ad\ed\b8\83 \9a\bf\b3\b6\03\b6\e2\0ct\b1\d2\9a\ea\d5G9\9d\d2w\af\04\db&\15s\dc\16\83\e3c\0b\12\94d;\84\0dmj>zjZ\a8\e4\0e\cf\0b\93\t\ff\9d\n\00\ae\'}\07\9e\b1\f0\0f\93D\87\08\a3\d2\1e\01\f2hi\06\c2\fe\f7bW]\80eg\cb\19l6qnk\06\e7\fe\d4\1bv\89\d3+\e0\10\dazZg\ddJ\cc\f9\b9\dfo\8e\be\ef\f9\17\b7\beC`\b0\8e\d5\d6\d6\a3\e8\a1\d1\93~8\d8\c2\c4O\df\f2R\d1\bbg\f1\a6\bcWg?\b5\06\ddH\b26K\d8\0d+\da\af\n\1bL6\03J\f6A\04z`\df`\ef\c3\a8g\dfU1n\8e\efFi\bey\cba\b3\8c\bcf\83\1a%o\d2\a0Rh\e26\cc\0cw\95\bb\0bG\03\"\02\16\b9U\05&/\c5\ba;\be\b2\bd\0b(+\b4Z\92\\\b3j\04\c2\d7\ff\a7\b5\d0\cf1,\d9\9e\8b[\de\ae\1d\9bd\c2\b0\ecc\f2&uj\a3\9c\02m\93\n\9c\t\06\a9\eb\0e6?r\07g\85\05\00W\13\95\bfJ\82\e2\b8z\14{\b1+\ae\0c\b6\1b8\92\d2\8e\9b\e5\d5\be\0d|\dc\ef\b7\0b\db\df!\86\d3\d2\d4\f1\d4\e2Bh\dd\b3\f8\1f\da\83n\81\be\16\cd\f6\b9&[o\b0w\e1\18\b7Gw\88\08Z\e6\ff\0fjpf\06;\ca\11\01\0b\\\8fe\9e\ff\f8b\aeiak\ff\d3\16l\cfE\a0\n\e2x\d7\0d\d2\eeN\04\83T9\03\b3\c2\a7g&a\d0`\16\f7IiGM>nw\db\ae\d1jJ\d9\d6Z\dc@\df\0bf7\d8;\f0\a9\bc\aeS\de\bb\9e\c5G\b2\cf\7f0\b5\ff\e9\bd\bd\f2\1c\ca\ba\c2\8aS\b3\930$\b4\a3\a6\ba\d06\05\cd\d7\06\93T\deW)#\d9g\bf\b3fz.\c4aJ\b8]h\1b\02*o+\94\b4\0b\be7\c3\0c\8e\a1Z\05\df\1b-\02\ef\8d\00\00\00\00\19\1b1A26b\82+-S\c3dl\c5\04}w\f4EVZ\a7\86OA\96\c7\c8\d9\8a\08\d1\c2\bbI\fa\ef\e8\8a\e3\f4\d9\cb\ac\b5O\0c\b5\ae~M\9e\83-\8e\87\98\1c\cfJ\c2\12QS\d9#\10x\f4p\d3a\efA\92.\ae\d7U7\b5\e6\14\1c\98\b5\d7\05\83\84\96\82\1b\98Y\9b\00\a9\18\b0-\fa\db\a96\cb\9a\e6w]]\ffll\1c\d4A?\df\cdZ\0e\9e\95\84$\a2\8c\9f\15\e3\a7\b2F \be\a9wa\f1\e8\e1\a6\e8\f3\d0\e7\c3\de\83$\da\c5\b2e]]\ae\aaDF\9f\ebok\cc(vp\fdi91k\ae *Z\ef\0b\07\t,\12\1c8m\dfF6\f3\c6]\07\b2\edpTq\f4ke0\bb*\f3\f7\a21\c2\b6\89\1c\91u\90\07\a04\17\9f\bc\fb\0e\84\8d\ba%\a9\dey<\b2\ef8s\f3y\ffj\e8H\beA\c5\1b}X\de*<\f0yO\05\e9b~D\c2O-\87\dbT\1c\c6\94\15\8a\01\8d\0e\bb@\a6#\e8\83\bf8\d9\c28\a0\c5\0d!\bb\f4L\n\96\a7\8f\13\8d\96\ce\\\cc\00\tE\d71Hn\fab\8bw\e1S\ca\ba\bb]T\a3\a0l\15\88\8d?\d6\91\96\0e\97\de\d7\98P\c7\cc\a9\11\ec\e1\fa\d2\f5\fa\cb\93rb\d7\\ky\e6\1d@T\b5\deYO\84\9f\16\0e\12X\0f\15#\19$8p\da=#A\9be\fdk\a7|\e6Z\e6W\cb\t%N\d08d\01\91\ae\a3\18\8a\9f\e23\a7\cc!*\bc\fd`\ad$\e1\af\b4?\d0\ee\9f\12\83-\86\t\b2l\c9H$\ab\d0S\15\ea\fb~F)\e2ewh/?y\f66$H\b7\1d\t\1bt\04\12*5KS\bc\f2RH\8d\b3ye\dep`~\ef1\e7\e6\f3\fe\fe\fd\c2\bf\d5\d0\91|\cc\cb\a0=\83\8a6\fa\9a\91\07\bb\b1\bcTx\a8\a7e9;\83\98K\"\98\a9\n\t\b5\fa\c9\10\ae\cb\88_\ef]OF\f4l\0em\d9?\cdt\c2\0e\8c\f3Z\12C\eaA#\02\c1lp\c1\d8wA\80\976\d7G\8e-\e6\06\a5\00\b5\c5\bc\1b\84\84qA\8a\1ahZ\bb[Cw\e8\98Zl\d9\d9\15-O\1e\0c6~_\'\1b-\9c>\00\1c\dd\b9\98\00\12\a0\831S\8b\aeb\90\92\b5S\d1\dd\f4\c5\16\c4\ef\f4W\ef\c2\a7\94\f6\d9\96\d5\ae\07\bc\e9\b7\1c\8d\a8\9c1\dek\85*\ef*\caky\ed\d3pH\ac\f8]\1bo\e1F*.f\de6\e1\7f\c5\07\a0T\e8TcM\f3e\"\02\b2\f3\e5\1b\a9\c2\a40\84\91g)\9f\a0&\e4\c5\ae\b8\fd\de\9f\f9\d6\f3\cc:\cf\e8\fd{\80\a9k\bc\99\b2Z\fd\b2\9f\t>\ab\848\7f,\1c$\b05\07\15\f1\1e*F2\071wsHp\e1\b4Qk\d0\f5zF\836c]\b2w\cb\fa\d7N\d2\e1\e6\0f\f9\cc\b5\cc\e0\d7\84\8d\af\96\12J\b6\8d#\0b\9d\a0p\c8\84\bbA\89\03#]F\1a8l\071\15?\c4(\0e\0e\85gO\98B~T\a9\03Uy\fa\c0Lb\cb\81\818\c5\1f\98#\f4^\b3\0e\a7\9d\aa\15\96\dc\e5T\00\1b\fcO1Z\d7bb\99\ceyS\d8I\e1O\17P\fa~V{\d7-\95b\cc\1c\d4-\8d\8a\134\96\bbR\1f\bb\e8\91\06\a0\d9\d0^~\f3\ecGe\c2\adlH\91nuS\a0/:\126\e8#\t\07\a9\08$Tj\11?e+\96\a7y\e4\8f\bcH\a5\a4\91\1bf\bd\8a*\'\f2\cb\bc\e0\eb\d0\8d\a1\c0\fd\deb\d9\e6\ef#\14\bc\e1\bd\0d\a7\d0\fc&\8a\83??\91\b2~p\d0$\b9i\cb\15\f8B\e6F;[\fdwz\dcek\b5\c5~Z\f4\eeS\t7\f7H8v\b8\t\ae\b1\a1\12\9f\f0\8a?\cc3\93$\fdr\00\00\00\00\01\c2j7\03\84\d4n\02F\beY\07\t\a8\dc\06\cb\c2\eb\04\8d|\b2\05O\16\85\0e\13Q\b8\0f\d1;\8f\0d\97\85\d6\0cU\ef\e1\t\1a\f9d\08\d8\93S\n\9e-\n\0b\\G=\1c&\a3p\1d\e4\c9G\1f\a2w\1e\1e`\1d)\1b/\0b\ac\1a\eda\9b\18\ab\df\c2\19i\b5\f5\125\f2\c8\13\f7\98\ff\11\b1&\a6\10sL\91\15<Z\14\14\fe0#\16\b8\8ez\17z\e4M8MF\e09\8f,\d7;\c9\92\8e:\0b\f8\b9?D\ee<>\86\84\0b<\c0:R=\02Pe6^\17X7\9c}o5\da\c364\18\a9\011W\bf\840\95\d5\b32\d3k\ea3\11\01\dd$k\e5\90%\a9\8f\a7\'\ef1\fe&-[\c9#bML\"\a0\'{ \e6\99\"!$\f3\15*x\b4(+\ba\de\1f)\fc`F(>\nq-q\1c\f4,\b3v\c3.\f5\c8\9a/7\a2\adp\9a\8d\c0qX\e7\f7s\1eY\aer\dc3\99w\93%\1cvQO+t\17\f1ru\d5\9bE~\89\dcx\7fK\b6O}\0d\08\16|\cfb!y\80t\a4xB\1e\93z\04\a0\ca{\c6\ca\fdl\bc.\b0m~D\87o8\fa\den\fa\90\e9k\b5\86ljw\ec[h1R\02i\f385b\af\7f\08cm\15?a+\abf`\e9\c1Qe\a6\d7\d4dd\bd\e3f\"\03\bag\e0i\8dH\d7\cb I\15\a1\17KS\1fNJ\91uyO\dec\fcN\1c\t\cbLZ\b7\92M\98\dd\a5F\c4\9a\98G\06\f0\afE@N\f6D\82$\c1A\cd2D@\0fXsBI\e6*C\8b\8c\1dT\f1hPU3\02gWu\bc>V\b7\d6\tS\f8\c0\8cR:\aa\bbP|\14\e2Q\be~\d5Z\e29\e8[ S\dfYf\ed\86X\a4\87\b1]\eb\914\\)\fb\03^oEZ_\ad/m\e15\1b\80\e0\f7q\b7\e2\b1\cf\ee\e3s\a5\d9\e6<\b3\\\e7\fe\d9k\e5\b8g2\e4z\0d\05\ef&J8\ee\e4 \0f\ec\a2\9eV\ed`\f4a\e8/\e2\e4\e9\ed\88\d3\eb\ab6\8a\eai\\\bd\fd\13\b8\f0\fc\d1\d2\c7\fe\97l\9e\ffU\06\a9\fa\1a\10,\fb\d8z\1b\f9\9e\c4B\f8\\\aeu\f3\00\e9H\f2\c2\83\7f\f0\84=&\f1FW\11\f4\tA\94\f5\cb+\a3\f7\8d\95\fa\f6O\ff\cd\d9x]`\d8\ba7W\da\fc\89\0e\db>\e39\deq\f5\bc\df\b3\9f\8b\dd\f5!\d2\dc7K\e5\d7k\0c\d8\d6\a9f\ef\d4\ef\d8\b6\d5-\b2\81\d0b\a4\04\d1\a0\ce3\d3\e6pj\d2$\1a]\c5^\fe\10\c4\9c\94\'\c6\da*~\c7\18@I\c2WV\cc\c3\95<\fb\c1\d3\82\a2\c0\11\e8\95\cbM\af\a8\ca\8f\c5\9f\c8\c9{\c6\c9\0b\11\f1\ccD\07t\cd\86mC\cf\c0\d3\1a\ce\02\b9-\91\af\96@\90m\fcw\92+B.\93\e9(\19\96\a6>\9c\97dT\ab\95\"\ea\f2\94\e0\80\c5\9f\bc\c7\f8\9e~\ad\cf\9c8\13\96\9d\fay\a1\98\b5o$\99w\05\13\9b1\bbJ\9a\f3\d1}\8d\8950\8cK_\07\8e\0d\e1^\8f\cf\8bi\8a\80\9d\ec\8bB\f7\db\89\04I\82\88\c6#\b5\83\9ad\88\82X\0e\bf\80\1e\b0\e6\81\dc\da\d1\84\93\ccT\85Q\a6c\87\17\18:\86\d5r\0d\a9\e2\d0\a0\a8 \ba\97\aaf\04\ce\ab\a4n\f9\ae\ebx|\af)\12K\ado\ac\12\ac\ad\c6%\a7\f1\81\18\a63\eb/\a4uUv\a5\b7?A\a0\f8)\c4\a1:C\f3\a3|\fd\aa\a2\be\97\9d\b5\c4s\d0\b4\06\19\e7\b6@\a7\be\b7\82\cd\89\b2\cd\db\0c\b3\0f\b1;\b1I\0fb\b0\8beU\bb\d7\"h\ba\15H_\b8S\f6\06\b9\91\9c1\bc\de\8a\b4\bd\1c\e0\83\bfZ^\da\be\984\ed\00\00\00\00\b8\bcge\aa\t\c8\8b\12\b5\af\ee\8fb\97W7\de\f02%k_\dc\9d\d78\b9\c5\b4(\ef}\08O\8ao\bd\e0d\d7\01\87\01J\d6\bf\b8\f2j\d8\dd\e0\dfw3Xc\10VP\19W\9f\e8\a50\fa\fa\10\9f\14B\ac\f8q\df{\c0\c8g\c7\a7\adur\08C\cd\ceo&\95\ad\7fp-\11\18\15?\a4\b7\fb\87\18\d0\9e\1a\cf\e8\'\a2s\8fB\b0\c6 \ac\08zG\c9\a02\af>\18\8e\c8[\n;g\b5\b2\87\00\d0/P8i\97\ec_\0c\85Y\f0\e2=\e5\97\87e\86\87\d1\dd:\e0\b4\cf\8fOZw3(?\ea\e4\10\86RXw\e3@\ed\d8\0d\f8Q\bfh\f0+\f8\a1H\97\9f\c4Z\"0*\e2\9eWO\7fIo\f6\c7\f5\08\93\d5@\a7}m\fc\c0\185\9f\d0N\8d#\b7+\9f\96\18\c5\'*\7f\a0\ba\fdG\19\02A |\10\f4\8f\92\a8H\e8\f7\9b\14X=#\a8?X1\1d\90\b6\89\a1\f7\d3\14v\cfj\ac\ca\a8\0f\be\7f\07\e1\06\c3`\84^\a0p\d2\e6\1c\17\b7\f4\a9\b8YL\15\df<\d1\c2\e7\85i~\80\e0{\cb/\0e\c3wHk\cb\0d\0f\a2s\b1h\c7a\04\c7)\d9\b8\a0LDo\98\f5\fc\d3\ff\90\eefP~V\da7\1b\0e\b9\'M\b6\05@(\a4\b0\ef\c6\1c\0c\88\a3\81\db\b0\1a9g\d7\7f+\d2x\91\93n\1f\f4;&\f7\03\83\9a\90f\91/?\88)\93X\ed\b4D`T\0c\f8\071\1eM\a8\df\a6\f1\cf\ba\fe\92\df\ecF.\b8\89T\9b\17g\ec\'p\02q\f0H\bb\c9L/\de\db\f9\800cE\e7Uk?\a0\9c\d3\83\c7\f9\c16h\17y\8a\0fr\e4]7\cb\\\e1P\aeNT\ff@\f6\e8\98%\ae\8b\88s\167\ef\16\04\82@\f8\bc>\'\9d!\e9\1f$\99UxA\8b\e0\d7\af3\\\b0\ca\edY\b6;U\e5\d1^GP~\b0\ff\ec\19\d5b;!l\da\87F\t\c82\e9\e7p\8e\8e\82(\ed\9e\d4\90Q\f9\b1\82\e4V_:X1:\a7\8f\t\83\1f3n\e6\0d\86\c1\08\b5:\a6m\bd@\e1\a4\05\fc\86\c1\17I)/\af\f5NJ2\"v\f3\8a\9e\11\96\98+\bex \97\d9\1dx\f4\c9K\c0H\ae.\d2\fd\01\c0jAf\a5\f7\96^\1cO*9y]\9f\96\97\e5#\f1\f2Mk\19\05\f5\d7~`\e7b\d1\8e_\de\b6\eb\c2\t\8eRz\b5\e97h\00F\d9\d0\bc!\bc\88\df1\ea0cV\8f\"\d6\f9a\9aj\9e\04\07\bd\a6\bd\bf\01\c1\d8\ad\b4n6\15\08\tS\1drN\9a\a5\ce)\ff\b7{\86\11\0f\c7\e1t\92\10\d9\cd*\ac\be\a88\19\11F\80\a5v#\d8\c6fu`z\01\10r\cf\ae\fe\cas\c9\9bW\a4\f1\"\ef\18\96G\fd\ad9\a9E\11^\ccvM\ee\06\ce\f1\89c\dcD&\8dd\f8A\e8\f9/yQA\93\1e4S&\b1\da\eb\9a\d6\bf\b3\f9\c6\e9\0bE\a1\8c\19\f0\0eb\a1Li\07<\9bQ\be\84\'6\db\96\92\995..\feP&T\b9\99\9e\e8\de\fc\8c]q\124\e1\16w\a96.\ce\11\8aI\ab\03?\e6E\bb\83\81 \e3\e0\91v[\\\f6\13I\e9Y\fd\f1U>\98l\82\06!\d4>aD\c6\8b\ce\aa~7\a9\cf\d6\7fA8n\c3&]|v\89\b3\c4\ca\ee\d6Y\1d\d6o\e1\a1\b1\n\f3\14\1e\e4K\a8y\81\13\cbi\d7\abw\0e\b2\b9\c2\a1\\\01~\c69\9c\a9\fe\80$\15\99\e56\a06\0b\8e\1cQn\86f\16\a7>\daq\c2,o\de,\94\d3\b9I\t\04\81\f0\b1\b8\e6\95\a3\0dI{\1b\b1.\1eC\d2>H\fbnY-\e9\db\f6\c3Qg\91\a6\cc\b0\a9\1ft\0c\cezf\b9a\94\de\05\06\f1")
 (data (i32.const 10568) "\01\00\00\00\04\00\04\00\08\00\04\00\02\00\00\00\04\00\05\00\10\00\08\00\02\00\00\00\04\00\06\00 \00 \00\02\00\00\00\04\00\04\00\10\00\10\00\03\00\00\00\08\00\10\00 \00 \00\03\00\00\00\08\00\10\00\80\00\80\00\03\00\00\00\08\00 \00\80\00\00\01\03\00\00\00 \00\80\00\02\01\00\04\03\00\00\00 \00\02\01\02\01\00\10\03")
 (data (i32.const 10688) "\10\00\11\00\12\00\00\00\08\00\07\00\t\00\06\00\n\00\05\00\0b\00\04\00\0c\00\03\00\0d\00\02\00\0e\00\01\00\0f")
 (data (i32.const 10736) "`\07\00\00\00\08P\00\00\08\10\00\14\08s\00\12\07\1f\00\00\08p\00\00\080\00\00\t\c0\00\10\07\n\00\00\08`\00\00\08 \00\00\t\a0\00\00\08\00\00\00\08\80\00\00\08@\00\00\t\e0\00\10\07\06\00\00\08X\00\00\08\18\00\00\t\90\00\13\07;\00\00\08x\00\00\088\00\00\t\d0\00\11\07\11\00\00\08h\00\00\08(\00\00\t\b0\00\00\08\08\00\00\08\88\00\00\08H\00\00\t\f0\00\10\07\04\00\00\08T\00\00\08\14\00\15\08\e3\00\13\07+\00\00\08t\00\00\084\00\00\t\c8\00\11\07\0d\00\00\08d\00\00\08$\00\00\t\a8\00\00\08\04\00\00\08\84\00\00\08D\00\00\t\e8\00\10\07\08\00\00\08\\\00\00\08\1c\00\00\t\98\00\14\07S\00\00\08|\00\00\08<\00\00\t\d8\00\12\07\17\00\00\08l\00\00\08,\00\00\t\b8\00\00\08\0c\00\00\08\8c\00\00\08L\00\00\t\f8\00\10\07\03\00\00\08R\00\00\08\12\00\15\08\a3\00\13\07#\00\00\08r\00\00\082\00\00\t\c4\00\11\07\0b\00\00\08b\00\00\08\"\00\00\t\a4\00\00\08\02\00\00\08\82\00\00\08B\00\00\t\e4\00\10\07\07\00\00\08Z\00\00\08\1a\00\00\t\94\00\14\07C\00\00\08z\00\00\08:\00\00\t\d4\00\12\07\13\00\00\08j\00\00\08*\00\00\t\b4\00\00\08\n\00\00\08\8a\00\00\08J\00\00\t\f4\00\10\07\05\00\00\08V\00\00\08\16\00@\08\00\00\13\073\00\00\08v\00\00\086\00\00\t\cc\00\11\07\0f\00\00\08f\00\00\08&\00\00\t\ac\00\00\08\06\00\00\08\86\00\00\08F\00\00\t\ec\00\10\07\t\00\00\08^\00\00\08\1e\00\00\t\9c\00\14\07c\00\00\08~\00\00\08>\00\00\t\dc\00\12\07\1b\00\00\08n\00\00\08.\00\00\t\bc\00\00\08\0e\00\00\08\8e\00\00\08N\00\00\t\fc\00`\07\00\00\00\08Q\00\00\08\11\00\15\08\83\00\12\07\1f\00\00\08q\00\00\081\00\00\t\c2\00\10\07\n\00\00\08a\00\00\08!\00\00\t\a2\00\00\08\01\00\00\08\81\00\00\08A\00\00\t\e2\00\10\07\06\00\00\08Y\00\00\08\19\00\00\t\92\00\13\07;\00\00\08y\00\00\089\00\00\t\d2\00\11\07\11\00\00\08i\00\00\08)\00\00\t\b2\00\00\08\t\00\00\08\89\00\00\08I\00\00\t\f2\00\10\07\04\00\00\08U\00\00\08\15\00\10\08\02\01\13\07+\00\00\08u\00\00\085\00\00\t\ca\00\11\07\0d\00\00\08e\00\00\08%\00\00\t\aa\00\00\08\05\00\00\08\85\00\00\08E\00\00\t\ea\00\10\07\08\00\00\08]\00\00\08\1d\00\00\t\9a\00\14\07S\00\00\08}\00\00\08=\00\00\t\da\00\12\07\17\00\00\08m\00\00\08-\00\00\t\ba\00\00\08\0d\00\00\08\8d\00\00\08M\00\00\t\fa\00\10\07\03\00\00\08S\00\00\08\13\00\15\08\c3\00\13\07#\00\00\08s\00\00\083\00\00\t\c6\00\11\07\0b\00\00\08c\00\00\08#\00\00\t\a6\00\00\08\03\00\00\08\83\00\00\08C\00\00\t\e6\00\10\07\07\00\00\08[\00\00\08\1b\00\00\t\96\00\14\07C\00\00\08{\00\00\08;\00\00\t\d6\00\12\07\13\00\00\08k\00\00\08+\00\00\t\b6\00\00\08\0b\00\00\08\8b\00\00\08K\00\00\t\f6\00\10\07\05\00\00\08W\00\00\08\17\00@\08\00\00\13\073\00\00\08w\00\00\087\00\00\t\ce\00\11\07\0f\00\00\08g\00\00\08\'\00\00\t\ae\00\00\08\07\00\00\08\87\00\00\08G\00\00\t\ee\00\10\07\t\00\00\08_\00\00\08\1f\00\00\t\9e\00\14\07c\00\00\08\7f\00\00\08?\00\00\t\de\00\12\07\1b\00\00\08o\00\00\08/\00\00\t\be\00\00\08\0f\00\00\08\8f\00\00\08O\00\00\t\fe\00`\07\00\00\00\08P\00\00\08\10\00\14\08s\00\12\07\1f\00\00\08p\00\00\080\00\00\t\c1\00\10\07\n\00\00\08`\00\00\08 \00\00\t\a1\00\00\08\00\00\00\08\80\00\00\08@\00\00\t\e1\00\10\07\06\00\00\08X\00\00\08\18\00\00\t\91\00\13\07;\00\00\08x\00\00\088\00\00\t\d1\00\11\07\11\00\00\08h\00\00\08(\00\00\t\b1\00\00\08\08\00\00\08\88\00\00\08H\00\00\t\f1\00\10\07\04\00\00\08T\00\00\08\14\00\15\08\e3\00\13\07+\00\00\08t\00\00\084\00\00\t\c9\00\11\07\0d\00\00\08d\00\00\08$\00\00\t\a9\00\00\08\04\00\00\08\84\00\00\08D\00\00\t\e9\00\10\07\08\00\00\08\\\00\00\08\1c\00\00\t\99\00\14\07S\00\00\08|\00\00\08<\00\00\t\d9\00\12\07\17\00\00\08l\00\00\08,\00\00\t\b9\00\00\08\0c\00\00\08\8c\00\00\08L\00\00\t\f9\00\10\07\03\00\00\08R\00\00\08\12\00\15\08\a3\00\13\07#\00\00\08r\00\00\082\00\00\t\c5\00\11\07\0b\00\00\08b\00\00\08\"\00\00\t\a5\00\00\08\02\00\00\08\82\00\00\08B\00\00\t\e5\00\10\07\07\00\00\08Z\00\00\08\1a\00\00\t\95\00\14\07C\00\00\08z\00\00\08:\00\00\t\d5\00\12\07\13\00\00\08j\00\00\08*\00\00\t\b5\00\00\08\n\00\00\08\8a\00\00\08J\00\00\t\f5\00\10\07\05\00\00\08V\00\00\08\16\00@\08\00\00\13\073\00\00\08v\00\00\086\00\00\t\cd\00\11\07\0f\00\00\08f\00\00\08&\00\00\t\ad\00\00\08\06\00\00\08\86\00\00\08F\00\00\t\ed\00\10\07\t\00\00\08^\00\00\08\1e\00\00\t\9d\00\14\07c\00\00\08~\00\00\08>\00\00\t\dd\00\12\07\1b\00\00\08n\00\00\08.\00\00\t\bd\00\00\08\0e\00\00\08\8e\00\00\08N\00\00\t\fd\00`\07\00\00\00\08Q\00\00\08\11\00\15\08\83\00\12\07\1f\00\00\08q\00\00\081\00\00\t\c3\00\10\07\n\00\00\08a\00\00\08!\00\00\t\a3\00\00\08\01\00\00\08\81\00\00\08A\00\00\t\e3\00\10\07\06\00\00\08Y\00\00\08\19\00\00\t\93\00\13\07;\00\00\08y\00\00\089\00\00\t\d3\00\11\07\11\00\00\08i\00\00\08)\00\00\t\b3\00\00\08\t\00\00\08\89\00\00\08I\00\00\t\f3\00\10\07\04\00\00\08U\00\00\08\15\00\10\08\02\01\13\07+\00\00\08u\00\00\085\00\00\t\cb\00\11\07\0d\00\00\08e\00\00\08%\00\00\t\ab\00\00\08\05\00\00\08\85\00\00\08E\00\00\t\eb\00\10\07\08\00\00\08]\00\00\08\1d\00\00\t\9b\00\14\07S\00\00\08}\00\00\08=\00\00\t\db\00\12\07\17\00\00\08m\00\00\08-\00\00\t\bb\00\00\08\0d\00\00\08\8d\00\00\08M\00\00\t\fb\00\10\07\03\00\00\08S\00\00\08\13\00\15\08\c3\00\13\07#\00\00\08s\00\00\083\00\00\t\c7\00\11\07\0b\00\00\08c\00\00\08#\00\00\t\a7\00\00\08\03\00\00\08\83\00\00\08C\00\00\t\e7\00\10\07\07\00\00\08[\00\00\08\1b\00\00\t\97\00\14\07C\00\00\08{\00\00\08;\00\00\t\d7\00\12\07\13\00\00\08k\00\00\08+\00\00\t\b7\00\00\08\0b\00\00\08\8b\00\00\08K\00\00\t\f7\00\10\07\05\00\00\08W\00\00\08\17\00@\08\00\00\13\073\00\00\08w\00\00\087\00\00\t\cf\00\11\07\0f\00\00\08g\00\00\08\'\00\00\t\af\00\00\08\07\00\00\08\87\00\00\08G\00\00\t\ef\00\10\07\t\00\00\08_\00\00\08\1f\00\00\t\9f\00\14\07c\00\00\08\7f\00\00\08?\00\00\t\df\00\12\07\1b\00\00\08o\00\00\08/\00\00\t\bf\00\00\08\0f\00\00\08\8f\00\00\08O\00\00\t\ff\00\10\05\01\00\17\05\01\01\13\05\11\00\1b\05\01\10\11\05\05\00\19\05\01\04\15\05A\00\1d\05\01@\10\05\03\00\18\05\01\02\14\05!\00\1c\05\01 \12\05\t\00\1a\05\01\08\16\05\81\00@\05\00\00\10\05\02\00\17\05\81\01\13\05\19\00\1b\05\01\18\11\05\07\00\19\05\01\06\15\05a\00\1d\05\01`\10\05\04\00\18\05\01\03\14\051\00\1c\05\010\12\05\0d\00\1a\05\01\0c\16\05\c1\00@\05\00\00\03\00\04\00\05\00\06\00\07\00\08\00\t\00\n\00\0b\00\0d\00\0f\00\11\00\13\00\17\00\1b\00\1f\00#\00+\003\00;\00C\00S\00c\00s\00\83\00\a3\00\c3\00\e3\00\02\01\00\00\00\00\00\00\10\00\10\00\10\00\10\00\10\00\10\00\10\00\10\00\11\00\11\00\11\00\11\00\12\00\12\00\12\00\12\00\13\00\13\00\13\00\13\00\14\00\14\00\14\00\14\00\15\00\15\00\15\00\15\00\10\00M\00\ca\00\00\00\01\00\02\00\03\00\04\00\05\00\07\00\t\00\0d\00\11\00\19\00!\001\00A\00a\00\81\00\c1\00\01\01\81\01\01\02\01\03\01\04\01\06\01\08\01\0c\01\10\01\18\01 \010\01@\01`\00\00\00\00\10\00\10\00\10\00\10\00\11\00\11\00\12\00\12\00\13\00\13\00\14\00\14\00\15\00\15\00\16\00\16\00\17\00\17\00\18\00\18\00\19\00\19\00\1a\00\1a\00\1b\00\1b\00\1c\00\1c\00\1d\00\1d\00@\00@\00\00\01\02\03\04\04\05\05\06\06\06\06\07\07\07\07\08\08\08\08\08\08\08\08\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\0b\0b\0b\0b\0b\0b\0b\0b\0b\0b\0b\0b\0b\0b\0b\0b\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\0f\00\00\10\11\12\12\13\13\14\14\14\14\15\15\15\15\16\16\16\16\16\16\16\16\17\17\17\17\17\17\17\17\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1c\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\1d\00\01\02\03\04\05\06\07\08\08\t\t\n\n\0b\0b\0c\0c\0c\0c\0d\0d\0d\0d\0e\0e\0e\0e\0f\0f\0f\0f\10\10\10\10\10\10\10\10\11\11\11\11\11\11\11\11\12\12\12\12\12\12\12\12\13\13\13\13\13\13\13\13\14\14\14\14\14\14\14\14\14\14\14\14\14\14\14\14\15\15\15\15\15\15\15\15\15\15\15\15\15\15\15\15\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\17\17\17\17\17\17\17\17\17\17\17\17\17\17\17\17\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\18\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\19\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1a\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1b\1c")
 (data (i32.const 14000) "\02\00\00\00\03\00\00\00\07")
 (data (i32.const 14018) "\05\00\10\00\05\00\08\00\05\00\18\00\05\00\04\00\05\00\14\00\05\00\0c\00\05\00\1c\00\05\00\02\00\05\00\12\00\05\00\n\00\05\00\1a\00\05\00\06\00\05\00\16\00\05\00\0e\00\05\00\1e\00\05\00\01\00\05\00\11\00\05\00\t\00\05\00\19\00\05\00\05\00\05\00\15\00\05\00\0d\00\05\00\1d\00\05\00\03\00\05\00\13\00\05\00\0b\00\05\00\1b\00\05\00\07\00\05\00\17\00\05")
 (data (i32.const 14160) "\01\00\00\00\01\00\00\00\02\00\00\00\02\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\06\00\00\00\06\00\00\00\07\00\00\00\07\00\00\00\08\00\00\00\08\00\00\00\t\00\00\00\t\00\00\00\n\00\00\00\n\00\00\00\0b\00\00\00\0b\00\00\00\0c\00\00\00\0c\00\00\00\0d\00\00\00\0d")
 (data (i32.const 14272) "\0c\00\08\00\8c\00\08\00L\00\08\00\cc\00\08\00,\00\08\00\ac\00\08\00l\00\08\00\ec\00\08\00\1c\00\08\00\9c\00\08\00\\\00\08\00\dc\00\08\00<\00\08\00\bc\00\08\00|\00\08\00\fc\00\08\00\02\00\08\00\82\00\08\00B\00\08\00\c2\00\08\00\"\00\08\00\a2\00\08\00b\00\08\00\e2\00\08\00\12\00\08\00\92\00\08\00R\00\08\00\d2\00\08\002\00\08\00\b2\00\08\00r\00\08\00\f2\00\08\00\n\00\08\00\8a\00\08\00J\00\08\00\ca\00\08\00*\00\08\00\aa\00\08\00j\00\08\00\ea\00\08\00\1a\00\08\00\9a\00\08\00Z\00\08\00\da\00\08\00:\00\08\00\ba\00\08\00z\00\08\00\fa\00\08\00\06\00\08\00\86\00\08\00F\00\08\00\c6\00\08\00&\00\08\00\a6\00\08\00f\00\08\00\e6\00\08\00\16\00\08\00\96\00\08\00V\00\08\00\d6\00\08\006\00\08\00\b6\00\08\00v\00\08\00\f6\00\08\00\0e\00\08\00\8e\00\08\00N\00\08\00\ce\00\08\00.\00\08\00\ae\00\08\00n\00\08\00\ee\00\08\00\1e\00\08\00\9e\00\08\00^\00\08\00\de\00\08\00>\00\08\00\be\00\08\00~\00\08\00\fe\00\08\00\01\00\08\00\81\00\08\00A\00\08\00\c1\00\08\00!\00\08\00\a1\00\08\00a\00\08\00\e1\00\08\00\11\00\08\00\91\00\08\00Q\00\08\00\d1\00\08\001\00\08\00\b1\00\08\00q\00\08\00\f1\00\08\00\t\00\08\00\89\00\08\00I\00\08\00\c9\00\08\00)\00\08\00\a9\00\08\00i\00\08\00\e9\00\08\00\19\00\08\00\99\00\08\00Y\00\08\00\d9\00\08\009\00\08\00\b9\00\08\00y\00\08\00\f9\00\08\00\05\00\08\00\85\00\08\00E\00\08\00\c5\00\08\00%\00\08\00\a5\00\08\00e\00\08\00\e5\00\08\00\15\00\08\00\95\00\08\00U\00\08\00\d5\00\08\005\00\08\00\b5\00\08\00u\00\08\00\f5\00\08\00\0d\00\08\00\8d\00\08\00M\00\08\00\cd\00\08\00-\00\08\00\ad\00\08\00m\00\08\00\ed\00\08\00\1d\00\08\00\9d\00\08\00]\00\08\00\dd\00\08\00=\00\08\00\bd\00\08\00}\00\08\00\fd\00\08\00\13\00\t\00\13\01\t\00\93\00\t\00\93\01\t\00S\00\t\00S\01\t\00\d3\00\t\00\d3\01\t\003\00\t\003\01\t\00\b3\00\t\00\b3\01\t\00s\00\t\00s\01\t\00\f3\00\t\00\f3\01\t\00\0b\00\t\00\0b\01\t\00\8b\00\t\00\8b\01\t\00K\00\t\00K\01\t\00\cb\00\t\00\cb\01\t\00+\00\t\00+\01\t\00\ab\00\t\00\ab\01\t\00k\00\t\00k\01\t\00\eb\00\t\00\eb\01\t\00\1b\00\t\00\1b\01\t\00\9b\00\t\00\9b\01\t\00[\00\t\00[\01\t\00\db\00\t\00\db\01\t\00;\00\t\00;\01\t\00\bb\00\t\00\bb\01\t\00{\00\t\00{\01\t\00\fb\00\t\00\fb\01\t\00\07\00\t\00\07\01\t\00\87\00\t\00\87\01\t\00G\00\t\00G\01\t\00\c7\00\t\00\c7\01\t\00\'\00\t\00\'\01\t\00\a7\00\t\00\a7\01\t\00g\00\t\00g\01\t\00\e7\00\t\00\e7\01\t\00\17\00\t\00\17\01\t\00\97\00\t\00\97\01\t\00W\00\t\00W\01\t\00\d7\00\t\00\d7\01\t\007\00\t\007\01\t\00\b7\00\t\00\b7\01\t\00w\00\t\00w\01\t\00\f7\00\t\00\f7\01\t\00\0f\00\t\00\0f\01\t\00\8f\00\t\00\8f\01\t\00O\00\t\00O\01\t\00\cf\00\t\00\cf\01\t\00/\00\t\00/\01\t\00\af\00\t\00\af\01\t\00o\00\t\00o\01\t\00\ef\00\t\00\ef\01\t\00\1f\00\t\00\1f\01\t\00\9f\00\t\00\9f\01\t\00_\00\t\00_\01\t\00\df\00\t\00\df\01\t\00?\00\t\00?\01\t\00\bf\00\t\00\bf\01\t\00\7f\00\t\00\7f\01\t\00\ff\00\t\00\ff\01\t\00\00\00\07\00@\00\07\00 \00\07\00`\00\07\00\10\00\07\00P\00\07\000\00\07\00p\00\07\00\08\00\07\00H\00\07\00(\00\07\00h\00\07\00\18\00\07\00X\00\07\008\00\07\00x\00\07\00\04\00\07\00D\00\07\00$\00\07\00d\00\07\00\14\00\07\00T\00\07\004\00\07\00t\00\07\00\03\00\08\00\83\00\08\00C\00\08\00\c3\00\08\00#\00\08\00\a3\00\08\00c\00\08\00\e3\00\08")
 (data (i32.const 15456) "\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\02\00\00\00\02\00\00\00\02\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05")
 (data (i32.const 15552) "\10\11\12\00\08\07\t\06\n\05\0b\04\0c\03\0d\02\0e\01\0f")
 (data (i32.const 15588) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\n\00\00\00\0c\00\00\00\0e\00\00\00\10\00\00\00\14\00\00\00\18\00\00\00\1c\00\00\00 \00\00\00(\00\00\000\00\00\008\00\00\00@\00\00\00P\00\00\00`\00\00\00p\00\00\00\80\00\00\00\a0\00\00\00\c0\00\00\00\e0")
 (data (i32.const 15716) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\06\00\00\00\08\00\00\00\0c\00\00\00\10\00\00\00\18\00\00\00 \00\00\000\00\00\00@\00\00\00`\00\00\00\80\00\00\00\c0\00\00\00\00\01\00\00\80\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\06\00\00\00\08\00\00\00\0c\00\00\00\10\00\00\00\18\00\00\00 \00\00\000\00\00\00@\00\00\00`")
 (data (i32.const 15840) "\f5^\00\00\05_\00\00hh\00\00\10_\00\00\1b_\00\00(_\00\003_\00\00G_\00\00T_\00\00hh")
 (data (i32.const 15888) "\11\00\n\00\11\11\11\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b")
 (data (i32.const 15920) "\11\00\0f\n\11\11\11\03\n\07\00\01\13\t\0b\0b\00\00\t\06\0b\00\00\0b\00\06\11\00\00\00\11\11\11")
 (data (i32.const 15969) "\0b")
 (data (i32.const 15978) "\11\00\n\n\11\11\11\00\n\00\00\02\00\t\0b\00\00\00\t\00\0b\00\00\0b")
 (data (i32.const 16027) "\0c")
 (data (i32.const 16039) "\0c\00\00\00\00\0c\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c")
 (data (i32.const 16085) "\0e")
 (data (i32.const 16097) "\0d\00\00\00\04\0d\00\00\00\00\t\0e\00\00\00\00\00\0e\00\00\0e")
 (data (i32.const 16143) "\10")
 (data (i32.const 16155) "\0f\00\00\00\00\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\12\00\00\00\12\12\12")
 (data (i32.const 16210) "\12\00\00\00\12\12\12\00\00\00\00\00\00\t")
 (data (i32.const 16259) "\0b")
 (data (i32.const 16271) "\n\00\00\00\00\n\00\00\00\00\t\0b\00\00\00\00\00\0b\00\00\0b")
 (data (i32.const 16317) "\0c")
 (data (i32.const 16329) "\0c\00\00\00\00\0c\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\000123456789ABCDEF\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
 (data (i32.const 16424) "\06\d0\cfC\eb\fdL>")
 (data (i32.const 16443) "@\03\b8\e2?\c07\00\00@<\00\00\01\01\00\00\1e\01\00\00\0f\00\00\00\c06\00\00@7\00\00\00\00\00\00\1e\00\00\00\0f\00\00\00\00\00\00\00p6\00\00\00\00\00\00\13\00\00\00\07\00\00\00\80@\00\00\05")
 (data (i32.const 16524) "\01")
 (data (i32.const 16548) "\01\00\00\00\02\00\00\00qh")
 (data (i32.const 16572) "\02")
 (data (i32.const 16587) "\ff\ff\ff\ff\ff")
 (data (i32.const 16637) "A\00\00\05")
 (data (i32.const 16652) "\01")
 (data (i32.const 16676) "\03\00\00\00\02\00\00\00H`\00\00\00\04")
 (data (i32.const 16700) "\01")
 (data (i32.const 16715) "\n\ff\ff\ff\ff")
 (data (i32.const 16765) "A")
 (data (i32.const 16804) "\04")
 (data (i32.const 16843) "\ff\ff\ff\ff\ff")
 (data (i32.const 17080) "\9cf")
 (data (i32.const 17136) "_p\89\00\ff\t/\0finvalid interlace type\001.2.3\00SANITY CHECK...PNG File BEFORE:\00PNG Image BEFORE:\00PNG File AFTER:\00PNG Image AFTER:\00\f0\f1\f2\f3\f4\f5\f6\f7\f8\f9\fa\fb\fc\fd\fe\ffText:\00keyStr:\00Result:\00\t^ %s\n\00Ok\00INVALID\00# wasm-CTR test\00# CTR test\0003 modular x table:\n\t\00%s\n\t\00\n\t\00 \00%02x%s\00\n \00\89PNG\0d\n\1a\nIHDR\00IDAT\00IEND\00PLTE\00bKGD\00cHRM\00gAMA\00hIST\00iCCP\00oFFs\00pCAL\00sCAL\00pHYs\00sBIT\00sPLT\00sRGB\00tEXt\00tIME\00tRNS\00zTXt\00libpng error no. %s: %s\n\00libpng error: %s, offset=%d\n\00libpng error: %s\n\00libpng warning no. %s: %s\n\00libpng warning: %s\n\00Invalid bit depth\00Invalid color type\00Invalid image width\00Invalid image height\00Width too large for libpng to process image data.\00Out of Memory!\00Out of Memory\00Not enough compressed data\00Extra compression data\00Extra compressed data\00Decompression Error\00Missing IHDR before IDAT\00Missing PLTE before IDAT\00Too many IDAT\'s found\00Out of place tEXt\00Out of place zTXt\00unknown critical chunk\00Not a PNG file\00PNG file corrupted by ASCII conversion\00zlib memory error\00zlib version error\00Unknown zlib error\00Call to NULL read function\00Read Error\00It\'s an error to set both read_data_fn and write_data_fn in the \00same structure.  Resetting write_data_fn to NULL.\00NULL row buffer for row %ld, pass %d\00png_do_rgb_to_gray found nongray pixel\00png_do_dither returned rowbytes=0\00CRC error\00Buffer error in compressed datastream in %s chunk\00Data error in compressed datastream in %s chunk\00Incomplete compressed datastream in %s chunk\00Unknown zTXt compression type %d\00Out of place IHDR\00Invalid IHDR chunk\00Missing IHDR before PLTE\00Invalid PLTE after IDAT\00Duplicate PLTE chunk\00Ignoring PLTE chunk in grayscale PNG\00Invalid palette chunk\00Truncating incorrect tRNS chunk length\00Truncating incorrect info tRNS chunk length\00No image in file\00Incorrect IEND chunk length\00Missing IHDR before gAMA\00Invalid gAMA after IDAT\00Out of place gAMA chunk\00Duplicate gAMA chunk\00Incorrect gAMA chunk length\00Ignoring gAMA chunk with gamma=0\00Ignoring incorrect gAMA value when sRGB is also present\00gamma = (%d/100000)\n\00Missing IHDR before sBIT\00Invalid sBIT after IDAT\00Out of place sBIT chunk\00Duplicate sBIT chunk\00Incorrect sBIT chunk length\00Missing IHDR before cHRM\00Invalid cHRM after IDAT\00Missing PLTE before cHRM\00Duplicate cHRM chunk\00Incorrect cHRM chunk length\00Invalid cHRM white point\00Invalid cHRM red point\00Invalid cHRM green point\00Invalid cHRM blue point\00Ignoring incorrect cHRM value when sRGB is also present\00wx=%f, wy=%f, rx=%f, ry=%f\n\00gx=%f, gy=%f, bx=%f, by=%f\n\00Missing IHDR before sRGB\00Invalid sRGB after IDAT\00Out of place sRGB chunk\00Duplicate sRGB chunk\00Incorrect sRGB chunk length\00Unknown sRGB intent\00incorrect gamma=(%d/100000)\n\00Missing IHDR before iCCP\00Invalid iCCP after IDAT\00Out of place iCCP chunk\00Duplicate iCCP chunk\00Malformed iCCP chunk\00Ignoring nonzero compression type in iCCP chunk\00Profile size field missing from iCCP chunk\00Ignoring truncated iCCP profile.\n\00Missing IHDR before sPLT\00Invalid sPLT after IDAT\00malformed sPLT chunk\00sPLT chunk has bad length\00Missing IHDR before tRNS\00Invalid tRNS after IDAT\00Duplicate tRNS chunk\00Missing PLTE before tRNS\00Incorrect tRNS chunk length\00Zero length tRNS chunk\00tRNS chunk not allowed with alpha channel\00Missing IHDR before bKGD\00Invalid bKGD after IDAT\00Missing PLTE before bKGD\00Duplicate bKGD chunk\00Incorrect bKGD chunk length\00Incorrect bKGD chunk index value\00Missing IHDR before hIST\00Invalid hIST after IDAT\00Missing PLTE before hIST\00Duplicate hIST chunk\00Incorrect hIST chunk length\00Missing IHDR before pHYs\00Invalid pHYs after IDAT\00Duplicate pHYs chunk\00Incorrect pHYs chunk length\00Missing IHDR before oFFs\00Invalid oFFs after IDAT\00Duplicate oFFs chunk\00Incorrect oFFs chunk length\00Missing IHDR before pCAL\00Invalid pCAL after IDAT\00Duplicate pCAL chunk\00Invalid pCAL data\00Invalid pCAL parameters for equation type\00Missing IHDR before sCAL\00Invalid sCAL after IDAT\00Duplicate sCAL chunk\00malformed width string in sCAL chunk\00malformed height string in sCAL chunk\00Invalid sCAL data\00Out of place tIME chunk\00Duplicate tIME chunk\00Incorrect tIME chunk length\00invalid chunk type\00Ignoring bad adaptive filter type\00Ignoring attempt to set negative chromaticity value\00Ignoring attempt to set chromaticity value exceeding 21474.83\00Limiting gamma to 21474.83\00Setting gamma=0\00Setting negative gamma to zero\00Palette size 0, hIST allocation skipped.\00Image width or height is zero in IHDR\00Invalid image size in IHDR\00Invalid bit depth in IHDR\00Invalid color type in IHDR\00Invalid color type/bit depth combination in IHDR\00Unknown interlace method in IHDR\00Unknown compression method in IHDR\00Unknown filter method in IHDR\00Invalid filter method in IHDR\00Width too large to process image data; rowbytes will overflow.\00Unable to malloc palette\00iTXt chunk not supported.\00Call to NULL write function\00Write Error\00Attempted to set both read_data_fn and write_data_fn in\00the same structure.  Resetting read_data_fn to NULL.\00MNG features are not allowed in a PNG datastream\n\00Valid palette required for paletted images\n\00Unable to write international text\n\00No IDATs written into file\00Application was compiled with png.h from libpng-%.20s\00Application  is  running with png.c from libpng-%.20s\00Incompatible libpng version in application and library\00png_write_info was never called before png_write_row.\00Invalid bit depth for grayscale image\00Invalid bit depth for RGB image\00Invalid bit depth for paletted image\00Invalid bit depth for grayscale+alpha image\00Invalid bit depth for RGBA image\00Invalid image color type specified\00Invalid compression type specified\00Invalid filter type specified\00Invalid interlace type specified\00Invalid number of colors in palette\00Ignoring request to write a PLTE chunk in grayscale PNG\00Invalid sRGB rendering intent specified\00Empty keyword in iCCP chunk\00Unknown compression type in iCCP chunk\00Unknown compression type %d\00zlib error\00zero length keyword\00invalid keyword character 0x%02X\00trailing spaces removed from keyword\00leading spaces removed from keyword\00extra interior spaces removed from keyword\00Zero length keyword\00keyword length must be 1 - 79 characters\00Empty keyword in sPLT chunk\00Invalid sBIT depth specified\00Invalid cHRM white point specified\00white_x=%f, white_y=%f\n\00Invalid cHRM red point specified\00Invalid cHRM green point specified\00Invalid cHRM blue point specified\00Invalid number of transparent colors specified\00Ignoring attempt to write tRNS chunk out-of-range for bit_depth\00Ignoring attempt to write 16-bit tRNS chunk when bit_depth is 8\00Can\'t write tRNS with an alpha channel\00Invalid background palette index\00Ignoring attempt to write 16-bit bKGD chunk when bit_depth is 8\00Ignoring attempt to write bKGD chunk out-of-range for bit_depth\00Invalid number of histogram entries specified\00Empty keyword in tEXt chunk\00Empty keyword in zTXt chunk\00Unrecognized unit type for oFFs chunk\00Unrecognized equation type for pCAL chunk\00%12.12e\00Unrecognized unit type for pHYs chunk\00Invalid time specified for tIME chunk\001.2.11\00incorrect header check\00unknown compression method\00invalid window size\00unknown header flags set\00header crc mismatch\00invalid block type\00invalid stored block lengths\00too many length or distance symbols\00invalid code lengths set\00invalid bit length repeat\00invalid code -- missing end-of-block\00invalid literal/lengths set\00invalid distances set\00incorrect data check\00incorrect length check\00need dictionary\00stream end\00file error\00stream error\00data error\00insufficient memory\00buffer error\00incompatible version\00invalid distance too far back\00invalid distance code\00invalid literal/length code\00-+   0X0x\00(null)\00-0X+0X 0X-0x+0x 0x\00inf\00INF\00NAN\00.\00infinity\00nan")
 (import "env" "table" (table $table 76 76 funcref))
 (elem (global.get $__table_base) $b0 $___stdio_close $_png_create_info_struct $b0 $b1 $_deflate_stored $_deflate_fast $_deflate_slow $_png_malloc $b1 $b1 $b1 $b2 $___stdio_write $___stdio_seek $___stdout_write $_sn_write $_png_create_struct_2 $_sprintf $_png_zalloc $_inflateInit_ $_zcalloc $b2 $b2 $b2 $b2 $b2 $b2 $b3 $_png_create_write_struct $_png_create_read_struct $b3 $b4 $_abort $b5 $_output_flush $_png_init_mmx_flags $_png_default_flush $_png_destroy_struct $b5 $b5 $b5 $b6 $_png_destroy_write_struct $_info_callback $_end_callback $_png_free $_png_warning $_png_error $_png_zfree $_zcfree $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b7 $_write_data $_png_destroy_read_struct $_png_push_fill_buffer $_png_destroy_struct_2 $_png_set_read_fn $_png_default_read_data $_png_default_write_data $b8 $_png_set_write_fn $_row_callback $_png_process_data $_png_set_mem_fn $_png_set_error_fn $b8 $b8 $b9 $_png_set_progressive_read_fn)
 (import "env" "__table_base" (global $__table_base i32))
 (import "env" "DYNAMICTOP_PTR" (global $DYNAMICTOP_PTR$asm2wasm$import i32))
 (import "global" "NaN" (global $nan$asm2wasm$import f64))
 (import "global" "Infinity" (global $inf$asm2wasm$import f64))
 (import "env" "abort" (func $abort (param i32)))
 (import "env" "setTempRet0" (func $setTempRet0 (param i32)))
 (import "env" "getTempRet0" (func $getTempRet0 (result i32)))
 (import "env" "invoke_ii" (func $invoke_ii (param i32 i32) (result i32)))
 (import "env" "invoke_iii" (func $invoke_iii (param i32 i32 i32) (result i32)))
 (import "env" "invoke_iiii" (func $invoke_iiii (param i32 i32 i32 i32) (result i32)))
 (import "env" "invoke_iiiii" (func $invoke_iiiii (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "invoke_v" (func $invoke_v (param i32)))
 (import "env" "invoke_vi" (func $invoke_vi (param i32 i32)))
 (import "env" "invoke_vii" (func $invoke_vii (param i32 i32 i32)))
 (import "env" "invoke_viii" (func $invoke_viii (param i32 i32 i32 i32)))
 (import "env" "invoke_viiii" (func $invoke_viiii (param i32 i32 i32 i32 i32)))
 (import "env" "invoke_viiiii" (func $invoke_viiiii (param i32 i32 i32 i32 i32 i32)))
 (import "env" "___lock" (func $___lock (param i32)))
 (import "env" "___setErrNo" (func $___setErrNo (param i32)))
 (import "env" "___syscall140" (func $___syscall140 (param i32 i32) (result i32)))
 (import "env" "___syscall146" (func $___syscall146 (param i32 i32) (result i32)))
 (import "env" "___syscall54" (func $___syscall54 (param i32 i32) (result i32)))
 (import "env" "___syscall6" (func $___syscall6 (param i32 i32) (result i32)))
 (import "env" "___unlock" (func $___unlock (param i32)))
 (import "env" "_abort" (func $_abort))
 (import "env" "_emscripten_get_heap_size" (func $_emscripten_get_heap_size (result i32)))
 (import "env" "_emscripten_memcpy_big" (func $_emscripten_memcpy_big (param i32 i32 i32) (result i32)))
 (import "env" "_emscripten_resize_heap" (func $_emscripten_resize_heap (param i32) (result i32)))
 (import "env" "_longjmp" (func $_longjmp (param i32 i32)))
 (import "env" "abortOnCannotGrowMemory" (func $abortOnCannotGrowMemory (param i32) (result i32)))
 (global $DYNAMICTOP_PTR (mut i32) (global.get $DYNAMICTOP_PTR$asm2wasm$import))
 (global $__THREW__ (mut i32) (i32.const 0))
 (global $threwValue (mut i32) (i32.const 0))
 (global $setjmpId (mut i32) (i32.const 0))
 (global $nan (mut f64) (global.get $nan$asm2wasm$import))
 (global $inf (mut f64) (global.get $inf$asm2wasm$import))
 (global $STACKTOP (mut i32) (i32.const 28032))
 (global $STACK_MAX (mut i32) (i32.const 5270912))
 (export "___errno_location" (func $___errno_location))
 (export "_free" (func $_free))
 (export "_genTexture" (func $_genTexture))
 (export "_getTexture" (func $_getTexture))
 (export "_main" (func $_main))
 (export "_malloc" (func $_malloc))
 (export "_memcpy" (func $_memcpy))
 (export "_memset" (func $_memset))
 (export "_realloc" (func $_realloc))
 (export "_saveSetjmp" (func $_saveSetjmp))
 (export "_sbrk" (func $_sbrk))
 (export "_setThrew" (func $_setThrew))
 (export "_testSetjmp" (func $_testSetjmp))
 (export "dynCall_ii" (func $dynCall_ii))
 (export "dynCall_iii" (func $dynCall_iii))
 (export "dynCall_iiii" (func $dynCall_iiii))
 (export "dynCall_iiiii" (func $dynCall_iiiii))
 (export "dynCall_v" (func $dynCall_v))
 (export "dynCall_vi" (func $dynCall_vi))
 (export "dynCall_vii" (func $dynCall_vii))
 (export "dynCall_viii" (func $dynCall_viii))
 (export "dynCall_viiii" (func $dynCall_viiii))
 (export "dynCall_viiiii" (func $dynCall_viiiii))
 (export "establishStackSpace" (func $establishStackSpace))
 (export "stackAlloc" (func $stackAlloc))
 (export "stackRestore" (func $stackRestore))
 (export "stackSave" (func $stackSave))
 (func $stackAlloc (; 26 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (local.get $0)
    (global.get $STACKTOP)
   )
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 15)
    )
    (i32.const -16)
   )
  )
  (local.get $1)
 )
 (func $stackSave (; 27 ;) (; has Stack IR ;) (result i32)
  (global.get $STACKTOP)
 )
 (func $stackRestore (; 28 ;) (; has Stack IR ;) (param $0 i32)
  (global.set $STACKTOP
   (local.get $0)
  )
 )
 (func $establishStackSpace (; 29 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (global.set $STACKTOP
   (local.get $0)
  )
  (global.set $STACK_MAX
   (local.get $1)
  )
 )
 (func $_write_data (; 30 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local.set $3
   (i32.load
    (i32.const 25684)
   )
  )
  (if
   (local.get $2)
   (block
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (i32.store8
      (i32.add
       (i32.add
        (local.get $0)
        (i32.load
         (i32.const 25680)
        )
       )
       (local.get $3)
      )
      (i32.load8_s
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (i32.store
   (i32.const 25680)
   (i32.add
    (local.get $2)
    (i32.load
     (i32.const 25680)
    )
   )
  )
 )
 (func $_output_flush (; 31 ;) (; has Stack IR ;) (param $0 i32)
  (nop)
 )
 (func $_info_callback (; 32 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 32)
   )
  )
  (local.set $7
   (i32.add
    (local.get $5)
    (i32.const 24)
   )
  )
  (local.set $8
   (i32.add
    (local.get $5)
    (i32.const 16)
   )
  )
  (local.set $9
   (i32.add
    (local.get $5)
    (i32.const 8)
   )
  )
  (local.set $1
   (local.get $5)
  )
  (if
   (call $_png_get_IHDR
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.tee $2
     (i32.add
      (local.get $5)
      (i32.const 56)
     )
    )
    (local.tee $3
     (i32.add
      (local.get $5)
      (i32.const 48)
     )
    )
    (local.tee $4
     (i32.add
      (local.get $5)
      (i32.const 40)
     )
    )
   )
   (block
    (call $_png_set_IHDR
     (i32.load
      (i32.const 25712)
     )
     (i32.load
      (i32.const 25716)
     )
     (i32.load
      (i32.const 25696)
     )
     (i32.load
      (i32.const 25700)
     )
     (i32.load
      (i32.const 25704)
     )
     (i32.load
      (i32.const 25708)
     )
     (i32.load
      (local.get $2)
     )
     (i32.load
      (local.get $3)
     )
     (i32.load
      (local.get $4)
     )
    )
    (if
     (i32.ge_u
      (i32.load
       (local.get $2)
      )
      (i32.const 2)
     )
     (call $_png_error
      (i32.load
       (i32.const 25688)
      )
      (i32.const 17144)
     )
    )
   )
  )
  (if
   (call $_png_get_cHRM_fixed
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $6)
    (local.get $7)
    (local.get $8)
    (local.get $9)
    (local.get $1)
   )
   (call $_png_set_cHRM_fixed
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $3)
    )
    (i32.load
     (local.get $4)
    )
    (i32.load
     (local.get $6)
    )
    (i32.load
     (local.get $7)
    )
    (i32.load
     (local.get $8)
    )
    (i32.load
     (local.get $9)
    )
    (i32.load
     (local.get $1)
    )
   )
  )
  (if
   (call $_png_get_gAMA_fixed
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
   )
   (call $_png_set_gAMA_fixed
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
   )
  )
  (if
   (call $_png_get_cHRM
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $6)
    (local.get $7)
    (local.get $8)
    (local.get $9)
    (local.get $1)
   )
   (call $_png_set_cHRM
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (f64.load
     (local.get $2)
    )
    (f64.load
     (local.get $3)
    )
    (f64.load
     (local.get $4)
    )
    (f64.load
     (local.get $6)
    )
    (f64.load
     (local.get $7)
    )
    (f64.load
     (local.get $8)
    )
    (f64.load
     (local.get $9)
    )
    (f64.load
     (local.get $1)
    )
   )
  )
  (if
   (call $_png_get_gAMA
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
   )
   (call $_png_set_gAMA
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (f64.load
     (local.get $2)
    )
   )
  )
  (if
   (call $_png_get_iCCP
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
    (local.get $6)
    (local.get $3)
    (local.get $4)
   )
   (call $_png_set_iCCP
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $6)
    )
    (i32.load
     (local.get $3)
    )
    (i32.load
     (local.get $4)
    )
   )
  )
  (if
   (call $_png_get_sRGB
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
   )
   (call $_png_set_sRGB
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
   )
  )
  (if
   (call $_png_get_PLTE
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
    (local.get $3)
   )
   (call $_png_set_PLTE
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $3)
    )
   )
  )
  (if
   (call $_png_get_bKGD
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
   )
   (call $_png_set_bKGD
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
   )
  )
  (if
   (call $_png_get_hIST
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
   )
   (call $_png_set_hIST
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
   )
  )
  (if
   (call $_png_get_oFFs
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
    (local.get $3)
    (local.get $4)
   )
   (call $_png_set_oFFs
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $3)
    )
    (i32.load
     (local.get $4)
    )
   )
  )
  (if
   (call $_png_get_pCAL
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
    (local.get $6)
    (local.get $7)
    (local.get $8)
    (local.get $9)
    (local.get $3)
    (local.get $4)
   )
   (call $_png_set_pCAL
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $6)
    )
    (i32.load
     (local.get $7)
    )
    (i32.load
     (local.get $8)
    )
    (i32.load
     (local.get $9)
    )
    (i32.load
     (local.get $3)
    )
    (i32.load
     (local.get $4)
    )
   )
  )
  (if
   (call $_png_get_pHYs
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
    (local.get $3)
    (local.get $4)
   )
   (call $_png_set_pHYs
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $3)
    )
    (i32.load
     (local.get $4)
    )
   )
  )
  (if
   (call $_png_get_sBIT
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
   )
   (call $_png_set_sBIT
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
   )
  )
  (if
   (call $_png_get_sCAL
    (i32.load
     (i32.const 25688)
    )
    (i32.load
     (i32.const 25692)
    )
    (local.get $2)
    (local.get $3)
    (local.get $4)
   )
   (call $_png_set_sCAL
    (i32.load
     (i32.const 25712)
    )
    (i32.load
     (i32.const 25716)
    )
    (i32.load
     (local.get $2)
    )
    (f64.load
     (local.get $3)
    )
    (f64.load
     (local.get $4)
    )
   )
  )
  (if
   (i32.eqz
    (call $_png_get_tRNS
     (i32.load
      (i32.const 25688)
     )
     (i32.load
      (i32.const 25692)
     )
     (local.get $2)
     (local.get $3)
     (local.get $4)
    )
   )
   (block
    (call $_png_start_read_image
     (local.get $0)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (local.set $6
   (i32.shl
    (i32.const 1)
    (i32.load
     (i32.const 25704)
    )
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case0
     (block $switch-case
      (br_table $switch-case $switch-default $switch-case0 $switch-default
       (i32.load
        (i32.const 25708)
       )
      )
     )
     (if
      (i32.lt_s
       (local.get $6)
       (i32.load16_u
        (i32.add
         (local.tee $1
          (i32.load
           (local.get $4)
          )
         )
         (i32.const 8)
        )
       )
      )
      (block
       (call $_png_start_read_image
        (local.get $0)
       )
       (global.set $STACKTOP
        (local.get $5)
       )
       (return)
      )
     )
     (br $switch)
    )
    (if
     (i32.lt_s
      (local.get $6)
      (i32.load16_u
       (i32.add
        (local.tee $1
         (i32.load
          (local.get $4)
         )
        )
        (i32.const 2)
       )
      )
     )
     (block
      (call $_png_start_read_image
       (local.get $0)
      )
      (global.set $STACKTOP
       (local.get $5)
      )
      (return)
     )
    )
    (if
     (i32.lt_s
      (local.get $6)
      (i32.load16_u
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
     )
     (block
      (call $_png_start_read_image
       (local.get $0)
      )
      (global.set $STACKTOP
       (local.get $5)
      )
      (return)
     )
    )
    (if
     (i32.lt_s
      (local.get $6)
      (i32.load16_u
       (i32.add
        (local.get $1)
        (i32.const 6)
       )
      )
     )
     (block
      (call $_png_start_read_image
       (local.get $0)
      )
      (global.set $STACKTOP
       (local.get $5)
      )
      (return)
     )
    )
    (br $switch)
   )
   (local.set $1
    (i32.load
     (local.get $4)
    )
   )
  )
  (call $_png_set_tRNS
   (i32.load
    (i32.const 25712)
   )
   (i32.load
    (i32.const 25716)
   )
   (i32.load
    (local.get $2)
   )
   (i32.load
    (local.get $3)
   )
   (local.get $1)
  )
  (call $_png_start_read_image
   (local.get $0)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_row_callback (; 33 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (i32.store
   (i32.add
    (i32.load
     (i32.const 25720)
    )
    (i32.shl
     (local.get $2)
     (i32.const 2)
    )
   )
   (local.get $1)
  )
 )
 (func $_end_callback (; 34 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (nop)
 )
 (func $_initialize_png_writer (; 35 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (i32.const 4)
  )
  (i32.store
   (local.tee $2
    (call $_malloc
     (i32.const 40)
    )
   )
   (i32.const 0)
  )
  (global.set $__THREW__
   (i32.const 0)
  )
  (local.set $1
   (call $invoke_iiiii
    (i32.const 1)
    (i32.const 17167)
    (i32.const 0)
    (i32.const 0)
    (i32.const 0)
   )
  )
  (local.set $0
   (global.get $__THREW__)
  )
  (global.set $__THREW__
   (i32.const 0)
  )
  (if
   (i32.and
    (i32.ne
     (local.get $0)
     (i32.const 0)
    )
    (i32.ne
     (global.get $threwValue)
     (i32.const 0)
    )
   )
   (block
    (if
     (i32.eqz
      (local.tee $3
       (call $_testSetjmp
        (i32.load
         (local.get $0)
        )
        (local.get $2)
        (i32.const 4)
       )
      )
     )
     (call $_longjmp
      (local.get $0)
      (global.get $threwValue)
     )
    )
    (call $setTempRet0
     (global.get $threwValue)
    )
   )
   (local.set $3
    (i32.const -1)
   )
  )
  (local.set $0
   (block $label$break$L1 (result i32)
    (drop
     (br_if $label$break$L1
      (call $getTempRet0)
      (i32.eqz
       (i32.sub
        (local.get $3)
        (i32.const 1)
       )
      )
     )
    )
    (i32.store
     (i32.const 25712)
     (local.get $1)
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (local.set $3
     (call $invoke_ii
      (i32.const 2)
      (local.get $1)
     )
    )
    (local.set $0
     (global.get $__THREW__)
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (if
     (i32.and
      (i32.ne
       (local.get $0)
       (i32.const 0)
      )
      (i32.ne
       (global.get $threwValue)
       (i32.const 0)
      )
     )
     (block
      (if
       (i32.eqz
        (local.tee $1
         (call $_testSetjmp
          (i32.load
           (local.get $0)
          )
          (local.get $2)
          (i32.const 4)
         )
        )
       )
       (call $_longjmp
        (local.get $0)
        (global.get $threwValue)
       )
      )
      (call $setTempRet0
       (global.get $threwValue)
      )
     )
     (local.set $1
      (i32.const -1)
     )
    )
    (drop
     (br_if $label$break$L1
      (call $getTempRet0)
      (i32.eqz
       (i32.sub
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
    (i32.store
     (i32.const 25716)
     (local.get $3)
    )
    (local.set $0
     (i32.load
      (i32.const 25712)
     )
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (local.set $3
     (call $invoke_ii
      (i32.const 2)
      (local.get $0)
     )
    )
    (local.set $0
     (global.get $__THREW__)
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (if
     (i32.and
      (i32.ne
       (local.get $0)
       (i32.const 0)
      )
      (i32.ne
       (global.get $threwValue)
       (i32.const 0)
      )
     )
     (block
      (if
       (i32.eqz
        (local.tee $1
         (call $_testSetjmp
          (i32.load
           (local.get $0)
          )
          (local.get $2)
          (i32.const 4)
         )
        )
       )
       (call $_longjmp
        (local.get $0)
        (global.get $threwValue)
       )
      )
      (call $setTempRet0
       (global.get $threwValue)
      )
     )
     (local.set $1
      (i32.const -1)
     )
    )
    (drop
     (br_if $label$break$L1
      (call $getTempRet0)
      (i32.eqz
       (i32.sub
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
    (i32.store
     (i32.const 25724)
     (local.get $3)
    )
    (local.set $2
     (call $_saveSetjmp
      (i32.load
       (i32.const 25712)
      )
      (i32.const 1)
      (local.get $2)
      (i32.const 4)
     )
    )
    (local.set $4
     (call $getTempRet0)
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (local.set $0
     (global.get $__THREW__)
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (if
     (i32.and
      (i32.ne
       (local.get $0)
       (i32.const 0)
      )
      (i32.ne
       (global.get $threwValue)
       (i32.const 0)
      )
     )
     (block
      (if
       (i32.eqz
        (local.tee $1
         (call $_testSetjmp
          (i32.load
           (local.get $0)
          )
          (local.get $2)
          (local.get $4)
         )
        )
       )
       (call $_longjmp
        (local.get $0)
        (global.get $threwValue)
       )
      )
      (call $setTempRet0
       (global.get $threwValue)
      )
     )
     (local.set $1
      (i32.const -1)
     )
    )
    (drop
     (br_if $label$break$L1
      (call $getTempRet0)
      (i32.eqz
       (i32.sub
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
    (i32.const 0)
   )
  )
  (block $__rjti$1
   (loop $label$continue$L6
    (if
     (local.get $0)
     (block
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_vii
       (i32.const 1)
       (i32.const 25712)
       (i32.const 0)
      )
      (local.set $0
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $0)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $1
           (call $_testSetjmp
            (i32.load
             (local.get $0)
            )
            (local.get $2)
            (local.get $4)
           )
          )
         )
         (call $_longjmp
          (local.get $0)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $1
        (i32.const -1)
       )
      )
      (local.set $0
       (call $getTempRet0)
      )
      (br_if $label$continue$L6
       (i32.eqz
        (i32.sub
         (local.get $1)
         (i32.const 1)
        )
       )
      )
     )
     (block
      (local.set $0
       (i32.load
        (i32.const 25712)
       )
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viiii
       (i32.const 1)
       (local.get $0)
       (i32.const 0)
       (i32.const 1)
       (i32.const 1)
      )
      (local.set $0
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $0)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $1
           (call $_testSetjmp
            (i32.load
             (local.get $0)
            )
            (local.get $2)
            (local.get $4)
           )
          )
         )
         (call $_longjmp
          (local.get $0)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $1
        (i32.const -1)
       )
      )
      (local.set $0
       (call $getTempRet0)
      )
      (br_if $__rjti$1
       (i32.sub
        (local.get $1)
        (i32.const 1)
       )
      )
      (br $label$continue$L6)
     )
    )
   )
   (call $_free
    (local.get $2)
   )
   (return)
  )
  (call $_free
   (local.get $2)
  )
 )
 (func $_initialize_png_reader (; 36 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (i32.const 4)
  )
  (i32.store
   (local.tee $2
    (call $_malloc
     (i32.const 40)
    )
   )
   (i32.const 0)
  )
  (global.set $__THREW__
   (i32.const 0)
  )
  (local.set $1
   (call $invoke_iiiii
    (i32.const 2)
    (i32.const 17167)
    (i32.const 0)
    (i32.const 0)
    (i32.const 0)
   )
  )
  (local.set $0
   (global.get $__THREW__)
  )
  (global.set $__THREW__
   (i32.const 0)
  )
  (if
   (i32.and
    (i32.ne
     (local.get $0)
     (i32.const 0)
    )
    (i32.ne
     (global.get $threwValue)
     (i32.const 0)
    )
   )
   (block
    (if
     (i32.eqz
      (local.tee $3
       (call $_testSetjmp
        (i32.load
         (local.get $0)
        )
        (local.get $2)
        (i32.const 4)
       )
      )
     )
     (call $_longjmp
      (local.get $0)
      (global.get $threwValue)
     )
    )
    (call $setTempRet0
     (global.get $threwValue)
    )
   )
   (local.set $3
    (i32.const -1)
   )
  )
  (local.set $0
   (block $label$break$L1 (result i32)
    (drop
     (br_if $label$break$L1
      (call $getTempRet0)
      (i32.eqz
       (i32.sub
        (local.get $3)
        (i32.const 1)
       )
      )
     )
    )
    (i32.store
     (i32.const 25688)
     (local.get $1)
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (local.set $3
     (call $invoke_ii
      (i32.const 2)
      (local.get $1)
     )
    )
    (local.set $0
     (global.get $__THREW__)
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (if
     (i32.and
      (i32.ne
       (local.get $0)
       (i32.const 0)
      )
      (i32.ne
       (global.get $threwValue)
       (i32.const 0)
      )
     )
     (block
      (if
       (i32.eqz
        (local.tee $1
         (call $_testSetjmp
          (i32.load
           (local.get $0)
          )
          (local.get $2)
          (i32.const 4)
         )
        )
       )
       (call $_longjmp
        (local.get $0)
        (global.get $threwValue)
       )
      )
      (call $setTempRet0
       (global.get $threwValue)
      )
     )
     (local.set $1
      (i32.const -1)
     )
    )
    (drop
     (br_if $label$break$L1
      (call $getTempRet0)
      (i32.eqz
       (i32.sub
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
    (i32.store
     (i32.const 25692)
     (local.get $3)
    )
    (local.set $0
     (i32.load
      (i32.const 25688)
     )
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (local.set $3
     (call $invoke_ii
      (i32.const 2)
      (local.get $0)
     )
    )
    (local.set $0
     (global.get $__THREW__)
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (if
     (i32.and
      (i32.ne
       (local.get $0)
       (i32.const 0)
      )
      (i32.ne
       (global.get $threwValue)
       (i32.const 0)
      )
     )
     (block
      (if
       (i32.eqz
        (local.tee $1
         (call $_testSetjmp
          (i32.load
           (local.get $0)
          )
          (local.get $2)
          (i32.const 4)
         )
        )
       )
       (call $_longjmp
        (local.get $0)
        (global.get $threwValue)
       )
      )
      (call $setTempRet0
       (global.get $threwValue)
      )
     )
     (local.set $1
      (i32.const -1)
     )
    )
    (drop
     (br_if $label$break$L1
      (call $getTempRet0)
      (i32.eqz
       (i32.sub
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
    (i32.store
     (i32.const 25728)
     (local.get $3)
    )
    (local.set $2
     (call $_saveSetjmp
      (i32.load
       (i32.const 25688)
      )
      (i32.const 1)
      (local.get $2)
      (i32.const 4)
     )
    )
    (local.set $4
     (call $getTempRet0)
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (local.set $0
     (global.get $__THREW__)
    )
    (global.set $__THREW__
     (i32.const 0)
    )
    (if
     (i32.and
      (i32.ne
       (local.get $0)
       (i32.const 0)
      )
      (i32.ne
       (global.get $threwValue)
       (i32.const 0)
      )
     )
     (block
      (if
       (i32.eqz
        (local.tee $1
         (call $_testSetjmp
          (i32.load
           (local.get $0)
          )
          (local.get $2)
          (local.get $4)
         )
        )
       )
       (call $_longjmp
        (local.get $0)
        (global.get $threwValue)
       )
      )
      (call $setTempRet0
       (global.get $threwValue)
      )
     )
     (local.set $1
      (i32.const -1)
     )
    )
    (drop
     (br_if $label$break$L1
      (call $getTempRet0)
      (i32.eqz
       (i32.sub
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
    (i32.const 0)
   )
  )
  (block $__rjti$1
   (loop $label$continue$L6
    (if
     (local.get $0)
     (block
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viii
       (i32.const 2)
       (i32.const 25688)
       (i32.const 0)
       (i32.const 0)
      )
      (local.set $0
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $0)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $1
           (call $_testSetjmp
            (i32.load
             (local.get $0)
            )
            (local.get $2)
            (local.get $4)
           )
          )
         )
         (call $_longjmp
          (local.get $0)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $1
        (i32.const -1)
       )
      )
      (local.set $0
       (call $getTempRet0)
      )
      (br_if $label$continue$L6
       (i32.eqz
        (i32.sub
         (local.get $1)
         (i32.const 1)
        )
       )
      )
     )
     (block
      (local.set $0
       (i32.load
        (i32.const 25688)
       )
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viiiii
       (i32.const 1)
       (local.get $0)
       (i32.const 26308)
       (i32.const 2)
       (i32.const 2)
       (i32.const 3)
      )
      (local.set $0
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $0)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $1
           (call $_testSetjmp
            (i32.load
             (local.get $0)
            )
            (local.get $2)
            (local.get $4)
           )
          )
         )
         (call $_longjmp
          (local.get $0)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $1
        (i32.const -1)
       )
      )
      (local.set $0
       (call $getTempRet0)
      )
      (br_if $__rjti$1
       (i32.sub
        (local.get $1)
        (i32.const 1)
       )
      )
      (br $label$continue$L6)
     )
    )
   )
   (call $_free
    (local.get $2)
   )
   (return)
  )
  (call $_free
   (local.get $2)
  )
 )
 (func $_process_data (; 37 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (i32.store
   (local.tee $4
    (call $_malloc
     (i32.const 40)
    )
   )
   (i32.const 0)
  )
  (local.set $4
   (call $_saveSetjmp
    (i32.load
     (i32.const 25688)
    )
    (i32.const 1)
    (local.get $4)
    (i32.const 4)
   )
  )
  (local.set $5
   (call $getTempRet0)
  )
  (global.set $__THREW__
   (i32.const 0)
  )
  (local.set $2
   (global.get $__THREW__)
  )
  (global.set $__THREW__
   (i32.const 0)
  )
  (if
   (i32.and
    (i32.ne
     (local.get $2)
     (i32.const 0)
    )
    (i32.ne
     (global.get $threwValue)
     (i32.const 0)
    )
   )
   (block
    (if
     (i32.eqz
      (local.tee $3
       (call $_testSetjmp
        (i32.load
         (local.get $2)
        )
        (local.get $4)
        (local.get $5)
       )
      )
     )
     (call $_longjmp
      (local.get $2)
      (global.get $threwValue)
     )
    )
    (call $setTempRet0
     (global.get $threwValue)
    )
   )
   (local.set $3
    (i32.const -1)
   )
  )
  (local.set $2
   (call $getTempRet0)
  )
  (local.set $2
   (select
    (i32.const 0)
    (local.get $2)
    (i32.sub
     (local.get $3)
     (i32.const 1)
    )
   )
  )
  (block $__rjti$1
   (loop $label$continue$L3
    (if
     (local.get $2)
     (block
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viii
       (i32.const 2)
       (i32.const 25688)
       (i32.const 25692)
       (i32.const 0)
      )
      (local.set $2
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $2)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $3
           (call $_testSetjmp
            (i32.load
             (local.get $2)
            )
            (local.get $4)
            (local.get $5)
           )
          )
         )
         (call $_longjmp
          (local.get $2)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $3
        (i32.const -1)
       )
      )
      (local.set $2
       (call $getTempRet0)
      )
      (br_if $label$continue$L3
       (i32.eqz
        (i32.sub
         (local.get $3)
         (i32.const 1)
        )
       )
      )
     )
     (block
      (local.set $2
       (i32.load
        (i32.const 25688)
       )
      )
      (local.set $3
       (i32.load
        (i32.const 25692)
       )
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viiii
       (i32.const 3)
       (local.get $2)
       (local.get $3)
       (local.get $0)
       (local.get $1)
      )
      (local.set $2
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $2)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $3
           (call $_testSetjmp
            (i32.load
             (local.get $2)
            )
            (local.get $4)
            (local.get $5)
           )
          )
         )
         (call $_longjmp
          (local.get $2)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $3
        (i32.const -1)
       )
      )
      (local.set $2
       (call $getTempRet0)
      )
      (br_if $__rjti$1
       (i32.sub
        (local.get $3)
        (i32.const 1)
       )
      )
      (br $label$continue$L3)
     )
    )
   )
   (call $_free
    (local.get $4)
   )
   (return)
  )
  (call $_free
   (local.get $4)
  )
 )
 (func $_genTexture (; 38 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (i32.store
   (i32.const 25684)
   (local.get $1)
  )
  (local.set $6
   (i32.add
    (i32.div_s
     (local.tee $6
      (i32.mul
       (local.get $3)
       (local.get $4)
      )
     )
     (i32.const 4)
    )
    (i32.ne
     (i32.and
      (local.get $6)
      (i32.const 3)
     )
     (i32.const 0)
    )
   )
  )
  (call $_initialize_png_reader)
  (call $_initialize_png_writer)
  (i32.store
   (i32.const 25720)
   (call $_png_malloc
    (i32.load
     (i32.const 25688)
    )
    (i32.shl
     (local.get $4)
     (i32.const 2)
    )
   )
  )
  (call $_process_data
   (local.get $1)
   (local.get $2)
  )
  (call $_puts
   (i32.const 17312)
  )
  (call $_dump
   (i32.const 17173)
   (local.get $1)
  )
  (call $_dump
   (i32.const 17205)
   (i32.load
    (i32.load
     (i32.const 25720)
    )
   )
  )
  (call $_aes128_setExpKey
   (i32.const 26312)
   (i32.const 26312)
  )
  (call $_aes128_offsetCtr
   (local.get $0)
   (local.get $6)
  )
  (call $_aes128_encrypt_progressive
   (i32.load
    (i32.const 25720)
   )
   (local.get $3)
   (local.get $4)
  )
  (i32.store align=1
   (i32.const 26516)
   (i32.const 0)
  )
  (call $_aes128_done
   (i32.const 26312)
  )
  (call $_png_write_info
   (i32.load
    (i32.const 25712)
   )
   (i32.load
    (i32.const 25716)
   )
  )
  (call $_png_write_image
   (i32.load
    (i32.const 25712)
   )
   (i32.load
    (i32.const 25720)
   )
  )
  (call $_png_write_end
   (i32.load
    (i32.const 25712)
   )
  )
  (call $_dump
   (i32.const 17223)
   (local.get $1)
  )
  (call $_dump
   (i32.const 17239)
   (i32.load
    (i32.load
     (i32.const 25720)
    )
   )
  )
  (i32.const 0)
 )
 (func $_getTexture (; 39 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (i32.const 0)
 )
 (func $_main (; 40 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (call $_puts
   (i32.const 17328)
  )
  (call $_dump
   (i32.const 17272)
   (i32.const 1040)
  )
  (call $_aes128_setExpKey
   (i32.const 26520)
   (i32.const 1024)
  )
  (call $_aes128_setCtrBlk)
  (call $_dump
   (i32.const 17278)
   (i32.const 24576)
  )
  (call $_dump
   (i32.const 17286)
   (i32.const 1040)
  )
  (i32.store
   (local.get $0)
   (select
    (i32.const 17304)
    (i32.const 17301)
    (i32.and
     (i32.or
      (i32.or
       (i32.or
        (i32.or
         (i32.or
          (i32.or
           (i32.or
            (i32.or
             (i32.or
              (i32.or
               (i32.or
                (i32.or
                 (i32.or
                  (i32.or
                   (i32.or
                    (i32.xor
                     (i32.load8_s
                      (i32.const 1040)
                     )
                     (i32.const -121)
                    )
                    (i32.xor
                     (i32.load8_s
                      (i32.const 1041)
                     )
                     (i32.const 77)
                    )
                   )
                   (i32.xor
                    (i32.load8_s
                     (i32.const 1042)
                    )
                    (i32.const 97)
                   )
                  )
                  (i32.xor
                   (i32.load8_s
                    (i32.const 1043)
                   )
                   (i32.const -111)
                  )
                 )
                 (i32.xor
                  (i32.load8_s
                   (i32.const 1044)
                  )
                  (i32.const -74)
                 )
                )
                (i32.xor
                 (i32.load8_s
                  (i32.const 1045)
                 )
                 (i32.const 32)
                )
               )
               (i32.xor
                (i32.load8_s
                 (i32.const 1046)
                )
                (i32.const -29)
               )
              )
              (i32.xor
               (i32.load8_s
                (i32.const 1047)
               )
               (i32.const 38)
              )
             )
             (i32.xor
              (i32.load8_s
               (i32.const 1048)
              )
              (i32.const 27)
             )
            )
            (i32.xor
             (i32.load8_s
              (i32.const 1049)
             )
             (i32.const -17)
            )
           )
           (i32.xor
            (i32.load8_s
             (i32.const 1050)
            )
            (i32.const 104)
           )
          )
          (i32.xor
           (i32.load8_s
            (i32.const 1051)
           )
           (i32.const 100)
          )
         )
         (i32.xor
          (i32.load8_s
           (i32.const 1052)
          )
          (i32.const -103)
         )
        )
        (i32.xor
         (i32.load8_s
          (i32.const 1053)
         )
         (i32.const 13)
        )
       )
       (i32.xor
        (i32.load8_s
         (i32.const 1054)
        )
        (i32.const -74)
       )
      )
      (i32.xor
       (i32.load8_s
        (i32.const 1055)
       )
       (i32.const -50)
      )
     )
     (i32.const 255)
    )
   )
  )
  (call $_printf
   (i32.const 17294)
   (local.get $0)
  )
  (i32.store8
   (i32.const 17268)
   (i32.const -4)
  )
  (i32.store8
   (i32.const 17269)
   (i32.const -3)
  )
  (i32.store8
   (i32.const 17270)
   (i32.const -2)
  )
  (i32.store8
   (i32.const 17271)
   (i32.const -1)
  )
  (call $_aes128_setCtrBlk)
  (call $_dump
   (i32.const 17278)
   (i32.const 24576)
  )
  (call $_dump
   (i32.const 17272)
   (i32.const 1040)
  )
  (call $_gen_table_mod_x
   (i32.const 2)
  )
  (call $_gen_table_mod_x
   (i32.const 3)
  )
  (call $_aes128_done
   (i32.const 26520)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (i32.const 0)
 )
 (func $_gen_table_mod_x (; 41 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $2
   (local.get $1)
  )
  (if
   (i32.eq
    (i32.and
     (local.get $0)
     (i32.const 255)
    )
    (i32.const 3)
   )
   (call $_printf
    (i32.const 17339)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_aes128_setExpKey (; 42 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (i32.store8
   (local.get $0)
   (local.tee $6
    (i32.load8_s
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=1
   (local.get $0)
   (local.tee $3
    (i32.load8_s offset=1
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=2
   (local.get $0)
   (local.tee $4
    (i32.load8_s offset=2
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=3
   (local.get $0)
   (local.tee $5
    (i32.load8_s offset=3
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=4
   (local.get $0)
   (local.tee $7
    (i32.load8_s offset=4
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=5
   (local.get $0)
   (local.tee $2
    (i32.load8_s offset=5
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=6
   (local.get $0)
   (local.tee $8
    (i32.load8_s offset=6
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=7
   (local.get $0)
   (local.tee $9
    (i32.load8_s offset=7
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=8
   (local.get $0)
   (local.tee $10
    (i32.load8_s offset=8
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=9
   (local.get $0)
   (local.tee $11
    (i32.load8_s offset=9
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=10
   (local.get $0)
   (local.tee $12
    (i32.load8_s offset=10
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=11
   (local.get $0)
   (local.tee $13
    (i32.load8_s offset=11
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=12
   (local.get $0)
   (local.tee $14
    (i32.load8_s offset=12
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=13
   (local.get $0)
   (local.tee $15
    (i32.load8_s offset=13
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=14
   (local.get $0)
   (local.tee $16
    (i32.load8_s offset=14
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=15
   (local.get $0)
   (local.tee $1
    (i32.load8_s offset=15
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=16
   (local.get $0)
   (local.get $6)
  )
  (i32.store8 offset=17
   (local.get $0)
   (local.get $3)
  )
  (i32.store8 offset=18
   (local.get $0)
   (local.get $4)
  )
  (i32.store8 offset=19
   (local.get $0)
   (local.get $5)
  )
  (i32.store8 offset=20
   (local.get $0)
   (local.get $7)
  )
  (i32.store8 offset=21
   (local.get $0)
   (local.get $2)
  )
  (i32.store8 offset=22
   (local.get $0)
   (local.get $8)
  )
  (i32.store8 offset=23
   (local.get $0)
   (local.get $9)
  )
  (i32.store8 offset=24
   (local.get $0)
   (local.get $10)
  )
  (i32.store8 offset=25
   (local.get $0)
   (local.get $11)
  )
  (i32.store8 offset=26
   (local.get $0)
   (local.get $12)
  )
  (i32.store8 offset=27
   (local.get $0)
   (local.get $13)
  )
  (i32.store8 offset=28
   (local.get $0)
   (local.get $14)
  )
  (i32.store8 offset=29
   (local.get $0)
   (local.get $15)
  )
  (i32.store8 offset=30
   (local.get $0)
   (local.get $16)
  )
  (i32.store8 offset=31
   (local.get $0)
   (local.get $1)
  )
  (local.set $1
   (i32.const 4)
  )
  (loop $while-in
   (local.set $6
    (i32.load8_s offset=12
     (i32.add
      (local.get $0)
      (local.tee $2
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
      )
     )
    )
   )
   (local.set $3
    (i32.load8_s offset=13
     (i32.add
      (local.get $0)
      (local.get $2)
     )
    )
   )
   (local.set $4
    (i32.load8_s offset=14
     (i32.add
      (local.get $0)
      (local.get $2)
     )
    )
   )
   (local.set $5
    (i32.load8_s offset=15
     (i32.add
      (local.get $0)
      (local.get $2)
     )
    )
   )
   (if
    (i32.and
     (local.get $1)
     (i32.const 3)
    )
    (local.set $7
     (local.get $6)
    )
    (block
     (local.set $7
      (i32.xor
       (i32.load8_s
        (i32.add
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
         (i32.const 1104)
        )
       )
       (i32.load8_s
        (i32.add
         (i32.shr_u
          (local.get $1)
          (i32.const 2)
         )
         (i32.const 1360)
        )
       )
      )
     )
     (local.set $3
      (i32.load8_s
       (i32.add
        (i32.and
         (local.get $4)
         (i32.const 255)
        )
        (i32.const 1104)
       )
      )
     )
     (local.set $4
      (i32.load8_s
       (i32.add
        (i32.and
         (local.get $5)
         (i32.const 255)
        )
        (i32.const 1104)
       )
      )
     )
     (local.set $5
      (i32.load8_s
       (i32.add
        (i32.and
         (local.get $6)
         (i32.const 255)
        )
        (i32.const 1104)
       )
      )
     )
    )
   )
   (i32.store8
    (i32.add
     (local.get $2)
     (i32.add
      (local.get $0)
      (i32.const 16)
     )
    )
    (i32.xor
     (local.get $7)
     (i32.load8_s
      (i32.add
       (local.get $0)
       (local.get $2)
      )
     )
    )
   )
   (i32.store8
    (i32.add
     (i32.add
      (local.get $0)
      (i32.const 16)
     )
     (i32.or
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.xor
     (local.get $3)
     (i32.load8_s offset=1
      (i32.add
       (local.get $0)
       (local.get $2)
      )
     )
    )
   )
   (i32.store8
    (i32.add
     (i32.add
      (local.get $0)
      (i32.const 16)
     )
     (i32.or
      (local.get $2)
      (i32.const 2)
     )
    )
    (i32.xor
     (local.get $4)
     (i32.load8_s offset=2
      (i32.add
       (local.get $0)
       (local.get $2)
      )
     )
    )
   )
   (i32.store8
    (i32.add
     (i32.add
      (local.get $0)
      (i32.const 16)
     )
     (i32.or
      (local.get $2)
      (i32.const 3)
     )
    )
    (i32.xor
     (local.get $5)
     (i32.load8_s offset=3
      (i32.add
       (local.get $0)
       (local.get $2)
      )
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (i32.const 44)
    )
   )
  )
 )
 (func $_aes128_done (; 43 ;) (; has Stack IR ;) (param $0 i32)
  (i64.store align=1
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=8 align=1
   (local.get $0)
   (i64.const 0)
  )
  (i64.store align=1
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 192)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8 align=1
   (local.get $0)
   (i64.const 0)
  )
 )
 (func $_aes_encrypt_next_block (; 44 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (i32.store8
   (local.get $0)
   (local.tee $13
    (i32.xor
     (i32.load8_s
      (i32.const 26328)
     )
     (i32.load8_s
      (local.get $0)
     )
    )
   )
  )
  (local.set $8
   (i32.xor
    (i32.load8_s
     (i32.const 26329)
    )
    (i32.load8_s
     (local.tee $18
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $18)
   (local.get $8)
  )
  (local.set $9
   (i32.xor
    (i32.load8_s
     (i32.const 26330)
    )
    (i32.load8_s
     (local.tee $19
      (i32.add
       (local.get $0)
       (i32.const 2)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $19)
   (local.get $9)
  )
  (local.set $1
   (i32.xor
    (i32.load8_s
     (i32.const 26331)
    )
    (i32.load8_s
     (local.tee $20
      (i32.add
       (local.get $0)
       (i32.const 3)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $20)
   (local.get $1)
  )
  (local.set $6
   (i32.xor
    (i32.load8_s
     (i32.const 26332)
    )
    (i32.load8_s
     (local.tee $21
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $21)
   (local.get $6)
  )
  (local.set $3
   (i32.xor
    (i32.load8_s
     (i32.const 26333)
    )
    (i32.load8_s
     (local.tee $22
      (i32.add
       (local.get $0)
       (i32.const 5)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $22)
   (local.get $3)
  )
  (local.set $4
   (i32.xor
    (i32.load8_s
     (i32.const 26334)
    )
    (i32.load8_s
     (local.tee $23
      (i32.add
       (local.get $0)
       (i32.const 6)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $23)
   (local.get $4)
  )
  (local.set $5
   (i32.xor
    (i32.load8_s
     (i32.const 26335)
    )
    (i32.load8_s
     (local.tee $24
      (i32.add
       (local.get $0)
       (i32.const 7)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $24)
   (local.get $5)
  )
  (local.set $16
   (i32.xor
    (i32.load8_s
     (i32.const 26336)
    )
    (i32.load8_s
     (local.tee $25
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $25)
   (local.get $16)
  )
  (local.set $10
   (i32.xor
    (i32.load8_s
     (i32.const 26337)
    )
    (i32.load8_s
     (local.tee $26
      (i32.add
       (local.get $0)
       (i32.const 9)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $26)
   (local.get $10)
  )
  (local.set $11
   (i32.xor
    (i32.load8_s
     (i32.const 26338)
    )
    (i32.load8_s
     (local.tee $27
      (i32.add
       (local.get $0)
       (i32.const 10)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $27)
   (local.get $11)
  )
  (local.set $12
   (i32.xor
    (i32.load8_s
     (i32.const 26339)
    )
    (i32.load8_s
     (local.tee $28
      (i32.add
       (local.get $0)
       (i32.const 11)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $28)
   (local.get $12)
  )
  (local.set $17
   (i32.xor
    (i32.load8_s
     (i32.const 26340)
    )
    (i32.load8_s
     (local.tee $29
      (i32.add
       (local.get $0)
       (i32.const 12)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $29)
   (local.get $17)
  )
  (local.set $14
   (i32.xor
    (i32.load8_s
     (i32.const 26341)
    )
    (i32.load8_s
     (local.tee $30
      (i32.add
       (local.get $0)
       (i32.const 13)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $30)
   (local.get $14)
  )
  (local.set $15
   (i32.xor
    (i32.load8_s
     (i32.const 26342)
    )
    (i32.load8_s
     (local.tee $31
      (i32.add
       (local.get $0)
       (i32.const 14)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $31)
   (local.get $15)
  )
  (local.set $2
   (i32.xor
    (i32.load8_s
     (i32.const 26343)
    )
    (i32.load8_s
     (local.tee $32
      (i32.add
       (local.get $0)
       (i32.const 15)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $32)
   (local.get $2)
  )
  (local.set $33
   (i32.const 1)
  )
  (loop $while-in
   (i32.store8
    (local.get $0)
    (local.tee $13
     (i32.load8_s
      (i32.add
       (i32.and
        (local.get $13)
        (i32.const 255)
       )
       (i32.const 1104)
      )
     )
    )
   )
   (local.set $34
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $8)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (local.set $35
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $9)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (local.set $7
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (i32.store8
    (local.get $21)
    (local.tee $9
     (i32.load8_s
      (i32.add
       (i32.and
        (local.get $6)
        (i32.const 255)
       )
       (i32.const 1104)
      )
     )
    )
   )
   (local.set $3
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (local.set $4
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $4)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (local.set $5
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $5)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (i32.store8
    (local.get $25)
    (local.tee $1
     (i32.load8_s
      (i32.add
       (i32.and
        (local.get $16)
        (i32.const 255)
       )
       (i32.const 1104)
      )
     )
    )
   )
   (local.set $10
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $10)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (local.set $11
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $11)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (local.set $12
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $12)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (i32.store8
    (local.get $29)
    (local.tee $6
     (i32.load8_s
      (i32.add
       (i32.and
        (local.get $17)
        (i32.const 255)
       )
       (i32.const 1104)
      )
     )
    )
   )
   (local.set $14
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $14)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (local.set $15
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $15)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (local.set $8
    (i32.load8_s
     (i32.add
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
      (i32.const 1104)
     )
    )
   )
   (i32.store8
    (local.get $18)
    (local.get $3)
   )
   (i32.store8
    (local.get $22)
    (local.get $10)
   )
   (i32.store8
    (local.get $26)
    (local.get $14)
   )
   (i32.store8
    (local.get $30)
    (local.get $34)
   )
   (i32.store8
    (local.get $20)
    (local.get $8)
   )
   (i32.store8
    (local.get $32)
    (local.get $12)
   )
   (i32.store8
    (local.get $28)
    (local.get $5)
   )
   (i32.store8
    (local.get $24)
    (local.get $7)
   )
   (i32.store8
    (local.get $27)
    (local.get $35)
   )
   (i32.store8
    (local.get $19)
    (local.get $11)
   )
   (i32.store8
    (local.get $31)
    (local.get $4)
   )
   (i32.store8
    (local.get $23)
    (local.get $15)
   )
   (if
    (i32.ne
     (local.get $33)
     (i32.const 10)
    )
    (block
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in1
      (local.set $10
       (select
        (local.tee $1
         (select
          (local.tee $1
           (select
            (local.tee $1
             (select
              (local.tee $1
               (select
                (local.tee $1
                 (select
                  (local.tee $1
                   (select
                    (i32.const 3)
                    (i32.const 0)
                    (i32.and
                     (local.tee $7
                      (i32.and
                       (local.tee $16
                        (i32.load8_s
                         (local.tee $14
                          (i32.add
                           (local.get $0)
                           (i32.or
                            (local.get $6)
                            (i32.const 2)
                           )
                          )
                         )
                        )
                       )
                       (i32.const 255)
                      )
                     )
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.xor
                   (local.get $1)
                   (i32.const 6)
                  )
                  (i32.eqz
                   (i32.and
                    (local.get $7)
                    (i32.const 2)
                   )
                  )
                 )
                )
                (i32.xor
                 (local.get $1)
                 (i32.const 12)
                )
                (i32.eqz
                 (i32.and
                  (local.get $7)
                  (i32.const 4)
                 )
                )
               )
              )
              (i32.xor
               (local.get $1)
               (i32.const 24)
              )
              (i32.eqz
               (i32.and
                (local.get $7)
                (i32.const 8)
               )
              )
             )
            )
            (i32.xor
             (local.get $1)
             (i32.const 48)
            )
            (i32.eqz
             (i32.and
              (local.get $7)
              (i32.const 16)
             )
            )
           )
          )
          (i32.xor
           (local.get $1)
           (i32.const 96)
          )
          (i32.eqz
           (i32.and
            (local.get $7)
            (i32.const 32)
           )
          )
         )
        )
        (i32.xor
         (local.get $1)
         (i32.const -64)
        )
        (i32.eqz
         (i32.and
          (local.get $7)
          (i32.const 64)
         )
        )
       )
      )
      (local.set $12
       (select
        (local.tee $1
         (select
          (local.tee $1
           (select
            (local.tee $1
             (select
              (local.tee $1
               (select
                (local.tee $1
                 (select
                  (local.tee $1
                   (select
                    (i32.const 3)
                    (i32.const 0)
                    (i32.and
                     (local.tee $3
                      (i32.and
                       (local.tee $11
                        (i32.load8_s
                         (local.tee $15
                          (i32.add
                           (local.get $0)
                           (i32.or
                            (local.get $6)
                            (i32.const 3)
                           )
                          )
                         )
                        )
                       )
                       (i32.const 255)
                      )
                     )
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.xor
                   (local.get $1)
                   (i32.const 6)
                  )
                  (i32.eqz
                   (i32.and
                    (local.get $3)
                    (i32.const 2)
                   )
                  )
                 )
                )
                (i32.xor
                 (local.get $1)
                 (i32.const 12)
                )
                (i32.eqz
                 (i32.and
                  (local.get $3)
                  (i32.const 4)
                 )
                )
               )
              )
              (i32.xor
               (local.get $1)
               (i32.const 24)
              )
              (i32.eqz
               (i32.and
                (local.get $3)
                (i32.const 8)
               )
              )
             )
            )
            (i32.xor
             (local.get $1)
             (i32.const 48)
            )
            (i32.eqz
             (i32.and
              (local.get $3)
              (i32.const 16)
             )
            )
           )
          )
          (i32.xor
           (local.get $1)
           (i32.const 96)
          )
          (i32.eqz
           (i32.and
            (local.get $3)
            (i32.const 32)
           )
          )
         )
        )
        (i32.xor
         (local.get $1)
         (i32.const -64)
        )
        (i32.eqz
         (i32.and
          (local.get $3)
          (i32.const 64)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.get $0)
        (local.get $6)
       )
       (i32.xor
        (select
         (local.tee $1
          (select
           (local.tee $1
            (select
             (local.tee $1
              (select
               (local.tee $1
                (select
                 (local.tee $1
                  (select
                   (local.tee $1
                    (select
                     (local.tee $1
                      (select
                       (i32.const 3)
                       (i32.const 0)
                       (i32.and
                        (local.tee $4
                         (i32.and
                          (local.tee $17
                           (i32.load8_s
                            (local.tee $8
                             (i32.add
                              (local.get $0)
                              (i32.or
                               (local.get $6)
                               (i32.const 1)
                              )
                             )
                            )
                           )
                          )
                          (i32.const 255)
                         )
                        )
                        (i32.const 1)
                       )
                      )
                     )
                     (i32.xor
                      (local.get $1)
                      (i32.const 6)
                     )
                     (i32.eqz
                      (i32.and
                       (local.get $4)
                       (i32.const 2)
                      )
                     )
                    )
                   )
                   (i32.xor
                    (local.get $1)
                    (i32.const 12)
                   )
                   (i32.eqz
                    (i32.and
                     (local.get $4)
                     (i32.const 4)
                    )
                   )
                  )
                 )
                 (i32.xor
                  (local.get $1)
                  (i32.const 24)
                 )
                 (i32.eqz
                  (i32.and
                   (local.get $4)
                   (i32.const 8)
                  )
                 )
                )
               )
               (i32.xor
                (local.get $1)
                (i32.const 48)
               )
               (i32.eqz
                (i32.and
                 (local.get $4)
                 (i32.const 16)
                )
               )
              )
             )
             (i32.xor
              (local.get $1)
              (i32.const 96)
             )
             (i32.eqz
              (i32.and
               (local.get $4)
               (i32.const 32)
              )
             )
            )
           )
           (i32.xor
            (local.get $1)
            (i32.const -64)
           )
           (i32.eqz
            (i32.and
             (local.get $4)
             (i32.const 64)
            )
           )
          )
         )
         (i32.xor
          (local.get $1)
          (i32.const -101)
         )
         (local.tee $9
          (i32.eqz
           (i32.and
            (local.get $4)
            (i32.const 128)
           )
          )
         )
        )
        (i32.xor
         (i32.xor
          (local.get $11)
          (local.get $16)
         )
         (select
          (local.tee $1
           (i32.shl
            (i32.and
             (local.tee $5
              (i32.and
               (local.get $13)
               (i32.const 255)
              )
             )
             (i32.const 127)
            )
            (i32.const 1)
           )
          )
          (i32.xor
           (local.get $1)
           (i32.const 27)
          )
          (local.tee $2
           (i32.eqz
            (i32.and
             (local.get $5)
             (i32.const 128)
            )
           )
          )
         )
        )
       )
      )
      (i32.store8
       (local.get $8)
       (i32.xor
        (i32.xor
         (i32.xor
          (local.get $11)
          (local.get $13)
         )
         (select
          (local.tee $1
           (i32.shl
            (i32.and
             (local.get $4)
             (i32.const 127)
            )
            (i32.const 1)
           )
          )
          (i32.xor
           (local.get $1)
           (i32.const 27)
          )
          (local.get $9)
         )
        )
        (select
         (local.get $10)
         (i32.xor
          (local.get $10)
          (i32.const -101)
         )
         (local.tee $8
          (i32.eqz
           (i32.and
            (local.get $7)
            (i32.const 128)
           )
          )
         )
        )
       )
      )
      (i32.store8
       (local.get $14)
       (i32.xor
        (i32.xor
         (i32.xor
          (local.get $13)
          (local.get $17)
         )
         (select
          (local.tee $1
           (i32.shl
            (i32.and
             (local.get $7)
             (i32.const 127)
            )
            (i32.const 1)
           )
          )
          (i32.xor
           (local.get $1)
           (i32.const 27)
          )
          (local.get $8)
         )
        )
        (select
         (local.get $12)
         (i32.xor
          (local.get $12)
          (i32.const -101)
         )
         (local.tee $9
          (i32.eqz
           (i32.and
            (local.get $3)
            (i32.const 128)
           )
          )
         )
        )
       )
      )
      (i32.store8
       (local.get $15)
       (i32.xor
        (select
         (local.tee $1
          (select
           (local.tee $1
            (select
             (local.tee $1
              (select
               (local.tee $1
                (select
                 (local.tee $1
                  (select
                   (local.tee $1
                    (select
                     (local.tee $1
                      (select
                       (i32.const 3)
                       (i32.const 0)
                       (i32.and
                        (local.get $5)
                        (i32.const 1)
                       )
                      )
                     )
                     (i32.xor
                      (local.get $1)
                      (i32.const 6)
                     )
                     (i32.eqz
                      (i32.and
                       (local.get $5)
                       (i32.const 2)
                      )
                     )
                    )
                   )
                   (i32.xor
                    (local.get $1)
                    (i32.const 12)
                   )
                   (i32.eqz
                    (i32.and
                     (local.get $5)
                     (i32.const 4)
                    )
                   )
                  )
                 )
                 (i32.xor
                  (local.get $1)
                  (i32.const 24)
                 )
                 (i32.eqz
                  (i32.and
                   (local.get $5)
                   (i32.const 8)
                  )
                 )
                )
               )
               (i32.xor
                (local.get $1)
                (i32.const 48)
               )
               (i32.eqz
                (i32.and
                 (local.get $5)
                 (i32.const 16)
                )
               )
              )
             )
             (i32.xor
              (local.get $1)
              (i32.const 96)
             )
             (i32.eqz
              (i32.and
               (local.get $5)
               (i32.const 32)
              )
             )
            )
           )
           (i32.xor
            (local.get $1)
            (i32.const -64)
           )
           (i32.eqz
            (i32.and
             (local.get $5)
             (i32.const 64)
            )
           )
          )
         )
         (i32.xor
          (local.get $1)
          (i32.const -101)
         )
         (local.get $2)
        )
        (i32.xor
         (i32.xor
          (local.get $16)
          (local.get $17)
         )
         (select
          (local.tee $1
           (i32.shl
            (i32.and
             (local.get $3)
             (i32.const 127)
            )
            (i32.const 1)
           )
          )
          (i32.xor
           (local.get $1)
           (i32.const 27)
          )
          (local.get $9)
         )
        )
       )
      )
      (if
       (i32.lt_u
        (local.tee $6
         (i32.add
          (local.get $6)
          (i32.const 4)
         )
        )
        (i32.const 16)
       )
       (block
        (local.set $13
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.get $6)
          )
         )
        )
        (br $while-in1)
       )
      )
     )
     (i32.store8
      (local.get $0)
      (local.tee $13
       (i32.xor
        (i32.load8_s
         (i32.add
          (local.tee $2
           (i32.shl
            (local.get $33)
            (i32.const 4)
           )
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $0)
        )
       )
      )
     )
     (i32.store8
      (local.get $18)
      (local.tee $8
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 1)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $18)
        )
       )
      )
     )
     (i32.store8
      (local.get $19)
      (local.tee $9
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 2)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $19)
        )
       )
      )
     )
     (i32.store8
      (local.get $20)
      (local.tee $1
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 3)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $20)
        )
       )
      )
     )
     (i32.store8
      (local.get $21)
      (local.tee $6
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 4)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $21)
        )
       )
      )
     )
     (i32.store8
      (local.get $22)
      (local.tee $3
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 5)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $22)
        )
       )
      )
     )
     (i32.store8
      (local.get $23)
      (local.tee $4
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 6)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $23)
        )
       )
      )
     )
     (i32.store8
      (local.get $24)
      (local.tee $5
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 7)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $24)
        )
       )
      )
     )
     (i32.store8
      (local.get $25)
      (local.tee $16
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 8)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $25)
        )
       )
      )
     )
     (i32.store8
      (local.get $26)
      (local.tee $10
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 9)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $26)
        )
       )
      )
     )
     (i32.store8
      (local.get $27)
      (local.tee $11
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 10)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $27)
        )
       )
      )
     )
     (i32.store8
      (local.get $28)
      (local.tee $12
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 11)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $28)
        )
       )
      )
     )
     (i32.store8
      (local.get $29)
      (local.tee $17
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 12)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $29)
        )
       )
      )
     )
     (i32.store8
      (local.get $30)
      (local.tee $14
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 13)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $30)
        )
       )
      )
     )
     (i32.store8
      (local.get $31)
      (local.tee $15
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 14)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $31)
        )
       )
      )
     )
     (i32.store8
      (local.get $32)
      (local.tee $2
       (i32.xor
        (i32.load8_s
         (i32.add
          (i32.or
           (local.get $2)
           (i32.const 15)
          )
          (i32.const 26328)
         )
        )
        (i32.load8_s
         (local.get $32)
        )
       )
      )
     )
     (local.set $33
      (i32.add
       (local.get $33)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store8
   (local.get $0)
   (i32.xor
    (i32.load8_s
     (i32.const 26488)
    )
    (local.get $13)
   )
  )
  (i32.store8
   (local.get $18)
   (i32.xor
    (local.get $3)
    (i32.load8_s
     (i32.const 26489)
    )
   )
  )
  (i32.store8
   (local.get $19)
   (i32.xor
    (local.get $11)
    (i32.load8_s
     (i32.const 26490)
    )
   )
  )
  (i32.store8
   (local.get $20)
   (i32.xor
    (local.get $8)
    (i32.load8_s
     (i32.const 26491)
    )
   )
  )
  (i32.store8
   (local.get $21)
   (i32.xor
    (local.get $9)
    (i32.load8_s
     (i32.const 26492)
    )
   )
  )
  (i32.store8
   (local.get $22)
   (i32.xor
    (local.get $10)
    (i32.load8_s
     (i32.const 26493)
    )
   )
  )
  (i32.store8
   (local.get $23)
   (i32.xor
    (local.get $15)
    (i32.load8_s
     (i32.const 26494)
    )
   )
  )
  (i32.store8
   (local.get $24)
   (i32.xor
    (i32.load8_s
     (i32.const 26495)
    )
    (local.get $7)
   )
  )
  (i32.store8
   (local.get $25)
   (i32.xor
    (local.get $1)
    (i32.load8_s
     (i32.const 26496)
    )
   )
  )
  (i32.store8
   (local.get $26)
   (i32.xor
    (local.get $14)
    (i32.load8_s
     (i32.const 26497)
    )
   )
  )
  (i32.store8
   (local.get $27)
   (i32.xor
    (i32.load8_s
     (i32.const 26498)
    )
    (local.get $35)
   )
  )
  (i32.store8
   (local.get $28)
   (i32.xor
    (local.get $5)
    (i32.load8_s
     (i32.const 26499)
    )
   )
  )
  (i32.store8
   (local.get $29)
   (i32.xor
    (local.get $6)
    (i32.load8_s
     (i32.const 26500)
    )
   )
  )
  (i32.store8
   (local.get $30)
   (i32.xor
    (i32.load8_s
     (i32.const 26501)
    )
    (local.get $34)
   )
  )
  (i32.store8
   (local.get $31)
   (i32.xor
    (local.get $4)
    (i32.load8_s
     (i32.const 26502)
    )
   )
  )
  (i32.store8
   (local.get $32)
   (i32.xor
    (local.get $12)
    (i32.load8_s
     (i32.const 26503)
    )
   )
  )
 )
 (func $_aes128_offsetCtr (; 45 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.le_s
    (local.tee $3
     (i32.mul
      (local.get $1)
      (i32.add
       (local.get $0)
       (i32.const -1)
      )
     )
    )
    (i32.const 0)
   )
   (return)
  )
  (local.set $0
   (i32.const 0)
  )
  (local.set $1
   (i32.load8_s
    (i32.const 26519)
   )
  )
  (loop $while-in
   (if
    (i32.eqz
     (local.tee $1
      (i32.shr_s
       (i32.shl
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
     )
    )
    (block
     (i32.store8
      (i32.const 26518)
      (local.tee $2
       (i32.shr_s
        (i32.shl
         (i32.add
          (i32.load8_s
           (i32.const 26518)
          )
          (i32.const 1)
         )
         (i32.const 24)
        )
        (i32.const 24)
       )
      )
     )
     (if
      (i32.eqz
       (local.get $2)
      )
      (block
       (i32.store8
        (i32.const 26517)
        (local.tee $2
         (i32.shr_s
          (i32.shl
           (i32.add
            (i32.load8_s
             (i32.const 26517)
            )
            (i32.const 1)
           )
           (i32.const 24)
          )
          (i32.const 24)
         )
        )
       )
       (if
        (i32.eqz
         (local.get $2)
        )
        (i32.store8
         (i32.const 26516)
         (i32.add
          (i32.load8_s
           (i32.const 26516)
          )
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $3)
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
    )
   )
  )
  (i32.store8
   (i32.const 26519)
   (local.get $1)
  )
 )
 (func $_aes128_setCtrBlk (; 46 ;) (; has Stack IR ;)
  (i32.store8
   (i32.const 26712)
   (i32.load8_s
    (i32.const 17256)
   )
  )
  (i32.store8
   (i32.const 26713)
   (i32.load8_s
    (i32.const 17257)
   )
  )
  (i32.store8
   (i32.const 26714)
   (i32.load8_s
    (i32.const 17258)
   )
  )
  (i32.store8
   (i32.const 26715)
   (i32.load8_s
    (i32.const 17259)
   )
  )
  (i32.store8
   (i32.const 26716)
   (i32.load8_s
    (i32.const 17260)
   )
  )
  (i32.store8
   (i32.const 26717)
   (i32.load8_s
    (i32.const 17261)
   )
  )
  (i32.store8
   (i32.const 26718)
   (i32.load8_s
    (i32.const 17262)
   )
  )
  (i32.store8
   (i32.const 26719)
   (i32.load8_s
    (i32.const 17263)
   )
  )
  (i32.store8
   (i32.const 26720)
   (i32.load8_s
    (i32.const 17264)
   )
  )
  (i32.store8
   (i32.const 26721)
   (i32.load8_s
    (i32.const 17265)
   )
  )
  (i32.store8
   (i32.const 26722)
   (i32.load8_s
    (i32.const 17266)
   )
  )
  (i32.store8
   (i32.const 26723)
   (i32.load8_s
    (i32.const 17267)
   )
  )
  (i32.store8
   (i32.const 26724)
   (i32.load8_s
    (i32.const 17268)
   )
  )
  (i32.store8
   (i32.const 26725)
   (i32.load8_s
    (i32.const 17269)
   )
  )
  (i32.store8
   (i32.const 26726)
   (i32.load8_s
    (i32.const 17270)
   )
  )
  (i32.store8
   (i32.const 26727)
   (i32.load8_s
    (i32.const 17271)
   )
  )
 )
 (func $_dump (; 47 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (call $_printf
   (i32.const 17361)
   (local.get $2)
  )
  (local.set $0
   (i32.const 768)
  )
  (loop $while-in
   (i32.store
    (local.get $3)
    (i32.load8_u
     (i32.add
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (i32.store offset=4
    (local.get $3)
    (select
     (i32.const 17366)
     (i32.const 17369)
     (i32.and
      (i32.eq
       (i32.and
        (local.get $0)
        (i32.const 15)
       )
       (i32.const 15)
      )
      (i32.ne
       (local.get $0)
       (i32.const 831)
      )
     )
    )
   )
   (call $_printf
    (i32.const 17371)
    (local.get $3)
   )
   (br_if $while-in
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 832)
    )
   )
  )
  (call $_printf
   (i32.const 17378)
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_aes128_encrypt_progressive (; 48 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.gt_s
      (local.get $2)
      (i32.const 0)
     )
     (i32.gt_s
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (local.set $5
   (local.get $3)
  )
  (local.set $6
   (i32.shl
    (local.get $1)
    (i32.const 2)
   )
  )
  (local.set $0
   (i32.const 16)
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in
   (local.set $4
    (i32.const 0)
   )
   (loop $while-in1
    (local.set $0
     (if (result i32)
      (i32.eq
       (local.get $0)
       (i32.const 16)
      )
      (block (result i32)
       (call $_get_next_blk_in_keystream
        (local.get $5)
       )
       (i32.const 0)
      )
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
    )
    (br_if $while-in1
     (i32.lt_s
      (local.tee $4
       (i32.add
        (local.get $4)
        (i32.const 1)
       )
      )
      (local.get $6)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.get $2)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_get_next_blk_in_keystream (; 49 ;) (; has Stack IR ;) (param $0 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return)
  )
  (i32.store8
   (local.get $0)
   (i32.load8_s
    (i32.const 26504)
   )
  )
  (i32.store8 offset=1
   (local.get $0)
   (i32.load8_s
    (i32.const 26505)
   )
  )
  (i32.store8 offset=2
   (local.get $0)
   (i32.load8_s
    (i32.const 26506)
   )
  )
  (i32.store8 offset=3
   (local.get $0)
   (i32.load8_s
    (i32.const 26507)
   )
  )
  (i32.store8 offset=4
   (local.get $0)
   (i32.load8_s
    (i32.const 26508)
   )
  )
  (i32.store8 offset=5
   (local.get $0)
   (i32.load8_s
    (i32.const 26509)
   )
  )
  (i32.store8 offset=6
   (local.get $0)
   (i32.load8_s
    (i32.const 26510)
   )
  )
  (i32.store8 offset=7
   (local.get $0)
   (i32.load8_s
    (i32.const 26511)
   )
  )
  (i32.store8 offset=8
   (local.get $0)
   (i32.load8_s
    (i32.const 26512)
   )
  )
  (i32.store8 offset=9
   (local.get $0)
   (i32.load8_s
    (i32.const 26513)
   )
  )
  (i32.store8 offset=10
   (local.get $0)
   (i32.load8_s
    (i32.const 26514)
   )
  )
  (i32.store8 offset=11
   (local.get $0)
   (i32.load8_s
    (i32.const 26515)
   )
  )
  (i32.store8 offset=12
   (local.get $0)
   (i32.load8_s
    (i32.const 26516)
   )
  )
  (i32.store8 offset=13
   (local.get $0)
   (i32.load8_s
    (i32.const 26517)
   )
  )
  (i32.store8 offset=14
   (local.get $0)
   (i32.load8_s
    (i32.const 26518)
   )
  )
  (i32.store8 offset=15
   (local.get $0)
   (i32.load8_s
    (i32.const 26519)
   )
  )
  (call $_aes_encrypt_next_block
   (local.get $0)
  )
  (i32.store8
   (i32.const 26519)
   (i32.add
    (local.tee $0
     (i32.load8_s
      (i32.const 26519)
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.ne
    (local.get $0)
    (i32.const -1)
   )
   (return)
  )
  (i32.store8
   (i32.const 26518)
   (i32.add
    (local.tee $0
     (i32.load8_s
      (i32.const 26518)
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.ne
    (local.get $0)
    (i32.const -1)
   )
   (return)
  )
  (i32.store8
   (i32.const 26517)
   (i32.add
    (local.tee $0
     (i32.load8_s
      (i32.const 26517)
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.ne
    (local.get $0)
    (i32.const -1)
   )
   (return)
  )
  (i32.store8
   (i32.const 26516)
   (i32.add
    (i32.load8_s
     (i32.const 26516)
    )
    (i32.const 1)
   )
  )
 )
 (func $_png_sig_cmp (; 50 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.gt_u
    (local.get $2)
    (i32.const 8)
   )
   (local.set $2
    (i32.const 8)
   )
   (if
    (i32.eqz
     (local.get $2)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const 7)
   )
   (return
    (i32.const 0)
   )
  )
  (call $_memcmp
   (i32.add
    (local.get $0)
    (local.get $1)
   )
   (i32.add
    (local.get $1)
    (i32.const 17381)
   )
   (select
    (i32.sub
     (i32.const 8)
     (local.get $1)
    )
    (local.get $2)
    (i32.gt_u
     (i32.add
      (local.get $1)
      (local.get $2)
     )
     (i32.const 8)
    )
   )
  )
 )
 (func $_png_zalloc (; 51 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (i32.load
    (local.tee $3
     (i32.add
      (local.get $0)
      (i32.const 200)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.or
    (local.get $4)
    (i32.const 1048576)
   )
  )
  (local.set $0
   (call $_png_malloc
    (local.get $0)
    (local.tee $1
     (i32.mul
      (local.get $1)
      (local.get $2)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (local.get $4)
  )
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (local.get $0)
   )
  )
  (if (result i32)
   (i32.gt_u
    (local.get $1)
    (i32.const 32768)
   )
   (block (result i32)
    (drop
     (call $_memset
      (local.get $0)
      (i32.const 0)
      (i32.const 32768)
     )
    )
    (drop
     (call $_memset
      (i32.add
       (local.get $0)
       (i32.const 32768)
      )
      (i32.const 0)
      (i32.add
       (local.get $1)
       (i32.const -32768)
      )
     )
    )
    (local.get $0)
   )
   (block (result i32)
    (drop
     (call $_memset
      (local.get $0)
      (i32.const 0)
      (local.get $1)
     )
    )
    (local.get $0)
   )
  )
 )
 (func $_png_zfree (; 52 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $_png_free
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_png_reset_crc (; 53 ;) (; has Stack IR ;) (param $0 i32)
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 364)
   )
   (call $_crc32
    (i32.const 0)
    (i32.const 0)
    (i32.const 0)
   )
  )
 )
 (func $_png_calculate_crc (; 54 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local.set $3
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 200)
    )
   )
  )
  (if
   (i32.and
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 376)
     )
    )
    (i32.const 32)
   )
   (if
    (i32.eq
     (i32.and
      (local.get $3)
      (i32.const 768)
     )
     (i32.const 768)
    )
    (return)
   )
   (if
    (i32.and
     (local.get $3)
     (i32.const 2048)
    )
    (return)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 364)
    )
   )
   (call $_crc32
    (i32.load
     (local.get $0)
    )
    (local.get $1)
    (local.get $2)
   )
  )
 )
 (func $_png_create_info_struct (; 55 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (local.tee $0
     (call $_png_create_struct_2
      (i32.const 2)
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 676)
       )
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 672)
       )
      )
     )
    )
   )
   (return
    (local.get $0)
   )
  )
  (drop
   (call $_memset
    (local.get $0)
    (i32.const 0)
    (i32.const 288)
   )
  )
  (local.get $0)
 )
 (func $_png_free_data (; 56 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (if
   (i32.and
    (i32.load
     (local.tee $6
      (i32.add
       (local.get $1)
       (i32.const 184)
      )
     )
    )
    (i32.and
     (local.get $2)
     (i32.const 16384)
    )
   )
   (block $do-once
    (if
     (i32.ne
      (local.get $3)
      (i32.const -1)
     )
     (block
      (br_if $do-once
       (i32.eqz
        (local.tee $5
         (i32.load
          (local.tee $4
           (i32.add
            (local.get $1)
            (i32.const 56)
           )
          )
         )
        )
       )
      )
      (br_if $do-once
       (i32.eqz
        (local.tee $5
         (i32.load
          (i32.add
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 4)
            )
            (local.get $5)
           )
           (i32.const 4)
          )
         )
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (local.get $5)
      )
      (i32.store
       (i32.add
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.shl
          (local.get $3)
          (i32.const 4)
         )
        )
        (i32.const 4)
       )
       (i32.const 0)
      )
      (br $do-once)
     )
    )
    (if
     (i32.gt_s
      (i32.load
       (local.tee $5
        (i32.add
         (local.get $1)
         (i32.const 48)
        )
       )
      )
      (i32.const 0)
     )
     (loop $while-in
      (call $_png_free_data
       (local.get $0)
       (local.get $1)
       (i32.const 16384)
       (local.get $4)
      )
      (br_if $while-in
       (i32.lt_s
        (local.tee $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (i32.load
         (local.get $5)
        )
       )
      )
     )
    )
    (call $_png_free
     (local.get $0)
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $1)
        (i32.const 56)
       )
      )
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    (i32.store
     (local.get $5)
     (i32.const 0)
    )
   )
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (local.get $6)
     )
    )
    (i32.and
     (local.get $2)
     (i32.const 8192)
    )
   )
   (block
    (call $_png_free
     (local.get $0)
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $1)
        (i32.const 76)
       )
      )
     )
    )
    (i32.store
     (local.tee $5
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.and
      (i32.load
       (local.get $5)
      )
      (i32.const -17)
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    (local.set $4
     (i32.load
      (local.get $6)
     )
    )
   )
  )
  (if
   (i32.and
    (local.tee $5
     (i32.and
      (local.get $2)
      (local.get $4)
     )
    )
    (i32.const 256)
   )
   (i32.store
    (local.tee $7
     (i32.add
      (local.get $1)
      (i32.const 8)
     )
    )
    (i32.and
     (i32.load
      (local.get $7)
     )
     (i32.const -16385)
    )
   )
  )
  (if
   (i32.and
    (local.get $5)
    (i32.const 128)
   )
   (block
    (call $_png_free
     (local.get $0)
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $1)
        (i32.const 160)
       )
      )
     )
    )
    (call $_png_free
     (local.get $0)
     (i32.load
      (local.tee $5
       (i32.add
        (local.get $1)
        (i32.const 172)
       )
      )
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    (i32.store
     (local.get $5)
     (i32.const 0)
    )
    (if
     (local.tee $4
      (i32.load
       (local.tee $7
        (i32.add
         (local.get $1)
         (i32.const 176)
        )
       )
      )
     )
     (block
      (if
       (i32.load8_s
        (local.tee $8
         (i32.add
          (local.get $1)
          (i32.const 181)
         )
        )
       )
       (block
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in1
         (call $_png_free
          (local.get $0)
          (i32.load
           (i32.add
            (i32.shl
             (local.get $5)
             (i32.const 2)
            )
            (local.get $4)
           )
          )
         )
         (i32.store
          (i32.add
           (i32.load
            (local.get $7)
           )
           (i32.shl
            (local.get $5)
            (i32.const 2)
           )
          )
          (i32.const 0)
         )
         (local.set $4
          (i32.load
           (local.get $7)
          )
         )
         (br_if $while-in1
          (i32.lt_u
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (i32.load8_u
            (local.get $8)
           )
          )
         )
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (local.get $4)
      )
      (i32.store
       (local.get $7)
       (i32.const 0)
      )
     )
    )
    (i32.store
     (local.tee $4
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.and
      (i32.load
       (local.get $4)
      )
      (i32.const -1025)
     )
    )
    (local.set $4
     (i32.load
      (local.get $6)
     )
    )
   )
  )
  (if
   (i32.and
    (i32.and
     (local.get $2)
     (i32.const 16)
    )
    (local.get $4)
   )
   (block
    (call $_png_free
     (local.get $0)
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $1)
        (i32.const 196)
       )
      )
     )
    )
    (call $_png_free
     (local.get $0)
     (i32.load
      (local.tee $5
       (i32.add
        (local.get $1)
        (i32.const 200)
       )
      )
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    (i32.store
     (local.get $5)
     (i32.const 0)
    )
    (i32.store
     (local.tee $4
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.and
      (i32.load
       (local.get $4)
      )
      (i32.const -4097)
     )
    )
    (local.set $4
     (i32.load
      (local.get $6)
     )
    )
   )
  )
  (if
   (i32.and
    (i32.and
     (local.get $2)
     (i32.const 32)
    )
    (local.get $4)
   )
   (block $do-once2
    (if
     (i32.ne
      (local.get $3)
      (i32.const -1)
     )
     (block
      (br_if $do-once2
       (i32.eqz
        (local.tee $5
         (i32.load
          (local.tee $4
           (i32.add
            (local.get $1)
            (i32.const 212)
           )
          )
         )
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 4)
         )
         (local.get $5)
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (i32.load
        (i32.add
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.shl
           (local.get $3)
           (i32.const 4)
          )
         )
         (i32.const 8)
        )
       )
      )
      (i32.store
       (i32.add
        (local.tee $4
         (i32.load
          (local.get $4)
         )
        )
        (i32.shl
         (local.get $3)
         (i32.const 4)
        )
       )
       (i32.const 0)
      )
      (i32.store
       (i32.add
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 4)
         )
         (local.get $4)
        )
        (i32.const 8)
       )
       (i32.const 0)
      )
      (br $do-once2)
     )
    )
    (if
     (local.tee $4
      (i32.load
       (local.tee $5
        (i32.add
         (local.get $1)
         (i32.const 216)
        )
       )
      )
     )
     (block
      (if
       (i32.gt_s
        (local.get $4)
        (i32.const 0)
       )
       (block
        (local.set $4
         (i32.const 0)
        )
        (loop $while-in5
         (call $_png_free_data
          (local.get $0)
          (local.get $1)
          (i32.const 32)
          (local.get $4)
         )
         (br_if $while-in5
          (i32.lt_s
           (local.tee $4
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (i32.load
        (local.tee $4
         (i32.add
          (local.get $1)
          (i32.const 212)
         )
        )
       )
      )
      (i32.store
       (local.get $4)
       (i32.const 0)
      )
      (i32.store
       (local.get $5)
       (i32.const 0)
      )
     )
    )
    (i32.store
     (local.tee $4
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.and
      (i32.load
       (local.get $4)
      )
      (i32.const -8193)
     )
    )
   )
  )
  (if
   (i32.and
    (i32.load
     (local.get $6)
    )
    (i32.and
     (local.get $2)
     (i32.const 512)
    )
   )
   (block $do-once6
    (if
     (i32.ne
      (local.get $3)
      (i32.const -1)
     )
     (block
      (br_if $do-once6
       (i32.eqz
        (local.tee $5
         (i32.load
          (local.tee $4
           (i32.add
            (local.get $1)
            (i32.const 188)
           )
          )
         )
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (i32.load
        (i32.add
         (i32.add
          (i32.mul
           (local.get $3)
           (i32.const 20)
          )
          (local.get $5)
         )
         (i32.const 8)
        )
       )
      )
      (i32.store
       (i32.add
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.mul
          (local.get $3)
          (i32.const 20)
         )
        )
        (i32.const 8)
       )
       (i32.const 0)
      )
      (br $do-once6)
     )
    )
    (if
     (local.tee $4
      (i32.load
       (local.tee $5
        (i32.add
         (local.get $1)
         (i32.const 192)
        )
       )
      )
     )
     (block
      (if
       (i32.gt_s
        (local.get $4)
        (i32.const 0)
       )
       (block
        (local.set $4
         (i32.const 0)
        )
        (loop $while-in9
         (call $_png_free_data
          (local.get $0)
          (local.get $1)
          (i32.const 512)
          (local.get $4)
         )
         (br_if $while-in9
          (i32.lt_s
           (local.tee $4
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (i32.load
        (local.tee $4
         (i32.add
          (local.get $1)
          (i32.const 188)
         )
        )
       )
      )
      (i32.store
       (local.get $4)
       (i32.const 0)
      )
      (i32.store
       (local.get $5)
       (i32.const 0)
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (local.get $6)
     )
    )
    (i32.and
     (local.get $2)
     (i32.const 8)
    )
   )
   (block
    (call $_png_free
     (local.get $0)
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $1)
        (i32.const 124)
       )
      )
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    (i32.store
     (local.tee $4
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.and
      (i32.load
       (local.get $4)
      )
      (i32.const -65)
     )
    )
    (local.set $4
     (i32.load
      (local.get $6)
     )
    )
   )
  )
  (if
   (i32.and
    (i32.and
     (local.get $2)
     (i32.const 4096)
    )
    (local.get $4)
   )
   (block
    (call $_png_free
     (local.get $0)
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $1)
        (i32.const 16)
       )
      )
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    (i32.store
     (local.tee $4
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.and
      (i32.load
       (local.get $4)
      )
      (i32.const -9)
     )
    )
    (i32.store16
     (i32.add
      (local.get $1)
      (i32.const 20)
     )
     (i32.const 0)
    )
    (local.set $4
     (i32.load
      (local.get $6)
     )
    )
   )
  )
  (if
   (i32.and
    (i32.and
     (local.get $2)
     (i32.const 64)
    )
    (local.get $4)
   )
   (block
    (if
     (local.tee $4
      (i32.load
       (local.tee $7
        (i32.add
         (local.get $1)
         (i32.const 248)
        )
       )
      )
     )
     (block
      (if
       (i32.gt_s
        (i32.load
         (local.tee $8
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
        )
        (i32.const 0)
       )
       (block
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in11
         (call $_png_free
          (local.get $0)
          (i32.load
           (i32.add
            (i32.shl
             (local.get $5)
             (i32.const 2)
            )
            (local.get $4)
           )
          )
         )
         (i32.store
          (i32.add
           (i32.load
            (local.get $7)
           )
           (i32.shl
            (local.get $5)
            (i32.const 2)
           )
          )
          (i32.const 0)
         )
         (local.set $4
          (i32.load
           (local.get $7)
          )
         )
         (br_if $while-in11
          (i32.lt_s
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (i32.load
            (local.get $8)
           )
          )
         )
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (local.get $4)
      )
      (i32.store
       (local.get $7)
       (i32.const 0)
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.and
      (i32.load
       (local.get $0)
      )
      (i32.const -32769)
     )
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.and
    (i32.load
     (local.get $6)
    )
    (i32.xor
     (select
      (local.get $2)
      (i32.and
       (local.get $2)
       (i32.const -16929)
      )
      (i32.eq
       (local.get $3)
       (i32.const -1)
      )
     )
     (i32.const -1)
    )
   )
  )
 )
 (func $_png_info_destroy (; 57 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (call $_png_free_data
   (local.get $0)
   (local.get $1)
   (i32.const 32767)
   (i32.const -1)
  )
  (if
   (i32.eqz
    (i32.load
     (local.tee $2
      (i32.add
       (local.get $0)
       (i32.const 636)
      )
     )
    )
   )
   (block
    (drop
     (call $_memset
      (local.get $1)
      (i32.const 0)
      (i32.const 288)
     )
    )
    (return)
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (local.tee $0
     (i32.add
      (local.get $0)
      (i32.const 640)
     )
    )
   )
  )
  (i32.store
   (local.get $0)
   (i32.const 0)
  )
  (i32.store
   (local.get $2)
   (i32.const 0)
  )
  (drop
   (call $_memset
    (local.get $1)
    (i32.const 0)
    (i32.const 288)
   )
  )
 )
 (func $_png_handle_as_unknown (; 58 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.eqz
    (i32.or
     (local.get $0)
     (local.get $1)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.lt_s
    (local.tee $2
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 636)
      )
     )
    )
    (i32.const 1)
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $3
   (local.get $2)
  )
  (local.set $0
   (i32.add
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 640)
     )
    )
    (i32.mul
     (local.get $2)
     (i32.const 5)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in
     (if
      (call $_memcmp
       (local.get $1)
       (local.tee $2
        (i32.add
         (local.get $0)
         (i32.const -5)
        )
       )
       (i32.const 4)
      )
      (if
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const -1)
        )
       )
       (block
        (local.set $0
         (local.get $2)
        )
        (br $while-in)
       )
       (block
        (local.set $0
         (i32.const 0)
        )
        (br $__rjti$0)
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (return
    (local.get $0)
   )
  )
  (i32.load8_u
   (i32.add
    (local.get $0)
    (i32.const -1)
   )
  )
 )
 (func $_png_init_mmx_flags (; 59 ;) (; has Stack IR ;) (param $0 i32)
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 664)
   )
   (i32.const 0)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 661)
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 668)
    )
   )
   (i32.and
    (i32.load
     (local.get $0)
    )
    (i32.const -256)
   )
  )
 )
 (func $_png_error (; 60 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 200)
      )
     )
    )
    (i32.const 786432)
   )
   (block $do-once
    (if
     (i32.ne
      (i32.load8_s
       (local.get $1)
      )
      (i32.const 35)
     )
     (block
      (br_if $do-once
       (i32.eqz
        (i32.and
         (local.get $4)
         (i32.const 524288)
        )
       )
      )
      (i32.store8
       (local.get $2)
       (i32.const 48)
      )
      (i32.store8
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
       (i32.const 0)
      )
      (local.set $1
       (local.get $2)
      )
      (br $do-once)
     )
    )
    (local.set $3
     (if (result i32)
      (i32.eq
       (i32.load8_s
        (local.tee $5
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
       (i32.const 32)
      )
      (i32.const 1)
      (if (result i32)
       (i32.eq
        (i32.load8_s
         (i32.add
          (local.get $1)
          (i32.const 2)
         )
        )
        (i32.const 32)
       )
       (i32.const 2)
       (if (result i32)
        (i32.eq
         (i32.load8_s
          (i32.add
           (local.get $1)
           (i32.const 3)
          )
         )
         (i32.const 32)
        )
        (i32.const 3)
        (if (result i32)
         (i32.eq
          (i32.load8_s
           (i32.add
            (local.get $1)
            (i32.const 4)
           )
          )
          (i32.const 32)
         )
         (i32.const 4)
         (if (result i32)
          (i32.eq
           (i32.load8_s
            (i32.add
             (local.get $1)
             (i32.const 5)
            )
           )
           (i32.const 32)
          )
          (i32.const 5)
          (if (result i32)
           (i32.eq
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 6)
             )
            )
            (i32.const 32)
           )
           (i32.const 6)
           (if (result i32)
            (i32.eq
             (i32.load8_s
              (i32.add
               (local.get $1)
               (i32.const 7)
              )
             )
             (i32.const 32)
            )
            (i32.const 7)
            (if (result i32)
             (i32.eq
              (i32.load8_s
               (i32.add
                (local.get $1)
                (i32.const 8)
               )
              )
              (i32.const 32)
             )
             (i32.const 8)
             (if (result i32)
              (i32.eq
               (i32.load8_s
                (i32.add
                 (local.get $1)
                 (i32.const 9)
                )
               )
               (i32.const 32)
              )
              (i32.const 9)
              (if (result i32)
               (i32.eq
                (i32.load8_s
                 (i32.add
                  (local.get $1)
                  (i32.const 10)
                 )
                )
                (i32.const 32)
               )
               (i32.const 10)
               (if (result i32)
                (i32.eq
                 (i32.load8_s
                  (i32.add
                   (local.get $1)
                   (i32.const 11)
                  )
                 )
                 (i32.const 32)
                )
                (i32.const 11)
                (if (result i32)
                 (i32.eq
                  (i32.load8_s
                   (i32.add
                    (local.get $1)
                    (i32.const 12)
                   )
                  )
                  (i32.const 32)
                 )
                 (i32.const 12)
                 (if (result i32)
                  (i32.eq
                   (i32.load8_s
                    (i32.add
                     (local.get $1)
                     (i32.const 13)
                    )
                   )
                   (i32.const 32)
                  )
                  (i32.const 13)
                  (select
                   (i32.const 14)
                   (i32.const 15)
                   (i32.eq
                    (i32.load8_s
                     (i32.add
                      (local.get $1)
                      (i32.const 14)
                     )
                    )
                    (i32.const 32)
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
        )
       )
      )
     )
    )
    (if
     (i32.eqz
      (i32.and
       (local.get $4)
       (i32.const 524288)
      )
     )
     (block
      (local.set $1
       (i32.add
        (local.get $1)
        (local.get $3)
       )
      )
      (br $do-once)
     )
    )
    (local.set $1
     (i32.add
      (local.get $3)
      (i32.const -1)
     )
    )
    (i32.store8
     (if (result i32)
      (i32.gt_u
       (local.get $3)
       (i32.const 1)
      )
      (block (result i32)
       (drop
        (call $_memcpy
         (local.get $2)
         (local.get $5)
         (local.get $1)
        )
       )
       (i32.add
        (local.get $1)
        (local.get $2)
       )
      )
      (local.get $2)
     )
     (i32.const 0)
    )
    (local.set $1
     (local.get $2)
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $2
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 156)
      )
     )
    )
   )
   (call $_png_default_error
    (local.get $0)
    (local.get $1)
   )
  )
  (call_indirect (type $FUNCSIG$vii)
   (local.get $0)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $2)
     (i32.const 15)
    )
    (i32.const 42)
   )
  )
  (call $_png_default_error
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_png_default_error (; 61 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $4
   (i32.add
    (local.get $2)
    (i32.const 32)
   )
  )
  (if
   (i32.ne
    (i32.load8_s
     (local.get $1)
    )
    (i32.const 35)
   )
   (block
    (local.set $3
     (i32.load
      (i32.const 16508)
     )
    )
    (i32.store
     (local.get $4)
     (local.get $1)
    )
    (call $_fprintf
     (local.get $3)
     (i32.const 17543)
     (local.get $4)
    )
    (call $_longjmp
     (local.get $0)
     (i32.const 1)
    )
   )
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (i32.const 24)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $2)
   (local.tee $4
    (i32.load8_s
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
   (local.tee $3
    (i32.load8_s
     (i32.add
      (local.get $1)
      (i32.const 2)
     )
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (i32.eq
      (local.get $4)
      (i32.const 32)
     )
     (block
      (local.set $3
       (i32.const 1)
      )
      (br $__rjti$0)
     )
     (block
      (i32.store8
       (i32.add
        (local.get $2)
        (i32.const 2)
       )
       (local.tee $4
        (i32.load8_s
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (i32.add
         (local.tee $4
          (if (result i32)
           (i32.eq
            (local.get $3)
            (i32.const 32)
           )
           (i32.const 2)
           (block (result i32)
            (i32.store8
             (i32.add
              (local.get $2)
              (i32.const 3)
             )
             (local.tee $3
              (i32.load8_s
               (i32.add
                (local.get $1)
                (i32.const 4)
               )
              )
             )
            )
            (if (result i32)
             (i32.eq
              (local.get $4)
              (i32.const 32)
             )
             (i32.const 3)
             (block (result i32)
              (i32.store8
               (i32.add
                (local.get $2)
                (i32.const 4)
               )
               (local.tee $4
                (i32.load8_s
                 (i32.add
                  (local.get $1)
                  (i32.const 5)
                 )
                )
               )
              )
              (if (result i32)
               (i32.eq
                (local.get $3)
                (i32.const 32)
               )
               (i32.const 4)
               (block (result i32)
                (i32.store8
                 (i32.add
                  (local.get $2)
                  (i32.const 5)
                 )
                 (local.tee $3
                  (i32.load8_s
                   (i32.add
                    (local.get $1)
                    (i32.const 6)
                   )
                  )
                 )
                )
                (if (result i32)
                 (i32.eq
                  (local.get $4)
                  (i32.const 32)
                 )
                 (i32.const 5)
                 (block (result i32)
                  (i32.store8
                   (i32.add
                    (local.get $2)
                    (i32.const 6)
                   )
                   (local.tee $4
                    (i32.load8_s
                     (i32.add
                      (local.get $1)
                      (i32.const 7)
                     )
                    )
                   )
                  )
                  (if (result i32)
                   (i32.eq
                    (local.get $3)
                    (i32.const 32)
                   )
                   (i32.const 6)
                   (block (result i32)
                    (i32.store8
                     (i32.add
                      (local.get $2)
                      (i32.const 7)
                     )
                     (local.tee $3
                      (i32.load8_s
                       (i32.add
                        (local.get $1)
                        (i32.const 8)
                       )
                      )
                     )
                    )
                    (if (result i32)
                     (i32.eq
                      (local.get $4)
                      (i32.const 32)
                     )
                     (i32.const 7)
                     (block (result i32)
                      (i32.store8
                       (i32.add
                        (local.get $2)
                        (i32.const 8)
                       )
                       (local.tee $4
                        (i32.load8_s
                         (i32.add
                          (local.get $1)
                          (i32.const 9)
                         )
                        )
                       )
                      )
                      (if (result i32)
                       (i32.eq
                        (local.get $3)
                        (i32.const 32)
                       )
                       (i32.const 8)
                       (block (result i32)
                        (i32.store8
                         (i32.add
                          (local.get $2)
                          (i32.const 9)
                         )
                         (local.tee $3
                          (i32.load8_s
                           (i32.add
                            (local.get $1)
                            (i32.const 10)
                           )
                          )
                         )
                        )
                        (if (result i32)
                         (i32.eq
                          (local.get $4)
                          (i32.const 32)
                         )
                         (i32.const 9)
                         (block (result i32)
                          (i32.store8
                           (i32.add
                            (local.get $2)
                            (i32.const 10)
                           )
                           (local.tee $4
                            (i32.load8_s
                             (i32.add
                              (local.get $1)
                              (i32.const 11)
                             )
                            )
                           )
                          )
                          (if (result i32)
                           (i32.eq
                            (local.get $3)
                            (i32.const 32)
                           )
                           (i32.const 10)
                           (block (result i32)
                            (i32.store8
                             (i32.add
                              (local.get $2)
                              (i32.const 11)
                             )
                             (local.tee $3
                              (i32.load8_s
                               (i32.add
                                (local.get $1)
                                (i32.const 12)
                               )
                              )
                             )
                            )
                            (if (result i32)
                             (i32.eq
                              (local.get $4)
                              (i32.const 32)
                             )
                             (i32.const 11)
                             (block (result i32)
                              (i32.store8
                               (i32.add
                                (local.get $2)
                                (i32.const 12)
                               )
                               (local.tee $4
                                (i32.load8_s
                                 (i32.add
                                  (local.get $1)
                                  (i32.const 13)
                                 )
                                )
                               )
                              )
                              (if (result i32)
                               (i32.eq
                                (local.get $3)
                                (i32.const 32)
                               )
                               (i32.const 12)
                               (block (result i32)
                                (i32.store8
                                 (i32.add
                                  (local.get $2)
                                  (i32.const 13)
                                 )
                                 (local.tee $3
                                  (i32.load8_s
                                   (i32.add
                                    (local.get $1)
                                    (i32.const 14)
                                   )
                                  )
                                 )
                                )
                                (if (result i32)
                                 (i32.eq
                                  (local.get $4)
                                  (i32.const 32)
                                 )
                                 (i32.const 13)
                                 (block (result i32)
                                  (i32.store8
                                   (i32.add
                                    (local.get $2)
                                    (i32.const 14)
                                   )
                                   (i32.load8_s
                                    (i32.add
                                     (local.get $1)
                                     (i32.const 15)
                                    )
                                   )
                                  )
                                  (if (result i32)
                                   (i32.eq
                                    (local.get $3)
                                    (i32.const 32)
                                   )
                                   (i32.const 14)
                                   (block
                                    (local.set $3
                                     (i32.const 15)
                                    )
                                    (br $__rjti$0)
                                   )
                                  )
                                 )
                                )
                               )
                              )
                             )
                            )
                           )
                          )
                         )
                        )
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
         (i32.const -1)
        )
        (local.get $2)
       )
       (i32.const 0)
      )
      (local.set $3
       (i32.load
        (i32.const 16508)
       )
      )
      (i32.store
       (local.get $6)
       (local.get $2)
      )
      (i32.store
       (i32.add
        (local.get $6)
        (i32.const 4)
       )
       (i32.add
        (local.get $1)
        (local.get $4)
       )
      )
      (call $_fprintf
       (local.get $3)
       (i32.const 17489)
       (local.get $6)
      )
     )
    )
    (br $__rjto$0)
   )
   (local.set $2
    (i32.load
     (i32.const 16508)
    )
   )
   (i32.store
    (local.get $5)
    (local.get $1)
   )
   (i32.store
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
    (local.get $3)
   )
   (call $_fprintf
    (local.get $2)
    (i32.const 17514)
    (local.get $5)
   )
  )
  (call $_longjmp
   (local.get $0)
   (i32.const 1)
  )
 )
 (func $_png_warning (; 62 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $2
   (i32.add
    (if (result i32)
     (i32.and
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 200)
       )
      )
      (i32.const 786432)
     )
     (if (result i32)
      (i32.eq
       (i32.load8_s
        (local.get $1)
       )
       (i32.const 35)
      )
      (if (result i32)
       (i32.eq
        (i32.load8_s
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.const 32)
       )
       (i32.const 1)
       (if (result i32)
        (i32.eq
         (i32.load8_s
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
         (i32.const 32)
        )
        (i32.const 2)
        (if (result i32)
         (i32.eq
          (i32.load8_s
           (i32.add
            (local.get $1)
            (i32.const 3)
           )
          )
          (i32.const 32)
         )
         (i32.const 3)
         (if (result i32)
          (i32.eq
           (i32.load8_s
            (i32.add
             (local.get $1)
             (i32.const 4)
            )
           )
           (i32.const 32)
          )
          (i32.const 4)
          (if (result i32)
           (i32.eq
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 5)
             )
            )
            (i32.const 32)
           )
           (i32.const 5)
           (if (result i32)
            (i32.eq
             (i32.load8_s
              (i32.add
               (local.get $1)
               (i32.const 6)
              )
             )
             (i32.const 32)
            )
            (i32.const 6)
            (if (result i32)
             (i32.eq
              (i32.load8_s
               (i32.add
                (local.get $1)
                (i32.const 7)
               )
              )
              (i32.const 32)
             )
             (i32.const 7)
             (if (result i32)
              (i32.eq
               (i32.load8_s
                (i32.add
                 (local.get $1)
                 (i32.const 8)
                )
               )
               (i32.const 32)
              )
              (i32.const 8)
              (if (result i32)
               (i32.eq
                (i32.load8_s
                 (i32.add
                  (local.get $1)
                  (i32.const 9)
                 )
                )
                (i32.const 32)
               )
               (i32.const 9)
               (if (result i32)
                (i32.eq
                 (i32.load8_s
                  (i32.add
                   (local.get $1)
                   (i32.const 10)
                  )
                 )
                 (i32.const 32)
                )
                (i32.const 10)
                (if (result i32)
                 (i32.eq
                  (i32.load8_s
                   (i32.add
                    (local.get $1)
                    (i32.const 11)
                   )
                  )
                  (i32.const 32)
                 )
                 (i32.const 11)
                 (if (result i32)
                  (i32.eq
                   (i32.load8_s
                    (i32.add
                     (local.get $1)
                     (i32.const 12)
                    )
                   )
                   (i32.const 32)
                  )
                  (i32.const 12)
                  (if (result i32)
                   (i32.eq
                    (i32.load8_s
                     (i32.add
                      (local.get $1)
                      (i32.const 13)
                     )
                    )
                    (i32.const 32)
                   )
                   (i32.const 13)
                   (select
                    (i32.const 14)
                    (i32.const 15)
                    (i32.eq
                     (i32.load8_s
                      (i32.add
                       (local.get $1)
                       (i32.const 14)
                      )
                     )
                     (i32.const 32)
                    )
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
        )
       )
      )
      (i32.const 0)
     )
     (i32.const 0)
    )
    (local.get $1)
   )
  )
  (if
   (local.tee $1
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 160)
     )
    )
   )
   (block
    (call_indirect (type $FUNCSIG$vii)
     (local.get $0)
     (local.get $2)
     (i32.add
      (i32.and
       (local.get $1)
       (i32.const 15)
      )
      (i32.const 42)
     )
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (local.set $0
   (i32.add
    (local.get $6)
    (i32.const 32)
   )
  )
  (if
   (i32.ne
    (i32.load8_s
     (local.get $2)
    )
    (i32.const 35)
   )
   (block
    (local.set $1
     (i32.load
      (i32.const 16508)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $2)
    )
    (call $_fprintf
     (local.get $1)
     (i32.const 17588)
     (local.get $0)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (local.set $8
   (i32.add
    (local.get $6)
    (i32.const 24)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.tee $1
    (local.get $6)
   )
   (local.tee $3
    (i32.load8_s
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
   (local.tee $4
    (i32.load8_s
     (local.tee $0
      (i32.add
       (local.get $2)
       (i32.const 2)
      )
     )
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eq
      (local.get $3)
      (i32.const 32)
     )
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (i32.const 2)
     )
     (local.tee $5
      (i32.load8_s
       (local.tee $3
        (i32.add
         (local.get $2)
         (i32.const 3)
        )
       )
      )
     )
    )
    (i32.store8
     (i32.add
      (if (result i32)
       (i32.eq
        (local.get $4)
        (i32.const 32)
       )
       (i32.const 1)
       (block (result i32)
        (i32.store8
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
         (local.tee $4
          (i32.load8_s
           (local.tee $0
            (i32.add
             (local.get $2)
             (i32.const 4)
            )
           )
          )
         )
        )
        (if (result i32)
         (i32.eq
          (local.get $5)
          (i32.const 32)
         )
         (block (result i32)
          (local.set $0
           (local.get $3)
          )
          (i32.const 2)
         )
         (block (result i32)
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 4)
           )
           (local.tee $5
            (i32.load8_s
             (local.tee $3
              (i32.add
               (local.get $2)
               (i32.const 5)
              )
             )
            )
           )
          )
          (if (result i32)
           (i32.eq
            (local.get $4)
            (i32.const 32)
           )
           (i32.const 3)
           (block (result i32)
            (i32.store8
             (i32.add
              (local.get $1)
              (i32.const 5)
             )
             (local.tee $4
              (i32.load8_s
               (local.tee $0
                (i32.add
                 (local.get $2)
                 (i32.const 6)
                )
               )
              )
             )
            )
            (if (result i32)
             (i32.eq
              (local.get $5)
              (i32.const 32)
             )
             (block (result i32)
              (local.set $0
               (local.get $3)
              )
              (i32.const 4)
             )
             (block (result i32)
              (i32.store8
               (i32.add
                (local.get $1)
                (i32.const 6)
               )
               (local.tee $5
                (i32.load8_s
                 (local.tee $3
                  (i32.add
                   (local.get $2)
                   (i32.const 7)
                  )
                 )
                )
               )
              )
              (if (result i32)
               (i32.eq
                (local.get $4)
                (i32.const 32)
               )
               (i32.const 5)
               (block (result i32)
                (i32.store8
                 (i32.add
                  (local.get $1)
                  (i32.const 7)
                 )
                 (local.tee $4
                  (i32.load8_s
                   (local.tee $0
                    (i32.add
                     (local.get $2)
                     (i32.const 8)
                    )
                   )
                  )
                 )
                )
                (if (result i32)
                 (i32.eq
                  (local.get $5)
                  (i32.const 32)
                 )
                 (block (result i32)
                  (local.set $0
                   (local.get $3)
                  )
                  (i32.const 6)
                 )
                 (block (result i32)
                  (i32.store8
                   (i32.add
                    (local.get $1)
                    (i32.const 8)
                   )
                   (local.tee $5
                    (i32.load8_s
                     (local.tee $3
                      (i32.add
                       (local.get $2)
                       (i32.const 9)
                      )
                     )
                    )
                   )
                  )
                  (if (result i32)
                   (i32.eq
                    (local.get $4)
                    (i32.const 32)
                   )
                   (i32.const 7)
                   (block (result i32)
                    (i32.store8
                     (i32.add
                      (local.get $1)
                      (i32.const 9)
                     )
                     (local.tee $4
                      (i32.load8_s
                       (local.tee $0
                        (i32.add
                         (local.get $2)
                         (i32.const 10)
                        )
                       )
                      )
                     )
                    )
                    (if (result i32)
                     (i32.eq
                      (local.get $5)
                      (i32.const 32)
                     )
                     (block (result i32)
                      (local.set $0
                       (local.get $3)
                      )
                      (i32.const 8)
                     )
                     (block (result i32)
                      (i32.store8
                       (i32.add
                        (local.get $1)
                        (i32.const 10)
                       )
                       (local.tee $5
                        (i32.load8_s
                         (local.tee $3
                          (i32.add
                           (local.get $2)
                           (i32.const 11)
                          )
                         )
                        )
                       )
                      )
                      (if (result i32)
                       (i32.eq
                        (local.get $4)
                        (i32.const 32)
                       )
                       (i32.const 9)
                       (block (result i32)
                        (i32.store8
                         (i32.add
                          (local.get $1)
                          (i32.const 11)
                         )
                         (local.tee $4
                          (i32.load8_s
                           (local.tee $0
                            (i32.add
                             (local.get $2)
                             (i32.const 12)
                            )
                           )
                          )
                         )
                        )
                        (if (result i32)
                         (i32.eq
                          (local.get $5)
                          (i32.const 32)
                         )
                         (block (result i32)
                          (local.set $0
                           (local.get $3)
                          )
                          (i32.const 10)
                         )
                         (block (result i32)
                          (i32.store8
                           (i32.add
                            (local.get $1)
                            (i32.const 12)
                           )
                           (local.tee $5
                            (i32.load8_s
                             (local.tee $3
                              (i32.add
                               (local.get $2)
                               (i32.const 13)
                              )
                             )
                            )
                           )
                          )
                          (if (result i32)
                           (i32.eq
                            (local.get $4)
                            (i32.const 32)
                           )
                           (i32.const 11)
                           (block (result i32)
                            (i32.store8
                             (i32.add
                              (local.get $1)
                              (i32.const 13)
                             )
                             (local.tee $4
                              (i32.load8_s
                               (local.tee $0
                                (i32.add
                                 (local.get $2)
                                 (i32.const 14)
                                )
                               )
                              )
                             )
                            )
                            (if (result i32)
                             (i32.eq
                              (local.get $5)
                              (i32.const 32)
                             )
                             (block (result i32)
                              (local.set $0
                               (local.get $3)
                              )
                              (i32.const 12)
                             )
                             (block (result i32)
                              (i32.store8
                               (i32.add
                                (local.get $1)
                                (i32.const 14)
                               )
                               (i32.load8_s
                                (i32.add
                                 (local.get $2)
                                 (i32.const 15)
                                )
                               )
                              )
                              (br_if $__rjti$0
                               (i32.ne
                                (local.get $4)
                                (i32.const 32)
                               )
                              )
                              (i32.const 13)
                             )
                            )
                           )
                          )
                         )
                        )
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
        )
       )
      )
      (local.get $1)
     )
     (i32.const 0)
    )
    (local.set $3
     (i32.load
      (i32.const 16508)
     )
    )
    (i32.store
     (local.get $7)
     (local.get $1)
    )
    (i32.store
     (i32.add
      (local.get $7)
      (i32.const 4)
     )
     (local.get $0)
    )
    (call $_fprintf
     (local.get $3)
     (i32.const 17561)
     (local.get $7)
    )
    (br $__rjto$0)
   )
   (local.set $0
    (i32.load
     (i32.const 16508)
    )
   )
   (i32.store
    (local.get $8)
    (local.get $2)
   )
   (call $_fprintf
    (local.get $0)
    (i32.const 17588)
    (local.get $8)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_png_chunk_error (; 63 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (call $_png_format_buffer
   (local.get $0)
   (local.get $2)
   (local.get $1)
  )
  (call $_png_error
   (local.get $0)
   (local.get $2)
  )
 )
 (func $_png_format_buffer (; 64 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (i32.and
    (local.tee $3
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 376)
      )
     )
    )
    (i32.const 255)
   )
  )
  (local.set $4
   (if (result i32)
    (if (result i32)
     (i32.lt_s
      (i32.and
       (i32.shr_s
        (i32.shl
         (i32.add
          (local.get $3)
          (i32.const -91)
         )
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.const 255)
      )
      (i32.const 6)
     )
     (i32.const 1)
     (i32.gt_s
      (i32.and
       (i32.shr_s
        (i32.shl
         (i32.add
          (local.get $3)
          (i32.const -41)
         )
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.const 255)
      )
      (i32.const 81)
     )
    )
    (block (result i32)
     (i32.store8
      (local.get $1)
      (i32.const 91)
     )
     (i32.store8
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
      (i32.load8_s
       (i32.add
        (i32.shr_u
         (local.get $4)
         (i32.const 4)
        )
        (i32.const 16352)
       )
      )
     )
     (i32.store8
      (i32.add
       (local.get $1)
       (i32.const 2)
      )
      (i32.load8_s
       (i32.add
        (i32.and
         (local.get $4)
         (i32.const 15)
        )
        (i32.const 16352)
       )
      )
     )
     (i32.store8
      (i32.add
       (local.get $1)
       (i32.const 3)
      )
      (i32.const 93)
     )
     (i32.const 4)
    )
    (block (result i32)
     (i32.store8
      (local.get $1)
      (local.get $3)
     )
     (i32.const 1)
    )
   )
  )
  (local.set $3
   (i32.and
    (local.tee $5
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 377)
      )
     )
    )
    (i32.const 255)
   )
  )
  (if
   (if (result i32)
    (i32.lt_s
     (i32.and
      (i32.shr_s
       (i32.shl
        (i32.add
         (local.get $5)
         (i32.const -91)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const 255)
     )
     (i32.const 6)
    )
    (i32.const 1)
    (i32.gt_s
     (i32.and
      (i32.shr_s
       (i32.shl
        (i32.add
         (local.get $5)
         (i32.const -41)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const 255)
     )
     (i32.const 81)
    )
   )
   (block
    (i32.store8
     (i32.add
      (local.get $1)
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (i32.load8_s
      (i32.add
       (i32.shr_u
        (local.get $3)
        (i32.const 4)
       )
       (i32.const 16352)
      )
     )
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (i32.or
       (local.get $4)
       (i32.const 2)
      )
     )
     (i32.load8_s
      (i32.add
       (i32.and
        (local.get $3)
        (i32.const 15)
       )
       (i32.const 16352)
      )
     )
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (local.tee $3
       (i32.add
        (local.get $4)
        (i32.const 3)
       )
      )
     )
     (i32.const 93)
    )
    (local.set $5
     (i32.const 91)
    )
   )
   (local.set $3
    (local.get $4)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (local.get $4)
   )
   (local.get $5)
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (local.set $6
   (i32.and
    (local.tee $4
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 378)
      )
     )
    )
    (i32.const 255)
   )
  )
  (if
   (if (result i32)
    (i32.lt_s
     (i32.and
      (i32.shr_s
       (i32.shl
        (i32.add
         (local.get $4)
         (i32.const -91)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const 255)
     )
     (i32.const 6)
    )
    (i32.const 1)
    (i32.gt_s
     (i32.and
      (i32.shr_s
       (i32.shl
        (i32.add
         (local.get $4)
         (i32.const -41)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const 255)
     )
     (i32.const 81)
    )
   )
   (block
    (i32.store8
     (i32.add
      (local.get $1)
      (i32.add
       (local.get $3)
       (i32.const 2)
      )
     )
     (i32.load8_s
      (i32.add
       (i32.shr_u
        (local.get $6)
        (i32.const 4)
       )
       (i32.const 16352)
      )
     )
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (i32.add
       (local.get $3)
       (i32.const 3)
      )
     )
     (i32.load8_s
      (i32.add
       (i32.and
        (local.get $6)
        (i32.const 15)
       )
       (i32.const 16352)
      )
     )
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (local.tee $3
       (i32.add
        (local.get $3)
        (i32.const 4)
       )
      )
     )
     (i32.const 93)
    )
    (local.set $4
     (i32.const 91)
    )
   )
   (local.set $3
    (local.get $5)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (local.get $5)
   )
   (local.get $4)
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.and
    (local.tee $4
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 379)
      )
     )
    )
    (i32.const 255)
   )
  )
  (if
   (if (result i32)
    (i32.lt_s
     (i32.and
      (i32.shr_s
       (i32.shl
        (i32.add
         (local.get $4)
         (i32.const -91)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const 255)
     )
     (i32.const 6)
    )
    (i32.const 1)
    (i32.gt_s
     (i32.and
      (i32.shr_s
       (i32.shl
        (i32.add
         (local.get $4)
         (i32.const -41)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const 255)
     )
     (i32.const 81)
    )
   )
   (block
    (i32.store8
     (i32.add
      (local.get $1)
      (i32.add
       (local.get $3)
       (i32.const 2)
      )
     )
     (i32.load8_s
      (i32.add
       (i32.shr_u
        (local.get $0)
        (i32.const 4)
       )
       (i32.const 16352)
      )
     )
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (i32.add
       (local.get $3)
       (i32.const 3)
      )
     )
     (i32.load8_s
      (i32.add
       (i32.and
        (local.get $0)
        (i32.const 15)
       )
       (i32.const 16352)
      )
     )
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (local.tee $0
       (i32.add
        (local.get $3)
        (i32.const 4)
       )
      )
     )
     (i32.const 93)
    )
    (local.set $4
     (i32.const 91)
    )
   )
   (local.set $0
    (local.get $5)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (local.get $5)
   )
   (local.get $4)
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (block
    (i32.store8
     (i32.add
      (local.get $1)
      (local.get $3)
     )
     (i32.const 0)
    )
    (return)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (local.get $3)
   )
   (i32.const 58)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.add
     (local.get $0)
     (i32.const 2)
    )
   )
   (i32.const 32)
  )
  (i64.store align=1
   (local.tee $3
    (i32.add
     (local.get $1)
     (i32.add
      (local.get $0)
      (i32.const 3)
     )
    )
   )
   (i64.load align=1
    (local.get $2)
   )
  )
  (i64.store offset=8 align=1
   (local.get $3)
   (i64.load offset=8 align=1
    (local.get $2)
   )
  )
  (i64.store offset=16 align=1
   (local.get $3)
   (i64.load offset=16 align=1
    (local.get $2)
   )
  )
  (i64.store offset=24 align=1
   (local.get $3)
   (i64.load offset=24 align=1
    (local.get $2)
   )
  )
  (i64.store offset=32 align=1
   (local.get $3)
   (i64.load offset=32 align=1
    (local.get $2)
   )
  )
  (i64.store offset=40 align=1
   (local.get $3)
   (i64.load offset=40 align=1
    (local.get $2)
   )
  )
  (i64.store offset=48 align=1
   (local.get $3)
   (i64.load offset=48 align=1
    (local.get $2)
   )
  )
  (i64.store offset=56 align=1
   (local.get $3)
   (i64.load offset=56 align=1
    (local.get $2)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.add
     (local.get $0)
     (i32.const 66)
    )
   )
   (i32.const 0)
  )
 )
 (func $_png_chunk_warning (; 65 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (call $_png_format_buffer
   (local.get $0)
   (local.get $1)
   (i32.const 18361)
  )
  (call $_png_warning
   (local.get $0)
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_png_set_error_fn (; 66 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 164)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 156)
   )
   (local.get $2)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 160)
   )
   (local.get $3)
  )
 )
 (func $_png_get_bKGD (; 67 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 32)
      )
      (i32.const 0)
     )
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $2)
   (i32.add
    (local.get $1)
    (i32.const 90)
   )
  )
  (i32.const 32)
 )
 (func $_png_get_cHRM (; 68 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.const 4)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (local.get $2)
   (f64.store
    (local.get $2)
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 128)
      )
     )
    )
   )
  )
  (if
   (local.get $3)
   (f64.store
    (local.get $3)
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 132)
      )
     )
    )
   )
  )
  (if
   (local.get $4)
   (f64.store
    (local.get $4)
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 136)
      )
     )
    )
   )
  )
  (if
   (local.get $5)
   (f64.store
    (local.get $5)
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 140)
      )
     )
    )
   )
  )
  (if
   (local.get $6)
   (f64.store
    (local.get $6)
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 144)
      )
     )
    )
   )
  )
  (if
   (local.get $7)
   (f64.store
    (local.get $7)
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 148)
      )
     )
    )
   )
  )
  (if
   (local.get $8)
   (f64.store
    (local.get $8)
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 152)
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.get $9)
   )
   (return
    (i32.const 4)
   )
  )
  (f64.store
   (local.get $9)
   (f64.promote_f32
    (f32.load
     (i32.add
      (local.get $1)
      (i32.const 156)
     )
    )
   )
  )
  (i32.const 4)
 )
 (func $_png_get_cHRM_fixed (; 69 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.const 4)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (local.get $2)
   (i32.store
    (local.get $2)
    (i32.load
     (i32.add
      (local.get $1)
      (i32.const 256)
     )
    )
   )
  )
  (if
   (local.get $3)
   (i32.store
    (local.get $3)
    (i32.load
     (i32.add
      (local.get $1)
      (i32.const 260)
     )
    )
   )
  )
  (if
   (local.get $4)
   (i32.store
    (local.get $4)
    (i32.load
     (i32.add
      (local.get $1)
      (i32.const 264)
     )
    )
   )
  )
  (if
   (local.get $5)
   (i32.store
    (local.get $5)
    (i32.load
     (i32.add
      (local.get $1)
      (i32.const 268)
     )
    )
   )
  )
  (if
   (local.get $6)
   (i32.store
    (local.get $6)
    (i32.load
     (i32.add
      (local.get $1)
      (i32.const 272)
     )
    )
   )
  )
  (if
   (local.get $7)
   (i32.store
    (local.get $7)
    (i32.load
     (i32.add
      (local.get $1)
      (i32.const 276)
     )
    )
   )
  )
  (if
   (local.get $8)
   (i32.store
    (local.get $8)
    (i32.load
     (i32.add
      (local.get $1)
      (i32.const 280)
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.get $9)
   )
   (return
    (i32.const 4)
   )
  )
  (i32.store
   (local.get $9)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 284)
    )
   )
  )
  (i32.const 4)
 )
 (func $_png_get_gAMA (; 70 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 1)
      )
      (i32.const 0)
     )
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (f64.store
   (local.get $2)
   (f64.promote_f32
    (f32.load
     (i32.add
      (local.get $1)
      (i32.const 40)
     )
    )
   )
  )
  (i32.const 1)
 )
 (func $_png_get_gAMA_fixed (; 71 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 1)
      )
      (i32.const 0)
     )
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 252)
    )
   )
  )
  (i32.const 1)
 )
 (func $_png_get_sRGB (; 72 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 2048)
      )
      (i32.const 0)
     )
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 44)
    )
   )
  )
  (i32.const 2048)
 )
 (func $_png_get_iCCP (; 73 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.and
      (i32.and
       (i32.ne
        (i32.and
         (i32.load
          (i32.add
           (local.get $1)
           (i32.const 8)
          )
         )
         (i32.const 4096)
        )
        (i32.const 0)
       )
       (i32.ne
        (local.get $2)
        (i32.const 0)
       )
      )
      (i32.ne
       (local.get $4)
       (i32.const 0)
      )
     )
     (i32.ne
      (local.get $5)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 196)
    )
   )
  )
  (i32.store
   (local.get $4)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 200)
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 204)
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 208)
    )
   )
  )
  (i32.const 4096)
 )
 (func $_png_get_hIST (; 74 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 64)
      )
      (i32.const 0)
     )
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 124)
    )
   )
  )
  (i32.const 64)
 )
 (func $_png_get_IHDR (; 75 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (i32.const 25696)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (i32.const 25700)
   (i32.load offset=4
    (local.get $1)
   )
  )
  (i32.store
   (i32.const 25704)
   (i32.and
    (local.tee $5
     (i32.load8_s offset=24
      (local.get $1)
     )
    )
    (i32.const 255)
   )
  )
  (if
   (i32.gt_s
    (i32.and
     (i32.shr_s
      (i32.shl
       (i32.add
        (local.get $5)
        (i32.const -1)
       )
       (i32.const 24)
      )
      (i32.const 24)
     )
     (i32.const 255)
    )
    (i32.const 15)
   )
   (call $_png_error
    (local.get $0)
    (i32.const 17608)
   )
  )
  (i32.store
   (i32.const 25708)
   (local.tee $5
    (i32.load8_u offset=25
     (local.get $1)
    )
   )
  )
  (if
   (i32.gt_s
    (i32.and
     (local.get $5)
     (i32.const 255)
    )
    (i32.const 6)
   )
   (call $_png_error
    (local.get $0)
    (i32.const 17626)
   )
  )
  (if
   (local.get $3)
   (i32.store
    (local.get $3)
    (i32.load8_u offset=26
     (local.get $1)
    )
   )
  )
  (if
   (local.get $4)
   (i32.store
    (local.get $4)
    (i32.load8_u offset=27
     (local.get $1)
    )
   )
  )
  (if
   (local.get $2)
   (i32.store
    (local.get $2)
    (i32.load8_u offset=28
     (local.get $1)
    )
   )
  )
  (local.set $1
   (i32.load
    (i32.const 25708)
   )
  )
  (local.set $2
   (i32.load
    (i32.const 25704)
   )
  )
  (if
   (i32.lt_s
    (i32.load
     (i32.const 25696)
    )
    (i32.const 0)
   )
   (call $_png_error
    (local.get $0)
    (i32.const 17645)
   )
  )
  (if
   (i32.lt_s
    (i32.load
     (i32.const 25700)
    )
    (i32.const 0)
   )
   (call $_png_error
    (local.get $0)
    (i32.const 17665)
   )
  )
  (if
   (i32.le_u
    (i32.load
     (i32.const 25696)
    )
    (i32.div_u
     (i32.const 2147483647)
     (i32.shr_s
      (i32.add
       (i32.mul
        (local.get $2)
        (i32.add
         (i32.and
          (i32.shr_u
           (local.get $1)
           (i32.const 2)
          )
          (i32.const 1)
         )
         (select
          (i32.const 1)
          (i32.or
           (i32.and
            (local.get $1)
            (i32.const 2)
           )
           (i32.const 1)
          )
          (i32.eq
           (local.get $1)
           (i32.const 3)
          )
         )
        )
       )
       (i32.const 7)
      )
      (i32.const 3)
     )
    )
   )
   (return
    (i32.const 1)
   )
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 17686)
  )
  (i32.const 1)
 )
 (func $_png_get_oFFs (; 76 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.and
      (i32.and
       (i32.ne
        (i32.and
         (i32.load
          (i32.add
           (local.get $1)
           (i32.const 8)
          )
         )
         (i32.const 256)
        )
        (i32.const 0)
       )
       (i32.ne
        (local.get $2)
        (i32.const 0)
       )
      )
      (i32.ne
       (local.get $3)
       (i32.const 0)
      )
     )
     (i32.ne
      (local.get $4)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 100)
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 104)
    )
   )
  )
  (i32.store
   (local.get $4)
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 108)
    )
   )
  )
  (i32.const 256)
 )
 (func $_png_get_pCAL (; 77 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.and
      (i32.and
       (i32.and
        (i32.and
         (i32.and
          (i32.and
           (i32.ne
            (i32.and
             (i32.load
              (i32.add
               (local.get $1)
               (i32.const 8)
              )
             )
             (i32.const 1024)
            )
            (i32.const 0)
           )
           (i32.ne
            (local.get $2)
            (i32.const 0)
           )
          )
          (i32.ne
           (local.get $3)
           (i32.const 0)
          )
         )
         (i32.ne
          (local.get $4)
          (i32.const 0)
         )
        )
        (i32.ne
         (local.get $5)
         (i32.const 0)
        )
       )
       (i32.ne
        (local.get $6)
        (i32.const 0)
       )
      )
      (i32.ne
       (local.get $7)
       (i32.const 0)
      )
     )
     (i32.ne
      (local.get $8)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 160)
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 164)
    )
   )
  )
  (i32.store
   (local.get $4)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 168)
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 180)
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 181)
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 172)
    )
   )
  )
  (i32.store
   (local.get $8)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 176)
    )
   )
  )
  (i32.const 1024)
 )
 (func $_png_get_sCAL (; 78 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.const 16384)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 220)
    )
   )
  )
  (f64.store
   (local.get $3)
   (f64.load
    (i32.add
     (local.get $1)
     (i32.const 224)
    )
   )
  )
  (f64.store
   (local.get $4)
   (f64.load
    (i32.add
     (local.get $1)
     (i32.const 232)
    )
   )
  )
  (i32.const 16384)
 )
 (func $_png_get_pHYs (; 79 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.const 128)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $0
   (if (result i32)
    (local.get $2)
    (block (result i32)
     (i32.store
      (local.get $2)
      (i32.load
       (i32.add
        (local.get $1)
        (i32.const 112)
       )
      )
     )
     (i32.const 128)
    )
    (i32.const 0)
   )
  )
  (if
   (local.get $3)
   (block
    (i32.store
     (local.get $3)
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 116)
      )
     )
    )
    (local.set $0
     (i32.const 128)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $4)
   )
   (return
    (local.get $0)
   )
  )
  (i32.store
   (local.get $4)
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 120)
    )
   )
  )
  (i32.const 128)
 )
 (func $_png_get_PLTE (; 80 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
     (i32.ne
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 8)
      )
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 16)
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.load16_u
    (i32.add
     (local.get $1)
     (i32.const 20)
    )
   )
  )
  (i32.const 8)
 )
 (func $_png_get_sBIT (; 81 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 2)
      )
      (i32.const 0)
     )
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $2)
   (i32.add
    (local.get $1)
    (i32.const 68)
   )
  )
  (i32.const 2)
 )
 (func $_png_get_tRNS (; 82 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.const 16)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eq
    (i32.load8_s
     (i32.add
      (local.get $1)
      (i32.const 25)
     )
    )
    (i32.const 3)
   )
   (block
    (local.set $0
     (if (result i32)
      (local.get $2)
      (block (result i32)
       (i32.store
        (local.get $2)
        (i32.load
         (i32.add
          (local.get $1)
          (i32.const 76)
         )
        )
       )
       (i32.const 16)
      )
      (i32.const 0)
     )
    )
    (if
     (local.get $4)
     (i32.store
      (local.get $4)
      (i32.add
       (local.get $1)
       (i32.const 80)
      )
     )
    )
   )
   (block
    (local.set $0
     (if (result i32)
      (local.get $4)
      (block (result i32)
       (i32.store
        (local.get $4)
        (i32.add
         (local.get $1)
         (i32.const 80)
        )
       )
       (i32.const 16)
      )
      (i32.const 0)
     )
    )
    (if
     (local.get $2)
     (i32.store
      (local.get $2)
      (i32.const 0)
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.get $3)
   )
   (return
    (local.get $0)
   )
  )
  (i32.store
   (local.get $3)
   (i32.load16_u
    (i32.add
     (local.get $1)
     (i32.const 22)
    )
   )
  )
  (i32.const 16)
 )
 (func $_png_create_struct_2 (; 83 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 688)
   )
  )
  (local.set $5
   (local.get $4)
  )
  (block $do-once
   (block $__rjti$0
    (block $switch-default
     (block $switch-case0
      (block $switch-case
       (br_table $switch-case0 $switch-case $switch-default
        (i32.sub
         (local.get $0)
         (i32.const 1)
        )
       )
      )
      (local.set $3
       (i32.const 288)
      )
      (br $__rjti$0)
     )
     (local.set $3
      (i32.const 688)
     )
     (br $__rjti$0)
    )
    (local.set $0
     (i32.const 0)
    )
    (br $do-once)
   )
   (if
    (i32.eqz
     (local.get $1)
    )
    (block
     (if
      (i32.eqz
       (local.tee $0
        (call $_malloc
         (local.get $3)
        )
       )
      )
      (block
       (local.set $0
        (i32.const 0)
       )
       (br $do-once)
      )
     )
     (drop
      (call $_memset
       (local.get $0)
       (i32.const 0)
       (local.get $3)
      )
     )
     (br $do-once)
    )
   )
   (i32.store
    (i32.add
     (local.get $5)
     (i32.const 672)
    )
    (local.get $2)
   )
   (if
    (local.tee $0
     (call_indirect (type $FUNCSIG$iii)
      (local.get $5)
      (local.get $3)
      (i32.add
       (i32.and
        (local.get $1)
        (i32.const 7)
       )
       (i32.const 4)
      )
     )
    )
    (drop
     (call $_memset
      (local.get $0)
      (i32.const 0)
      (local.get $3)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $_png_destroy_struct (; 84 ;) (; has Stack IR ;) (param $0 i32)
  (if
   (local.get $0)
   (call $_free
    (local.get $0)
   )
  )
 )
 (func $_png_destroy_struct_2 (; 85 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 688)
   )
  )
  (local.set $4
   (local.get $3)
  )
  (if
   (local.get $0)
   (if
    (local.get $1)
    (block
     (i32.store
      (i32.add
       (local.get $4)
       (i32.const 672)
      )
      (local.get $2)
     )
     (call_indirect (type $FUNCSIG$vii)
      (local.get $4)
      (local.get $0)
      (i32.add
       (i32.and
        (local.get $1)
        (i32.const 15)
       )
       (i32.const 42)
      )
     )
    )
    (call $_free
     (local.get $0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_png_malloc (; 86 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if (result i32)
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (i32.const 0)
   (block $do-once (result i32)
    (if (result i32)
     (local.tee $2
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 676)
       )
      )
     )
     (block (result i32)
      (if
       (local.tee $1
        (call_indirect (type $FUNCSIG$iii)
         (local.get $0)
         (local.get $1)
         (i32.add
          (i32.and
           (local.get $2)
           (i32.const 7)
          )
          (i32.const 4)
         )
        )
       )
       (br $do-once
        (local.get $1)
       )
      )
      (drop
       (br_if $do-once
        (i32.const 0)
        (i32.and
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 200)
          )
         )
         (i32.const 1048576)
        )
       )
      )
      (call $_png_error
       (local.get $0)
       (i32.const 17736)
      )
      (i32.const 0)
     )
     (block (result i32)
      (if
       (local.tee $1
        (call $_malloc
         (local.get $1)
        )
       )
       (br $do-once
        (local.get $1)
       )
      )
      (drop
       (br_if $do-once
        (i32.const 0)
        (i32.and
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 200)
          )
         )
         (i32.const 1048576)
        )
       )
      )
      (call $_png_error
       (local.get $0)
       (i32.const 17751)
      )
      (i32.const 0)
     )
    )
   )
  )
 )
 (func $_png_free (; 87 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (if
   (local.tee $2
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 680)
     )
    )
   )
   (call_indirect (type $FUNCSIG$vii)
    (local.get $0)
    (local.get $1)
    (i32.add
     (i32.and
      (local.get $2)
      (i32.const 15)
     )
     (i32.const 42)
    )
   )
   (call $_free
    (local.get $1)
   )
  )
 )
 (func $_png_memcpy_check (; 88 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (drop
   (call $_memcpy
    (local.get $0)
    (local.get $1)
    (local.get $2)
   )
  )
 )
 (func $_png_memset_check (; 89 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (drop
   (call $_memset
    (local.get $0)
    (i32.const 0)
    (local.get $1)
   )
  )
 )
 (func $_png_set_mem_fn (; 90 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 672)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 676)
   )
   (local.get $2)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 680)
   )
   (local.get $3)
  )
 )
 (func $_png_process_data (; 91 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 532)
   )
   (local.get $2)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 556)
   )
   (local.get $3)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $0)
     (i32.const 552)
    )
   )
   (local.tee $3
    (i32.add
     (local.get $3)
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 544)
      )
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 528)
   )
   (local.get $2)
  )
  (if
   (i32.eqz
    (local.get $3)
   )
   (return)
  )
  (loop $while-in
   (call $_png_process_some_data
    (local.get $0)
    (local.get $1)
   )
   (br_if $while-in
    (i32.load
     (local.get $4)
    )
   )
  )
 )
 (func $_png_process_some_data (; 92 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (block $switch-default
   (block $switch-case4
    (block $switch-case3
     (block $switch-case2
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-case4 $switch-case2 $switch-case3 $switch-default
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 560)
           )
          )
         )
        )
        (call $_png_push_read_sig
         (local.get $0)
         (local.get $1)
        )
        (return)
       )
       (call $_png_push_read_chunk
        (local.get $0)
        (local.get $1)
       )
       (return)
      )
      (call $_png_push_read_IDAT
       (local.get $0)
      )
      (return)
     )
     (call $_png_push_read_tEXt
      (local.get $0)
      (local.get $1)
     )
     (return)
    )
    (call $_png_push_read_zTXt
     (local.get $0)
     (local.get $1)
    )
    (return)
   )
   (call $_png_push_crc_finish
    (local.get $0)
   )
   (return)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 552)
   )
   (i32.const 0)
  )
 )
 (func $_png_push_read_sig (; 93 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $5
   (select
    (local.tee $2
     (i32.load
      (local.tee $7
       (i32.add
        (local.get $0)
        (i32.const 552)
       )
      )
     )
    )
    (local.tee $4
     (i32.sub
      (i32.const 8)
      (local.tee $9
       (local.tee $10
        (i32.load8_u
         (local.tee $8
          (i32.add
           (local.get $0)
           (i32.const 392)
          )
         )
        )
       )
      )
     )
    )
    (i32.lt_u
     (local.get $2)
     (local.get $4)
    )
   )
  )
  (local.set $4
   (i32.add
    (local.get $9)
    (i32.add
     (local.get $1)
     (i32.const 32)
    )
   )
  )
  (if
   (local.tee $2
    (if (result i32)
     (local.tee $3
      (i32.load
       (local.tee $6
        (i32.add
         (local.get $0)
         (i32.const 544)
        )
       )
      )
     )
     (block (result i32)
      (drop
       (call $_memcpy
        (local.get $4)
        (i32.load
         (local.tee $2
          (i32.add
           (local.get $0)
           (i32.const 520)
          )
         )
        )
        (local.tee $3
         (select
          (local.get $5)
          (local.get $3)
          (i32.gt_u
           (local.get $3)
           (local.get $5)
          )
         )
        )
       )
      )
      (i32.store
       (local.get $7)
       (i32.sub
        (i32.load
         (local.get $7)
        )
        (local.get $3)
       )
      )
      (i32.store
       (local.get $6)
       (i32.sub
        (i32.load
         (local.get $6)
        )
        (local.get $3)
       )
      )
      (i32.store
       (local.get $2)
       (i32.add
        (local.get $3)
        (i32.load
         (local.get $2)
        )
       )
      )
      (local.set $4
       (i32.add
        (local.get $3)
        (local.get $4)
       )
      )
      (i32.sub
       (local.get $5)
       (local.get $3)
      )
     )
     (local.get $5)
    )
   )
   (if
    (local.tee $3
     (i32.load
      (local.tee $6
       (i32.add
        (local.get $0)
        (i32.const 556)
       )
      )
     )
    )
    (block
     (drop
      (call $_memcpy
       (local.get $4)
       (i32.load
        (local.tee $4
         (i32.add
          (local.get $0)
          (i32.const 528)
         )
        )
       )
       (local.tee $2
        (select
         (local.get $2)
         (local.get $3)
         (i32.lt_u
          (local.get $2)
          (local.get $3)
         )
        )
       )
      )
     )
     (i32.store
      (local.get $7)
      (i32.sub
       (i32.load
        (local.get $7)
       )
       (local.get $2)
      )
     )
     (i32.store
      (local.get $6)
      (i32.sub
       (i32.load
        (local.get $6)
       )
       (local.get $2)
      )
     )
     (i32.store
      (local.get $4)
      (i32.add
       (local.get $2)
       (i32.load
        (local.get $4)
       )
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $8)
   (i32.add
    (i32.load8_u
     (local.get $8)
    )
    (local.get $5)
   )
  )
  (if
   (i32.eqz
    (call $_png_sig_cmp
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 32)
      )
     )
     (local.get $9)
     (local.get $5)
    )
   )
   (block
    (if
     (i32.le_s
      (i32.load8_u
       (local.get $8)
      )
      (i32.const 7)
     )
     (return)
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 560)
     )
     (i32.const 1)
    )
    (return)
   )
  )
  (if
   (i32.lt_s
    (local.get $10)
    (i32.const 4)
   )
   (if
    (call $_png_sig_cmp
     (local.get $1)
     (local.get $9)
     (i32.add
      (local.get $5)
      (i32.const -4)
     )
    )
    (block
     (call $_png_error
      (local.get $0)
      (i32.const 17988)
     )
     (return)
    )
   )
  )
  (call $_png_error
   (local.get $0)
   (i32.const 18003)
  )
 )
 (func $_png_push_read_chunk (; 94 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $2
   (local.get $9)
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (local.tee $7
       (i32.add
        (local.get $0)
        (i32.const 196)
       )
      )
     )
    )
    (i32.const 256)
   )
   (block
    (local.set $3
     (i32.add
      (local.get $0)
      (i32.const 376)
     )
    )
    (local.set $2
     (local.get $4)
    )
   )
   (block $do-once
    (local.set $3
     (i32.eqz
      (local.tee $4
       (i32.load
        (local.tee $5
         (i32.add
          (local.get $0)
          (i32.const 544)
         )
        )
       )
      )
     )
    )
    (if
     (i32.ge_u
      (local.tee $6
       (i32.load
        (local.tee $10
         (i32.add
          (local.get $0)
          (i32.const 552)
         )
        )
       )
      )
      (i32.const 8)
     )
     (block
      (block $__rjto$0
       (block $__rjti$0
        (if
         (local.get $3)
         (block
          (local.set $3
           (local.get $2)
          )
          (local.set $5
           (i32.const 4)
          )
          (local.set $4
           (local.get $6)
          )
          (br $__rjti$0)
         )
         (block
          (drop
           (call $_memcpy
            (local.get $2)
            (local.tee $12
             (i32.load
              (local.tee $11
               (i32.add
                (local.get $0)
                (i32.const 520)
               )
              )
             )
            )
            (local.tee $8
             (select
              (local.get $4)
              (i32.const 4)
              (i32.lt_u
               (local.get $4)
               (i32.const 4)
              )
             )
            )
           )
          )
          (local.set $3
           (i32.add
            (local.get $2)
            (local.get $8)
           )
          )
          (i32.store
           (local.get $10)
           (local.tee $6
            (i32.sub
             (local.get $6)
             (local.get $8)
            )
           )
          )
          (i32.store
           (local.get $5)
           (i32.sub
            (local.get $4)
            (local.get $8)
           )
          )
          (i32.store
           (local.get $11)
           (i32.add
            (local.get $8)
            (local.get $12)
           )
          )
          (if
           (local.tee $5
            (i32.sub
             (i32.const 4)
             (local.get $8)
            )
           )
           (block
            (local.set $4
             (local.get $6)
            )
            (br $__rjti$0)
           )
          )
         )
        )
        (br $__rjto$0)
       )
       (if
        (local.tee $6
         (i32.load
          (local.tee $8
           (i32.add
            (local.get $0)
            (i32.const 556)
           )
          )
         )
        )
        (block
         (drop
          (call $_memcpy
           (local.get $3)
           (local.tee $12
            (i32.load
             (local.tee $11
              (i32.add
               (local.get $0)
               (i32.const 528)
              )
             )
            )
           )
           (local.tee $3
            (select
             (local.get $5)
             (local.get $6)
             (i32.lt_u
              (local.get $5)
              (local.get $6)
             )
            )
           )
          )
         )
         (i32.store
          (local.get $10)
          (i32.sub
           (local.get $4)
           (local.get $3)
          )
         )
         (i32.store
          (local.get $8)
          (i32.sub
           (local.get $6)
           (local.get $3)
          )
         )
         (i32.store
          (local.get $11)
          (i32.add
           (local.get $3)
           (local.get $12)
          )
         )
        )
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 536)
       )
       (call $_png_get_uint_32
        (local.get $2)
       )
      )
      (call $_png_reset_crc
       (local.get $0)
      )
      (call $_png_crc_read
       (local.get $0)
       (local.tee $3
        (i32.add
         (local.get $0)
         (i32.const 376)
        )
       )
       (i32.const 4)
      )
      (i32.store
       (local.get $7)
       (local.tee $2
        (i32.or
         (i32.load
          (local.get $7)
         )
         (i32.const 256)
        )
       )
      )
      (br $do-once)
     )
    )
    (if
     (local.get $3)
     (local.set $4
      (i32.const 0)
     )
     (if
      (i32.ne
       (local.tee $1
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 520)
         )
        )
       )
       (local.tee $2
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
      )
      (block
       (local.set $3
        (i32.const 0)
       )
       (loop $while-in
        (i32.store8
         (local.get $2)
         (i32.load8_s
          (local.get $1)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (br_if $while-in
         (i32.ne
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (local.get $4)
         )
        )
       )
       (local.set $4
        (i32.load
         (local.get $5)
        )
       )
      )
     )
    )
    (if
     (i32.gt_u
      (local.tee $4
       (i32.add
        (local.tee $2
         (i32.load
          (local.tee $3
           (i32.add
            (local.get $0)
            (i32.const 556)
           )
          )
         )
        )
        (local.get $4)
       )
      )
      (i32.load
       (local.tee $6
        (i32.add
         (local.get $0)
         (i32.const 548)
        )
       )
      )
     )
     (block
      (local.set $2
       (i32.load
        (local.tee $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
      )
      (i32.store
       (local.get $1)
       (local.tee $7
        (call $_png_malloc
         (local.get $0)
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 256)
          )
         )
        )
       )
      )
      (drop
       (call $_memcpy
        (local.get $7)
        (local.get $2)
        (i32.load
         (local.get $5)
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (local.get $2)
      )
      (i32.store
       (local.get $6)
       (local.get $4)
      )
      (local.set $2
       (i32.load
        (local.get $3)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $0)
       (i32.const 524)
      )
     )
    )
    (if
     (local.get $2)
     (block
      (drop
       (call $_memcpy
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.load
          (local.get $5)
         )
        )
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 528)
         )
        )
        (local.get $2)
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $5)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.const 0)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 520)
     )
     (i32.load
      (local.get $1)
     )
    )
    (i32.store
     (local.get $10)
     (i32.const 0)
    )
    (global.set $STACKTOP
     (local.get $9)
    )
    (return)
   )
  )
  (block $do-once0
   (if
    (call $_memcmp
     (local.get $3)
     (i32.const 17389)
     (i32.const 4)
    )
    (block
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17404)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_PLTE
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in5
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in5
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17394)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.and
         (local.get $2)
         (i32.const 1)
        )
        (if
         (i32.and
          (i32.eqz
           (i32.and
            (local.get $2)
            (i32.const 2)
           )
          )
          (i32.eq
           (i32.load8_s
            (i32.add
             (local.get $0)
             (i32.const 386)
            )
           )
           (i32.const 3)
          )
         )
         (call $_png_error
          (local.get $0)
          (i32.const 17882)
         )
        )
        (call $_png_error
         (local.get $0)
         (i32.const 17857)
        )
       )
       (local.set $3
        (i32.add
         (local.get $0)
         (i32.const 536)
        )
       )
       (if
        (i32.and
         (local.tee $2
          (i32.load
           (local.get $7)
          )
         )
         (i32.const 4)
        )
        (block
         (if
          (i32.eqz
           (i32.load
            (local.get $3)
           )
          )
          (block
           (global.set $STACKTOP
            (local.get $9)
           )
           (return)
          )
         )
         (if
          (i32.and
           (local.get $2)
           (i32.const 8)
          )
          (block
           (call $_png_error
            (local.get $0)
            (i32.const 17907)
           )
           (local.set $2
            (i32.load
             (local.get $7)
            )
           )
          )
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 360)
        )
        (i32.load
         (local.get $3)
        )
       )
       (i32.store
        (local.get $7)
        (i32.or
         (local.get $2)
         (i32.const 4)
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 560)
        )
        (i32.const 2)
       )
       (if
        (local.tee $2
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 508)
          )
         )
        )
        (call_indirect (type $FUNCSIG$vii)
         (local.get $0)
         (local.get $1)
         (i32.add
          (i32.and
           (local.get $2)
           (i32.const 15)
          )
          (i32.const 42)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 224)
        )
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 312)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 220)
        )
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 328)
         )
        )
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17399)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_IEND
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (i32.add
           (local.get $0)
           (i32.const 560)
          )
          (i32.const 6)
         )
         (br_if $do-once0
          (i32.eqz
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 516)
             )
            )
           )
          )
         )
         (call_indirect (type $FUNCSIG$vii)
          (local.get $0)
          (local.get $1)
          (i32.add
           (i32.and
            (local.get $2)
            (i32.const 15)
           )
           (i32.const 42)
          )
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in7
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in7
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17419)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_gAMA
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in9
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in9
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17454)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_sBIT
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in11
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in11
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17414)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_cHRM
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in13
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in13
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17464)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_sRGB
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in15
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in15
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17429)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_iCCP
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in17
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in17
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17459)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_sPLT
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in19
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in19
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17479)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_tRNS
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in21
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in21
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17409)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_bKGD
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in23
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in23
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17424)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_hIST
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
          (local.get $4)
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in25
            (i32.store8
             (local.get $2)
             (i32.load8_s
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in25
             (i32.ne
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $4)
             )
            )
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17449)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_pHYs
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (block $do-once26 (result i32)
          (drop
           (br_if $do-once26
            (local.get $4)
            (i32.eq
             (local.tee $1
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 520)
               )
              )
             )
             (local.tee $2
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 524)
               )
              )
             )
            )
           )
          )
          (local.set $3
           (i32.const 0)
          )
          (loop $while-in29
           (i32.store8
            (local.get $2)
            (i32.load8_s
             (local.get $1)
            )
           )
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.set $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (br_if $while-in29
            (i32.ne
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.get $4)
            )
           )
          )
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17434)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_oFFs
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (block $do-once30 (result i32)
          (drop
           (br_if $do-once30
            (local.get $4)
            (i32.eq
             (local.tee $1
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 520)
               )
              )
             )
             (local.tee $2
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 524)
               )
              )
             )
            )
           )
          )
          (local.set $3
           (i32.const 0)
          )
          (loop $while-in33
           (i32.store8
            (local.get $2)
            (i32.load8_s
             (local.get $1)
            )
           )
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.set $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (br_if $while-in33
            (i32.ne
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.get $4)
            )
           )
          )
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17439)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_pCAL
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (block $do-once34 (result i32)
          (drop
           (br_if $do-once34
            (local.get $4)
            (i32.eq
             (local.tee $1
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 520)
               )
              )
             )
             (local.tee $2
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 524)
               )
              )
             )
            )
           )
          )
          (local.set $3
           (i32.const 0)
          )
          (loop $while-in37
           (i32.store8
            (local.get $2)
            (i32.load8_s
             (local.get $1)
            )
           )
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.set $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (br_if $while-in37
            (i32.ne
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.get $4)
            )
           )
          )
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (i32.eqz
       (call $_memcmp
        (local.get $3)
        (i32.const 17444)
        (i32.const 4)
       )
      )
      (block
       (if
        (i32.le_u
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 536)
            )
           )
          )
          (i32.const 4)
         )
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 552)
           )
          )
         )
        )
        (block
         (call $_png_handle_sCAL
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
         (br $do-once0)
        )
       )
       (local.set $1
        (if (result i32)
         (local.tee $4
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 544)
            )
           )
          )
         )
         (block $do-once38 (result i32)
          (drop
           (br_if $do-once38
            (local.get $4)
            (i32.eq
             (local.tee $1
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 520)
               )
              )
             )
             (local.tee $2
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 524)
               )
              )
             )
            )
           )
          )
          (local.set $3
           (i32.const 0)
          )
          (loop $while-in41
           (i32.store8
            (local.get $2)
            (i32.load8_s
             (local.get $1)
            )
           )
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.set $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (br_if $while-in41
            (i32.ne
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.get $4)
            )
           )
          )
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.tee $4
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 556)
              )
             )
            )
           )
           (local.get $1)
          )
         )
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $0)
            (i32.const 548)
           )
          )
         )
        )
        (block
         (local.set $2
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 524)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $8
           (call $_png_malloc
            (local.get $0)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 256)
             )
            )
           )
          )
         )
         (drop
          (call $_memcpy
           (local.get $8)
           (local.get $2)
           (i32.load
            (local.get $5)
           )
          )
         )
         (call $_png_free
          (local.get $0)
          (local.get $2)
         )
         (i32.store
          (local.get $7)
          (local.get $4)
         )
         (local.set $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
       (if
        (local.get $2)
        (block
         (drop
          (call $_memcpy
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $5)
            )
           )
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 528)
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.const 0)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (global.set $STACKTOP
        (local.get $9)
       )
       (return)
      )
     )
     (if
      (call $_memcmp
       (local.get $3)
       (i32.const 17474)
       (i32.const 4)
      )
      (block
       (if
        (i32.eqz
         (call $_memcmp
          (local.get $3)
          (i32.const 17469)
          (i32.const 4)
         )
        )
        (block
         (local.set $3
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 536)
           )
          )
         )
         (if
          (i32.ne
           (i32.and
            (local.get $2)
            (i32.const 17)
           )
           (i32.const 1)
          )
          (block
           (call $_png_error
            (local.get $0)
            (i32.const 17929)
           )
           (br_if $do-once0
            (i32.eqz
             (local.get $1)
            )
           )
          )
         )
         (local.set $1
          (call $_png_malloc
           (local.get $0)
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
         )
         (i32.store
          (local.tee $2
           (i32.add
            (local.get $0)
            (i32.const 576)
           )
          )
          (local.get $1)
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (local.get $3)
          )
          (i32.const 0)
         )
         (i32.store
          (i32.add
           (local.get $0)
           (i32.const 580)
          )
          (i32.load
           (local.get $2)
          )
         )
         (i32.store
          (i32.add
           (local.get $0)
           (i32.const 568)
          )
          (local.get $3)
         )
         (i32.store
          (i32.add
           (local.get $0)
           (i32.const 572)
          )
          (local.get $3)
         )
         (i32.store
          (i32.add
           (local.get $0)
           (i32.const 560)
          )
          (i32.const 4)
         )
         (br $do-once0)
        )
       )
       (local.set $4
        (i32.eqz
         (call $_memcmp
          (local.get $3)
          (i32.const 17484)
          (i32.const 4)
         )
        )
       )
       (local.set $3
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 536)
         )
        )
       )
       (if
        (i32.eqz
         (local.get $4)
        )
        (block
         (call $_png_push_handle_unknown
          (local.get $0)
          (local.get $1)
          (local.get $3)
         )
         (br $do-once0)
        )
       )
       (if
        (i32.ne
         (i32.and
          (local.get $2)
          (i32.const 17)
         )
         (i32.const 1)
        )
        (block
         (call $_png_error
          (local.get $0)
          (i32.const 17947)
         )
         (br_if $do-once0
          (i32.eqz
           (local.get $1)
          )
         )
        )
       )
       (local.set $1
        (call $_png_malloc
         (local.get $0)
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
       )
       (i32.store
        (local.tee $2
         (i32.add
          (local.get $0)
          (i32.const 576)
         )
        )
        (local.get $1)
       )
       (i32.store8
        (i32.add
         (local.get $1)
         (local.get $3)
        )
        (i32.const 0)
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 580)
        )
        (i32.load
         (local.get $2)
        )
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 568)
        )
        (local.get $3)
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 572)
        )
        (local.get $3)
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 560)
        )
        (i32.const 5)
       )
       (br $do-once0)
      )
     )
     (if
      (i32.le_u
       (i32.add
        (local.tee $2
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 536)
          )
         )
        )
        (i32.const 4)
       )
       (i32.load
        (local.tee $6
         (i32.add
          (local.get $0)
          (i32.const 552)
         )
        )
       )
      )
      (block
       (call $_png_handle_tIME
        (local.get $0)
        (local.get $1)
        (local.get $2)
       )
       (br $do-once0)
      )
     )
     (local.set $1
      (if (result i32)
       (local.tee $4
        (i32.load
         (local.tee $5
          (i32.add
           (local.get $0)
           (i32.const 544)
          )
         )
        )
       )
       (block $do-once42 (result i32)
        (drop
         (br_if $do-once42
          (local.get $4)
          (i32.eq
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 520)
             )
            )
           )
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 524)
             )
            )
           )
          )
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in45
         (i32.store8
          (local.get $2)
          (i32.load8_s
           (local.get $1)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (br_if $while-in45
          (i32.ne
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (local.get $4)
          )
         )
        )
        (i32.load
         (local.get $5)
        )
       )
       (i32.const 0)
      )
     )
     (if
      (i32.gt_u
       (local.tee $4
        (i32.add
         (local.tee $2
          (i32.load
           (local.tee $3
            (i32.add
             (local.get $0)
             (i32.const 556)
            )
           )
          )
         )
         (local.get $1)
        )
       )
       (i32.load
        (local.tee $7
         (i32.add
          (local.get $0)
          (i32.const 548)
         )
        )
       )
      )
      (block
       (local.set $2
        (i32.load
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 524)
          )
         )
        )
       )
       (i32.store
        (local.get $1)
        (local.tee $8
         (call $_png_malloc
          (local.get $0)
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 256)
           )
          )
         )
        )
       )
       (drop
        (call $_memcpy
         (local.get $8)
         (local.get $2)
         (i32.load
          (local.get $5)
         )
        )
       )
       (call $_png_free
        (local.get $0)
        (local.get $2)
       )
       (i32.store
        (local.get $7)
        (local.get $4)
       )
       (local.set $2
        (i32.load
         (local.get $3)
        )
       )
      )
      (local.set $1
       (i32.add
        (local.get $0)
        (i32.const 524)
       )
      )
     )
     (if
      (local.get $2)
      (block
       (drop
        (call $_memcpy
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.load
           (local.get $5)
          )
         )
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 528)
          )
         )
         (local.get $2)
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $5)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.const 0)
       )
      )
     )
     (i32.store
      (i32.add
       (local.get $0)
       (i32.const 520)
      )
      (i32.load
       (local.get $1)
      )
     )
     (i32.store
      (local.get $6)
      (i32.const 0)
     )
     (global.set $STACKTOP
      (local.get $9)
     )
     (return)
    )
    (block
     (if
      (i32.le_u
       (i32.add
        (local.tee $2
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 536)
          )
         )
        )
        (i32.const 4)
       )
       (i32.load
        (local.tee $6
         (i32.add
          (local.get $0)
          (i32.const 552)
         )
        )
       )
      )
      (block
       (call $_png_handle_IHDR
        (local.get $0)
        (local.get $1)
        (local.get $2)
       )
       (br $do-once0)
      )
     )
     (local.set $1
      (if (result i32)
       (local.tee $4
        (i32.load
         (local.tee $5
          (i32.add
           (local.get $0)
           (i32.const 544)
          )
         )
        )
       )
       (if (result i32)
        (i32.eq
         (local.tee $1
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 520)
           )
          )
         )
         (local.tee $2
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 524)
           )
          )
         )
        )
        (local.get $4)
        (block (result i32)
         (local.set $3
          (i32.const 0)
         )
         (loop $while-in3
          (i32.store8
           (local.get $2)
           (i32.load8_s
            (local.get $1)
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (local.set $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (br_if $while-in3
           (i32.ne
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $4)
           )
          )
         )
         (i32.load
          (local.get $5)
         )
        )
       )
       (i32.const 0)
      )
     )
     (if
      (i32.gt_u
       (local.tee $4
        (i32.add
         (local.tee $2
          (i32.load
           (local.tee $3
            (i32.add
             (local.get $0)
             (i32.const 556)
            )
           )
          )
         )
         (local.get $1)
        )
       )
       (i32.load
        (local.tee $7
         (i32.add
          (local.get $0)
          (i32.const 548)
         )
        )
       )
      )
      (block
       (local.set $2
        (i32.load
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 524)
          )
         )
        )
       )
       (i32.store
        (local.get $1)
        (local.tee $8
         (call $_png_malloc
          (local.get $0)
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 256)
           )
          )
         )
        )
       )
       (drop
        (call $_memcpy
         (local.get $8)
         (local.get $2)
         (i32.load
          (local.get $5)
         )
        )
       )
       (call $_png_free
        (local.get $0)
        (local.get $2)
       )
       (i32.store
        (local.get $7)
        (local.get $4)
       )
       (local.set $2
        (i32.load
         (local.get $3)
        )
       )
      )
      (local.set $1
       (i32.add
        (local.get $0)
        (i32.const 524)
       )
      )
     )
     (if
      (local.get $2)
      (block
       (drop
        (call $_memcpy
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.load
           (local.get $5)
          )
         )
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 528)
          )
         )
         (local.get $2)
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $5)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.const 0)
       )
      )
     )
     (i32.store
      (i32.add
       (local.get $0)
       (i32.const 520)
      )
      (i32.load
       (local.get $1)
      )
     )
     (i32.store
      (local.get $6)
      (i32.const 0)
     )
     (global.set $STACKTOP
      (local.get $9)
     )
     (return)
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.and
    (i32.load
     (local.get $7)
    )
    (i32.const -257)
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_png_push_read_IDAT (; 95 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $1
   (local.get $8)
  )
  (if
   (i32.and
    (i32.load
     (local.tee $7
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 256)
   )
   (block
    (local.set $2
     (local.tee $1
      (i32.add
       (local.get $0)
       (i32.const 360)
      )
     )
    )
    (local.set $1
     (i32.load
      (local.get $1)
     )
    )
   )
   (block $do-once
    (local.set $2
     (i32.eqz
      (local.tee $4
       (i32.load
        (local.tee $5
         (i32.add
          (local.get $0)
          (i32.const 544)
         )
        )
       )
      )
     )
    )
    (if
     (i32.ge_u
      (local.tee $3
       (i32.load
        (local.tee $9
         (i32.add
          (local.get $0)
          (i32.const 552)
         )
        )
       )
      )
      (i32.const 8)
     )
     (block
      (block $__rjto$0
       (block $__rjti$0
        (if
         (local.get $2)
         (block
          (local.set $2
           (local.get $1)
          )
          (local.set $4
           (i32.const 4)
          )
          (br $__rjti$0)
         )
         (block
          (drop
           (call $_memcpy
            (local.get $1)
            (local.tee $11
             (i32.load
              (local.tee $10
               (i32.add
                (local.get $0)
                (i32.const 520)
               )
              )
             )
            )
            (local.tee $6
             (select
              (local.get $4)
              (i32.const 4)
              (i32.lt_u
               (local.get $4)
               (i32.const 4)
              )
             )
            )
           )
          )
          (local.set $2
           (i32.add
            (local.get $1)
            (local.get $6)
           )
          )
          (i32.store
           (local.get $9)
           (local.tee $3
            (i32.sub
             (local.get $3)
             (local.get $6)
            )
           )
          )
          (i32.store
           (local.get $5)
           (i32.sub
            (local.get $4)
            (local.get $6)
           )
          )
          (i32.store
           (local.get $10)
           (i32.add
            (local.get $6)
            (local.get $11)
           )
          )
          (br_if $__rjti$0
           (local.tee $4
            (i32.sub
             (i32.const 4)
             (local.get $6)
            )
           )
          )
         )
        )
        (br $__rjto$0)
       )
       (if
        (local.tee $5
         (i32.load
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 556)
           )
          )
         )
        )
        (block
         (drop
          (call $_memcpy
           (local.get $2)
           (local.tee $11
            (i32.load
             (local.tee $10
              (i32.add
               (local.get $0)
               (i32.const 528)
              )
             )
            )
           )
           (local.tee $2
            (select
             (local.get $4)
             (local.get $5)
             (i32.lt_u
              (local.get $4)
              (local.get $5)
             )
            )
           )
          )
         )
         (i32.store
          (local.get $9)
          (i32.sub
           (local.get $3)
           (local.get $2)
          )
         )
         (i32.store
          (local.get $6)
          (i32.sub
           (local.get $5)
           (local.get $2)
          )
         )
         (i32.store
          (local.get $10)
          (i32.add
           (local.get $2)
           (local.get $11)
          )
         )
        )
       )
      )
      (local.set $1
       (call $_png_get_uint_32
        (local.get $1)
       )
      )
      (i32.store
       (local.tee $3
        (i32.add
         (local.get $0)
         (i32.const 536)
        )
       )
       (local.get $1)
      )
      (call $_png_reset_crc
       (local.get $0)
      )
      (call $_png_crc_read
       (local.get $0)
       (local.tee $1
        (i32.add
         (local.get $0)
         (i32.const 376)
        )
       )
       (i32.const 4)
      )
      (i32.store
       (local.get $7)
       (i32.or
        (i32.load
         (local.get $7)
        )
        (i32.const 256)
       )
      )
      (if
       (i32.eqz
        (call $_memcmp
         (local.get $1)
         (i32.const 17394)
         (i32.const 4)
        )
       )
       (block
        (i32.store
         (local.tee $2
          (i32.add
           (local.get $0)
           (i32.const 360)
          )
         )
         (local.tee $1
          (i32.load
           (local.get $3)
          )
         )
        )
        (br $do-once)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 560)
       )
       (i32.const 1)
      )
      (if
       (i32.eqz
        (i32.and
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 200)
          )
         )
         (i32.const 32)
        )
       )
       (call $_png_error
        (local.get $0)
        (i32.const 17765)
       )
      )
      (global.set $STACKTOP
       (local.get $8)
      )
      (return)
     )
    )
    (if
     (local.get $2)
     (local.set $4
      (i32.const 0)
     )
     (if
      (i32.ne
       (local.tee $1
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 520)
         )
        )
       )
       (local.tee $2
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
      )
      (block
       (local.set $3
        (i32.const 0)
       )
       (loop $while-in
        (i32.store8
         (local.get $2)
         (i32.load8_s
          (local.get $1)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (br_if $while-in
         (i32.ne
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (local.get $4)
         )
        )
       )
       (local.set $4
        (i32.load
         (local.get $5)
        )
       )
      )
     )
    )
    (if
     (i32.gt_u
      (local.tee $4
       (i32.add
        (local.tee $2
         (i32.load
          (local.tee $3
           (i32.add
            (local.get $0)
            (i32.const 556)
           )
          )
         )
        )
        (local.get $4)
       )
      )
      (i32.load
       (local.tee $6
        (i32.add
         (local.get $0)
         (i32.const 548)
        )
       )
      )
     )
     (block
      (local.set $2
       (i32.load
        (local.tee $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
      )
      (i32.store
       (local.get $1)
       (local.tee $7
        (call $_png_malloc
         (local.get $0)
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 256)
          )
         )
        )
       )
      )
      (drop
       (call $_memcpy
        (local.get $7)
        (local.get $2)
        (i32.load
         (local.get $5)
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (local.get $2)
      )
      (i32.store
       (local.get $6)
       (local.get $4)
      )
      (local.set $2
       (i32.load
        (local.get $3)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $0)
       (i32.const 524)
      )
     )
    )
    (if
     (local.get $2)
     (block
      (drop
       (call $_memcpy
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.load
          (local.get $5)
         )
        )
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 528)
         )
        )
        (local.get $2)
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $5)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.const 0)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 520)
     )
     (i32.load
      (local.get $1)
     )
    )
    (i32.store
     (local.get $9)
     (i32.const 0)
    )
    (global.set $STACKTOP
     (local.get $8)
    )
    (return)
   )
  )
  (if
   (local.get $1)
   (block $do-once0
    (if
     (local.tee $3
      (i32.load
       (local.tee $5
        (i32.add
         (local.get $0)
         (i32.const 544)
        )
       )
      )
     )
     (block
      (call $_png_calculate_crc
       (local.get $0)
       (i32.load
        (local.tee $4
         (i32.add
          (local.get $0)
          (i32.const 520)
         )
        )
       )
       (local.tee $3
        (select
         (local.get $1)
         (local.get $3)
         (i32.lt_u
          (local.get $1)
          (local.get $3)
         )
        )
       )
      )
      (call $_png_process_IDAT_data
       (local.get $0)
       (i32.load
        (local.get $4)
       )
       (local.get $3)
      )
      (i32.store
       (local.get $2)
       (local.tee $1
        (i32.sub
         (i32.load
          (local.get $2)
         )
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.tee $6
        (i32.add
         (local.get $0)
         (i32.const 552)
        )
       )
       (i32.sub
        (i32.load
         (local.get $6)
        )
        (local.get $3)
       )
      )
      (i32.store
       (local.get $5)
       (i32.sub
        (i32.load
         (local.get $5)
        )
        (local.get $3)
       )
      )
      (i32.store
       (local.get $4)
       (i32.add
        (local.get $3)
        (i32.load
         (local.get $4)
        )
       )
      )
      (br_if $do-once0
       (i32.eqz
        (local.get $1)
       )
      )
     )
    )
    (if
     (i32.eqz
      (local.tee $5
       (i32.load
        (local.tee $4
         (i32.add
          (local.get $0)
          (i32.const 556)
         )
        )
       )
      )
     )
     (block
      (global.set $STACKTOP
       (local.get $8)
      )
      (return)
     )
    )
    (call $_png_calculate_crc
     (local.get $0)
     (i32.load
      (local.tee $3
       (i32.add
        (local.get $0)
        (i32.const 528)
       )
      )
     )
     (local.tee $1
      (select
       (local.get $1)
       (local.get $5)
       (i32.lt_u
        (local.get $1)
        (local.get $5)
       )
      )
     )
    )
    (call $_png_process_IDAT_data
     (local.get $0)
     (i32.load
      (local.get $3)
     )
     (local.get $1)
    )
    (i32.store
     (local.get $2)
     (local.tee $2
      (i32.sub
       (i32.load
        (local.get $2)
       )
       (local.get $1)
      )
     )
    )
    (i32.store
     (local.tee $5
      (i32.add
       (local.get $0)
       (i32.const 552)
      )
     )
     (i32.sub
      (i32.load
       (local.get $5)
      )
      (local.get $1)
     )
    )
    (i32.store
     (local.get $4)
     (i32.sub
      (i32.load
       (local.get $4)
      )
      (local.get $1)
     )
    )
    (i32.store
     (local.get $3)
     (i32.add
      (local.get $1)
      (i32.load
       (local.get $3)
      )
     )
    )
    (if
     (local.get $2)
     (block
      (global.set $STACKTOP
       (local.get $8)
      )
      (return)
     )
    )
   )
  )
  (if
   (i32.ge_u
    (i32.load
     (local.tee $6
      (i32.add
       (local.get $0)
       (i32.const 552)
      )
     )
    )
    (i32.const 4)
   )
   (block
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (i32.const 0)
     )
    )
    (i32.store
     (local.get $7)
     (i32.and
      (i32.load
       (local.get $7)
      )
      (i32.const -257)
     )
    )
    (global.set $STACKTOP
     (local.get $8)
    )
    (return)
   )
  )
  (local.set $1
   (if (result i32)
    (local.tee $4
     (i32.load
      (local.tee $5
       (i32.add
        (local.get $0)
        (i32.const 544)
       )
      )
     )
    )
    (if (result i32)
     (i32.eq
      (local.tee $1
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
       )
      )
      (local.tee $2
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 524)
        )
       )
      )
     )
     (local.get $4)
     (block (result i32)
      (local.set $3
       (i32.const 0)
      )
      (loop $while-in3
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (br_if $while-in3
        (i32.ne
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.get $4)
        )
       )
      )
      (i32.load
       (local.get $5)
      )
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.gt_u
    (local.tee $4
     (i32.add
      (local.tee $2
       (i32.load
        (local.tee $3
         (i32.add
          (local.get $0)
          (i32.const 556)
         )
        )
       )
      )
      (local.get $1)
     )
    )
    (i32.load
     (local.tee $7
      (i32.add
       (local.get $0)
       (i32.const 548)
      )
     )
    )
   )
   (block
    (local.set $2
     (i32.load
      (local.tee $1
       (i32.add
        (local.get $0)
        (i32.const 524)
       )
      )
     )
    )
    (i32.store
     (local.get $1)
     (local.tee $9
      (call $_png_malloc
       (local.get $0)
       (local.tee $4
        (i32.add
         (local.get $4)
         (i32.const 256)
        )
       )
      )
     )
    )
    (drop
     (call $_memcpy
      (local.get $9)
      (local.get $2)
      (i32.load
       (local.get $5)
      )
     )
    )
    (call $_png_free
     (local.get $0)
     (local.get $2)
    )
    (i32.store
     (local.get $7)
     (local.get $4)
    )
    (local.set $2
     (i32.load
      (local.get $3)
     )
    )
   )
   (local.set $1
    (i32.add
     (local.get $0)
     (i32.const 524)
    )
   )
  )
  (if
   (local.get $2)
   (block
    (drop
     (call $_memcpy
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.load
        (local.get $5)
       )
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 528)
       )
      )
      (local.get $2)
     )
    )
    (i32.store
     (local.get $5)
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.load
       (local.get $5)
      )
     )
    )
    (i32.store
     (local.get $3)
     (i32.const 0)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 520)
   )
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.const 0)
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $_png_push_read_tEXt (; 96 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $2
   (i32.load
    (local.tee $4
     (i32.add
      (local.get $0)
      (i32.const 572)
     )
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (local.tee $3
       (i32.load
        (local.tee $6
         (i32.add
          (local.get $0)
          (i32.const 552)
         )
        )
       )
      )
     )
    )
    (if
     (local.get $2)
     (block
      (call $_png_crc_read
       (local.get $0)
       (i32.load
        (local.tee $5
         (i32.add
          (local.get $0)
          (i32.const 580)
         )
        )
       )
       (local.tee $3
        (select
         (local.get $3)
         (local.get $2)
         (i32.lt_u
          (local.get $3)
          (local.get $2)
         )
        )
       )
      )
      (i32.store
       (local.get $4)
       (local.tee $2
        (i32.sub
         (i32.load
          (local.get $4)
         )
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.get $3)
        (i32.load
         (local.get $5)
        )
       )
      )
      (br $__rjti$0)
     )
    )
    (br $__rjto$0)
   )
   (if
    (local.get $2)
    (return)
   )
  )
  (if
   (i32.ge_u
    (i32.load
     (local.get $6)
    )
    (i32.const 4)
   )
   (block
    (call $_png_push_crc_finish
     (local.get $0)
    )
    (local.set $3
     (i32.load
      (local.tee $2
       (i32.add
        (local.get $0)
        (i32.const 576)
       )
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.const 0)
    )
    (local.set $2
     (local.get $3)
    )
    (loop $while-in
     (local.set $4
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (if
      (i32.load8_s
       (local.get $2)
      )
      (block
       (local.set $2
        (local.get $4)
       )
       (br $while-in)
      )
     )
    )
    (local.set $4
     (select
      (local.get $2)
      (local.get $4)
      (i32.eq
       (local.get $2)
       (i32.add
        (local.get $3)
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 568)
         )
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $2
      (call $_png_malloc
       (local.get $0)
       (i32.const 16)
      )
     )
     (i32.const -1)
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 4)
     )
     (local.get $3)
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 8)
     )
     (local.get $4)
    )
    (call $_png_set_text
     (local.get $0)
     (local.get $1)
     (local.get $2)
    )
    (call $_png_free
     (local.get $0)
     (local.get $3)
    )
    (call $_png_free
     (local.get $0)
     (local.get $2)
    )
    (return)
   )
  )
  (local.set $1
   (if (result i32)
    (local.tee $3
     (i32.load
      (local.tee $5
       (i32.add
        (local.get $0)
        (i32.const 544)
       )
      )
     )
    )
    (if (result i32)
     (i32.eq
      (local.tee $1
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
       )
      )
      (local.tee $2
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 524)
        )
       )
      )
     )
     (local.get $3)
     (block (result i32)
      (local.set $4
       (i32.const 0)
      )
      (loop $while-in1
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (br_if $while-in1
        (i32.ne
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.get $3)
        )
       )
      )
      (i32.load
       (local.get $5)
      )
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.gt_u
    (local.tee $3
     (i32.add
      (local.tee $2
       (i32.load
        (local.tee $4
         (i32.add
          (local.get $0)
          (i32.const 556)
         )
        )
       )
      )
      (local.get $1)
     )
    )
    (i32.load
     (local.tee $7
      (i32.add
       (local.get $0)
       (i32.const 548)
      )
     )
    )
   )
   (block
    (local.set $2
     (i32.load
      (local.tee $1
       (i32.add
        (local.get $0)
        (i32.const 524)
       )
      )
     )
    )
    (i32.store
     (local.get $1)
     (local.tee $8
      (call $_png_malloc
       (local.get $0)
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 256)
        )
       )
      )
     )
    )
    (drop
     (call $_memcpy
      (local.get $8)
      (local.get $2)
      (i32.load
       (local.get $5)
      )
     )
    )
    (call $_png_free
     (local.get $0)
     (local.get $2)
    )
    (i32.store
     (local.get $7)
     (local.get $3)
    )
    (local.set $2
     (i32.load
      (local.get $4)
     )
    )
   )
   (local.set $1
    (i32.add
     (local.get $0)
     (i32.const 524)
    )
   )
  )
  (if
   (local.get $2)
   (block
    (drop
     (call $_memcpy
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.load
        (local.get $5)
       )
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 528)
       )
      )
      (local.get $2)
     )
    )
    (i32.store
     (local.get $5)
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.load
       (local.get $5)
      )
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 520)
   )
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.const 0)
  )
 )
 (func $_png_push_read_zTXt (; 97 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $2
   (i32.load
    (local.tee $3
     (i32.add
      (local.get $0)
      (i32.const 572)
     )
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (local.tee $4
       (i32.load
        (local.tee $6
         (i32.add
          (local.get $0)
          (i32.const 552)
         )
        )
       )
      )
     )
    )
    (if
     (local.get $2)
     (block
      (call $_png_crc_read
       (local.get $0)
       (i32.load
        (local.tee $5
         (i32.add
          (local.get $0)
          (i32.const 580)
         )
        )
       )
       (local.tee $4
        (select
         (local.get $4)
         (local.get $2)
         (i32.lt_u
          (local.get $4)
          (local.get $2)
         )
        )
       )
      )
      (i32.store
       (local.get $3)
       (local.tee $2
        (i32.sub
         (i32.load
          (local.get $3)
         )
         (local.get $4)
        )
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.get $4)
        (i32.load
         (local.get $5)
        )
       )
      )
      (br $__rjti$0)
     )
    )
    (br $__rjto$0)
   )
   (if
    (local.get $2)
    (return)
   )
  )
  (if
   (i32.lt_u
    (i32.load
     (local.get $6)
    )
    (i32.const 4)
   )
   (block
    (local.set $1
     (if (result i32)
      (local.tee $4
       (i32.load
        (local.tee $5
         (i32.add
          (local.get $0)
          (i32.const 544)
         )
        )
       )
      )
      (if (result i32)
       (i32.eq
        (local.tee $1
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 520)
          )
         )
        )
        (local.tee $2
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 524)
          )
         )
        )
       )
       (local.get $4)
       (block (result i32)
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in
         (i32.store8
          (local.get $2)
          (i32.load8_s
           (local.get $1)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (br_if $while-in
          (i32.ne
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (local.get $4)
          )
         )
        )
        (i32.load
         (local.get $5)
        )
       )
      )
      (i32.const 0)
     )
    )
    (if
     (i32.gt_u
      (local.tee $4
       (i32.add
        (local.tee $2
         (i32.load
          (local.tee $3
           (i32.add
            (local.get $0)
            (i32.const 556)
           )
          )
         )
        )
        (local.get $1)
       )
      )
      (i32.load
       (local.tee $7
        (i32.add
         (local.get $0)
         (i32.const 548)
        )
       )
      )
     )
     (block
      (local.set $2
       (i32.load
        (local.tee $1
         (i32.add
          (local.get $0)
          (i32.const 524)
         )
        )
       )
      )
      (i32.store
       (local.get $1)
       (local.tee $8
        (call $_png_malloc
         (local.get $0)
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 256)
          )
         )
        )
       )
      )
      (drop
       (call $_memcpy
        (local.get $8)
        (local.get $2)
        (i32.load
         (local.get $5)
        )
       )
      )
      (call $_png_free
       (local.get $0)
       (local.get $2)
      )
      (i32.store
       (local.get $7)
       (local.get $4)
      )
      (local.set $2
       (i32.load
        (local.get $3)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $0)
       (i32.const 524)
      )
     )
    )
    (if
     (local.get $2)
     (block
      (drop
       (call $_memcpy
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.load
          (local.get $5)
         )
        )
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 528)
         )
        )
        (local.get $2)
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $5)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.const 0)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 520)
     )
     (i32.load
      (local.get $1)
     )
    )
    (i32.store
     (local.get $6)
     (i32.const 0)
    )
    (return)
   )
  )
  (call $_png_push_crc_finish
   (local.get $0)
  )
  (local.set $4
   (i32.load
    (local.tee $2
     (i32.add
      (local.get $0)
      (i32.const 576)
     )
    )
   )
  )
  (i32.store
   (local.get $2)
   (i32.const 0)
  )
  (local.set $2
   (local.get $4)
  )
  (loop $while-in1
   (local.set $3
    (i32.add
     (local.get $2)
     (i32.const 1)
    )
   )
   (if
    (i32.load8_s
     (local.get $2)
    )
    (block
     (local.set $2
      (local.get $3)
     )
     (br $while-in1)
    )
   )
  )
  (if
   (i32.eq
    (local.get $2)
    (i32.add
     (local.get $4)
     (local.tee $5
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 568)
       )
      )
     )
    )
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $4)
    )
    (return)
   )
  )
  (if
   (i32.load8_s
    (local.get $3)
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $4)
    )
    (return)
   )
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $0)
     (i32.const 208)
    )
   )
   (local.tee $2
    (i32.add
     (local.get $2)
     (i32.const 2)
    )
   )
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.get $0)
     (i32.const 212)
    )
   )
   (local.tee $2
    (i32.sub
     (local.get $5)
     (local.tee $8
      (i32.sub
       (local.get $2)
       (local.get $4)
      )
     )
    )
   )
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $0)
     (i32.const 220)
    )
   )
   (i32.load
    (local.tee $11
     (i32.add
      (local.get $0)
      (i32.const 264)
     )
    )
   )
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $0)
     (i32.const 224)
    )
   )
   (i32.load
    (local.tee $7
     (i32.add
      (local.get $0)
      (i32.const 268)
     )
    )
   )
  )
  (if
   (local.get $2)
   (block $label$break$L37
    (local.set $3
     (i32.const 0)
    )
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in3
     (if
      (i32.le_u
       (local.tee $5
        (call $_inflate
         (local.get $9)
        )
       )
       (i32.const 1)
      )
      (block
       (if
        (i32.eqz
         (i32.or
          (local.tee $13
           (i32.eq
            (local.get $5)
            (i32.const 1)
           )
          )
          (i32.eqz
           (local.tee $5
            (i32.load
             (local.get $6)
            )
           )
          )
         )
        )
        (block
         (local.set $3
          (i32.const 0)
         )
         (br $label$break$L37)
        )
       )
       (local.set $5
        (i32.add
         (i32.sub
          (i32.load
           (local.get $7)
          )
          (local.get $5)
         )
         (i32.const 1)
        )
       )
       (i32.store8
        (if (result i32)
         (local.get $2)
         (block (result i32)
          (drop
           (call $_memcpy
            (local.tee $5
             (call $_png_malloc
              (local.get $0)
              (i32.add
               (local.get $3)
               (local.get $5)
              )
             )
            )
            (local.get $2)
            (local.get $3)
           )
          )
          (call $_png_free
           (local.get $0)
           (local.get $2)
          )
          (drop
           (call $_memcpy
            (i32.add
             (local.get $3)
             (local.get $5)
            )
            (i32.load
             (local.get $11)
            )
            (i32.sub
             (i32.load
              (local.get $7)
             )
             (i32.load
              (local.get $6)
             )
            )
           )
          )
          (local.set $3
           (local.tee $2
            (i32.add
             (local.get $3)
             (i32.sub
              (i32.load
               (local.get $7)
              )
              (i32.load
               (local.get $6)
              )
             )
            )
           )
          )
          (i32.add
           (local.get $2)
           (local.tee $2
            (local.get $5)
           )
          )
         )
         (block (result i32)
          (drop
           (call $_memcpy
            (i32.add
             (local.get $8)
             (local.tee $2
              (call $_png_malloc
               (local.get $0)
               (i32.add
                (local.get $5)
                (local.get $8)
               )
              )
             )
            )
            (i32.load
             (local.get $11)
            )
            (i32.sub
             (i32.load
              (local.get $7)
             )
             (i32.load
              (local.get $6)
             )
            )
           )
          )
          (drop
           (call $_memcpy
            (local.get $2)
            (local.get $4)
            (local.get $8)
           )
          )
          (local.set $3
           (local.tee $5
            (i32.sub
             (i32.add
              (local.get $8)
              (i32.load
               (local.get $7)
              )
             )
             (i32.load
              (local.get $6)
             )
            )
           )
          )
          (i32.add
           (local.get $2)
           (local.get $5)
          )
         )
        )
        (i32.const 0)
       )
       (if
        (local.get $13)
        (block
         (local.set $3
          (i32.const 1)
         )
         (br $label$break$L37)
        )
       )
       (i32.store
        (local.get $12)
        (i32.load
         (local.get $11)
        )
       )
       (i32.store
        (local.get $6)
        (i32.load
         (local.get $7)
        )
       )
       (br_if $while-in3
        (i32.load
         (local.get $10)
        )
       )
       (local.set $3
        (i32.const 0)
       )
       (br $label$break$L37)
      )
     )
    )
    (drop
     (call $_inflateReset
      (local.get $9)
     )
    )
    (i32.store
     (local.get $10)
     (i32.const 0)
    )
    (call $_png_free
     (local.get $0)
     (local.get $4)
    )
    (call $_png_free
     (local.get $0)
     (local.get $2)
    )
    (return)
   )
   (block
    (local.set $3
     (i32.const 1)
    )
    (local.set $2
     (i32.const 0)
    )
   )
  )
  (drop
   (call $_inflateReset
    (local.get $9)
   )
  )
  (i32.store
   (local.get $10)
   (i32.const 0)
  )
  (call $_png_free
   (local.get $0)
   (local.get $4)
  )
  (if
   (local.get $3)
   (block
    (local.set $4
     (i32.add
      (local.get $2)
      (local.get $8)
     )
    )
    (i32.store
     (local.tee $3
      (call $_png_malloc
       (local.get $0)
       (i32.const 16)
      )
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (local.get $3)
      (i32.const 4)
     )
     (local.get $2)
    )
    (i32.store
     (i32.add
      (local.get $3)
      (i32.const 8)
     )
     (local.get $4)
    )
    (call $_png_set_text
     (local.get $0)
     (local.get $1)
     (local.get $3)
    )
    (call $_png_free
     (local.get $0)
     (local.get $2)
    )
    (call $_png_free
     (local.get $0)
     (local.get $3)
    )
   )
   (call $_png_free
    (local.get $0)
    (local.get $2)
   )
  )
 )
 (func $_png_push_crc_finish (; 98 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   (local.tee $1
    (i32.load
     (local.tee $2
      (i32.add
       (local.get $0)
       (i32.const 540)
      )
     )
    )
   )
   (block $do-once
    (if
     (local.tee $3
      (i32.load
       (local.tee $4
        (i32.add
         (local.get $0)
         (i32.const 544)
        )
       )
      )
     )
     (block
      (call $_png_calculate_crc
       (local.get $0)
       (i32.load
        (local.tee $5
         (i32.add
          (local.get $0)
          (i32.const 520)
         )
        )
       )
       (local.tee $3
        (select
         (local.get $1)
         (local.get $3)
         (i32.lt_u
          (local.get $1)
          (local.get $3)
         )
        )
       )
      )
      (i32.store
       (local.get $2)
       (local.tee $1
        (i32.sub
         (i32.load
          (local.get $2)
         )
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.tee $6
        (i32.add
         (local.get $0)
         (i32.const 552)
        )
       )
       (i32.sub
        (i32.load
         (local.get $6)
        )
        (local.get $3)
       )
      )
      (i32.store
       (local.get $4)
       (i32.sub
        (i32.load
         (local.get $4)
        )
        (local.get $3)
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.get $3)
        (i32.load
         (local.get $5)
        )
       )
      )
      (br_if $do-once
       (i32.eqz
        (local.get $1)
       )
      )
     )
    )
    (if
     (i32.eqz
      (local.tee $4
       (i32.load
        (local.tee $3
         (i32.add
          (local.get $0)
          (i32.const 556)
         )
        )
       )
      )
     )
     (return)
    )
    (call $_png_calculate_crc
     (local.get $0)
     (i32.load
      (local.tee $5
       (i32.add
        (local.get $0)
        (i32.const 528)
       )
      )
     )
     (local.tee $1
      (select
       (local.get $1)
       (local.get $4)
       (i32.lt_u
        (local.get $1)
        (local.get $4)
       )
      )
     )
    )
    (i32.store
     (local.get $2)
     (local.tee $2
      (i32.sub
       (i32.load
        (local.get $2)
       )
       (local.get $1)
      )
     )
    )
    (i32.store
     (local.tee $4
      (i32.add
       (local.get $0)
       (i32.const 552)
      )
     )
     (i32.sub
      (i32.load
       (local.get $4)
      )
      (local.get $1)
     )
    )
    (i32.store
     (local.get $3)
     (i32.sub
      (i32.load
       (local.get $3)
      )
      (local.get $1)
     )
    )
    (i32.store
     (local.get $5)
     (i32.add
      (local.get $1)
      (i32.load
       (local.get $5)
      )
     )
    )
    (if
     (local.get $2)
     (return)
    )
   )
  )
  (if
   (i32.ge_u
    (i32.load
     (local.tee $6
      (i32.add
       (local.get $0)
       (i32.const 552)
      )
     )
    )
    (i32.const 4)
   )
   (block
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (i32.const 0)
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 560)
     )
     (i32.const 1)
    )
    (return)
   )
  )
  (local.set $1
   (if (result i32)
    (local.tee $4
     (i32.load
      (local.tee $5
       (i32.add
        (local.get $0)
        (i32.const 544)
       )
      )
     )
    )
    (if (result i32)
     (i32.eq
      (local.tee $1
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
       )
      )
      (local.tee $2
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 524)
        )
       )
      )
     )
     (local.get $4)
     (block (result i32)
      (local.set $3
       (i32.const 0)
      )
      (loop $while-in
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (i32.ne
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.get $4)
        )
       )
      )
      (i32.load
       (local.get $5)
      )
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.gt_u
    (local.tee $4
     (i32.add
      (local.tee $2
       (i32.load
        (local.tee $3
         (i32.add
          (local.get $0)
          (i32.const 556)
         )
        )
       )
      )
      (local.get $1)
     )
    )
    (i32.load
     (local.tee $7
      (i32.add
       (local.get $0)
       (i32.const 548)
      )
     )
    )
   )
   (block
    (local.set $2
     (i32.load
      (local.tee $1
       (i32.add
        (local.get $0)
        (i32.const 524)
       )
      )
     )
    )
    (i32.store
     (local.get $1)
     (local.tee $8
      (call $_png_malloc
       (local.get $0)
       (local.tee $4
        (i32.add
         (local.get $4)
         (i32.const 256)
        )
       )
      )
     )
    )
    (drop
     (call $_memcpy
      (local.get $8)
      (local.get $2)
      (i32.load
       (local.get $5)
      )
     )
    )
    (call $_png_free
     (local.get $0)
     (local.get $2)
    )
    (i32.store
     (local.get $7)
     (local.get $4)
    )
    (local.set $2
     (i32.load
      (local.get $3)
     )
    )
   )
   (local.set $1
    (i32.add
     (local.get $0)
     (i32.const 524)
    )
   )
  )
  (if
   (local.get $2)
   (block
    (drop
     (call $_memcpy
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.load
        (local.get $5)
       )
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 528)
       )
      )
      (local.get $2)
     )
    )
    (i32.store
     (local.get $5)
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.load
       (local.get $5)
      )
     )
    )
    (i32.store
     (local.get $3)
     (i32.const 0)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 520)
   )
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.const 0)
  )
 )
 (func $_png_process_IDAT_data (; 99 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.and
    (i32.ne
     (i32.and
      (i32.load
       (local.tee $3
        (i32.add
         (local.get $0)
         (i32.const 200)
        )
       )
      )
      (i32.const 32)
     )
     (i32.const 0)
    )
    (i32.ne
     (local.get $2)
     (i32.const 0)
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 17792)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $0)
     (i32.const 208)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $0)
     (i32.const 212)
    )
   )
   (local.get $2)
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 224)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 312)
   )
  )
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 328)
   )
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 220)
   )
  )
  (block $__rjto$1
   (loop $label$continue$L4
    (block $__rjti$0
     (block $switch
      (block $switch-default
       (br_table $__rjto$1 $switch-default $switch-default $switch-default $switch-default $switch $__rjti$0 $switch-default
        (i32.sub
         (call $_inflate
          (local.get $4)
         )
         (i32.const -5)
        )
       )
      )
      (call $_png_error
       (local.get $0)
       (i32.const 17837)
      )
     )
     (br_if $__rjto$1
      (i32.load
       (local.get $1)
      )
     )
     (call $_png_push_process_row
      (local.get $0)
     )
     (i32.store
      (local.get $1)
      (i32.load
       (local.get $2)
      )
     )
     (i32.store
      (local.get $7)
      (i32.load
       (local.get $6)
      )
     )
     (br $label$continue$L4)
    )
   )
   (if
    (i32.load
     (local.get $5)
    )
    (call $_png_error
     (local.get $0)
     (i32.const 17815)
    )
   )
   (if
    (i32.eqz
     (i32.load
      (local.get $1)
     )
    )
    (call $_png_push_process_row
     (local.get $0)
    )
   )
   (i32.store
    (local.tee $0
     (i32.add
      (local.get $0)
      (i32.const 196)
     )
    )
    (i32.or
     (i32.load
      (local.get $0)
     )
     (i32.const 8)
    )
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 32)
    )
   )
  )
 )
 (func $_png_push_process_row (; 100 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 356)
   )
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.const 386)
    )
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $0)
     (i32.const 348)
    )
   )
   (local.tee $2
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 316)
     )
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 358)
   )
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.const 390)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 357)
   )
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.const 387)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 359)
   )
   (local.tee $3
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 389)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 352)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
      (local.get $2)
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
  (call $_png_read_filter_row
   (local.get $0)
   (local.get $1)
   (i32.add
    (local.tee $1
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $0)
        (i32.const 328)
       )
      )
     )
    )
    (i32.const 1)
   )
   (i32.add
    (i32.load
     (local.tee $2
      (i32.add
       (local.get $0)
       (i32.const 324)
      )
     )
    )
    (i32.const 1)
   )
   (i32.load8_u
    (local.get $1)
   )
  )
  (call $_png_memcpy_check
   (i32.load
    (local.get $2)
   )
   (i32.load
    (local.get $4)
   )
   (i32.add
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 308)
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.load
    (local.tee $1
     (i32.add
      (local.get $0)
      (i32.const 204)
     )
    )
   )
   (call $_png_do_read_transformations
    (local.get $0)
   )
  )
  (if
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.const 383)
    )
   )
   (if
    (i32.and
     (i32.load
      (local.get $1)
     )
     (i32.const 2)
    )
    (block
     (if
      (i32.lt_s
       (i32.and
        (local.tee $1
         (i32.load8_s
          (local.tee $3
           (i32.add
            (local.get $0)
            (i32.const 384)
           )
          )
         )
        )
        (i32.const 255)
       )
       (i32.const 6)
      )
      (block
       (call $_png_do_read_interlace
        (local.get $0)
       )
       (local.set $1
        (i32.load8_s
         (local.get $3)
        )
       )
      )
     )
     (block $switch-default
      (block $switch-case11
       (block $switch-case10
        (block $switch-case9
         (block $switch-case8
          (block $switch-case5
           (block $switch-case2
            (block $switch-case
             (br_table $switch-case $switch-case2 $switch-case5 $switch-case8 $switch-case9 $switch-case10 $switch-case11 $switch-default
              (i32.shr_s
               (i32.shl
                (local.get $1)
                (i32.const 24)
               )
               (i32.const 24)
              )
             )
            )
            (local.set $5
             (i32.add
              (local.get $0)
              (i32.const 512)
             )
            )
            (local.set $6
             (i32.add
              (local.get $0)
              (i32.const 320)
             )
            )
            (local.set $1
             (i32.const 0)
            )
            (loop $while-in
             (if
              (local.tee $2
               (i32.load
                (local.get $5)
               )
              )
              (call_indirect (type $FUNCSIG$viiii)
               (local.get $0)
               (i32.add
                (i32.load
                 (local.get $4)
                )
                (i32.const 1)
               )
               (i32.load
                (local.get $6)
               )
               (i32.const 0)
               (i32.add
                (i32.and
                 (local.get $2)
                 (i32.const 7)
                )
                (i32.const 66)
               )
              )
             )
             (call $_png_read_push_finish_row
              (local.get $0)
             )
             (br_if $while-in
              (i32.and
               (i32.eqz
                (local.tee $2
                 (i32.load8_s
                  (local.get $3)
                 )
                )
               )
               (i32.lt_u
                (local.tee $1
                 (i32.add
                  (local.get $1)
                  (i32.const 1)
                 )
                )
                (i32.const 8)
               )
              )
             )
            )
            (if
             (i32.eq
              (local.get $2)
              (i32.const 2)
             )
             (block
              (local.set $2
               (i32.add
                (local.get $0)
                (i32.const 320)
               )
              )
              (if
               (local.tee $1
                (i32.load
                 (local.tee $4
                  (i32.add
                   (local.get $0)
                   (i32.const 512)
                  )
                 )
                )
               )
               (call_indirect (type $FUNCSIG$viiii)
                (local.get $0)
                (i32.const 0)
                (i32.load
                 (local.get $2)
                )
                (i32.const 2)
                (i32.add
                 (i32.and
                  (local.get $1)
                  (i32.const 7)
                 )
                 (i32.const 66)
                )
               )
              )
              (call $_png_read_push_finish_row
               (local.get $0)
              )
              (if
               (i32.eq
                (local.tee $1
                 (i32.load8_s
                  (local.get $3)
                 )
                )
                (i32.const 2)
               )
               (block
                (if
                 (local.tee $1
                  (i32.load
                   (local.get $4)
                  )
                 )
                 (call_indirect (type $FUNCSIG$viiii)
                  (local.get $0)
                  (i32.const 0)
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 2)
                  (i32.add
                   (i32.and
                    (local.get $1)
                    (i32.const 7)
                   )
                   (i32.const 66)
                  )
                 )
                )
                (call $_png_read_push_finish_row
                 (local.get $0)
                )
                (if
                 (i32.eq
                  (local.tee $1
                   (i32.load8_s
                    (local.get $3)
                   )
                  )
                  (i32.const 2)
                 )
                 (block
                  (if
                   (local.tee $1
                    (i32.load
                     (local.get $4)
                    )
                   )
                   (call_indirect (type $FUNCSIG$viiii)
                    (local.get $0)
                    (i32.const 0)
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 2)
                    (i32.add
                     (i32.and
                      (local.get $1)
                      (i32.const 7)
                     )
                     (i32.const 66)
                    )
                   )
                  )
                  (call $_png_read_push_finish_row
                   (local.get $0)
                  )
                  (if
                   (i32.eq
                    (local.tee $1
                     (i32.load8_s
                      (local.get $3)
                     )
                    )
                    (i32.const 2)
                   )
                   (block
                    (if
                     (local.tee $1
                      (i32.load
                       (local.get $4)
                      )
                     )
                     (call_indirect (type $FUNCSIG$viiii)
                      (local.get $0)
                      (i32.const 0)
                      (i32.load
                       (local.get $2)
                      )
                      (i32.const 2)
                      (i32.add
                       (i32.and
                        (local.get $1)
                        (i32.const 7)
                       )
                       (i32.const 66)
                      )
                     )
                    )
                    (call $_png_read_push_finish_row
                     (local.get $0)
                    )
                    (local.set $1
                     (i32.load8_s
                      (local.get $3)
                     )
                    )
                   )
                  )
                 )
                )
               )
              )
             )
             (local.set $1
              (local.get $2)
             )
            )
            (if
             (i32.eq
              (i32.and
               (local.get $1)
               (i32.const 255)
              )
              (i32.const 4)
             )
             (if
              (i32.lt_u
               (i32.load
                (i32.add
                 (local.get $0)
                 (i32.const 296)
                )
               )
               (i32.const 5)
              )
              (block
               (local.set $2
                (i32.add
                 (local.get $0)
                 (i32.const 512)
                )
               )
               (local.set $4
                (i32.add
                 (local.get $0)
                 (i32.const 320)
                )
               )
               (if
                (i32.eq
                 (i32.and
                  (local.get $1)
                  (i32.const 255)
                 )
                 (i32.const 4)
                )
                (block
                 (if
                  (local.tee $1
                   (i32.load
                    (local.get $2)
                   )
                  )
                  (call_indirect (type $FUNCSIG$viiii)
                   (local.get $0)
                   (i32.const 0)
                   (i32.load
                    (local.get $4)
                   )
                   (i32.const 4)
                   (i32.add
                    (i32.and
                     (local.get $1)
                     (i32.const 7)
                    )
                    (i32.const 66)
                   )
                  )
                 )
                 (call $_png_read_push_finish_row
                  (local.get $0)
                 )
                 (if
                  (i32.eq
                   (local.tee $1
                    (i32.load8_s
                     (local.get $3)
                    )
                   )
                   (i32.const 4)
                  )
                  (block
                   (if
                    (local.tee $1
                     (i32.load
                      (local.get $2)
                     )
                    )
                    (call_indirect (type $FUNCSIG$viiii)
                     (local.get $0)
                     (i32.const 0)
                     (i32.load
                      (local.get $4)
                     )
                     (i32.const 4)
                     (i32.add
                      (i32.and
                       (local.get $1)
                       (i32.const 7)
                      )
                      (i32.const 66)
                     )
                    )
                   )
                   (call $_png_read_push_finish_row
                    (local.get $0)
                   )
                   (local.set $1
                    (i32.load8_s
                     (local.get $3)
                    )
                   )
                  )
                 )
                )
               )
              )
             )
            )
            (if
             (i32.ne
              (i32.and
               (local.get $1)
               (i32.const 255)
              )
              (i32.const 6)
             )
             (return)
            )
            (if
             (i32.ge_u
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 296)
               )
              )
              (i32.const 5)
             )
             (return)
            )
            (if
             (local.tee $1
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 512)
               )
              )
             )
             (call_indirect (type $FUNCSIG$viiii)
              (local.get $0)
              (i32.const 0)
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 320)
               )
              )
              (i32.const 6)
              (i32.add
               (i32.and
                (local.get $1)
                (i32.const 7)
               )
               (i32.const 66)
              )
             )
            )
            (call $_png_read_push_finish_row
             (local.get $0)
            )
            (return)
           )
           (local.set $2
            (i32.add
             (local.get $0)
             (i32.const 512)
            )
           )
           (local.set $5
            (i32.add
             (local.get $0)
             (i32.const 320)
            )
           )
           (local.set $1
            (i32.const 0)
           )
           (loop $while-in1
            (if
             (local.tee $6
              (i32.load
               (local.get $2)
              )
             )
             (call_indirect (type $FUNCSIG$viiii)
              (local.get $0)
              (i32.add
               (i32.load
                (local.get $4)
               )
               (i32.const 1)
              )
              (i32.load
               (local.get $5)
              )
              (i32.const 1)
              (i32.add
               (i32.and
                (local.get $6)
                (i32.const 7)
               )
               (i32.const 66)
              )
             )
            )
            (call $_png_read_push_finish_row
             (local.get $0)
            )
            (br_if $while-in1
             (i32.and
              (i32.eq
               (local.tee $6
                (i32.load8_s
                 (local.get $3)
                )
               )
               (i32.const 1)
              )
              (i32.lt_u
               (local.tee $1
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (i32.const 8)
              )
             )
            )
           )
           (if
            (i32.ne
             (local.get $6)
             (i32.const 2)
            )
            (return)
           )
           (local.set $1
            (i32.add
             (local.get $0)
             (i32.const 320)
            )
           )
           (if
            (local.tee $4
             (i32.load
              (local.tee $2
               (i32.add
                (local.get $0)
                (i32.const 512)
               )
              )
             )
            )
            (call_indirect (type $FUNCSIG$viiii)
             (local.get $0)
             (i32.const 0)
             (i32.load
              (local.get $1)
             )
             (i32.const 2)
             (i32.add
              (i32.and
               (local.get $4)
               (i32.const 7)
              )
              (i32.const 66)
             )
            )
           )
           (call $_png_read_push_finish_row
            (local.get $0)
           )
           (if
            (i32.ne
             (i32.load8_s
              (local.get $3)
             )
             (i32.const 2)
            )
            (return)
           )
           (if
            (local.tee $4
             (i32.load
              (local.get $2)
             )
            )
            (call_indirect (type $FUNCSIG$viiii)
             (local.get $0)
             (i32.const 0)
             (i32.load
              (local.get $1)
             )
             (i32.const 2)
             (i32.add
              (i32.and
               (local.get $4)
               (i32.const 7)
              )
              (i32.const 66)
             )
            )
           )
           (call $_png_read_push_finish_row
            (local.get $0)
           )
           (if
            (i32.ne
             (i32.load8_s
              (local.get $3)
             )
             (i32.const 2)
            )
            (return)
           )
           (if
            (local.tee $4
             (i32.load
              (local.get $2)
             )
            )
            (call_indirect (type $FUNCSIG$viiii)
             (local.get $0)
             (i32.const 0)
             (i32.load
              (local.get $1)
             )
             (i32.const 2)
             (i32.add
              (i32.and
               (local.get $4)
               (i32.const 7)
              )
              (i32.const 66)
             )
            )
           )
           (call $_png_read_push_finish_row
            (local.get $0)
           )
           (if
            (i32.ne
             (i32.load8_s
              (local.get $3)
             )
             (i32.const 2)
            )
            (return)
           )
           (if
            (local.tee $2
             (i32.load
              (local.get $2)
             )
            )
            (call_indirect (type $FUNCSIG$viiii)
             (local.get $0)
             (i32.const 0)
             (i32.load
              (local.get $1)
             )
             (i32.const 2)
             (i32.add
              (i32.and
               (local.get $2)
               (i32.const 7)
              )
              (i32.const 66)
             )
            )
           )
           (call $_png_read_push_finish_row
            (local.get $0)
           )
           (return)
          )
          (local.set $5
           (i32.add
            (local.get $0)
            (i32.const 320)
           )
          )
          (if
           (local.tee $1
            (i32.load
             (local.tee $6
              (i32.add
               (local.get $0)
               (i32.const 512)
              )
             )
            )
           )
           (call_indirect (type $FUNCSIG$viiii)
            (local.get $0)
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 1)
            )
            (i32.load
             (local.get $5)
            )
            (i32.const 2)
            (i32.add
             (i32.and
              (local.get $1)
              (i32.const 7)
             )
             (i32.const 66)
            )
           )
          )
          (call $_png_read_push_finish_row
           (local.get $0)
          )
          (if
           (i32.eq
            (local.tee $1
             (i32.load8_s
              (local.get $3)
             )
            )
            (i32.const 2)
           )
           (block
            (if
             (local.tee $1
              (i32.load
               (local.get $6)
              )
             )
             (call_indirect (type $FUNCSIG$viiii)
              (local.get $0)
              (i32.add
               (i32.load
                (local.get $4)
               )
               (i32.const 1)
              )
              (i32.load
               (local.get $5)
              )
              (i32.const 2)
              (i32.add
               (i32.and
                (local.get $1)
                (i32.const 7)
               )
               (i32.const 66)
              )
             )
            )
            (call $_png_read_push_finish_row
             (local.get $0)
            )
            (if
             (i32.eq
              (local.tee $1
               (i32.load8_s
                (local.get $3)
               )
              )
              (i32.const 2)
             )
             (block
              (if
               (local.tee $1
                (i32.load
                 (local.get $6)
                )
               )
               (call_indirect (type $FUNCSIG$viiii)
                (local.get $0)
                (i32.add
                 (i32.load
                  (local.get $4)
                 )
                 (i32.const 1)
                )
                (i32.load
                 (local.get $5)
                )
                (i32.const 2)
                (i32.add
                 (i32.and
                  (local.get $1)
                  (i32.const 7)
                 )
                 (i32.const 66)
                )
               )
              )
              (call $_png_read_push_finish_row
               (local.get $0)
              )
              (if
               (i32.eq
                (local.tee $1
                 (i32.load8_s
                  (local.get $3)
                 )
                )
                (i32.const 2)
               )
               (block
                (if
                 (local.tee $1
                  (i32.load
                   (local.get $6)
                  )
                 )
                 (call_indirect (type $FUNCSIG$viiii)
                  (local.get $0)
                  (i32.add
                   (i32.load
                    (local.get $4)
                   )
                   (i32.const 1)
                  )
                  (i32.load
                   (local.get $5)
                  )
                  (i32.const 2)
                  (i32.add
                   (i32.and
                    (local.get $1)
                    (i32.const 7)
                   )
                   (i32.const 66)
                  )
                 )
                )
                (call $_png_read_push_finish_row
                 (local.get $0)
                )
                (if
                 (i32.eq
                  (local.tee $1
                   (i32.load8_s
                    (local.get $3)
                   )
                  )
                  (i32.const 2)
                 )
                 (block
                  (local.set $1
                   (i32.const 0)
                  )
                  (local.set $1
                   (loop $while-in4 (result i32)
                    (if
                     (local.tee $2
                      (i32.load
                       (local.get $6)
                      )
                     )
                     (call_indirect (type $FUNCSIG$viiii)
                      (local.get $0)
                      (i32.const 0)
                      (i32.load
                       (local.get $5)
                      )
                      (i32.const 2)
                      (i32.add
                       (i32.and
                        (local.get $2)
                        (i32.const 7)
                       )
                       (i32.const 66)
                      )
                     )
                    )
                    (call $_png_read_push_finish_row
                     (local.get $0)
                    )
                    (br_if $while-in4
                     (i32.and
                      (i32.eq
                       (local.tee $2
                        (i32.load8_s
                         (local.get $3)
                        )
                       )
                       (i32.const 2)
                      )
                      (i32.lt_u
                       (local.tee $1
                        (i32.add
                         (local.get $1)
                         (i32.const 1)
                        )
                       )
                       (i32.const 4)
                      )
                     )
                    )
                    (local.get $2)
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
          (if
           (i32.ne
            (i32.and
             (local.get $1)
             (i32.const 255)
            )
            (i32.const 4)
           )
           (return)
          )
          (if
           (local.tee $1
            (i32.load
             (local.get $6)
            )
           )
           (call_indirect (type $FUNCSIG$viiii)
            (local.get $0)
            (i32.const 0)
            (i32.load
             (local.get $5)
            )
            (i32.const 4)
            (i32.add
             (i32.and
              (local.get $1)
              (i32.const 7)
             )
             (i32.const 66)
            )
           )
          )
          (call $_png_read_push_finish_row
           (local.get $0)
          )
          (if
           (i32.ne
            (i32.load8_s
             (local.get $3)
            )
            (i32.const 4)
           )
           (return)
          )
          (if
           (local.tee $1
            (i32.load
             (local.get $6)
            )
           )
           (call_indirect (type $FUNCSIG$viiii)
            (local.get $0)
            (i32.const 0)
            (i32.load
             (local.get $5)
            )
            (i32.const 4)
            (i32.add
             (i32.and
              (local.get $1)
              (i32.const 7)
             )
             (i32.const 66)
            )
           )
          )
          (call $_png_read_push_finish_row
           (local.get $0)
          )
          (return)
         )
         (local.set $2
          (i32.add
           (local.get $0)
           (i32.const 512)
          )
         )
         (local.set $5
          (i32.add
           (local.get $0)
           (i32.const 320)
          )
         )
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in7
          (if
           (local.tee $6
            (i32.load
             (local.get $2)
            )
           )
           (call_indirect (type $FUNCSIG$viiii)
            (local.get $0)
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 1)
            )
            (i32.load
             (local.get $5)
            )
            (i32.const 3)
            (i32.add
             (i32.and
              (local.get $6)
              (i32.const 7)
             )
             (i32.const 66)
            )
           )
          )
          (call $_png_read_push_finish_row
           (local.get $0)
          )
          (br_if $while-in7
           (i32.and
            (i32.eq
             (local.tee $6
              (i32.load8_s
               (local.get $3)
              )
             )
             (i32.const 3)
            )
            (i32.lt_u
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.const 4)
            )
           )
          )
         )
         (if
          (i32.ne
           (local.get $6)
           (i32.const 4)
          )
          (return)
         )
         (local.set $1
          (i32.add
           (local.get $0)
           (i32.const 320)
          )
         )
         (if
          (local.tee $4
           (i32.load
            (local.tee $2
             (i32.add
              (local.get $0)
              (i32.const 512)
             )
            )
           )
          )
          (call_indirect (type $FUNCSIG$viiii)
           (local.get $0)
           (i32.const 0)
           (i32.load
            (local.get $1)
           )
           (i32.const 4)
           (i32.add
            (i32.and
             (local.get $4)
             (i32.const 7)
            )
            (i32.const 66)
           )
          )
         )
         (call $_png_read_push_finish_row
          (local.get $0)
         )
         (if
          (i32.ne
           (i32.load8_s
            (local.get $3)
           )
           (i32.const 4)
          )
          (return)
         )
         (if
          (local.tee $2
           (i32.load
            (local.get $2)
           )
          )
          (call_indirect (type $FUNCSIG$viiii)
           (local.get $0)
           (i32.const 0)
           (i32.load
            (local.get $1)
           )
           (i32.const 4)
           (i32.add
            (i32.and
             (local.get $2)
             (i32.const 7)
            )
            (i32.const 66)
           )
          )
         )
         (call $_png_read_push_finish_row
          (local.get $0)
         )
         (return)
        )
        (local.set $2
         (i32.add
          (local.get $0)
          (i32.const 320)
         )
        )
        (if
         (local.tee $1
          (i32.load
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 512)
            )
           )
          )
         )
         (call_indirect (type $FUNCSIG$viiii)
          (local.get $0)
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 1)
          )
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
          (i32.add
           (i32.and
            (local.get $1)
            (i32.const 7)
           )
           (i32.const 66)
          )
         )
        )
        (call $_png_read_push_finish_row
         (local.get $0)
        )
        (if
         (i32.eq
          (local.tee $1
           (i32.load8_s
            (local.get $3)
           )
          )
          (i32.const 4)
         )
         (block
          (if
           (local.tee $1
            (i32.load
             (local.get $5)
            )
           )
           (call_indirect (type $FUNCSIG$viiii)
            (local.get $0)
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 1)
            )
            (i32.load
             (local.get $2)
            )
            (i32.const 4)
            (i32.add
             (i32.and
              (local.get $1)
              (i32.const 7)
             )
             (i32.const 66)
            )
           )
          )
          (call $_png_read_push_finish_row
           (local.get $0)
          )
          (if
           (i32.eq
            (local.tee $1
             (i32.load8_s
              (local.get $3)
             )
            )
            (i32.const 4)
           )
           (block
            (if
             (local.tee $1
              (i32.load
               (local.get $5)
              )
             )
             (call_indirect (type $FUNCSIG$viiii)
              (local.get $0)
              (i32.const 0)
              (i32.load
               (local.get $2)
              )
              (i32.const 4)
              (i32.add
               (i32.and
                (local.get $1)
                (i32.const 7)
               )
               (i32.const 66)
              )
             )
            )
            (call $_png_read_push_finish_row
             (local.get $0)
            )
            (if
             (i32.eq
              (local.tee $1
               (i32.load8_s
                (local.get $3)
               )
              )
              (i32.const 4)
             )
             (block
              (if
               (local.tee $1
                (i32.load
                 (local.get $5)
                )
               )
               (call_indirect (type $FUNCSIG$viiii)
                (local.get $0)
                (i32.const 0)
                (i32.load
                 (local.get $2)
                )
                (i32.const 4)
                (i32.add
                 (i32.and
                  (local.get $1)
                  (i32.const 7)
                 )
                 (i32.const 66)
                )
               )
              )
              (call $_png_read_push_finish_row
               (local.get $0)
              )
              (local.set $1
               (i32.load8_s
                (local.get $3)
               )
              )
             )
            )
           )
          )
         )
        )
        (if
         (i32.ne
          (i32.and
           (local.get $1)
           (i32.const 255)
          )
          (i32.const 6)
         )
         (return)
        )
        (if
         (local.tee $1
          (i32.load
           (local.get $5)
          )
         )
         (call_indirect (type $FUNCSIG$viiii)
          (local.get $0)
          (i32.const 0)
          (i32.load
           (local.get $2)
          )
          (i32.const 6)
          (i32.add
           (i32.and
            (local.get $1)
            (i32.const 7)
           )
           (i32.const 66)
          )
         )
        )
        (call $_png_read_push_finish_row
         (local.get $0)
        )
        (return)
       )
       (local.set $2
        (i32.add
         (local.get $0)
         (i32.const 320)
        )
       )
       (if
        (local.tee $1
         (i32.load
          (local.tee $5
           (i32.add
            (local.get $0)
            (i32.const 512)
           )
          )
         )
        )
        (call_indirect (type $FUNCSIG$viiii)
         (local.get $0)
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 1)
         )
         (i32.load
          (local.get $2)
         )
         (i32.const 5)
         (i32.add
          (i32.and
           (local.get $1)
           (i32.const 7)
          )
          (i32.const 66)
         )
        )
       )
       (call $_png_read_push_finish_row
        (local.get $0)
       )
       (if
        (i32.eq
         (local.tee $1
          (i32.load8_s
           (local.get $3)
          )
         )
         (i32.const 5)
        )
        (block
         (if
          (local.tee $1
           (i32.load
            (local.get $5)
           )
          )
          (call_indirect (type $FUNCSIG$viiii)
           (local.get $0)
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 1)
           )
           (i32.load
            (local.get $2)
           )
           (i32.const 5)
           (i32.add
            (i32.and
             (local.get $1)
             (i32.const 7)
            )
            (i32.const 66)
           )
          )
         )
         (call $_png_read_push_finish_row
          (local.get $0)
         )
         (local.set $1
          (i32.load8_s
           (local.get $3)
          )
         )
        )
       )
       (if
        (i32.ne
         (i32.and
          (local.get $1)
          (i32.const 255)
         )
         (i32.const 6)
        )
        (return)
       )
       (if
        (local.tee $1
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 512)
          )
         )
        )
        (call_indirect (type $FUNCSIG$viiii)
         (local.get $0)
         (i32.const 0)
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 320)
          )
         )
         (i32.const 6)
         (i32.add
          (i32.and
           (local.get $1)
           (i32.const 7)
          )
          (i32.const 66)
         )
        )
       )
       (call $_png_read_push_finish_row
        (local.get $0)
       )
       (return)
      )
      (if
       (local.tee $2
        (i32.load
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 512)
          )
         )
        )
       )
       (call_indirect (type $FUNCSIG$viiii)
        (local.get $0)
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 1)
        )
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 320)
         )
        )
        (i32.const 6)
        (i32.add
         (i32.and
          (local.get $2)
          (i32.const 7)
         )
         (i32.const 66)
        )
       )
      )
      (call $_png_read_push_finish_row
       (local.get $0)
      )
      (if
       (i32.ne
        (i32.load8_s
         (local.get $3)
        )
        (i32.const 6)
       )
       (return)
      )
      (if
       (local.tee $1
        (i32.load
         (local.get $1)
        )
       )
       (call_indirect (type $FUNCSIG$viiii)
        (local.get $0)
        (i32.const 0)
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 320)
         )
        )
        (i32.const 6)
        (i32.add
         (i32.and
          (local.get $1)
          (i32.const 7)
         )
         (i32.const 66)
        )
       )
      )
      (call $_png_read_push_finish_row
       (local.get $0)
      )
      (return)
     )
     (return)
    )
   )
  )
  (if
   (local.tee $1
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 512)
     )
    )
   )
   (call_indirect (type $FUNCSIG$viiii)
    (local.get $0)
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 1)
    )
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 320)
     )
    )
    (i32.load8_u
     (i32.add
      (local.get $0)
      (i32.const 384)
     )
    )
    (i32.add
     (i32.and
      (local.get $1)
      (i32.const 7)
     )
     (i32.const 66)
    )
   )
  )
  (call $_png_read_push_finish_row
   (local.get $0)
  )
 )
 (func $_png_read_push_finish_row (; 101 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $1
   (i32.add
    (i32.load
     (local.tee $2
      (i32.add
       (local.get $0)
       (i32.const 320)
      )
     )
    )
    (i32.const 1)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  (if
   (i32.lt_u
    (local.get $1)
    (i32.load
     (local.tee $5
      (i32.add
       (local.get $0)
       (i32.const 300)
      )
     )
    )
   )
   (return)
  )
  (if
   (i32.eqz
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 383)
     )
    )
   )
   (return)
  )
  (i32.store
   (local.get $2)
   (i32.const 0)
  )
  (call $_png_memset_check
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 324)
    )
   )
   (i32.add
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 308)
     )
    )
    (i32.const 1)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 292)
   )
  )
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 316)
   )
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 389)
   )
  )
  (local.set $8
   (i32.add
    (local.get $0)
    (i32.const 312)
   )
  )
  (local.set $9
   (i32.add
    (local.get $0)
    (i32.const 204)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 296)
   )
  )
  (local.set $0
   (i32.load8_s
    (local.tee $11
     (i32.add
      (local.get $0)
      (i32.const 384)
     )
    )
   )
  )
  (loop $label$continue$L7
   (block $label$break$L7
    (local.set $2
     (i32.shr_s
      (i32.shl
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
       (i32.const 24)
      )
      (i32.const 24)
     )
    )
    (block $__rjto$1
     (block $__rjti$1
      (block $__rjti$0
       (block $switch-default
        (block $switch-case1
         (block $switch-case0
          (block $switch-case
           (br_table $switch-case $switch-default $switch-case0 $switch-default $switch-case1 $switch-default
            (i32.shr_s
             (i32.shl
              (local.get $0)
              (i32.const 24)
             )
             (i32.const 24)
            )
           )
          )
          (br_if $__rjti$1
           (i32.ge_u
            (local.tee $1
             (i32.load
              (local.get $3)
             )
            )
            (i32.const 5)
           )
          )
          (local.set $2
           (local.get $1)
          )
          (br $__rjti$0)
         )
         (br_if $__rjti$1
          (i32.ge_u
           (local.tee $1
            (i32.load
             (local.get $3)
            )
           )
           (i32.const 3)
          )
         )
         (local.set $2
          (local.get $1)
         )
         (br $__rjti$0)
        )
        (br_if $__rjti$1
         (i32.ge_u
          (local.tee $1
           (i32.load
            (local.get $3)
           )
          )
          (i32.const 2)
         )
        )
        (local.set $2
         (local.get $1)
        )
        (br $__rjti$0)
       )
       (br_if $__rjti$1
        (i32.le_s
         (i32.and
          (local.get $2)
          (i32.const 255)
         )
         (i32.const 6)
        )
       )
       (local.set $0
        (local.get $2)
       )
       (br $label$break$L7)
      )
      (local.set $0
       (local.tee $1
        (i32.shr_s
         (i32.shl
          (i32.add
           (local.get $0)
           (i32.const 2)
          )
          (i32.const 24)
         )
         (i32.const 24)
        )
       )
      )
      (local.set $1
       (i32.and
        (local.get $1)
        (i32.const 255)
       )
      )
      (br $__rjto$1)
     )
     (local.set $1
      (i32.and
       (local.tee $0
        (local.get $2)
       )
       (i32.const 255)
      )
     )
     (local.set $2
      (i32.load
       (local.get $3)
      )
     )
    )
    (i32.store
     (local.get $6)
     (local.tee $2
      (i32.div_u
       (local.tee $12
        (i32.sub
         (i32.add
          (local.tee $4
           (i32.load
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (i32.const 1440)
            )
           )
          )
          (i32.add
           (local.get $2)
           (i32.const -1)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (i32.const 1408)
          )
         )
        )
       )
       (local.get $4)
      )
     )
    )
    (i32.store
     (local.get $8)
     (i32.add
      (i32.shr_u
       (i32.add
        (i32.mul
         (local.get $2)
         (i32.load8_u
          (local.get $7)
         )
        )
        (i32.const 7)
       )
       (i32.const 3)
      )
      (i32.const 1)
     )
    )
    (br_if $label$break$L7
     (i32.and
      (i32.load
       (local.get $9)
      )
      (i32.const 2)
     )
    )
    (i32.store
     (local.get $5)
     (i32.div_u
      (local.tee $1
       (i32.sub
        (i32.add
         (local.tee $2
          (i32.load
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (i32.const 1504)
           )
          )
         )
         (i32.add
          (i32.load
           (local.get $10)
          )
          (i32.const -1)
         )
        )
        (i32.load
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (i32.const 1472)
         )
        )
       )
      )
      (local.get $2)
     )
    )
    (br_if $label$continue$L7
     (i32.or
      (i32.gt_u
       (local.get $4)
       (local.get $12)
      )
      (i32.gt_u
       (local.get $2)
       (local.get $1)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $11)
   (local.get $0)
  )
 )
 (func $_png_push_handle_unknown (; 102 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $3
   (local.get $5)
  )
  (call $_png_check_chunk_name
   (local.get $0)
   (local.tee $4
    (i32.add
     (local.get $0)
     (i32.const 376)
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load8_s
      (local.get $4)
     )
     (i32.const 32)
    )
   )
   (block
    (if
     (i32.ne
      (call $_png_handle_as_unknown
       (local.get $0)
       (local.get $4)
      )
      (i32.const 3)
     )
     (if
      (i32.eqz
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 632)
        )
       )
      )
      (call $_png_chunk_error
       (local.get $0)
       (i32.const 17965)
      )
     )
    )
    (if
     (i32.eqz
      (local.get $1)
     )
     (block
      (global.set $STACKTOP
       (local.get $5)
      )
      (return)
     )
    )
   )
  )
  (if
   (i32.and
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 200)
     )
    )
    (i32.const 32768)
   )
   (block
    (call $_strcpy
     (local.get $3)
     (local.get $4)
    )
    (local.set $6
     (call $_png_malloc
      (local.get $0)
      (local.get $2)
     )
    )
    (i32.store
     (local.tee $7
      (i32.add
       (local.get $3)
       (i32.const 8)
      )
     )
     (local.get $6)
    )
    (call $_png_crc_read
     (local.get $0)
     (local.get $6)
     (local.get $2)
    )
    (i32.store
     (i32.add
      (local.get $3)
      (i32.const 12)
     )
     (local.get $2)
    )
    (if
     (local.tee $2
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 632)
       )
      )
     )
     (block
      (if
       (i32.lt_s
        (call_indirect (type $FUNCSIG$iii)
         (local.get $0)
         (local.get $3)
         (i32.add
          (i32.and
           (local.get $2)
           (i32.const 7)
          )
          (i32.const 4)
         )
        )
        (i32.const 1)
       )
       (if
        (i32.eqz
         (i32.and
          (i32.load8_s
           (local.get $4)
          )
          (i32.const 32)
         )
        )
        (if
         (i32.ne
          (call $_png_handle_as_unknown
           (local.get $0)
           (local.get $4)
          )
          (i32.const 3)
         )
         (call $_png_chunk_error
          (local.get $0)
          (i32.const 17965)
         )
        )
       )
      )
      (call $_png_set_unknown_chunks
       (local.get $0)
       (local.get $1)
       (local.get $3)
      )
     )
     (call $_png_set_unknown_chunks
      (local.get $0)
      (local.get $1)
      (local.get $3)
     )
    )
    (call $_png_free
     (local.get $0)
     (i32.load
      (local.get $7)
     )
    )
    (local.set $2
     (i32.const 0)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 560)
   )
   (i32.const 3)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 540)
   )
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_png_push_fill_buffer (; 103 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (local.tee $3
    (i32.load
     (local.tee $4
      (i32.add
       (local.get $0)
       (i32.const 544)
      )
     )
    )
   )
   (block
    (drop
     (call $_memcpy
      (local.get $1)
      (i32.load
       (local.tee $5
        (i32.add
         (local.get $0)
         (i32.const 520)
        )
       )
      )
      (local.tee $3
       (select
        (local.get $2)
        (local.get $3)
        (i32.gt_u
         (local.get $3)
         (local.get $2)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $6
      (i32.add
       (local.get $0)
       (i32.const 552)
      )
     )
     (i32.sub
      (i32.load
       (local.get $6)
      )
      (local.get $3)
     )
    )
    (i32.store
     (local.get $4)
     (i32.sub
      (i32.load
       (local.get $4)
      )
      (local.get $3)
     )
    )
    (i32.store
     (local.get $5)
     (i32.add
      (local.get $3)
      (i32.load
       (local.get $5)
      )
     )
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $3)
     )
    )
    (local.set $2
     (i32.sub
      (local.get $2)
      (local.get $3)
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (return)
  )
  (if
   (i32.eqz
    (local.tee $4
     (i32.load
      (local.tee $3
       (i32.add
        (local.get $0)
        (i32.const 556)
       )
      )
     )
    )
   )
   (return)
  )
  (drop
   (call $_memcpy
    (local.get $1)
    (i32.load
     (local.tee $5
      (i32.add
       (local.get $0)
       (i32.const 528)
      )
     )
    )
    (local.tee $1
     (select
      (local.get $2)
      (local.get $4)
      (i32.lt_u
       (local.get $2)
       (local.get $4)
      )
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 552)
    )
   )
   (i32.sub
    (i32.load
     (local.get $0)
    )
    (local.get $1)
   )
  )
  (i32.store
   (local.get $3)
   (i32.sub
    (i32.load
     (local.get $3)
    )
    (local.get $1)
   )
  )
  (i32.store
   (local.get $5)
   (i32.add
    (local.get $1)
    (i32.load
     (local.get $5)
    )
   )
  )
 )
 (func $_png_set_progressive_read_fn (; 104 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 508)
   )
   (local.get $2)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 512)
   )
   (local.get $3)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 516)
   )
   (local.get $4)
  )
  (call $_png_set_read_fn
   (local.get $0)
   (local.get $1)
   (i32.const 3)
  )
 )
 (func $_png_create_read_struct (; 105 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call $_png_create_read_struct_2
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
 )
 (func $_png_create_read_struct_2 (; 106 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local.set $17
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (local.set $19
   (i32.add
    (local.get $17)
    (i32.const 88)
   )
  )
  (local.set $20
   (i32.add
    (local.get $17)
    (i32.const 80)
   )
  )
  (local.set $9
   (i32.const 4)
  )
  (i32.store
   (local.tee $7
    (call $_malloc
     (i32.const 40)
    )
   )
   (i32.const 0)
  )
  (local.set $18
   (local.get $17)
  )
  (global.set $__THREW__
   (i32.const 0)
  )
  (local.set $10
   (call $invoke_iiii
    (i32.const 5)
    (i32.const 1)
    (i32.const 0)
    (i32.const 0)
   )
  )
  (local.set $4
   (global.get $__THREW__)
  )
  (global.set $__THREW__
   (i32.const 0)
  )
  (if
   (i32.and
    (i32.ne
     (local.get $4)
     (i32.const 0)
    )
    (i32.ne
     (global.get $threwValue)
     (i32.const 0)
    )
   )
   (block
    (if
     (i32.eqz
      (local.tee $5
       (call $_testSetjmp
        (i32.load
         (local.get $4)
        )
        (local.get $7)
        (i32.const 4)
       )
      )
     )
     (call $_longjmp
      (local.get $4)
      (global.get $threwValue)
     )
    )
    (call $setTempRet0
     (global.get $threwValue)
    )
   )
   (local.set $5
    (i32.const -1)
   )
  )
  (local.set $4
   (call $getTempRet0)
  )
  (block $label$break$L1
   (block $switch-default8
    (block $switch-case0
     (block $switch-case
      (br_table $switch-case $switch-case0 $switch-default8
       (i32.sub
        (local.get $5)
        (i32.const 1)
       )
      )
     )
     (local.set $11
      (local.get $4)
     )
     (local.set $8
      (i32.const 39)
     )
     (br $label$break$L1)
    )
    (local.set $12
     (local.get $4)
    )
    (br $label$break$L1)
   )
   (if
    (i32.eqz
     (local.get $10)
    )
    (block
     (call $_free
      (local.get $7)
     )
     (global.set $STACKTOP
      (local.get $17)
     )
     (return
      (i32.const 0)
     )
    )
   )
   (global.set $__THREW__
    (i32.const 0)
   )
   (call $invoke_vi
    (i32.const 2)
    (local.get $10)
   )
   (local.set $4
    (global.get $__THREW__)
   )
   (global.set $__THREW__
    (i32.const 0)
   )
   (if
    (i32.and
     (i32.ne
      (local.get $4)
      (i32.const 0)
     )
     (i32.ne
      (global.get $threwValue)
      (i32.const 0)
     )
    )
    (block
     (if
      (i32.eqz
       (local.tee $5
        (call $_testSetjmp
         (i32.load
          (local.get $4)
         )
         (local.get $7)
         (i32.const 4)
        )
       )
      )
      (call $_longjmp
       (local.get $4)
       (global.get $threwValue)
      )
     )
     (call $setTempRet0
      (global.get $threwValue)
     )
    )
    (local.set $5
     (i32.const -1)
    )
   )
   (local.set $4
    (call $getTempRet0)
   )
   (block $switch1
    (block $switch-case3
     (block $switch-case2
      (br_table $switch-case2 $switch-case3 $switch1
       (i32.sub
        (local.get $5)
        (i32.const 1)
       )
      )
     )
     (local.set $13
      (local.get $10)
     )
     (local.set $11
      (local.get $4)
     )
     (local.set $8
      (i32.const 39)
     )
     (br $label$break$L1)
    )
    (local.set $6
     (local.get $10)
    )
    (local.set $12
     (local.get $4)
    )
    (br $label$break$L1)
   )
   (local.set $7
    (call $_saveSetjmp
     (local.get $10)
     (i32.const 2)
     (local.get $7)
     (i32.const 4)
    )
   )
   (local.set $9
    (call $getTempRet0)
   )
   (global.set $__THREW__
    (i32.const 0)
   )
   (local.set $4
    (global.get $__THREW__)
   )
   (global.set $__THREW__
    (i32.const 0)
   )
   (if
    (i32.and
     (i32.ne
      (local.get $4)
      (i32.const 0)
     )
     (i32.ne
      (global.get $threwValue)
      (i32.const 0)
     )
    )
    (block
     (if
      (i32.eqz
       (local.tee $5
        (call $_testSetjmp
         (i32.load
          (local.get $4)
         )
         (local.get $7)
         (local.get $9)
        )
       )
      )
      (call $_longjmp
       (local.get $4)
       (global.get $threwValue)
      )
     )
     (call $setTempRet0
      (global.get $threwValue)
     )
    )
    (local.set $5
     (i32.const -1)
    )
   )
   (local.set $4
    (call $getTempRet0)
   )
   (block $switch4
    (block $switch-case6
     (block $switch-case5
      (br_table $switch-case5 $switch-case6 $switch4
       (i32.sub
        (local.get $5)
        (i32.const 1)
       )
      )
     )
     (local.set $13
      (local.get $10)
     )
     (local.set $11
      (local.get $4)
     )
     (local.set $15
      (local.get $10)
     )
     (local.set $8
      (i32.const 39)
     )
     (br $label$break$L1)
    )
    (local.set $12
     (local.get $4)
    )
    (local.set $14
     (local.tee $6
      (local.get $10)
     )
    )
    (br $label$break$L1)
   )
   (local.set $14
    (local.tee $6
     (local.get $10)
    )
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (loop $label$continue$L8
     (block $__rjti$0
      (if
       (i32.eq
        (local.get $8)
        (i32.const 39)
       )
       (block
        (local.set $8
         (i32.const 0)
        )
        (br_if $__rjti$2
         (i32.eqz
          (local.get $11)
         )
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_v
         (i32.const 1)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch-case11
         (block $switch-case10
          (br_table $switch-case10 $switch-case11 $__rjto$2
           (i32.sub
            (local.get $5)
            (i32.const 1)
           )
          )
         )
         (local.set $11
          (local.get $4)
         )
         (local.set $8
          (i32.const 39)
         )
         (br $label$continue$L8)
        )
        (local.set $12
         (local.get $4)
        )
        (local.set $14
         (local.get $15)
        )
        (local.set $6
         (local.get $13)
        )
       )
      )
      (if
       (local.get $12)
       (block
        (local.set $4
         (i32.load
          (local.tee $5
           (i32.add
            (local.get $10)
            (i32.const 264)
           )
          )
         )
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_vii
         (i32.const 4)
         (local.get $6)
         (local.get $4)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $16
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $16
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch13
         (block $switch-case15
          (block $switch-case14
           (br_table $switch-case14 $switch-case15 $switch13
            (i32.sub
             (local.get $16)
             (i32.const 1)
            )
           )
          )
          (local.set $13
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $15
           (local.get $14)
          )
          (local.set $8
           (i32.const 39)
          )
          (br $label$continue$L8)
         )
         (local.set $12
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (i32.store
         (local.get $5)
         (i32.const 0)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_viii
         (i32.const 4)
         (local.get $10)
         (i32.const 0)
         (i32.const 0)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch-case19
         (block $switch-case18
          (br_table $switch-case18 $switch-case19 $__rjti$0
           (i32.sub
            (local.get $5)
            (i32.const 1)
           )
          )
         )
         (local.set $13
          (local.get $6)
         )
         (local.set $11
          (local.get $4)
         )
         (local.set $15
          (local.get $14)
         )
         (local.set $8
          (i32.const 39)
         )
         (br $label$continue$L8)
        )
        (local.set $12
         (local.get $4)
        )
        (br $label$continue$L8)
       )
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viiii
       (i32.const 4)
       (local.get $6)
       (i32.const 0)
       (i32.const 0)
       (i32.const 0)
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $5
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $5
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch21
       (block $switch-case23
        (block $switch-case22
         (br_table $switch-case22 $switch-case23 $switch21
          (i32.sub
           (local.get $5)
           (i32.const 1)
          )
         )
        )
        (local.set $13
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $15
         (local.get $14)
        )
        (local.set $8
         (i32.const 39)
        )
        (br $label$continue$L8)
       )
       (local.set $12
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viiii
       (i32.const 5)
       (local.get $6)
       (local.get $1)
       (local.get $2)
       (local.get $3)
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $5
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $5
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch25
       (block $switch-case27
        (block $switch-case26
         (br_table $switch-case26 $switch-case27 $switch25
          (i32.sub
           (local.get $5)
           (i32.const 1)
          )
         )
        )
        (local.set $13
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $15
         (local.get $14)
        )
        (local.set $8
         (i32.const 39)
        )
        (br $label$continue$L8)
       )
       (local.set $12
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (local.set $16
       (i32.add
        (local.get $10)
        (i32.const 200)
       )
      )
      (local.set $4
       (i32.const 0)
      )
      (loop $while-in
       (if
        (i32.ne
         (local.tee $5
          (i32.load8_s
           (i32.add
            (local.get $4)
            (i32.const 1376)
           )
          )
         )
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.get $4)
          )
         )
        )
        (i32.store
         (local.get $16)
         (i32.or
          (i32.load
           (local.get $16)
          )
          (i32.const 131072)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (local.get $5)
       )
      )
      (if
       (i32.and
        (i32.load
         (local.get $16)
        )
        (i32.const 131072)
       )
       (block $label$break$L25
        (if
         (i32.eq
          (local.tee $4
           (i32.load8_s
            (local.get $0)
           )
          )
          (i32.load8_s
           (i32.const 1376)
          )
         )
         (block $label$break$L27
          (block $switch-case33
           (block $switch-case32
            (br_table $switch-case33 $switch-case32 $label$break$L25
             (i32.sub
              (local.get $4)
              (i32.const 48)
             )
            )
           )
           (br_if $label$break$L25
            (i32.eq
             (i32.load8_s offset=2
              (local.get $0)
             )
             (i32.load8_s
              (i32.const 1378)
             )
            )
           )
           (br $label$break$L27)
          )
          (br_if $label$break$L27
           (i32.lt_s
            (i32.load8_s offset=2
             (local.get $0)
            )
            (i32.const 57)
           )
          )
          (br $label$break$L25)
         )
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (i32.store
         (local.get $20)
         (local.get $0)
        )
        (drop
         (call $invoke_iiii
          (i32.const 6)
          (local.get $18)
          (i32.const 22060)
          (local.get $20)
         )
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch35
         (block $switch-case37
          (block $switch-case36
           (br_table $switch-case36 $switch-case37 $switch35
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $13
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $15
           (local.get $14)
          )
          (local.set $8
           (i32.const 39)
          )
          (br $label$continue$L8)
         )
         (local.set $12
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_vii
         (i32.const 5)
         (local.get $6)
         (local.get $18)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch39
         (block $switch-case41
          (block $switch-case40
           (br_table $switch-case40 $switch-case41 $switch39
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $13
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $15
           (local.get $14)
          )
          (local.set $8
           (i32.const 39)
          )
          (br $label$continue$L8)
         )
         (local.set $12
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (i32.store
         (local.get $19)
         (i32.const 1376)
        )
        (drop
         (call $invoke_iiii
          (i32.const 6)
          (local.get $18)
          (i32.const 22114)
          (local.get $19)
         )
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch43
         (block $switch-case45
          (block $switch-case44
           (br_table $switch-case44 $switch-case45 $switch43
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $13
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $15
           (local.get $14)
          )
          (local.set $8
           (i32.const 39)
          )
          (br $label$continue$L8)
         )
         (local.set $12
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_vii
         (i32.const 5)
         (local.get $6)
         (local.get $18)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch47
         (block $switch-case49
          (block $switch-case48
           (br_table $switch-case48 $switch-case49 $switch47
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $13
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $15
           (local.get $14)
          )
          (local.set $8
           (i32.const 39)
          )
          (br $label$continue$L8)
         )
         (local.set $12
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (i32.store
         (local.get $16)
         (i32.const 0)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_vii
         (i32.const 6)
         (local.get $6)
         (i32.const 22168)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch51
         (block $switch-case53
          (block $switch-case52
           (br_table $switch-case52 $switch-case53 $switch51
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $13
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $15
           (local.get $14)
          )
          (local.set $8
           (i32.const 39)
          )
          (br $label$continue$L8)
         )
         (local.set $12
          (local.get $4)
         )
         (br $label$continue$L8)
        )
       )
      )
      (i32.store
       (local.tee $22
        (i32.add
         (local.get $10)
         (i32.const 268)
        )
       )
       (i32.const 8192)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (local.set $5
       (call $invoke_iii
        (i32.const 4)
        (local.get $6)
        (i32.const 8192)
       )
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $16
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $16
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch55
       (block $switch-case57
        (block $switch-case56
         (br_table $switch-case56 $switch-case57 $switch55
          (i32.sub
           (local.get $16)
           (i32.const 1)
          )
         )
        )
        (local.set $13
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $15
         (local.get $14)
        )
        (local.set $8
         (i32.const 39)
        )
        (br $label$continue$L8)
       )
       (local.set $12
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (i32.store
       (local.tee $16
        (i32.add
         (local.get $10)
         (i32.const 264)
        )
       )
       (local.get $5)
      )
      (i32.store offset=240
       (local.get $10)
       (i32.const 7)
      )
      (i32.store offset=244
       (local.get $10)
       (i32.const 7)
      )
      (i32.store offset=248
       (local.get $10)
       (local.get $10)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (local.set $5
       (call $invoke_iiii
        (i32.const 8)
        (i32.add
         (local.get $10)
         (i32.const 208)
        )
        (i32.const 23921)
        (i32.const 56)
       )
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $21
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $21
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch59
       (block $switch-case61
        (block $switch-case60
         (br_table $switch-case60 $switch-case61 $switch59
          (i32.sub
           (local.get $21)
           (i32.const 1)
          )
         )
        )
        (local.set $13
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $15
         (local.get $14)
        )
        (local.set $8
         (i32.const 39)
        )
        (br $label$continue$L8)
       )
       (local.set $12
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (block $switch63
       (block $switch-default80
        (block $switch-case75
         (block $switch-case70
          (br_table $switch-case75 $switch-default80 $switch-case70 $switch-default80 $switch-case70 $switch-default80 $switch63 $switch-default80
           (i32.sub
            (local.get $5)
            (i32.const -6)
           )
          )
         )
         (global.set $__THREW__
          (i32.const 0)
         )
         (call $invoke_vii
          (i32.const 6)
          (local.get $6)
          (i32.const 18042)
         )
         (local.set $4
          (global.get $__THREW__)
         )
         (global.set $__THREW__
          (i32.const 0)
         )
         (if
          (i32.and
           (i32.ne
            (local.get $4)
            (i32.const 0)
           )
           (i32.ne
            (global.get $threwValue)
            (i32.const 0)
           )
          )
          (block
           (if
            (i32.eqz
             (local.tee $5
              (call $_testSetjmp
               (i32.load
                (local.get $4)
               )
               (local.get $7)
               (local.get $9)
              )
             )
            )
            (call $_longjmp
             (local.get $4)
             (global.get $threwValue)
            )
           )
           (call $setTempRet0
            (global.get $threwValue)
           )
          )
          (local.set $5
           (i32.const -1)
          )
         )
         (local.set $4
          (call $getTempRet0)
         )
         (block $switch66
          (block $switch-case68
           (block $switch-case67
            (br_table $switch-case67 $switch-case68 $switch66
             (i32.sub
              (local.get $5)
              (i32.const 1)
             )
            )
           )
           (local.set $13
            (local.get $6)
           )
           (local.set $11
            (local.get $4)
           )
           (local.set $15
            (local.get $14)
           )
           (local.set $8
            (i32.const 39)
           )
           (br $label$continue$L8)
          )
          (local.set $12
           (local.get $4)
          )
          (br $label$continue$L8)
         )
         (br $switch63)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_vii
         (i32.const 6)
         (local.get $6)
         (i32.const 18060)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch71
         (block $switch-case73
          (block $switch-case72
           (br_table $switch-case72 $switch-case73 $switch71
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $13
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $15
           (local.get $14)
          )
          (local.set $8
           (i32.const 39)
          )
          (br $label$continue$L8)
         )
         (local.set $12
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (br $switch63)
       )
       (global.set $__THREW__
        (i32.const 0)
       )
       (call $invoke_vii
        (i32.const 6)
        (local.get $6)
        (i32.const 18079)
       )
       (local.set $4
        (global.get $__THREW__)
       )
       (global.set $__THREW__
        (i32.const 0)
       )
       (if
        (i32.and
         (i32.ne
          (local.get $4)
          (i32.const 0)
         )
         (i32.ne
          (global.get $threwValue)
          (i32.const 0)
         )
        )
        (block
         (if
          (i32.eqz
           (local.tee $5
            (call $_testSetjmp
             (i32.load
              (local.get $4)
             )
             (local.get $7)
             (local.get $9)
            )
           )
          )
          (call $_longjmp
           (local.get $4)
           (global.get $threwValue)
          )
         )
         (call $setTempRet0
          (global.get $threwValue)
         )
        )
        (local.set $5
         (i32.const -1)
        )
       )
       (local.set $4
        (call $getTempRet0)
       )
       (block $switch76
        (block $switch-case78
         (block $switch-case77
          (br_table $switch-case77 $switch-case78 $switch76
           (i32.sub
            (local.get $5)
            (i32.const 1)
           )
          )
         )
         (local.set $13
          (local.get $6)
         )
         (local.set $11
          (local.get $4)
         )
         (local.set $15
          (local.get $14)
         )
         (local.set $8
          (i32.const 39)
         )
         (br $label$continue$L8)
        )
        (local.set $12
         (local.get $4)
        )
        (br $label$continue$L8)
       )
      )
      (i32.store offset=220
       (local.get $10)
       (i32.load
        (local.get $16)
       )
      )
      (i32.store offset=224
       (local.get $10)
       (i32.load
        (local.get $22)
       )
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viii
       (i32.const 5)
       (local.get $6)
       (i32.const 0)
       (i32.const 0)
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $5
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $5
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch81
       (block $switch-case83
        (block $switch-case82
         (br_table $switch-case82 $switch-case83 $switch81
          (i32.sub
           (local.get $5)
           (i32.const 1)
          )
         )
        )
        (local.set $13
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $15
         (local.get $14)
        )
        (local.set $8
         (i32.const 39)
        )
        (br $label$continue$L8)
       )
       (local.set $12
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (local.set $7
       (call $_saveSetjmp
        (local.get $14)
        (i32.const 1)
        (local.get $7)
        (local.get $9)
       )
      )
      (local.set $9
       (call $getTempRet0)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $5
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $5
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch85
       (block $switch-case87
        (block $switch-case86
         (br_table $switch-case86 $switch-case87 $switch85
          (i32.sub
           (local.get $5)
           (i32.const 1)
          )
         )
        )
        (local.set $13
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $15
         (local.get $14)
        )
        (local.set $8
         (i32.const 39)
        )
        (br $label$continue$L8)
       )
       (local.set $12
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (local.set $13
       (local.get $6)
      )
      (local.set $11
       (i32.const 0)
      )
      (local.set $15
       (local.get $14)
      )
      (local.set $8
       (i32.const 39)
      )
      (br $label$continue$L8)
     )
    )
    (call $_free
     (local.get $7)
    )
    (global.set $STACKTOP
     (local.get $17)
    )
    (return
     (i32.const 0)
    )
   )
   (call $_free
    (local.get $7)
   )
   (global.set $STACKTOP
    (local.get $17)
   )
   (return
    (local.get $13)
   )
  )
  (i32.const 0)
 )
 (func $_png_start_read_image (; 107 ;) (; has Stack IR ;) (param $0 i32)
  (if
   (i32.and
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 200)
     )
    )
    (i32.const 64)
   )
   (return)
  )
  (call $_png_read_start_row
   (local.get $0)
  )
 )
 (func $_png_destroy_read_struct (; 108 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $4
   (i32.load
    (i32.add
     (local.tee $3
      (if (result i32)
       (local.get $0)
       (local.tee $6
        (i32.load
         (local.get $0)
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 680)
    )
   )
  )
  (local.set $5
   (i32.load
    (i32.add
     (local.get $3)
     (i32.const 672)
    )
   )
  )
  (call $_png_read_destroy
   (local.get $3)
   (local.tee $8
    (if (result i32)
     (local.get $1)
     (local.tee $7
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 0)
    )
   )
   (local.tee $10
    (if (result i32)
     (local.get $2)
     (local.tee $9
      (i32.load
       (local.get $2)
      )
     )
     (i32.const 0)
    )
   )
  )
  (if
   (local.get $8)
   (block
    (call $_png_free_data
     (local.get $3)
     (local.get $8)
     (i32.const 16384)
     (i32.const -1)
    )
    (call $_png_destroy_struct_2
     (local.get $7)
     (local.get $4)
     (local.get $5)
    )
    (i32.store
     (local.get $1)
     (i32.const 0)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $10)
   )
   (block
    (call $_png_destroy_struct_2
     (local.get $6)
     (local.get $4)
     (local.get $5)
    )
    (i32.store
     (local.get $0)
     (i32.const 0)
    )
    (return)
   )
  )
  (call $_png_free_data
   (local.get $3)
   (local.get $10)
   (i32.const 16384)
   (i32.const -1)
  )
  (call $_png_destroy_struct_2
   (local.get $9)
   (local.get $4)
   (local.get $5)
  )
  (i32.store
   (local.get $2)
   (i32.const 0)
  )
  (call $_png_destroy_struct_2
   (local.get $6)
   (local.get $4)
   (local.get $5)
  )
  (i32.store
   (local.get $0)
   (i32.const 0)
  )
 )
 (func $_png_read_destroy (; 109 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 160)
   )
  )
  (if
   (local.get $1)
   (call $_png_info_destroy
    (local.get $0)
    (local.get $1)
   )
  )
  (if
   (local.get $2)
   (call $_png_info_destroy
    (local.get $0)
    (local.get $2)
   )
  )
  (local.set $6
   (local.get $5)
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 264)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 684)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 324)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 584)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 588)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 448)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 452)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 456)
    )
   )
  )
  (if
   (i32.and
    (local.tee $1
     (i32.load
      (local.tee $3
       (i32.add
        (local.get $0)
        (i32.const 624)
       )
      )
     )
    )
    (i32.const 4096)
   )
   (block
    (call $_png_zfree
     (local.get $0)
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 368)
      )
     )
    )
    (local.set $1
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (local.tee $2
    (i32.and
     (local.get $1)
     (i32.const -4097)
    )
   )
  )
  (i32.store
   (local.get $3)
   (local.tee $2
    (i32.and
     (local.tee $1
      (if (result i32)
       (i32.and
        (local.get $1)
        (i32.const 8192)
       )
       (block (result i32)
        (call $_png_free
         (local.get $0)
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 484)
          )
         )
        )
        (i32.load
         (local.get $3)
        )
       )
       (local.get $2)
      )
     )
     (i32.const -8193)
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.and
    (if (result i32)
     (i32.and
      (local.get $1)
      (i32.const 8)
     )
     (block (result i32)
      (call $_png_free
       (local.get $0)
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 592)
        )
       )
      )
      (i32.load
       (local.get $3)
      )
     )
     (local.get $2)
    )
    (i32.const -9)
   )
  )
  (if
   (local.tee $1
    (i32.load
     (local.tee $3
      (i32.add
       (local.get $0)
       (i32.const 460)
      )
     )
    )
   )
   (block
    (local.set $4
     (i32.shl
      (i32.const 1)
      (local.tee $2
       (i32.sub
        (i32.const 8)
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 436)
         )
        )
       )
      )
     )
    )
    (if
     (i32.ne
      (local.get $2)
      (i32.const 31)
     )
     (block
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in
       (call $_png_free
        (local.get $0)
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
       )
       (local.set $1
        (i32.load
         (local.get $3)
        )
       )
       (br_if $while-in
        (i32.lt_s
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.get $4)
        )
       )
      )
     )
    )
    (call $_png_free
     (local.get $0)
     (local.get $1)
    )
   )
  )
  (if
   (local.tee $1
    (i32.load
     (local.tee $3
      (i32.add
       (local.get $0)
       (i32.const 464)
      )
     )
    )
   )
   (block
    (local.set $4
     (i32.shl
      (i32.const 1)
      (local.tee $2
       (i32.sub
        (i32.const 8)
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 436)
         )
        )
       )
      )
     )
    )
    (if
     (i32.ne
      (local.get $2)
      (i32.const 31)
     )
     (block
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in1
       (call $_png_free
        (local.get $0)
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
       )
       (local.set $1
        (i32.load
         (local.get $3)
        )
       )
       (br_if $while-in1
        (i32.lt_s
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.get $4)
        )
       )
      )
     )
    )
    (call $_png_free
     (local.get $0)
     (local.get $1)
    )
   )
  )
  (if
   (local.tee $1
    (i32.load
     (local.tee $3
      (i32.add
       (local.get $0)
       (i32.const 468)
      )
     )
    )
   )
   (block
    (local.set $4
     (i32.shl
      (i32.const 1)
      (local.tee $2
       (i32.sub
        (i32.const 8)
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 436)
         )
        )
       )
      )
     )
    )
    (if
     (i32.ne
      (local.get $2)
      (i32.const 31)
     )
     (block
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in3
       (call $_png_free
        (local.get $0)
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
       )
       (local.set $1
        (i32.load
         (local.get $3)
        )
       )
       (br_if $while-in3
        (i32.lt_s
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.get $4)
        )
       )
      )
     )
    )
    (call $_png_free
     (local.get $0)
     (local.get $1)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 620)
    )
   )
  )
  (call $_inflateEnd
   (i32.add
    (local.get $0)
    (i32.const 208)
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 524)
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $6)
    (local.get $0)
    (i32.const 156)
   )
  )
  (local.set $2
   (i32.load
    (local.tee $1
     (i32.add
      (local.get $0)
      (i32.const 156)
     )
    )
   )
  )
  (local.set $4
   (i32.load
    (local.tee $3
     (i32.add
      (local.get $0)
      (i32.const 160)
     )
    )
   )
  )
  (local.set $8
   (i32.load
    (local.tee $7
     (i32.add
      (local.get $0)
      (i32.const 164)
     )
    )
   )
  )
  (local.set $10
   (i32.load
    (local.tee $9
     (i32.add
      (local.get $0)
      (i32.const 680)
     )
    )
   )
  )
  (drop
   (call $_memset
    (i32.add
     (local.get $0)
     (i32.const 168)
    )
    (i32.const 0)
    (i32.const 520)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $2)
  )
  (i32.store
   (local.get $3)
   (local.get $4)
  )
  (i32.store
   (local.get $7)
   (local.get $8)
  )
  (i32.store
   (local.get $9)
   (local.get $10)
  )
  (drop
   (call $_memcpy
    (local.get $0)
    (local.get $6)
    (i32.const 156)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_png_read_data (; 110 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (if
   (local.tee $3
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 172)
     )
    )
   )
   (call_indirect (type $FUNCSIG$viii)
    (local.get $0)
    (local.get $1)
    (local.get $2)
    (i32.add
     (i32.and
      (local.get $3)
      (i32.const 7)
     )
     (i32.const 58)
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 18098)
   )
  )
 )
 (func $_png_default_read_data (; 111 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.eq
    (call $_fread
     (local.get $1)
     (local.get $2)
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 176)
      )
     )
    )
    (local.get $2)
   )
   (return)
  )
  (call $_png_error
   (local.get $0)
   (i32.const 18125)
  )
 )
 (func $_png_set_read_fn (; 112 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 176)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 172)
   )
   (select
    (local.get $2)
    (i32.const 6)
    (local.get $2)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.tee $1
      (i32.add
       (local.get $0)
       (i32.const 168)
      )
     )
    )
   )
   (block
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 424)
     )
     (i32.const 0)
    )
    (return)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 0)
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 18136)
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 18201)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 424)
   )
   (i32.const 0)
  )
 )
 (func $_png_init_read_transformations (; 113 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 i32)
  (local $10 f64)
  (local $11 i32)
  (local $12 i32)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f32)
  (local $20 i32)
  (local $21 i32)
  (local $22 f64)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local.set $4
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.const 386)
    )
   )
  )
  (block $__rjto$3
   (block $__rjti$3
    (block $__rjti$2
     (br_if $__rjti$2
      (i32.ne
       (i32.and
        (local.tee $7
         (i32.load
          (local.tee $16
           (i32.add
            (local.get $0)
            (i32.const 204)
           )
          )
         )
        )
        (i32.const 4352)
       )
       (i32.const 4352)
      )
     )
     (if
      (i32.eqz
       (i32.and
        (local.get $4)
        (i32.const 2)
       )
      )
      (block
       (block $switch-case3
        (block $switch-case1
         (block $switch-case0
          (block $switch-case
           (br_table $switch-case $switch-case0 $__rjti$2 $switch-case1 $__rjti$2 $__rjti$2 $__rjti$2 $switch-case3 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $switch-case3 $__rjti$2
            (i32.sub
             (i32.load8_s
              (i32.add
               (local.get $0)
               (i32.const 387)
              )
             )
             (i32.const 1)
            )
           )
          )
          (local.set $1
           (i32.and
            (i32.mul
             (i32.load16_u
              (local.tee $3
               (i32.add
                (local.get $0)
                (i32.const 412)
               )
              )
             )
             (i32.const 255)
            )
            (i32.const 65535)
           )
          )
          (i32.store16
           (local.get $3)
           (local.get $1)
          )
          (i32.store16
           (i32.add
            (local.get $0)
            (i32.const 410)
           )
           (local.get $1)
          )
          (i32.store16
           (i32.add
            (local.get $0)
            (i32.const 408)
           )
           (local.get $1)
          )
          (i32.store16
           (i32.add
            (local.get $0)
            (i32.const 406)
           )
           (local.get $1)
          )
          (br $__rjti$2)
         )
         (local.set $1
          (i32.and
           (i32.mul
            (i32.load16_u
             (local.tee $3
              (i32.add
               (local.get $0)
               (i32.const 412)
              )
             )
            )
            (i32.const 85)
           )
           (i32.const 65535)
          )
         )
         (i32.store16
          (local.get $3)
          (local.get $1)
         )
         (i32.store16
          (i32.add
           (local.get $0)
           (i32.const 410)
          )
          (local.get $1)
         )
         (i32.store16
          (i32.add
           (local.get $0)
           (i32.const 408)
          )
          (local.get $1)
         )
         (i32.store16
          (i32.add
           (local.get $0)
           (i32.const 406)
          )
          (local.get $1)
         )
         (br $__rjti$2)
        )
        (local.set $1
         (i32.and
          (i32.mul
           (i32.load16_u
            (local.tee $3
             (i32.add
              (local.get $0)
              (i32.const 412)
             )
            )
           )
           (i32.const 17)
          )
          (i32.const 65535)
         )
        )
        (i32.store16
         (local.get $3)
         (local.get $1)
        )
        (i32.store16
         (i32.add
          (local.get $0)
          (i32.const 410)
         )
         (local.get $1)
        )
        (i32.store16
         (i32.add
          (local.get $0)
          (i32.const 408)
         )
         (local.get $1)
        )
        (i32.store16
         (i32.add
          (local.get $0)
          (i32.const 406)
         )
         (local.get $1)
        )
        (br $__rjti$2)
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 410)
        )
        (local.tee $1
         (i32.load16_s
          (i32.add
           (local.get $0)
           (i32.const 412)
          )
         )
        )
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 408)
        )
        (local.get $1)
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 406)
        )
        (local.get $1)
       )
       (br $__rjti$2)
      )
     )
     (block $label$break$L1
      (if
       (i32.ne
        (local.get $4)
        (i32.const 3)
       )
       (block
        (i64.store align=2
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 414)
          )
         )
         (i64.load align=2
          (local.tee $4
           (i32.add
            (local.get $0)
            (i32.const 404)
           )
          )
         )
        )
        (i32.store16 offset=8
         (local.get $1)
         (i32.load16_s offset=8
          (local.get $4)
         )
        )
        (br $label$break$L1)
       )
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 406)
       )
       (i32.load8_u
        (i32.add
         (local.tee $2
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 368)
           )
          )
         )
         (i32.mul
          (local.tee $3
           (i32.load8_u
            (local.tee $1
             (i32.add
              (local.get $0)
              (i32.const 404)
             )
            )
           )
          )
          (i32.const 3)
         )
        )
       )
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 408)
       )
       (i32.load8_u
        (i32.add
         (i32.add
          (i32.mul
           (local.get $3)
           (i32.const 3)
          )
          (local.get $2)
         )
         (i32.const 1)
        )
       )
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 410)
       )
       (i32.load8_u
        (i32.add
         (i32.add
          (i32.mul
           (local.get $3)
           (i32.const 3)
          )
          (local.get $2)
         )
         (i32.const 2)
        )
       )
      )
      (if
       (i32.ne
        (i32.and
         (local.get $7)
         (i32.const 528384)
        )
        (i32.const 524288)
       )
       (block
        (i64.store align=2
         (local.tee $4
          (i32.add
           (local.get $0)
           (i32.const 414)
          )
         )
         (i64.load align=2
          (local.get $1)
         )
        )
        (i32.store16 offset=8
         (local.get $4)
         (i32.load16_s offset=8
          (local.get $1)
         )
        )
        (br $__rjti$3)
       )
      )
      (if
       (i32.eqz
        (local.tee $1
         (i32.load16_s
          (i32.add
           (local.get $0)
           (i32.const 374)
          )
         )
        )
       )
       (block
        (i64.store align=2
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 414)
          )
         )
         (i64.load align=2
          (local.tee $4
           (i32.add
            (local.get $0)
            (i32.const 404)
           )
          )
         )
        )
        (i32.store16 offset=8
         (local.get $1)
         (i32.load16_s offset=8
          (local.get $4)
         )
        )
        (br $__rjti$3)
       )
      )
      (local.set $3
       (i32.and
        (local.get $1)
        (i32.const 65535)
       )
      )
      (local.set $2
       (i32.add
        (local.get $0)
        (i32.const 484)
       )
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in
       (i32.store8
        (local.tee $7
         (i32.add
          (local.get $1)
          (i32.load
           (local.get $2)
          )
         )
        )
        (i32.xor
         (i32.load8_s
          (local.get $7)
         )
         (i32.const -1)
        )
       )
       (br_if $while-in
        (i32.ne
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $3)
        )
       )
      )
      (br $__rjti$2)
     )
     (br $__rjto$3)
    )
    (i64.store align=2
     (local.tee $1
      (i32.add
       (local.get $0)
       (i32.const 414)
      )
     )
     (i64.load align=2
      (local.tee $3
       (i32.add
        (local.get $0)
        (i32.const 404)
       )
      )
     )
    )
    (i32.store16 offset=8
     (local.get $1)
     (i32.load16_s offset=8
      (local.get $3)
     )
    )
    (br_if $__rjti$3
     (i32.eq
      (local.get $4)
      (i32.const 3)
     )
    )
    (br $__rjto$3)
   )
   (local.set $11
    (if (result i32)
     (local.tee $1
      (i32.load16_s
       (i32.add
        (local.get $0)
        (i32.const 374)
       )
      )
     )
     (if (result i32)
      (f64.lt
       (f64.abs
        (f64.add
         (f64.promote_f32
          (f32.mul
           (f32.load
            (i32.add
             (local.get $0)
             (i32.const 444)
            )
           )
           (f32.load
            (i32.add
             (local.get $0)
             (i32.const 440)
            )
           )
          )
         )
         (f64.const -1)
        )
       )
       (f64.const 0.05)
      )
      (block (result i32)
       (local.set $3
        (i32.and
         (local.get $1)
         (i32.const 65535)
        )
       )
       (local.set $2
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 484)
         )
        )
       )
       (local.set $4
        (i32.const 0)
       )
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in5
        (block $switch6
         (block $switch-default9
          (br_table $switch6 $switch6 $switch-default9
           (i32.sub
            (i32.load8_s
             (i32.add
              (local.get $2)
              (local.get $4)
             )
            )
            (i32.const -1)
           )
          )
         )
         (local.set $1
          (i32.const 1)
         )
        )
        (br_if $while-in5
         (i32.ne
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.get $3)
         )
        )
       )
       (if (result i32)
        (local.get $1)
        (i32.const 1)
        (block (result i32)
         (i32.store
          (local.get $16)
          (i32.and
           (i32.load
            (local.get $16)
           )
           (i32.const -8193)
          )
         )
         (i32.const 1)
        )
       )
      )
      (i32.const 1)
     )
     (i32.const 1)
    )
   )
  )
  (if
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $16)
     )
    )
    (i32.const 6299648)
   )
   (block $label$break$L36
    (call $_png_build_gamma_table
     (local.get $0)
    )
    (if
     (i32.eqz
      (i32.and
       (i32.load
        (local.get $16)
       )
       (i32.const 128)
      )
     )
     (block
      (if
       (i32.eqz
        (local.get $11)
       )
       (return)
      )
      (local.set $4
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 368)
        )
       )
      )
      (br_if $label$break$L36
       (i32.eqz
        (local.tee $1
         (i32.load16_s
          (i32.add
           (local.get $0)
           (i32.const 372)
          )
         )
        )
       )
      )
      (local.set $2
       (i32.and
        (local.get $1)
        (i32.const 65535)
       )
      )
      (local.set $3
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 448)
        )
       )
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in18
       (i32.store8
        (local.tee $7
         (i32.add
          (i32.mul
           (local.get $1)
           (i32.const 3)
          )
          (local.get $4)
         )
        )
        (i32.load8_s
         (i32.add
          (local.get $3)
          (i32.load8_u
           (local.get $7)
          )
         )
        )
       )
       (i32.store8
        (local.tee $7
         (i32.add
          (i32.add
           (i32.mul
            (local.get $1)
            (i32.const 3)
           )
           (local.get $4)
          )
          (i32.const 1)
         )
        )
        (i32.load8_s
         (i32.add
          (local.get $3)
          (i32.load8_u
           (local.get $7)
          )
         )
        )
       )
       (i32.store8
        (local.tee $7
         (i32.add
          (i32.add
           (i32.mul
            (local.get $1)
            (i32.const 3)
           )
           (local.get $4)
          )
          (i32.const 2)
         )
        )
        (i32.load8_s
         (i32.add
          (local.get $3)
          (i32.load8_u
           (local.get $7)
          )
         )
        )
       )
       (br_if $while-in18
        (i32.ne
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $2)
        )
       )
      )
      (br $label$break$L36)
     )
    )
    (if
     (i32.eqz
      (local.get $11)
     )
     (block
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 422)
       )
       (local.tee $4
        (i32.and
         (i32.trunc_f64_s
          (f64.add
           (f64.mul
            (call $_pow
             (local.tee $13
              (f64.div
               (f64.convert_i32_s
                (i32.load16_u
                 (local.tee $1
                  (i32.add
                   (local.get $0)
                   (i32.const 412)
                  )
                 )
                )
               )
               (local.tee $8
                (f64.convert_i32_u
                 (i32.add
                  (i32.shl
                   (i32.const 1)
                   (i32.load8_u
                    (i32.add
                     (local.get $0)
                     (i32.const 387)
                    )
                   )
                  )
                  (i32.const -1)
                 )
                )
               )
              )
             )
             (local.tee $15
              (block $switch19 (result f64)
               (block $switch-default23
                (block $switch-case22
                 (block $switch-case21
                  (block $switch-case20
                   (br_table $switch-case20 $switch-case21 $switch-case22 $switch-default23
                    (i32.sub
                     (i32.load8_s
                      (i32.add
                       (local.get $0)
                       (i32.const 396)
                      )
                     )
                     (i32.const 1)
                    )
                   )
                  )
                  (local.set $10
                   (f64.const 1)
                  )
                  (br $switch19
                   (f64.promote_f32
                    (f32.load
                     (i32.add
                      (local.get $0)
                      (i32.const 444)
                     )
                    )
                   )
                  )
                 )
                 (local.set $10
                  (f64.div
                   (f64.const 1)
                   (f64.promote_f32
                    (f32.mul
                     (local.tee $19
                      (f32.load
                       (i32.add
                        (local.get $0)
                        (i32.const 440)
                       )
                      )
                     )
                     (f32.load
                      (i32.add
                       (local.get $0)
                       (i32.const 444)
                      )
                     )
                    )
                   )
                  )
                 )
                 (br $switch19
                  (f64.div
                   (f64.const 1)
                   (f64.promote_f32
                    (local.get $19)
                   )
                  )
                 )
                )
                (local.set $10
                 (f64.div
                  (f64.const 1)
                  (f64.promote_f32
                   (f32.mul
                    (local.tee $19
                     (f32.load
                      (i32.add
                       (local.get $0)
                       (i32.const 400)
                      )
                     )
                    )
                    (f32.load
                     (i32.add
                      (local.get $0)
                      (i32.const 444)
                     )
                    )
                   )
                  )
                 )
                )
                (br $switch19
                 (f64.div
                  (f64.const 1)
                  (f64.promote_f32
                   (local.get $19)
                  )
                 )
                )
               )
               (local.set $10
                (f64.const 1)
               )
               (f64.const 1)
              )
             )
            )
            (local.get $8)
           )
           (f64.const 0.5)
          )
         )
         (i32.const 65535)
        )
       )
      )
      (i32.store16
       (local.get $1)
       (local.tee $1
        (i32.and
         (i32.trunc_f64_s
          (f64.add
           (f64.mul
            (call $_pow
             (local.get $13)
             (local.get $10)
            )
            (local.get $8)
           )
           (f64.const 0.5)
          )
         )
         (i32.const 65535)
        )
       )
      )
      (local.set $7
       (i32.load16_s
        (local.tee $2
         (i32.add
          (local.get $0)
          (i32.const 410)
         )
        )
       )
      )
      (if
       (i32.eq
        (local.tee $3
         (i32.load16_s
          (local.tee $5
           (i32.add
            (local.get $0)
            (i32.const 406)
           )
          )
         )
        )
        (local.tee $11
         (i32.load16_s
          (local.tee $6
           (i32.add
            (local.get $0)
            (i32.const 408)
           )
          )
         )
        )
       )
       (if
        (i32.and
         (i32.eq
          (local.get $3)
          (local.get $7)
         )
         (i32.eq
          (i32.shr_s
           (i32.shl
            (local.get $1)
            (i32.const 16)
           )
           (i32.const 16)
          )
          (local.get $3)
         )
        )
        (block
         (i32.store16
          (i32.add
           (local.get $0)
           (i32.const 420)
          )
          (local.get $4)
         )
         (i32.store16
          (i32.add
           (local.get $0)
           (i32.const 418)
          )
          (local.get $4)
         )
         (i32.store16
          (i32.add
           (local.get $0)
           (i32.const 416)
          )
          (local.get $4)
         )
         (i32.store16
          (local.get $2)
          (local.get $1)
         )
         (i32.store16
          (local.get $6)
          (local.get $1)
         )
         (i32.store16
          (local.get $5)
          (local.get $1)
         )
         (return)
        )
       )
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 416)
       )
       (i32.trunc_f64_s
        (f64.add
         (f64.mul
          (call $_pow
           (local.tee $13
            (f64.div
             (f64.convert_i32_s
              (i32.and
               (local.get $3)
               (i32.const 65535)
              )
             )
             (local.get $8)
            )
           )
           (local.get $15)
          )
          (local.get $8)
         )
         (f64.const 0.5)
        )
       )
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 418)
       )
       (i32.trunc_f64_s
        (f64.add
         (f64.mul
          (call $_pow
           (local.tee $14
            (f64.div
             (f64.convert_i32_s
              (i32.and
               (local.get $11)
               (i32.const 65535)
              )
             )
             (local.get $8)
            )
           )
           (local.get $15)
          )
          (local.get $8)
         )
         (f64.const 0.5)
        )
       )
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 420)
       )
       (i32.trunc_f64_s
        (f64.add
         (f64.mul
          (call $_pow
           (local.tee $22
            (f64.div
             (f64.convert_i32_s
              (i32.and
               (local.get $7)
               (i32.const 65535)
              )
             )
             (local.get $8)
            )
           )
           (local.get $15)
          )
          (local.get $8)
         )
         (f64.const 0.5)
        )
       )
      )
      (i32.store16
       (local.get $5)
       (i32.trunc_f64_s
        (f64.add
         (f64.mul
          (call $_pow
           (local.get $13)
           (local.get $10)
          )
          (local.get $8)
         )
         (f64.const 0.5)
        )
       )
      )
      (i32.store16
       (local.get $6)
       (i32.trunc_f64_s
        (f64.add
         (f64.mul
          (call $_pow
           (local.get $14)
           (local.get $10)
          )
          (local.get $8)
         )
         (f64.const 0.5)
        )
       )
      )
      (i32.store16
       (local.get $2)
       (i32.trunc_f64_s
        (f64.add
         (f64.mul
          (call $_pow
           (local.get $22)
           (local.get $10)
          )
          (local.get $8)
         )
         (f64.const 0.5)
        )
       )
      )
      (return)
     )
    )
    (local.set $9
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 368)
      )
     )
    )
    (local.set $20
     (i32.and
      (local.tee $12
       (i32.load16_s
        (i32.add
         (local.get $0)
         (i32.const 372)
        )
       )
      )
      (i32.const 65535)
     )
    )
    (block $__rjto$1
     (local.set $13
      (block $__rjti$1 (result f64)
       (block $switch-default28
        (block $switch-case27
         (block $switch-case26
          (block $switch-case25
           (br_table $switch-case26 $switch-case25 $switch-case27 $switch-default28
            (i32.sub
             (i32.load8_s
              (i32.add
               (local.get $0)
               (i32.const 396)
              )
             )
             (i32.const 1)
            )
           )
          )
          (local.set $2
           (i32.load8_s
            (i32.add
             (local.tee $1
              (i32.load16_u
               (i32.add
                (local.get $0)
                (i32.const 406)
               )
              )
             )
             (local.tee $3
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 456)
               )
              )
             )
            )
           )
          )
          (local.set $7
           (i32.load8_s
            (i32.add
             (local.tee $6
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 448)
               )
              )
             )
             (local.get $1)
            )
           )
          )
          (local.set $1
           (i32.load8_s
            (i32.add
             (local.tee $4
              (i32.load16_u
               (i32.add
                (local.get $0)
                (i32.const 408)
               )
              )
             )
             (local.get $3)
            )
           )
          )
          (local.set $4
           (i32.load8_s
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
          )
          (local.set $5
           (i32.load8_s
            (i32.add
             (local.tee $17
              (i32.load16_u
               (i32.add
                (local.get $0)
                (i32.const 410)
               )
              )
             )
             (local.get $3)
            )
           )
          )
          (local.set $3
           (i32.load8_s
            (i32.add
             (local.get $6)
             (local.get $17)
            )
           )
          )
          (br $__rjto$1)
         )
         (local.set $14
          (f64.promote_f32
           (f32.load
            (i32.add
             (local.get $0)
             (i32.const 444)
            )
           )
          )
         )
         (br $__rjti$1
          (f64.const 1)
         )
        )
        (local.set $14
         (f64.div
          (f64.const 1)
          (f64.promote_f32
           (local.tee $19
            (f32.load
             (i32.add
              (local.get $0)
              (i32.const 400)
             )
            )
           )
          )
         )
        )
        (br $__rjti$1
         (f64.div
          (f64.const 1)
          (f64.promote_f32
           (f32.mul
            (local.get $19)
            (f32.load
             (i32.add
              (local.get $0)
              (i32.const 444)
             )
            )
           )
          )
         )
        )
       )
       (local.set $14
        (f64.const 1)
       )
       (f64.const 1)
      )
     )
     (local.set $1
      (i32.load16_s
       (i32.add
        (local.get $0)
        (i32.const 406)
       )
      )
     )
     (local.set $3
      (if (result i32)
       (f64.lt
        (f64.abs
         (f64.add
          (local.get $13)
          (f64.const -1)
         )
        )
        (f64.const 0.05)
       )
       (block (result i32)
        (local.set $8
         (f64.div
          (f64.convert_i32_s
           (i32.and
            (local.get $1)
            (i32.const 65535)
           )
          )
          (f64.const 255)
         )
        )
        (local.set $10
         (f64.div
          (f64.convert_i32_s
           (i32.and
            (local.tee $4
             (i32.load16_s
              (i32.add
               (local.get $0)
               (i32.const 408)
              )
             )
            )
            (i32.const 65535)
           )
          )
          (f64.const 255)
         )
        )
        (local.set $15
         (f64.div
          (f64.convert_i32_s
           (i32.and
            (local.tee $3
             (i32.load16_s
              (i32.add
               (local.get $0)
               (i32.const 410)
              )
             )
            )
            (i32.const 65535)
           )
          )
          (f64.const 255)
         )
        )
        (local.set $1
         (i32.and
          (local.get $1)
          (i32.const 255)
         )
        )
        (local.set $4
         (i32.and
          (local.get $4)
          (i32.const 255)
         )
        )
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
       )
       (block (result i32)
        (local.set $1
         (i32.and
          (i32.trunc_f64_s
           (f64.add
            (f64.mul
             (call $_pow
              (local.tee $8
               (f64.div
                (f64.convert_i32_s
                 (i32.and
                  (local.get $1)
                  (i32.const 65535)
                 )
                )
                (f64.const 255)
               )
              )
              (local.get $13)
             )
             (f64.const 255)
            )
            (f64.const 0.5)
           )
          )
          (i32.const 255)
         )
        )
        (local.set $4
         (i32.and
          (i32.trunc_f64_s
           (f64.add
            (f64.mul
             (call $_pow
              (local.tee $10
               (f64.div
                (f64.convert_i32_s
                 (i32.load16_u
                  (i32.add
                   (local.get $0)
                   (i32.const 408)
                  )
                 )
                )
                (f64.const 255)
               )
              )
              (local.get $13)
             )
             (f64.const 255)
            )
            (f64.const 0.5)
           )
          )
          (i32.const 255)
         )
        )
        (i32.and
         (i32.trunc_f64_s
          (f64.add
           (f64.mul
            (call $_pow
             (local.tee $15
              (f64.div
               (f64.convert_i32_s
                (i32.load16_u
                 (i32.add
                  (local.get $0)
                  (i32.const 410)
                 )
                )
               )
               (f64.const 255)
              )
             )
             (local.get $13)
            )
            (f64.const 255)
           )
           (f64.const 0.5)
          )
         )
         (i32.const 255)
        )
       )
      )
     )
     (local.set $2
      (i32.and
       (i32.trunc_f64_s
        (f64.add
         (f64.mul
          (call $_pow
           (local.get $8)
           (local.get $14)
          )
          (f64.const 255)
         )
         (f64.const 0.5)
        )
       )
       (i32.const 255)
      )
     )
     (local.set $5
      (i32.and
       (i32.trunc_f64_s
        (f64.add
         (f64.mul
          (call $_pow
           (local.get $10)
           (local.get $14)
          )
          (f64.const 255)
         )
         (f64.const 0.5)
        )
       )
       (i32.const 255)
      )
     )
     (local.set $6
      (i32.and
       (i32.trunc_f64_s
        (f64.add
         (f64.mul
          (call $_pow
           (local.get $15)
           (local.get $14)
          )
          (f64.const 255)
         )
         (f64.const 0.5)
        )
       )
       (i32.const 255)
      )
     )
     (local.set $7
      (local.get $1)
     )
     (local.set $1
      (local.get $5)
     )
     (local.set $5
      (local.get $6)
     )
    )
    (if
     (local.get $12)
     (block
      (local.set $17
       (i32.add
        (local.get $0)
        (i32.const 374)
       )
      )
      (local.set $21
       (i32.add
        (local.get $0)
        (i32.const 484)
       )
      )
      (local.set $18
       (i32.add
        (local.get $0)
        (i32.const 448)
       )
      )
      (local.set $23
       (i32.add
        (local.get $0)
        (i32.const 456)
       )
      )
      (local.set $24
       (i32.and
        (local.get $2)
        (i32.const 255)
       )
      )
      (local.set $25
       (i32.add
        (local.get $0)
        (i32.const 452)
       )
      )
      (local.set $26
       (i32.and
        (local.get $1)
        (i32.const 255)
       )
      )
      (local.set $27
       (i32.and
        (local.get $5)
        (i32.const 255)
       )
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in30
       (block $__rjto$0
        (block $__rjti$0
         (br_if $__rjti$0
          (i32.ge_u
           (local.get $1)
           (i32.load16_u
            (local.get $17)
           )
          )
         )
         (block $label$break$L84
          (block $switch-default35
           (block $switch-case34
            (br_table $__rjti$0 $switch-case34 $switch-default35
             (i32.sub
              (local.tee $6
               (i32.load8_s
                (local.tee $2
                 (i32.add
                  (local.get $1)
                  (i32.load
                   (local.get $21)
                  )
                 )
                )
               )
              )
              (i32.const -1)
             )
            )
           )
           (i32.store8
            (i32.add
             (i32.mul
              (local.get $1)
              (i32.const 3)
             )
             (local.get $9)
            )
            (local.get $7)
           )
           (i32.store8
            (i32.add
             (i32.add
              (i32.mul
               (local.get $1)
               (i32.const 3)
              )
              (local.get $9)
             )
             (i32.const 1)
            )
            (local.get $4)
           )
           (i32.store8
            (i32.add
             (i32.add
              (i32.mul
               (local.get $1)
               (i32.const 3)
              )
              (local.get $9)
             )
             (i32.const 2)
            )
            (local.get $3)
           )
           (br $label$break$L84)
          )
          (local.set $6
           (i32.add
            (i32.mul
             (local.tee $6
              (i32.and
               (local.get $6)
               (i32.const 255)
              )
             )
             (i32.load8_u
              (i32.add
               (local.tee $5
                (i32.load
                 (local.get $23)
                )
               )
               (i32.load8_u
                (local.tee $12
                 (i32.add
                  (i32.mul
                   (local.get $1)
                   (i32.const 3)
                  )
                  (local.get $9)
                 )
                )
               )
              )
             )
            )
            (i32.add
             (i32.mul
              (local.get $24)
              (i32.xor
               (local.get $6)
               (i32.const 255)
              )
             )
             (i32.const 128)
            )
           )
          )
          (i32.store8
           (local.get $12)
           (i32.load8_s
            (i32.add
             (local.tee $12
              (i32.load
               (local.get $25)
              )
             )
             (i32.and
              (i32.shr_u
               (i32.add
                (local.get $6)
                (i32.and
                 (i32.shr_u
                  (local.get $6)
                  (i32.const 8)
                 )
                 (i32.const 255)
                )
               )
               (i32.const 8)
              )
              (i32.const 255)
             )
            )
           )
          )
          (local.set $6
           (i32.add
            (i32.mul
             (local.get $26)
             (i32.xor
              (local.tee $6
               (i32.load8_u
                (local.get $2)
               )
              )
              (i32.const 255)
             )
            )
            (i32.add
             (i32.mul
              (i32.load8_u
               (i32.add
                (local.get $5)
                (i32.load8_u
                 (local.tee $28
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $1)
                     (i32.const 3)
                    )
                    (local.get $9)
                   )
                   (i32.const 1)
                  )
                 )
                )
               )
              )
              (local.get $6)
             )
             (i32.const 128)
            )
           )
          )
          (i32.store8
           (local.get $28)
           (i32.load8_s
            (i32.add
             (local.get $12)
             (i32.and
              (i32.shr_u
               (i32.add
                (local.get $6)
                (i32.and
                 (i32.shr_u
                  (local.get $6)
                  (i32.const 8)
                 )
                 (i32.const 255)
                )
               )
               (i32.const 8)
              )
              (i32.const 255)
             )
            )
           )
          )
          (local.set $2
           (i32.add
            (i32.mul
             (local.get $27)
             (i32.xor
              (local.tee $2
               (i32.load8_u
                (local.get $2)
               )
              )
              (i32.const 255)
             )
            )
            (i32.add
             (i32.mul
              (i32.load8_u
               (i32.add
                (local.get $5)
                (i32.load8_u
                 (local.tee $5
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $1)
                     (i32.const 3)
                    )
                    (local.get $9)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
              )
              (local.get $2)
             )
             (i32.const 128)
            )
           )
          )
          (i32.store8
           (local.get $5)
           (i32.load8_s
            (i32.add
             (local.get $12)
             (i32.and
              (i32.shr_u
               (i32.add
                (local.get $2)
                (i32.and
                 (i32.shr_u
                  (local.get $2)
                  (i32.const 8)
                 )
                 (i32.const 255)
                )
               )
               (i32.const 8)
              )
              (i32.const 255)
             )
            )
           )
          )
         )
         (br $__rjto$0)
        )
        (i32.store8
         (local.tee $5
          (i32.add
           (i32.mul
            (local.get $1)
            (i32.const 3)
           )
           (local.get $9)
          )
         )
         (i32.load8_s
          (i32.add
           (local.tee $2
            (i32.load
             (local.get $18)
            )
           )
           (i32.load8_u
            (local.get $5)
           )
          )
         )
        )
        (i32.store8
         (local.tee $5
          (i32.add
           (i32.add
            (i32.mul
             (local.get $1)
             (i32.const 3)
            )
            (local.get $9)
           )
           (i32.const 1)
          )
         )
         (i32.load8_s
          (i32.add
           (local.get $2)
           (i32.load8_u
            (local.get $5)
           )
          )
         )
        )
        (i32.store8
         (local.tee $5
          (i32.add
           (i32.add
            (i32.mul
             (local.get $1)
             (i32.const 3)
            )
            (local.get $9)
           )
           (i32.const 2)
          )
         )
         (i32.load8_s
          (i32.add
           (local.get $2)
           (i32.load8_u
            (local.get $5)
           )
          )
         )
        )
       )
       (br_if $while-in30
        (i32.ne
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $20)
        )
       )
      )
     )
    )
   )
   (if
    (i32.and
     (i32.ne
      (i32.and
       (local.get $1)
       (i32.const 128)
      )
      (i32.const 0)
     )
     (local.get $11)
    )
    (block
     (local.set $7
      (i32.and
       (local.tee $1
        (i32.load16_s
         (i32.add
          (local.get $0)
          (i32.const 374)
         )
        )
       )
       (i32.const 65535)
      )
     )
     (local.set $4
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 368)
       )
      )
     )
     (local.set $5
      (i32.and
       (local.tee $3
        (i32.load16_s
         (i32.add
          (local.get $0)
          (i32.const 406)
         )
        )
       )
       (i32.const 255)
      )
     )
     (local.set $6
      (i32.and
       (local.tee $2
        (i32.load16_s
         (i32.add
          (local.get $0)
          (i32.const 408)
         )
        )
       )
       (i32.const 255)
      )
     )
     (local.set $12
      (i32.and
       (local.tee $9
        (i32.load16_s
         (i32.add
          (local.get $0)
          (i32.const 410)
         )
        )
       )
       (i32.const 255)
      )
     )
     (if
      (local.get $1)
      (block
       (local.set $20
        (i32.add
         (local.get $0)
         (i32.const 484)
        )
       )
       (local.set $17
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
       )
       (local.set $21
        (i32.and
         (local.get $2)
         (i32.const 255)
        )
       )
       (local.set $9
        (i32.and
         (local.get $9)
         (i32.const 255)
        )
       )
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in12
        (block $switch13
         (block $switch-default16
          (block $switch-case14
           (br_table $switch13 $switch-case14 $switch-default16
            (i32.sub
             (local.tee $2
              (i32.load8_s
               (local.tee $3
                (i32.add
                 (local.get $1)
                 (i32.load
                  (local.get $20)
                 )
                )
               )
              )
             )
             (i32.const -1)
            )
           )
          )
          (i32.store8
           (i32.add
            (i32.mul
             (local.get $1)
             (i32.const 3)
            )
            (local.get $4)
           )
           (local.get $5)
          )
          (i32.store8
           (i32.add
            (i32.add
             (i32.mul
              (local.get $1)
              (i32.const 3)
             )
             (local.get $4)
            )
            (i32.const 1)
           )
           (local.get $6)
          )
          (i32.store8
           (i32.add
            (i32.add
             (i32.mul
              (local.get $1)
              (i32.const 3)
             )
             (local.get $4)
            )
            (i32.const 2)
           )
           (local.get $12)
          )
          (br $switch13)
         )
         (local.set $2
          (i32.add
           (i32.mul
            (local.tee $2
             (i32.and
              (local.get $2)
              (i32.const 255)
             )
            )
            (i32.load8_u
             (local.tee $18
              (i32.add
               (i32.mul
                (local.get $1)
                (i32.const 3)
               )
               (local.get $4)
              )
             )
            )
           )
           (i32.add
            (i32.mul
             (local.get $17)
             (i32.xor
              (local.get $2)
              (i32.const 255)
             )
            )
            (i32.const 128)
           )
          )
         )
         (i32.store8
          (local.get $18)
          (i32.shr_u
           (i32.add
            (local.get $2)
            (i32.and
             (i32.shr_u
              (local.get $2)
              (i32.const 8)
             )
             (i32.const 255)
            )
           )
           (i32.const 8)
          )
         )
         (local.set $2
          (i32.add
           (i32.mul
            (local.get $21)
            (i32.xor
             (local.tee $2
              (i32.load8_u
               (local.get $3)
              )
             )
             (i32.const 255)
            )
           )
           (i32.add
            (i32.mul
             (i32.load8_u
              (local.tee $18
               (i32.add
                (i32.add
                 (i32.mul
                  (local.get $1)
                  (i32.const 3)
                 )
                 (local.get $4)
                )
                (i32.const 1)
               )
              )
             )
             (local.get $2)
            )
            (i32.const 128)
           )
          )
         )
         (i32.store8
          (local.get $18)
          (i32.shr_u
           (i32.add
            (local.get $2)
            (i32.and
             (i32.shr_u
              (local.get $2)
              (i32.const 8)
             )
             (i32.const 255)
            )
           )
           (i32.const 8)
          )
         )
         (local.set $3
          (i32.add
           (i32.mul
            (local.get $9)
            (i32.xor
             (local.tee $3
              (i32.load8_u
               (local.get $3)
              )
             )
             (i32.const 255)
            )
           )
           (i32.add
            (i32.mul
             (i32.load8_u
              (local.tee $2
               (i32.add
                (i32.add
                 (i32.mul
                  (local.get $1)
                  (i32.const 3)
                 )
                 (local.get $4)
                )
                (i32.const 2)
               )
              )
             )
             (local.get $3)
            )
            (i32.const 128)
           )
          )
         )
         (i32.store8
          (local.get $2)
          (i32.shr_u
           (i32.add
            (local.get $3)
            (i32.and
             (i32.shr_u
              (local.get $3)
              (i32.const 8)
             )
             (i32.const 255)
            )
           )
           (i32.const 8)
          )
         )
        )
        (br_if $while-in12
         (i32.ne
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (local.get $7)
         )
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $11)
     (i32.ne
      (i32.and
       (i32.load
        (local.get $16)
       )
       (i32.const 8)
      )
      (i32.const 0)
     )
    )
   )
   (return)
  )
  (local.set $1
   (i32.load8_u
    (i32.add
     (local.get $0)
     (i32.const 472)
    )
   )
  )
  (local.set $4
   (i32.load8_u
    (i32.add
     (local.get $0)
     (i32.const 473)
    )
   )
  )
  (local.set $3
   (i32.load8_u
    (i32.add
     (local.get $0)
     (i32.const 474)
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $2
     (i32.load16_s
      (i32.add
       (local.get $0)
       (i32.const 372)
      )
     )
    )
   )
   (return)
  )
  (local.set $7
   (select
    (local.tee $1
     (i32.sub
      (i32.const 8)
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
    )
    (i32.const 0)
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
   )
  )
  (local.set $4
   (select
    (local.tee $1
     (i32.sub
      (i32.const 8)
      (i32.and
       (local.get $4)
       (i32.const 255)
      )
     )
    )
    (i32.const 0)
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
   )
  )
  (local.set $3
   (select
    (local.tee $1
     (i32.sub
      (i32.const 8)
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
     )
    )
    (i32.const 0)
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
   )
  )
  (local.set $1
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 368)
    )
   )
  )
  (local.set $2
   (i32.and
    (local.get $2)
    (i32.const 65535)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in37
   (i32.store8
    (local.tee $5
     (i32.add
      (i32.mul
       (local.get $0)
       (i32.const 3)
      )
      (local.get $1)
     )
    )
    (i32.shr_u
     (i32.load8_u
      (local.get $5)
     )
     (local.get $7)
    )
   )
   (i32.store8
    (local.tee $5
     (i32.add
      (i32.add
       (i32.mul
        (local.get $0)
        (i32.const 3)
       )
       (local.get $1)
      )
      (i32.const 1)
     )
    )
    (i32.shr_u
     (i32.load8_u
      (local.get $5)
     )
     (local.get $4)
    )
   )
   (i32.store8
    (local.tee $5
     (i32.add
      (i32.add
       (i32.mul
        (local.get $0)
        (i32.const 3)
       )
       (local.get $1)
      )
      (i32.const 2)
     )
    )
    (i32.shr_u
     (i32.load8_u
      (local.get $5)
     )
     (local.get $3)
    )
   )
   (br_if $while-in37
    (i32.ne
     (local.get $2)
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
    )
   )
  )
 )
 (func $_png_build_gamma_table (; 114 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f64)
  (local $17 i32)
  (local $18 i32)
  (if
   (f32.eq
    (local.tee $8
     (f32.load
      (local.tee $7
       (i32.add
        (local.get $0)
        (i32.const 440)
       )
      )
     )
    )
    (f32.const 0)
   )
   (return)
  )
  (if
   (i32.lt_s
    (i32.load8_u
     (i32.add
      (local.get $0)
      (i32.const 387)
     )
    )
    (i32.const 9)
   )
   (block
    (local.set $3
     (select
      (f64.div
       (f64.const 1)
       (f64.promote_f32
        (f32.mul
         (local.get $8)
         (local.tee $8
          (f32.load
           (local.tee $2
            (i32.add
             (local.get $0)
             (i32.const 444)
            )
           )
          )
         )
        )
       )
      )
      (f64.const 1)
      (f64.gt
       (f64.promote_f32
        (local.get $8)
       )
       (f64.const 1e-06)
      )
     )
    )
    (local.set $1
     (call $_png_malloc
      (local.get $0)
      (i32.const 256)
     )
    )
    (i32.store
     (local.tee $4
      (i32.add
       (local.get $0)
       (i32.const 448)
      )
     )
     (local.get $1)
    )
    (i32.store8
     (local.get $1)
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (call $_pow
         (f64.const 0)
         (local.get $3)
        )
        (f64.const 255)
       )
       (f64.const 0.5)
      )
     )
    )
    (local.set $1
     (i32.const 1)
    )
    (loop $while-in
     (i32.store8
      (i32.add
       (i32.load
        (local.get $4)
       )
       (local.get $1)
      )
      (i32.trunc_f64_s
       (f64.add
        (f64.mul
         (call $_pow
          (f64.div
           (f64.convert_i32_s
            (local.get $1)
           )
           (f64.const 255)
          )
          (local.get $3)
         )
         (f64.const 255)
        )
        (f64.const 0.5)
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.const 256)
      )
     )
    )
    (if
     (i32.eqz
      (i32.and
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 204)
        )
       )
       (i32.const 6291584)
      )
     )
     (return)
    )
    (local.set $3
     (f64.div
      (f64.const 1)
      (f64.promote_f32
       (f32.load
        (local.get $7)
       )
      )
     )
    )
    (local.set $1
     (call $_png_malloc
      (local.get $0)
      (i32.const 256)
     )
    )
    (i32.store
     (local.tee $4
      (i32.add
       (local.get $0)
       (i32.const 456)
      )
     )
     (local.get $1)
    )
    (i32.store8
     (local.get $1)
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (call $_pow
         (f64.const 0)
         (local.get $3)
        )
        (f64.const 255)
       )
       (f64.const 0.5)
      )
     )
    )
    (local.set $1
     (i32.const 1)
    )
    (loop $while-in1
     (i32.store8
      (i32.add
       (i32.load
        (local.get $4)
       )
       (local.get $1)
      )
      (i32.trunc_f64_s
       (f64.add
        (f64.mul
         (call $_pow
          (f64.div
           (f64.convert_i32_s
            (local.get $1)
           )
           (f64.const 255)
          )
          (local.get $3)
         )
         (f64.const 255)
        )
        (f64.const 0.5)
       )
      )
     )
     (br_if $while-in1
      (i32.ne
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.const 256)
      )
     )
    )
    (local.set $1
     (call $_png_malloc
      (local.get $0)
      (i32.const 256)
     )
    )
    (i32.store
     (local.tee $4
      (i32.add
       (local.get $0)
       (i32.const 452)
      )
     )
     (local.get $1)
    )
    (i32.store8
     (local.get $1)
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (call $_pow
         (f64.const 0)
         (local.tee $3
          (if (result f64)
           (f64.gt
            (local.tee $3
             (f64.promote_f32
              (f32.load
               (local.get $2)
              )
             )
            )
            (f64.const 1e-06)
           )
           (f64.div
            (f64.const 1)
            (local.get $3)
           )
           (f64.promote_f32
            (f32.load
             (local.get $7)
            )
           )
          )
         )
        )
        (f64.const 255)
       )
       (f64.const 0.5)
      )
     )
    )
    (local.set $0
     (i32.const 1)
    )
    (loop $while-in3
     (i32.store8
      (i32.add
       (i32.load
        (local.get $4)
       )
       (local.get $0)
      )
      (i32.trunc_f64_s
       (f64.add
        (f64.mul
         (call $_pow
          (f64.div
           (f64.convert_i32_s
            (local.get $0)
           )
           (f64.const 255)
          )
          (local.get $3)
         )
         (f64.const 255)
        )
        (f64.const 0.5)
       )
      )
     )
     (br_if $while-in3
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (i32.const 256)
      )
     )
    )
    (return)
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 436)
   )
   (i32.and
    (local.tee $4
     (select
      (local.tee $1
       (select
        (local.tee $1
         (select
          (i32.const 5)
          (local.tee $1
           (select
            (i32.sub
             (i32.const 16)
             (local.tee $1
              (if (result i32)
               (i32.and
                (i32.load8_s
                 (i32.add
                  (local.get $0)
                  (i32.const 386)
                 )
                )
                (i32.const 2)
               )
               (select
                (local.tee $1
                 (i32.load8_u
                  (i32.add
                   (local.get $0)
                   (i32.const 474)
                  )
                 )
                )
                (local.tee $2
                 (i32.and
                  (select
                   (local.tee $2
                    (i32.load8_s
                     (i32.add
                      (local.get $0)
                      (i32.const 473)
                     )
                    )
                   )
                   (local.tee $4
                    (i32.load8_s
                     (i32.add
                      (local.get $0)
                      (i32.const 472)
                     )
                    )
                   )
                   (i32.gt_s
                    (i32.and
                     (local.get $2)
                     (i32.const 255)
                    )
                    (i32.and
                     (local.get $4)
                     (i32.const 255)
                    )
                   )
                  )
                  (i32.const 255)
                 )
                )
                (i32.lt_u
                 (local.get $2)
                 (local.get $1)
                )
               )
               (i32.load8_u
                (i32.add
                 (local.get $0)
                 (i32.const 475)
                )
               )
              )
             )
            )
            (i32.const 0)
            (i32.gt_s
             (local.get $1)
             (i32.const 0)
            )
           )
          )
          (i32.and
           (i32.ne
            (i32.and
             (i32.load
              (local.tee $12
               (i32.add
                (local.get $0)
                (i32.const 204)
               )
              )
             )
             (i32.const 1024)
            )
            (i32.const 0)
           )
           (i32.lt_s
            (local.get $1)
            (i32.const 5)
           )
          )
         )
        )
        (i32.const 8)
        (i32.lt_s
         (local.get $1)
         (i32.const 8)
        )
       )
      )
      (i32.const 0)
      (i32.gt_s
       (local.get $1)
       (i32.const 0)
      )
     )
    )
    (i32.const 255)
   )
  )
  (local.set $3
   (select
    (f64.div
     (f64.const 1)
     (f64.promote_f32
      (f32.mul
       (local.get $8)
       (local.tee $8
        (f32.load
         (local.tee $15
          (i32.add
           (local.get $0)
           (i32.const 444)
          )
         )
        )
       )
      )
     )
    )
    (f64.const 1)
    (f64.gt
     (f64.promote_f32
      (local.get $8)
     )
     (f64.const 1e-06)
    )
   )
  )
  (local.set $1
   (call $_png_malloc
    (local.get $0)
    (local.tee $14
     (i32.shl
      (local.tee $11
       (i32.shl
        (i32.const 1)
        (local.tee $6
         (i32.sub
          (i32.const 8)
          (local.get $4)
         )
        )
       )
      )
      (i32.const 2)
     )
    )
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $0)
     (i32.const 460)
    )
   )
   (local.get $1)
  )
  (local.set $1
   (i32.ne
    (local.get $6)
    (i32.const 31)
   )
  )
  (if
   (i32.and
    (i32.load
     (local.get $12)
    )
    (i32.const 1152)
   )
   (block
    (if
     (local.get $1)
     (block
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in9
       (local.set $2
        (call $_png_malloc
         (local.get $0)
         (i32.const 512)
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $5)
         )
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
        )
        (local.get $2)
       )
       (br_if $while-in9
        (i32.lt_s
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $11)
        )
       )
      )
     )
    )
    (local.set $3
     (f64.div
      (f64.const 1)
      (local.get $3)
     )
    )
    (local.set $16
     (f64.convert_i32_u
      (local.tee $9
       (i32.shl
        (local.get $11)
        (i32.const 8)
       )
      )
     )
    )
    (local.set $10
     (i32.shr_u
      (i32.const 255)
      (local.get $4)
     )
    )
    (local.set $1
     (i32.const 0)
    )
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in11
     (if
      (i32.le_u
       (local.get $1)
       (local.tee $13
        (i32.trunc_f64_u
         (f64.mul
          (call $_pow
           (f64.mul
            (f64.add
             (f64.convert_i32_s
              (local.get $2)
             )
             (f64.const 0.5)
            )
            (f64.const 0.00390625)
           )
           (local.get $3)
          )
          (local.get $16)
         )
        )
       )
      )
      (block
       (local.set $17
        (i32.and
         (i32.or
          (local.get $2)
          (i32.shl
           (local.get $2)
           (i32.const 8)
          )
         )
         (i32.const 65535)
        )
       )
       (local.set $18
        (i32.load
         (local.get $5)
        )
       )
       (loop $while-in13
        (i32.store16
         (i32.add
          (i32.load
           (i32.add
            (i32.shl
             (i32.and
              (local.get $1)
              (local.get $10)
             )
             (i32.const 2)
            )
            (local.get $18)
           )
          )
          (i32.shl
           (i32.shr_u
            (local.get $1)
            (local.get $6)
           )
           (i32.const 1)
          )
         )
         (local.get $17)
        )
        (br_if $while-in13
         (i32.le_u
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (local.get $13)
         )
        )
       )
      )
     )
     (br_if $while-in11
      (i32.ne
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.const 256)
      )
     )
    )
    (if
     (i32.lt_u
      (local.get $1)
      (local.get $9)
     )
     (block
      (local.set $2
       (i32.load
        (local.get $5)
       )
      )
      (loop $while-in15
       (i32.store16
        (i32.add
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (local.get $1)
             (local.get $10)
            )
            (i32.const 2)
           )
           (local.get $2)
          )
         )
         (i32.shl
          (i32.shr_u
           (local.get $1)
           (local.get $6)
          )
          (i32.const 1)
         )
        )
        (i32.const -1)
       )
       (br_if $while-in15
        (i32.ne
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $9)
        )
       )
      )
     )
    )
   )
   (if
    (local.get $1)
    (block
     (local.set $9
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (i32.const 1536)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in5
      (local.set $2
       (call $_png_malloc
        (local.get $0)
        (i32.const 512)
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (local.get $5)
        )
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
       )
       (local.get $2)
      )
      (local.set $10
       (i32.shr_u
        (i32.mul
         (local.get $1)
         (i32.load
          (local.get $9)
         )
        )
        (i32.const 4)
       )
      )
      (local.set $13
       (i32.load
        (i32.add
         (i32.load
          (local.get $5)
         )
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
        )
       )
      )
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in7
       (i32.store16
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 1)
         )
         (local.get $13)
        )
        (i32.trunc_f64_s
         (f64.add
          (f64.mul
           (call $_pow
            (f64.div
             (f64.convert_i32_u
              (i32.add
               (local.get $10)
               (i32.shl
                (local.get $2)
                (i32.const 8)
               )
              )
             )
             (f64.const 65535)
            )
            (local.get $3)
           )
           (f64.const 65535)
          )
          (f64.const 0.5)
         )
        )
       )
       (br_if $while-in7
        (i32.ne
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (i32.const 256)
        )
       )
      )
      (br_if $while-in5
       (i32.lt_s
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.get $11)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $12)
     )
     (i32.const 6291584)
    )
   )
   (return)
  )
  (local.set $3
   (f64.div
    (f64.const 1)
    (f64.promote_f32
     (f32.load
      (local.get $7)
     )
    )
   )
  )
  (local.set $1
   (call $_png_malloc
    (local.get $0)
    (local.get $14)
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $0)
     (i32.const 468)
    )
   )
   (local.get $1)
  )
  (if
   (i32.eqz
    (local.tee $6
     (i32.eq
      (local.get $6)
      (i32.const 31)
     )
    )
   )
   (block
    (local.set $12
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
      (i32.const 1536)
     )
    )
    (local.set $1
     (i32.const 0)
    )
    (loop $while-in17
     (local.set $2
      (call $_png_malloc
       (local.get $0)
       (i32.const 512)
      )
     )
     (i32.store
      (i32.add
       (i32.load
        (local.get $5)
       )
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
      )
      (local.get $2)
     )
     (local.set $9
      (i32.shr_u
       (i32.mul
        (local.get $1)
        (i32.load
         (local.get $12)
        )
       )
       (i32.const 4)
      )
     )
     (local.set $10
      (i32.load
       (i32.add
        (i32.load
         (local.get $5)
        )
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
       )
      )
     )
     (local.set $2
      (i32.const 0)
     )
     (loop $while-in19
      (i32.store16
       (i32.add
        (i32.shl
         (local.get $2)
         (i32.const 1)
        )
        (local.get $10)
       )
       (i32.trunc_f64_s
        (f64.add
         (f64.mul
          (call $_pow
           (f64.div
            (f64.convert_i32_u
             (i32.add
              (local.get $9)
              (i32.shl
               (local.get $2)
               (i32.const 8)
              )
             )
            )
            (f64.const 65535)
           )
           (local.get $3)
          )
          (f64.const 65535)
         )
         (f64.const 0.5)
        )
       )
      )
      (br_if $while-in19
       (i32.ne
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.const 256)
       )
      )
     )
     (br_if $while-in17
      (i32.lt_s
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.get $11)
      )
     )
    )
   )
  )
  (local.set $3
   (if (result f64)
    (f64.gt
     (local.tee $3
      (f64.promote_f32
       (f32.load
        (local.get $15)
       )
      )
     )
     (f64.const 1e-06)
    )
    (f64.div
     (f64.const 1)
     (local.get $3)
    )
    (f64.promote_f32
     (f32.load
      (local.get $7)
     )
    )
   )
  )
  (local.set $1
   (call $_png_malloc
    (local.get $0)
    (local.get $14)
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $0)
     (i32.const 464)
    )
   )
   (local.get $1)
  )
  (if
   (local.get $6)
   (return)
  )
  (local.set $4
   (i32.add
    (i32.shl
     (local.get $4)
     (i32.const 2)
    )
    (i32.const 1536)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in21
   (local.set $2
    (call $_png_malloc
     (local.get $0)
     (i32.const 512)
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (local.get $5)
     )
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
    (local.get $2)
   )
   (local.set $7
    (i32.shr_u
     (i32.mul
      (local.get $1)
      (i32.load
       (local.get $4)
      )
     )
     (i32.const 4)
    )
   )
   (local.set $6
    (i32.load
     (i32.add
      (i32.load
       (local.get $5)
      )
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
     )
    )
   )
   (local.set $2
    (i32.const 0)
   )
   (loop $while-in23
    (i32.store16
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 1)
      )
      (local.get $6)
     )
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (call $_pow
         (f64.div
          (f64.convert_i32_u
           (i32.add
            (local.get $7)
            (i32.shl
             (local.get $2)
             (i32.const 8)
            )
           )
          )
          (f64.const 65535)
         )
         (local.get $3)
        )
        (f64.const 65535)
       )
       (f64.const 0.5)
      )
     )
    )
    (br_if $while-in23
     (i32.ne
      (local.tee $2
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (i32.const 256)
     )
    )
   )
   (br_if $while-in21
    (i32.lt_s
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.get $11)
    )
   )
  )
 )
 (func $_png_do_read_transformations (; 115 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $2
   (i32.add
    (local.get $7)
    (i32.const 56)
   )
  )
  (local.set $1
   (local.get $7)
  )
  (if
   (i32.eqz
    (i32.load
     (local.tee $3
      (i32.add
       (local.get $0)
       (i32.const 328)
      )
     )
    )
   )
   (block
    (local.set $5
     (i32.load8_u
      (i32.add
       (local.get $0)
       (i32.const 384)
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 320)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 4)
     )
     (local.get $5)
    )
    (drop
     (call $_sprintf
      (local.get $1)
      (i32.const 18251)
      (local.get $2)
     )
    )
    (call $_png_error
     (local.get $0)
     (local.get $1)
    )
   )
  )
  (if
   (i32.and
    (i32.load
     (local.tee $4
      (i32.add
       (local.get $0)
       (i32.const 204)
      )
     )
    )
    (i32.const 4096)
   )
   (block $do-once
    (local.set $1
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
    )
    (if
     (i32.eq
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 356)
       )
      )
      (i32.const 3)
     )
     (block
      (call $_png_do_expand_palette
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 1)
       )
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 368)
        )
       )
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 484)
        )
       )
       (i32.load16_u
        (i32.add
         (local.get $0)
         (i32.const 374)
        )
       )
      )
      (br $do-once)
     )
    )
    (local.set $2
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (if
     (i32.load16_s
      (i32.add
       (local.get $0)
       (i32.const 374)
      )
     )
     (call $_png_do_expand
      (local.get $1)
      (local.get $2)
      (i32.add
       (local.get $0)
       (i32.const 488)
      )
     )
     (call $_png_do_expand
      (local.get $1)
      (local.get $2)
      (i32.const 0)
     )
    )
   )
  )
  (if
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $4)
     )
    )
    (i32.const 262144)
   )
   (block
    (call $_png_do_strip_filler
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
     (i32.const 128)
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 6291456)
   )
   (if
    (call $_png_do_rgb_to_gray
     (local.get $0)
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (block
     (i32.store8
      (i32.add
       (local.get $0)
       (i32.const 644)
      )
      (i32.const 1)
     )
     (if
      (i32.eq
       (local.tee $1
        (i32.load
         (local.get $4)
        )
       )
       (i32.const 4194304)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 18288)
       )
       (local.set $1
        (i32.load
         (local.get $4)
        )
       )
      )
     )
     (if
      (i32.eq
       (local.get $1)
       (i32.const 2097152)
      )
      (call $_png_error
       (local.get $0)
       (i32.const 18288)
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $4)
     )
    )
    (i32.const 16384)
   )
   (if
    (i32.eqz
     (i32.and
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 196)
       )
      )
      (i32.const 2048)
     )
    )
    (block
     (call $_png_do_gray_to_rgb
      (i32.add
       (local.get $0)
       (i32.const 348)
      )
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.load
       (local.get $4)
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 128)
   )
   (block $do-once0
    (if
     (i32.eqz
      (i32.load16_s
       (i32.add
        (local.get $0)
        (i32.const 374)
       )
      )
     )
     (br_if $do-once0
      (i32.eqz
       (i32.and
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 386)
         )
        )
        (i32.const 4)
       )
      )
     )
    )
    (call $_png_do_background
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
     (i32.add
      (local.get $0)
      (i32.const 488)
     )
     (i32.add
      (local.get $0)
      (i32.const 404)
     )
     (i32.add
      (local.get $0)
      (i32.const 414)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 448)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 452)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 456)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 460)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 464)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 468)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 436)
      )
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 8192)
   )
   (block $do-once2
    (if
     (i32.and
      (local.get $1)
      (i32.const 128)
     )
     (block
      (br_if $do-once2
       (i32.load16_s
        (i32.add
         (local.get $0)
         (i32.const 374)
        )
       )
      )
      (br_if $do-once2
       (i32.and
        (local.tee $2
         (i32.load8_s
          (i32.add
           (local.get $0)
           (i32.const 386)
          )
         )
        )
        (i32.const 4)
       )
      )
     )
     (local.set $2
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 386)
       )
      )
     )
    )
    (if
     (i32.ne
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
      (i32.const 3)
     )
     (block
      (call $_png_do_gamma
       (i32.add
        (local.get $0)
        (i32.const 348)
       )
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 1)
       )
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 448)
        )
       )
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 460)
        )
       )
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 436)
        )
       )
      )
      (local.set $1
       (i32.load
        (local.get $4)
       )
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 1024)
   )
   (block
    (local.set $2
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (if
     (i32.eq
      (i32.load8_s
       (local.tee $6
        (i32.add
         (local.get $0)
         (i32.const 357)
        )
       )
      )
      (i32.const 16)
     )
     (block
      (if
       (local.tee $10
        (i32.mul
         (local.tee $5
          (i32.load8_u
           (local.tee $9
            (i32.add
             (local.get $0)
             (i32.const 358)
            )
           )
          )
         )
         (i32.load
          (local.tee $8
           (i32.add
            (local.get $0)
            (i32.const 348)
           )
          )
         )
        )
       )
       (block
        (local.set $5
         (i32.const 0)
        )
        (local.set $1
         (local.get $2)
        )
        (loop $while-in
         (i32.store8
          (local.get $1)
          (i32.load8_s
           (local.get $2)
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.const 2)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (br_if $while-in
          (i32.ne
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (local.get $10)
          )
         )
        )
        (local.set $2
         (local.tee $1
          (i32.load8_u
           (local.get $9)
          )
         )
        )
        (local.set $5
         (i32.mul
          (i32.load
           (local.get $8)
          )
          (local.get $1)
         )
        )
        (local.set $1
         (i32.load
          (local.get $4)
         )
        )
       )
       (block
        (local.set $2
         (local.get $5)
        )
        (local.set $5
         (i32.const 0)
        )
       )
      )
      (i32.store8
       (local.get $6)
       (i32.const 8)
      )
      (i32.store8
       (i32.add
        (local.get $0)
        (i32.const 359)
       )
       (i32.shl
        (local.get $2)
        (i32.const 3)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 352)
       )
       (local.get $5)
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 64)
   )
   (block
    (call $_png_do_dither
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 584)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 588)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 352)
       )
      )
     )
     (call $_png_error
      (local.get $0)
      (i32.const 18327)
     )
    )
   )
  )
  (if
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $4)
     )
    )
    (i32.const 32)
   )
   (block
    (call $_png_do_invert
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 8)
   )
   (block
    (call $_png_do_unshift
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
     (i32.add
      (local.get $0)
      (i32.const 477)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 4)
   )
   (block
    (call $_png_do_unpack
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 1)
   )
   (block
    (call $_png_do_bgr
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 65536)
   )
   (block
    (call $_png_do_packswap
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 16384)
   )
   (if
    (i32.and
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
     (i32.const 2048)
    )
    (block
     (call $_png_do_gray_to_rgb
      (i32.add
       (local.get $0)
       (i32.const 348)
      )
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.load
       (local.get $4)
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 32768)
   )
   (block
    (call $_png_do_read_filler
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
     (i32.load16_u
      (i32.add
       (local.get $0)
       (i32.const 394)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 200)
      )
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 524288)
   )
   (block $label$break$L79
    (local.set $1
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (local.set $5
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 348)
      )
     )
    )
    (block $switch
     (block $switch-case13
      (block $switch-case
       (br_table $switch-case13 $switch $switch-case $switch
        (i32.sub
         (i32.load8_s
          (i32.add
           (local.get $0)
           (i32.const 356)
          )
         )
         (i32.const 4)
        )
       )
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 352)
         )
        )
       )
      )
      (local.set $2
       (i32.ne
        (local.get $5)
        (i32.const 0)
       )
      )
      (if
       (i32.eq
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 357)
         )
        )
        (i32.const 8)
       )
       (block
        (br_if $label$break$L79
         (i32.eqz
          (local.get $2)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in6
         (i32.store8
          (local.tee $6
           (i32.add
            (local.get $1)
            (i32.const -1)
           )
          )
          (i32.xor
           (i32.load8_s
            (local.get $6)
           )
           (i32.const -1)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const -4)
          )
         )
         (br_if $while-in6
          (i32.ne
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (local.get $5)
          )
         )
        )
       )
       (block
        (br_if $label$break$L79
         (i32.eqz
          (local.get $2)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in8
         (i32.store8
          (local.tee $6
           (i32.add
            (local.get $1)
            (i32.const -1)
           )
          )
          (i32.xor
           (i32.load8_s
            (local.get $6)
           )
           (i32.const -1)
          )
         )
         (i32.store8
          (local.tee $6
           (i32.add
            (local.get $1)
            (i32.const -2)
           )
          )
          (i32.xor
           (i32.load8_s
            (local.get $6)
           )
           (i32.const -1)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const -8)
          )
         )
         (br_if $while-in8
          (i32.ne
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (local.get $5)
          )
         )
        )
       )
      )
      (br $switch)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 352)
        )
       )
      )
     )
     (local.set $2
      (i32.ne
       (local.get $5)
       (i32.const 0)
      )
     )
     (if
      (i32.eq
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 357)
        )
       )
       (i32.const 8)
      )
      (block
       (br_if $label$break$L79
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in10
        (i32.store8
         (local.tee $6
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
         )
         (i32.xor
          (i32.load8_s
           (local.get $6)
          )
          (i32.const -1)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const -2)
         )
        )
        (br_if $while-in10
         (i32.ne
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
        )
       )
      )
      (block
       (br_if $label$break$L79
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in12
        (i32.store8
         (local.tee $6
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
         )
         (i32.xor
          (i32.load8_s
           (local.get $6)
          )
          (i32.const -1)
         )
        )
        (i32.store8
         (local.tee $6
          (i32.add
           (local.get $1)
           (i32.const -2)
          )
         )
         (i32.xor
          (i32.load8_s
           (local.get $6)
          )
          (i32.const -1)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const -4)
         )
        )
        (br_if $while-in12
         (i32.ne
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $4)
     )
    )
    (i32.const 131072)
   )
   (block
    (call $_png_do_read_swap_alpha
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 16)
   )
   (block
    (call $_png_do_swap
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $1)
     (i32.const 1048576)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $7)
    )
    (return)
   )
  )
  (if
   (local.tee $1
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 180)
     )
    )
   )
   (call_indirect (type $FUNCSIG$viii)
    (local.get $0)
    (i32.add
     (local.get $0)
     (i32.const 348)
    )
    (i32.add
     (i32.load
      (local.get $3)
     )
     (i32.const 1)
    )
    (i32.add
     (i32.and
      (local.get $1)
      (i32.const 7)
     )
     (i32.const 58)
    )
   )
  )
  (if
   (local.tee $1
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 192)
     )
    )
   )
   (i32.store8
    (i32.add
     (local.get $0)
     (i32.const 357)
    )
    (local.get $1)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 358)
   )
  )
  (if
   (local.tee $1
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 193)
     )
    )
   )
   (i32.store8
    (local.get $2)
    (local.get $1)
   )
   (local.set $1
    (i32.load8_s
     (local.get $2)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 359)
   )
   (local.tee $1
    (i32.mul
     (i32.load8_u
      (i32.add
       (local.get $0)
       (i32.const 357)
      )
     )
     (i32.and
      (local.get $1)
      (i32.const 255)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 352)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 348)
       )
      )
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_png_do_expand_palette (; 116 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $6
   (i32.load
    (local.get $0)
   )
  )
  (if
   (i32.ne
    (i32.load8_s
     (local.tee $12
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
    (i32.const 3)
   )
   (return)
  )
  (if
   (i32.lt_s
    (i32.and
     (local.tee $5
      (i32.load8_s
       (local.tee $11
        (i32.add
         (local.get $0)
         (i32.const 9)
        )
       )
      )
     )
     (i32.const 255)
    )
    (i32.const 8)
   )
   (block
    (block $switch
     (block $switch-case5
      (block $switch-case2
       (block $switch-case
        (br_table $switch-case $switch-case2 $switch $switch-case5 $switch
         (i32.sub
          (local.get $5)
          (i32.const 1)
         )
        )
       )
       (if
        (local.get $6)
        (block
         (local.set $5
          (i32.add
           (local.get $1)
           (i32.shr_u
            (i32.add
             (local.get $6)
             (i32.const -1)
            )
            (i32.const 3)
           )
          )
         )
         (local.set $7
          (i32.xor
           (i32.and
            (i32.add
             (local.get $6)
             (i32.const 7)
            )
            (i32.const 7)
           )
           (i32.const 7)
          )
         )
         (local.set $9
          (i32.add
           (local.get $1)
           (local.get $6)
          )
         )
         (loop $while-in
          (i32.store8
           (local.tee $9
            (i32.add
             (local.get $9)
             (i32.const -1)
            )
           )
           (i32.ne
            (i32.and
             (i32.load8_u
              (local.get $5)
             )
             (i32.shl
              (i32.const 1)
              (local.get $7)
             )
            )
            (i32.const 0)
           )
          )
          (local.set $5
           (select
            (i32.add
             (local.get $5)
             (i32.const -1)
            )
            (local.get $5)
            (local.tee $10
             (i32.eq
              (local.get $7)
              (i32.const 7)
             )
            )
           )
          )
          (local.set $7
           (select
            (i32.const 0)
            (i32.add
             (local.get $7)
             (i32.const 1)
            )
            (local.get $10)
           )
          )
          (br_if $while-in
           (i32.ne
            (local.get $6)
            (local.tee $8
             (i32.add
              (local.get $8)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
       )
       (br $switch)
      )
      (if
       (local.get $6)
       (block
        (local.set $5
         (i32.add
          (local.get $1)
          (i32.shr_u
           (i32.add
            (local.get $6)
            (i32.const -1)
           )
           (i32.const 2)
          )
         )
        )
        (local.set $7
         (i32.xor
          (i32.and
           (i32.add
            (i32.shl
             (local.get $6)
             (i32.const 1)
            )
            (i32.const 6)
           )
           (i32.const 6)
          )
          (i32.const 6)
         )
        )
        (local.set $9
         (i32.add
          (local.get $1)
          (local.get $6)
         )
        )
        (loop $while-in1
         (i32.store8
          (local.tee $9
           (i32.add
            (local.get $9)
            (i32.const -1)
           )
          )
          (i32.and
           (i32.shr_u
            (i32.load8_u
             (local.get $5)
            )
            (local.get $7)
           )
           (i32.const 3)
          )
         )
         (local.set $5
          (select
           (i32.add
            (local.get $5)
            (i32.const -1)
           )
           (local.get $5)
           (local.tee $10
            (i32.eq
             (local.get $7)
             (i32.const 6)
            )
           )
          )
         )
         (local.set $7
          (select
           (i32.const 0)
           (i32.add
            (local.get $7)
            (i32.const 2)
           )
           (local.get $10)
          )
         )
         (br_if $while-in1
          (i32.ne
           (local.get $6)
           (local.tee $8
            (i32.add
             (local.get $8)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
      )
      (br $switch)
     )
     (if
      (local.get $6)
      (block
       (local.set $5
        (i32.add
         (local.get $1)
         (i32.shr_u
          (i32.add
           (local.get $6)
           (i32.const -1)
          )
          (i32.const 1)
         )
        )
       )
       (local.set $7
        (i32.and
         (i32.shl
          (local.get $6)
          (i32.const 2)
         )
         (i32.const 4)
        )
       )
       (local.set $9
        (i32.add
         (local.get $1)
         (local.get $6)
        )
       )
       (loop $while-in4
        (i32.store8
         (local.tee $9
          (i32.add
           (local.get $9)
           (i32.const -1)
          )
         )
         (i32.and
          (i32.shr_u
           (i32.load8_u
            (local.get $5)
           )
           (local.get $7)
          )
          (i32.const 15)
         )
        )
        (local.set $5
         (select
          (i32.add
           (local.get $5)
           (i32.const -1)
          )
          (local.get $5)
          (local.tee $10
           (i32.eq
            (local.get $7)
            (i32.const 4)
           )
          )
         )
        )
        (local.set $7
         (select
          (i32.const 0)
          (i32.add
           (local.get $7)
           (i32.const 4)
          )
          (local.get $10)
         )
        )
        (br_if $while-in4
         (i32.ne
          (local.tee $8
           (i32.add
            (local.get $8)
            (i32.const 1)
           )
          )
          (local.get $6)
         )
        )
       )
      )
     )
    )
    (i32.store8
     (local.get $11)
     (i32.const 8)
    )
    (i32.store8
     (i32.add
      (local.get $0)
      (i32.const 11)
     )
     (i32.const 8)
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
     (local.get $6)
    )
   )
   (if
    (i32.ne
     (local.get $5)
     (i32.const 8)
    )
    (return)
   )
  )
  (local.set $5
   (i32.add
    (i32.add
     (local.get $1)
     (local.get $6)
    )
    (i32.const -1)
   )
  )
  (if
   (i32.eqz
    (local.get $3)
   )
   (block
    (local.set $7
     (i32.mul
      (local.get $6)
      (i32.const 3)
     )
    )
    (if
     (local.get $6)
     (block
      (local.set $4
       (i32.const 0)
      )
      (local.set $3
       (local.get $5)
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (local.get $7)
       )
      )
      (loop $while-in7
       (i32.store8
        (i32.add
         (local.get $1)
         (i32.const -1)
        )
        (i32.load8_s
         (i32.add
          (i32.add
           (i32.mul
            (i32.load8_u
             (local.get $3)
            )
            (i32.const 3)
           )
           (local.get $2)
          )
          (i32.const 2)
         )
        )
       )
       (i32.store8
        (i32.add
         (local.get $1)
         (i32.const -2)
        )
        (i32.load8_s
         (i32.add
          (i32.add
           (i32.mul
            (i32.load8_u
             (local.get $3)
            )
            (i32.const 3)
           )
           (local.get $2)
          )
          (i32.const 1)
         )
        )
       )
       (i32.store8
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const -3)
         )
        )
        (i32.load8_s
         (i32.add
          (i32.mul
           (i32.load8_u
            (local.get $3)
           )
           (i32.const 3)
          )
          (local.get $2)
         )
        )
       )
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const -1)
        )
       )
       (br_if $while-in7
        (i32.ne
         (local.get $6)
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    (i32.store8
     (local.get $11)
     (i32.const 8)
    )
    (i32.store8
     (i32.add
      (local.get $0)
      (i32.const 11)
     )
     (i32.const 24)
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
     (local.get $7)
    )
    (i32.store8
     (local.get $12)
     (i32.const 2)
    )
    (i32.store8
     (i32.add
      (local.get $0)
      (i32.const 10)
     )
     (i32.const 3)
    )
    (return)
   )
  )
  (local.set $8
   (i32.shl
    (local.get $6)
    (i32.const 2)
   )
  )
  (if
   (local.get $6)
   (block
    (local.set $7
     (i32.const 0)
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $8)
     )
    )
    (loop $while-in9
     (i32.store8
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
      (if (result i32)
       (i32.lt_s
        (local.tee $9
         (i32.load8_u
          (local.get $5)
         )
        )
        (local.get $4)
       )
       (i32.load8_s
        (i32.add
         (local.get $3)
         (local.get $9)
        )
       )
       (i32.const -1)
      )
     )
     (i32.store8
      (i32.add
       (local.get $1)
       (i32.const -2)
      )
      (i32.load8_s
       (i32.add
        (i32.add
         (i32.mul
          (i32.load8_u
           (local.get $5)
          )
          (i32.const 3)
         )
         (local.get $2)
        )
        (i32.const 2)
       )
      )
     )
     (i32.store8
      (i32.add
       (local.get $1)
       (i32.const -3)
      )
      (i32.load8_s
       (i32.add
        (i32.add
         (i32.mul
          (i32.load8_u
           (local.get $5)
          )
          (i32.const 3)
         )
         (local.get $2)
        )
        (i32.const 1)
       )
      )
     )
     (i32.store8
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const -4)
       )
      )
      (i32.load8_s
       (i32.add
        (i32.mul
         (i32.load8_u
          (local.get $5)
         )
         (i32.const 3)
        )
        (local.get $2)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const -1)
      )
     )
     (br_if $while-in9
      (i32.ne
       (local.tee $7
        (i32.add
         (local.get $7)
         (i32.const 1)
        )
       )
       (local.get $6)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $11)
   (i32.const 8)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 11)
   )
   (i32.const 32)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
   (local.get $8)
  )
  (i32.store8
   (local.get $12)
   (i32.const 6)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 10)
   )
   (i32.const 4)
  )
 )
 (func $_png_do_expand (; 117 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $5
   (i32.load
    (local.get $0)
   )
  )
  (if
   (local.tee $4
    (i32.load8_s
     (local.tee $12
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
   (block
    (if
     (i32.eqz
      (i32.and
       (i32.eq
        (local.get $4)
        (i32.const 2)
       )
       (i32.ne
        (local.get $2)
        (i32.const 0)
       )
      )
     )
     (return)
    )
    (local.set $1
     (block $switch (result i32)
      (block $switch-default
       (block $switch-case2
        (block $switch-case
         (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case2 $switch-default
          (i32.sub
           (i32.load8_s
            (local.tee $13
             (i32.add
              (local.get $0)
              (i32.const 9)
             )
            )
           )
           (i32.const 8)
          )
         )
        )
        (local.set $4
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (br $switch
         (if (result i32)
          (local.get $5)
          (block (result i32)
           (local.set $9
            (i32.add
             (local.get $2)
             (i32.const 2)
            )
           )
           (local.set $10
            (i32.add
             (local.get $2)
             (i32.const 4)
            )
           )
           (local.set $11
            (i32.add
             (local.get $2)
             (i32.const 6)
            )
           )
           (local.set $2
            (i32.add
             (local.get $1)
             (i32.load
              (local.get $4)
             )
            )
           )
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.shl
              (local.get $5)
              (i32.const 2)
             )
            )
           )
           (loop $while-in (result i32)
            (local.set $6
             (i32.add
              (local.get $2)
              (i32.const -1)
             )
            )
            (local.set $7
             (i32.add
              (local.get $2)
              (i32.const -2)
             )
            )
            (i32.store8
             (i32.add
              (local.get $1)
              (i32.const -1)
             )
             (block $__rjto$0 (result i32)
              (block $__rjti$0
               (br_if $__rjti$0
                (i32.ne
                 (i32.load8_u
                  (local.tee $2
                   (i32.add
                    (local.get $2)
                    (i32.const -3)
                   )
                  )
                 )
                 (i32.load16_u
                  (local.get $9)
                 )
                )
               )
               (br_if $__rjti$0
                (i32.ne
                 (i32.load8_u
                  (local.get $7)
                 )
                 (i32.load16_u
                  (local.get $10)
                 )
                )
               )
               (br_if $__rjti$0
                (i32.ne
                 (i32.load8_u
                  (local.get $6)
                 )
                 (i32.load16_u
                  (local.get $11)
                 )
                )
               )
               (br $__rjto$0
                (i32.const 0)
               )
              )
              (i32.const -1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $1)
              (i32.const -2)
             )
             (i32.load8_s
              (local.get $6)
             )
            )
            (i32.store8
             (i32.add
              (local.get $1)
              (i32.const -3)
             )
             (i32.load8_s
              (local.get $7)
             )
            )
            (i32.store8
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const -4)
              )
             )
             (i32.load8_s
              (local.get $2)
             )
            )
            (br_if $while-in
             (i32.ne
              (local.get $5)
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
             )
            )
            (local.get $4)
           )
          )
          (local.get $4)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (br $switch
        (if (result i32)
         (local.get $5)
         (block (result i32)
          (local.set $14
           (i32.add
            (local.get $2)
            (i32.const 2)
           )
          )
          (local.set $15
           (i32.add
            (local.get $2)
            (i32.const 4)
           )
          )
          (local.set $16
           (i32.add
            (local.get $2)
            (i32.const 6)
           )
          )
          (local.set $2
           (i32.add
            (local.get $1)
            (i32.shl
             (local.get $5)
             (i32.const 3)
            )
           )
          )
          (local.set $3
           (i32.add
            (local.get $1)
            (i32.load
             (local.get $4)
            )
           )
          )
          (loop $while-in1 (result i32)
           (local.set $9
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
           )
           (local.set $10
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
           (local.set $11
            (i32.add
             (local.get $3)
             (i32.const -3)
            )
           )
           (local.set $3
            (block $__rjto$1 (result i32)
             (block $__rjti$1
              (br $__rjto$1
               (if (result i32)
                (i32.eq
                 (i32.load16_u
                  (local.get $14)
                 )
                 (i32.or
                  (i32.load8_u
                   (local.tee $17
                    (i32.add
                     (local.get $3)
                     (i32.const -5)
                    )
                   )
                  )
                  (i32.shl
                   (i32.load8_u
                    (local.tee $7
                     (i32.add
                      (local.get $3)
                      (i32.const -6)
                     )
                    )
                   )
                   (i32.const 8)
                  )
                 )
                )
                (if (result i32)
                 (i32.eq
                  (i32.load16_u
                   (local.get $15)
                  )
                  (i32.or
                   (i32.load8_u
                    (local.get $11)
                   )
                   (i32.shl
                    (i32.load8_u
                     (local.tee $1
                      (i32.add
                       (local.get $3)
                       (i32.const -4)
                      )
                     )
                    )
                    (i32.const 8)
                   )
                  )
                 )
                 (if (result i32)
                  (i32.eq
                   (i32.load16_u
                    (local.get $16)
                   )
                   (i32.or
                    (i32.load8_u
                     (local.get $10)
                    )
                    (i32.shl
                     (i32.load8_u
                      (local.tee $8
                       (i32.add
                        (local.get $3)
                        (i32.const -2)
                       )
                      )
                     )
                     (i32.const 8)
                    )
                   )
                  )
                  (block (result i32)
                   (i32.store8
                    (local.get $9)
                    (i32.const 0)
                   )
                   (i32.store8
                    (i32.add
                     (local.get $2)
                     (i32.const -2)
                    )
                    (i32.const 0)
                   )
                   (local.get $8)
                  )
                  (br $__rjti$1)
                 )
                 (br $__rjti$1)
                )
                (block
                 (local.set $1
                  (i32.add
                   (local.get $3)
                   (i32.const -4)
                  )
                 )
                 (br $__rjti$1)
                )
               )
              )
             )
             (i32.store8
              (local.get $9)
              (i32.const -1)
             )
             (i32.store8
              (i32.add
               (local.get $2)
               (i32.const -2)
              )
              (i32.const -1)
             )
             (i32.add
              (local.get $3)
              (i32.const -2)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const -3)
            )
            (i32.load8_s
             (local.get $10)
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const -4)
            )
            (i32.load8_s
             (local.get $3)
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const -5)
            )
            (i32.load8_s
             (local.get $11)
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const -6)
            )
            (i32.load8_s
             (local.get $1)
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const -7)
            )
            (i32.load8_s
             (local.get $17)
            )
           )
           (i32.store8
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const -8)
             )
            )
            (i32.load8_s
             (local.get $7)
            )
           )
           (if (result i32)
            (i32.eq
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (local.get $5)
            )
            (local.get $4)
            (block
             (local.set $3
              (local.get $7)
             )
             (br $while-in1)
            )
           )
          )
         )
         (local.get $4)
        )
       )
      )
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
    )
    (i32.store8
     (local.get $12)
     (i32.const 6)
    )
    (i32.store8
     (i32.add
      (local.get $0)
      (i32.const 10)
     )
     (i32.const 4)
    )
    (i32.store8
     (i32.add
      (local.get $0)
      (i32.const 11)
     )
     (local.tee $0
      (i32.shl
       (i32.load8_u
        (local.get $13)
       )
       (i32.const 2)
      )
     )
    )
    (i32.store
     (local.get $1)
     (i32.shr_u
      (i32.mul
       (i32.and
        (local.get $0)
        (i32.const 252)
       )
       (local.get $5)
      )
      (i32.const 3)
     )
    )
    (return)
   )
  )
  (local.set $2
   (if (result i32)
    (local.tee $10
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
    (i32.load16_s
     (i32.add
      (local.get $2)
      (i32.const 8)
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.lt_s
    (i32.and
     (local.tee $4
      (i32.load8_s
       (local.tee $9
        (i32.add
         (local.get $0)
         (i32.const 9)
        )
       )
      )
     )
     (i32.const 255)
    )
    (i32.const 8)
   )
   (block
    (block $switch3
     (block $switch-case12
      (block $switch-case9
       (block $switch-case6
        (br_table $switch-case6 $switch-case9 $switch3 $switch-case12 $switch3
         (i32.sub
          (local.get $4)
          (i32.const 1)
         )
        )
       )
       (local.set $2
        (i32.and
         (i32.mul
          (i32.and
           (local.get $2)
           (i32.const 65535)
          )
          (i32.const 255)
         )
         (i32.const 65535)
        )
       )
       (if
        (local.get $5)
        (block
         (local.set $4
          (i32.xor
           (i32.and
            (i32.add
             (local.get $5)
             (i32.const 7)
            )
            (i32.const 7)
           )
           (i32.const 7)
          )
         )
         (local.set $3
          (i32.add
           (local.get $1)
           (i32.shr_u
            (i32.add
             (local.get $5)
             (i32.const -1)
            )
            (i32.const 3)
           )
          )
         )
         (local.set $7
          (i32.add
           (local.get $1)
           (local.get $5)
          )
         )
         (loop $while-in5
          (i32.store8
           (local.tee $7
            (i32.add
             (local.get $7)
             (i32.const -1)
            )
           )
           (i32.shr_s
            (i32.shl
             (i32.ne
              (i32.and
               (i32.load8_u
                (local.get $3)
               )
               (i32.shl
                (i32.const 1)
                (local.get $4)
               )
              )
              (i32.const 0)
             )
             (i32.const 31)
            )
            (i32.const 31)
           )
          )
          (local.set $3
           (select
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
            (local.get $3)
            (local.tee $8
             (i32.eq
              (local.get $4)
              (i32.const 7)
             )
            )
           )
          )
          (local.set $4
           (select
            (i32.const 0)
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
            (local.get $8)
           )
          )
          (br_if $while-in5
           (i32.ne
            (local.tee $6
             (i32.add
              (local.get $6)
              (i32.const 1)
             )
            )
            (local.get $5)
           )
          )
         )
        )
       )
       (br $switch3)
      )
      (local.set $2
       (i32.and
        (i32.mul
         (i32.and
          (local.get $2)
          (i32.const 65535)
         )
         (i32.const 85)
        )
        (i32.const 65535)
       )
      )
      (if
       (local.get $5)
       (block
        (local.set $4
         (i32.add
          (local.get $1)
          (i32.shr_u
           (i32.add
            (local.get $5)
            (i32.const -1)
           )
           (i32.const 2)
          )
         )
        )
        (local.set $3
         (i32.xor
          (i32.and
           (i32.add
            (i32.shl
             (local.get $5)
             (i32.const 1)
            )
            (i32.const 6)
           )
           (i32.const 6)
          )
          (i32.const 6)
         )
        )
        (local.set $7
         (i32.add
          (local.get $1)
          (local.get $5)
         )
        )
        (loop $while-in8
         (i32.store8
          (local.tee $7
           (i32.add
            (local.get $7)
            (i32.const -1)
           )
          )
          (i32.or
           (i32.or
            (i32.or
             (local.tee $8
              (i32.and
               (i32.shr_u
                (i32.load8_u
                 (local.get $4)
                )
                (local.get $3)
               )
               (i32.const 3)
              )
             )
             (i32.shl
              (local.get $8)
              (i32.const 2)
             )
            )
            (i32.shl
             (local.get $8)
             (i32.const 4)
            )
           )
           (i32.shl
            (local.get $8)
            (i32.const 6)
           )
          )
         )
         (local.set $4
          (select
           (i32.add
            (local.get $4)
            (i32.const -1)
           )
           (local.get $4)
           (local.tee $8
            (i32.eq
             (local.get $3)
             (i32.const 6)
            )
           )
          )
         )
         (local.set $3
          (select
           (i32.const 0)
           (i32.add
            (local.get $3)
            (i32.const 2)
           )
           (local.get $8)
          )
         )
         (br_if $while-in8
          (i32.ne
           (local.tee $6
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
           (local.get $5)
          )
         )
        )
       )
      )
      (br $switch3)
     )
     (local.set $2
      (i32.and
       (i32.mul
        (i32.and
         (local.get $2)
         (i32.const 65535)
        )
        (i32.const 17)
       )
       (i32.const 65535)
      )
     )
     (if
      (local.get $5)
      (block
       (local.set $4
        (i32.add
         (local.get $1)
         (i32.shr_u
          (i32.add
           (local.get $5)
           (i32.const -1)
          )
          (i32.const 1)
         )
        )
       )
       (local.set $3
        (i32.and
         (i32.shl
          (local.get $5)
          (i32.const 2)
         )
         (i32.const 4)
        )
       )
       (local.set $7
        (i32.add
         (local.get $1)
         (local.get $5)
        )
       )
       (loop $while-in11
        (i32.store8
         (local.tee $7
          (i32.add
           (local.get $7)
           (i32.const -1)
          )
         )
         (i32.or
          (local.tee $8
           (i32.and
            (i32.shr_u
             (i32.load8_u
              (local.get $4)
             )
             (local.get $3)
            )
            (i32.const 15)
           )
          )
          (i32.shl
           (local.get $8)
           (i32.const 4)
          )
         )
        )
        (local.set $4
         (select
          (i32.add
           (local.get $4)
           (i32.const -1)
          )
          (local.get $4)
          (local.tee $3
           (i32.eq
            (local.get $3)
            (i32.const 4)
           )
          )
         )
        )
        (local.set $3
         (select
          (i32.const 0)
          (i32.const 4)
          (local.get $3)
         )
        )
        (br_if $while-in11
         (i32.ne
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
        )
       )
      )
     )
    )
    (i32.store8
     (local.get $9)
     (i32.const 8)
    )
    (i32.store8
     (i32.add
      (local.get $0)
      (i32.const 11)
     )
     (i32.const 8)
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
     (local.get $5)
    )
    (local.set $4
     (i32.const 8)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $10)
   )
   (return)
  )
  (block $switch14
   (block $switch-case20
    (block $switch-case17
     (br_table $switch-case17 $switch14 $switch14 $switch14 $switch14 $switch14 $switch14 $switch14 $switch-case20 $switch14
      (i32.sub
       (i32.shr_s
        (i32.shl
         (local.get $4)
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.const 8)
      )
     )
    )
    (if
     (local.get $5)
     (block
      (local.set $3
       (i32.and
        (local.get $2)
        (i32.const 65535)
       )
      )
      (local.set $4
       (i32.const 0)
      )
      (local.set $2
       (i32.add
        (local.get $1)
        (i32.shl
         (local.get $5)
         (i32.const 1)
        )
       )
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (local.get $5)
       )
      )
      (loop $while-in16
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
        (i32.shr_s
         (i32.shl
          (i32.ne
           (local.get $3)
           (i32.load8_u
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const -1)
             )
            )
           )
          )
          (i32.const 31)
         )
         (i32.const 31)
        )
       )
       (i32.store8
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const -2)
         )
        )
        (i32.load8_s
         (local.get $1)
        )
       )
       (br_if $while-in16
        (i32.ne
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.get $5)
        )
       )
      )
     )
    )
    (br $switch14)
   )
   (local.set $3
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
   )
   (if
    (local.get $5)
    (block
     (local.set $6
      (i32.and
       (local.get $2)
       (i32.const 65535)
      )
     )
     (local.set $4
      (i32.const 0)
     )
     (local.set $2
      (i32.add
       (local.get $1)
       (local.get $3)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.shl
        (local.get $3)
        (i32.const 1)
       )
      )
     )
     (loop $while-in19
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -1)
       )
       (local.tee $7
        (i32.shr_s
         (i32.shl
          (i32.ne
           (local.get $6)
           (i32.or
            (i32.load8_u
             (local.tee $3
              (i32.add
               (local.get $2)
               (i32.const -1)
              )
             )
            )
            (i32.shl
             (i32.load8_u
              (local.tee $2
               (i32.add
                (local.get $2)
                (i32.const -2)
               )
              )
             )
             (i32.const 8)
            )
           )
          )
          (i32.const 31)
         )
         (i32.const 31)
        )
       )
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -2)
       )
       (local.get $7)
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -3)
       )
       (i32.load8_s
        (local.get $3)
       )
      )
      (i32.store8
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const -4)
        )
       )
       (i32.load8_s
        (local.get $2)
       )
      )
      (br_if $while-in19
       (i32.ne
        (local.get $5)
        (local.tee $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $12)
   (i32.const 4)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 10)
   )
   (i32.const 2)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 11)
   )
   (local.tee $1
    (i32.shl
     (i32.load8_u
      (local.get $9)
     )
     (i32.const 1)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
   (i32.shr_u
    (i32.mul
     (i32.and
      (local.get $1)
      (i32.const 254)
     )
     (local.get $5)
    )
    (i32.const 3)
   )
  )
 )
 (func $_png_do_rgb_to_gray (; 118 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local.set $8
   (i32.load
    (local.get $1)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $7
      (i32.load8_s
       (local.tee $20
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
      )
     )
     (i32.const 2)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $14
   (i32.load16_u
    (i32.add
     (local.get $0)
     (i32.const 646)
    )
   )
  )
  (local.set $11
   (i32.load16_u
    (i32.add
     (local.get $0)
     (i32.const 648)
    )
   )
  )
  (local.set $12
   (i32.load16_u
    (i32.add
     (local.get $0)
     (i32.const 650)
    )
   )
  )
  (if
   (i32.eq
    (local.get $7)
    (i32.const 2)
   )
   (block $label$break$L4
    (if
     (i32.ne
      (i32.load8_s
       (i32.add
        (local.get $1)
        (i32.const 9)
       )
      )
      (i32.const 8)
     )
     (block
      (if
       (i32.load
        (local.tee $19
         (i32.add
          (local.get $0)
          (i32.const 468)
         )
        )
       )
       (if
        (i32.load
         (local.tee $21
          (i32.add
           (local.get $0)
           (i32.const 464)
          )
         )
        )
        (block
         (if
          (i32.eqz
           (local.get $8)
          )
          (block
           (local.set $7
            (i32.const 0)
           )
           (br $label$break$L4)
          )
         )
         (local.set $22
          (i32.add
           (local.get $0)
           (i32.const 436)
          )
         )
         (local.set $3
          (local.get $2)
         )
         (local.set $5
          (local.get $2)
         )
         (local.set $7
          (i32.const 0)
         )
         (loop $while-in
          (local.set $16
           (i32.load8_u
            (i32.add
             (local.get $3)
             (i32.const 4)
            )
           )
          )
          (local.set $17
           (i32.load8_u
            (i32.add
             (local.get $3)
             (i32.const 5)
            )
           )
          )
          (local.set $9
           (i32.add
            (local.get $3)
            (i32.const 6)
           )
          )
          (block $__rjto$0
           (block $__rjti$0
            (br_if $__rjti$0
             (i32.ne
              (i32.or
               (local.tee $23
                (i32.load8_u
                 (i32.add
                  (local.get $3)
                  (i32.const 3)
                 )
                )
               )
               (i32.shl
                (local.tee $15
                 (i32.load8_u
                  (i32.add
                   (local.get $3)
                   (i32.const 2)
                  )
                 )
                )
                (i32.const 8)
               )
              )
              (local.tee $10
               (i32.or
                (i32.shl
                 (local.tee $18
                  (i32.and
                   (local.tee $6
                    (i32.load8_s
                     (local.get $3)
                    )
                   )
                   (i32.const 255)
                  )
                 )
                 (i32.const 8)
                )
                (local.tee $13
                 (i32.and
                  (local.tee $3
                   (i32.load8_s
                    (i32.add
                     (local.get $3)
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.const 255)
                 )
                )
               )
              )
             )
            )
            (br_if $__rjti$0
             (i32.ne
              (local.get $10)
              (i32.or
               (local.get $17)
               (i32.shl
                (local.get $16)
                (i32.const 8)
               )
              )
             )
            )
            (br $__rjto$0)
           )
           (local.set $3
            (i32.and
             (local.tee $6
              (i32.load16_s
               (i32.add
                (i32.shl
                 (i32.and
                  (i32.shr_u
                   (local.tee $3
                    (i32.add
                     (i32.add
                      (i32.mul
                       (local.get $14)
                       (i32.load16_u
                        (i32.add
                         (i32.load
                          (i32.add
                           (local.tee $3
                            (i32.load
                             (local.get $19)
                            )
                           )
                           (i32.shl
                            (i32.shr_u
                             (local.get $13)
                             (local.tee $6
                              (i32.load
                               (local.get $22)
                              )
                             )
                            )
                            (i32.const 2)
                           )
                          )
                         )
                         (i32.shl
                          (local.get $18)
                          (i32.const 1)
                         )
                        )
                       )
                      )
                      (i32.mul
                       (local.get $11)
                       (i32.load16_u
                        (i32.add
                         (i32.load
                          (i32.add
                           (i32.shl
                            (i32.shr_u
                             (local.get $23)
                             (local.get $6)
                            )
                            (i32.const 2)
                           )
                           (local.get $3)
                          )
                         )
                         (i32.shl
                          (local.get $15)
                          (i32.const 1)
                         )
                        )
                       )
                      )
                     )
                     (i32.mul
                      (i32.load16_u
                       (i32.add
                        (i32.load
                         (i32.add
                          (i32.shl
                           (i32.shr_u
                            (local.get $17)
                            (local.get $6)
                           )
                           (i32.const 2)
                          )
                          (local.get $3)
                         )
                        )
                        (i32.shl
                         (local.get $16)
                         (i32.const 1)
                        )
                       )
                      )
                      (local.get $12)
                     )
                    )
                   )
                   (i32.const 23)
                  )
                  (i32.const 255)
                 )
                 (i32.const 1)
                )
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $21)
                  )
                  (i32.shl
                   (i32.shr_u
                    (i32.and
                     (i32.shr_u
                      (local.get $3)
                      (i32.const 15)
                     )
                     (i32.const 255)
                    )
                    (local.get $6)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
              )
             )
             (i32.const 255)
            )
           )
           (local.set $6
            (i32.shr_u
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
             (i32.const 8)
            )
           )
           (local.set $7
            (i32.or
             (local.get $7)
             (i32.const 1)
            )
           )
          )
          (i32.store8
           (local.get $5)
           (local.get $6)
          )
          (local.set $6
           (i32.add
            (local.get $5)
            (i32.const 2)
           )
          )
          (i32.store8
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
           (local.get $3)
          )
          (br_if $label$break$L4
           (i32.eq
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (local.get $8)
           )
          )
          (local.set $3
           (local.get $9)
          )
          (local.set $5
           (local.get $6)
          )
          (br $while-in)
         )
        )
       )
      )
      (if
       (i32.eqz
        (local.get $8)
       )
       (block
        (local.set $7
         (i32.const 0)
        )
        (br $label$break$L4)
       )
      )
      (local.set $3
       (local.get $2)
      )
      (local.set $5
       (local.get $2)
      )
      (local.set $7
       (i32.const 0)
      )
      (loop $while-in1
       (local.set $9
        (i32.add
         (local.get $3)
         (i32.const 6)
        )
       )
       (local.set $7
        (i32.or
         (local.get $7)
         (i32.or
          (i32.ne
           (local.tee $10
            (i32.or
             (i32.load8_u
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (i32.shl
              (i32.load8_u
               (local.get $3)
              )
              (i32.const 8)
             )
            )
           )
           (local.tee $6
            (i32.or
             (i32.load8_u
              (i32.add
               (local.get $3)
               (i32.const 3)
              )
             )
             (i32.shl
              (i32.load8_u
               (i32.add
                (local.get $3)
                (i32.const 2)
               )
              )
              (i32.const 8)
             )
            )
           )
          )
          (i32.ne
           (local.get $10)
           (local.tee $3
            (i32.or
             (i32.load8_u
              (i32.add
               (local.get $3)
               (i32.const 5)
              )
             )
             (i32.shl
              (i32.load8_u
               (i32.add
                (local.get $3)
                (i32.const 4)
               )
              )
              (i32.const 8)
             )
            )
           )
          )
         )
        )
       )
       (i32.store8
        (local.get $5)
        (i32.shr_u
         (local.tee $3
          (i32.add
           (i32.add
            (i32.mul
             (local.get $10)
             (local.get $14)
            )
            (i32.mul
             (local.get $6)
             (local.get $11)
            )
           )
           (i32.mul
            (local.get $3)
            (local.get $12)
           )
          )
         )
         (i32.const 23)
        )
       )
       (local.set $6
        (i32.add
         (local.get $5)
         (i32.const 2)
        )
       )
       (i32.store8
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
        (i32.shr_u
         (local.get $3)
         (i32.const 15)
        )
       )
       (br_if $label$break$L4
        (i32.eq
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.get $8)
        )
       )
       (local.set $3
        (local.get $9)
       )
       (local.set $5
        (local.get $6)
       )
       (br $while-in1)
      )
     )
    )
    (if
     (i32.load
      (local.tee $18
       (i32.add
        (local.get $0)
        (i32.const 452)
       )
      )
     )
     (if
      (local.tee $4
       (i32.load
        (local.tee $13
         (i32.add
          (local.get $0)
          (i32.const 456)
         )
        )
       )
      )
      (block
       (if
        (i32.eqz
         (local.get $8)
        )
        (block
         (local.set $7
          (i32.const 0)
         )
         (br $label$break$L4)
        )
       )
       (local.set $7
        (i32.const 0)
       )
       (local.set $5
        (local.get $2)
       )
       (local.set $6
        (local.get $2)
       )
       (loop $while-in3
        (if
         (i32.eqz
          (i32.and
           (i32.eq
            (local.tee $15
             (i32.load8_s
              (i32.add
               (i32.load8_u
                (local.get $5)
               )
               (local.get $4)
              )
             )
            )
            (local.tee $10
             (i32.load8_s
              (i32.add
               (local.get $4)
               (i32.load8_u
                (i32.add
                 (local.get $5)
                 (i32.const 1)
                )
               )
              )
             )
            )
           )
           (i32.eq
            (local.get $15)
            (local.tee $9
             (i32.load8_s
              (i32.add
               (local.get $4)
               (i32.and
                (local.tee $4
                 (i32.load8_s
                  (i32.add
                   (local.get $5)
                   (i32.const 2)
                  )
                 )
                )
                (i32.const 255)
               )
              )
             )
            )
           )
          )
         )
         (block
          (local.set $7
           (i32.or
            (local.get $7)
            (i32.const 1)
           )
          )
          (local.set $4
           (i32.load8_s
            (i32.add
             (i32.load
              (local.get $18)
             )
             (i32.shr_u
              (i32.add
               (i32.add
                (i32.mul
                 (local.get $14)
                 (i32.and
                  (local.get $15)
                  (i32.const 255)
                 )
                )
                (i32.mul
                 (local.get $11)
                 (i32.and
                  (local.get $10)
                  (i32.const 255)
                 )
                )
               )
               (i32.mul
                (local.get $12)
                (i32.and
                 (local.get $9)
                 (i32.const 255)
                )
               )
              )
              (i32.const 15)
             )
            )
           )
          )
         )
        )
        (local.set $5
         (i32.add
          (local.get $5)
          (i32.const 3)
         )
        )
        (i32.store8
         (local.get $6)
         (local.get $4)
        )
        (br_if $label$break$L4
         (i32.eq
          (local.get $8)
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
         )
        )
        (local.set $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (local.set $4
         (i32.load
          (local.get $13)
         )
        )
        (br $while-in3)
       )
      )
     )
    )
    (if
     (local.get $8)
     (block
      (local.set $3
       (local.get $2)
      )
      (local.set $5
       (local.get $2)
      )
      (local.set $4
       (i32.const 0)
      )
      (local.set $7
       (i32.const 0)
      )
      (loop $while-in5
       (if
        (i32.eqz
         (i32.and
          (i32.eq
           (local.tee $9
            (i32.load8_s
             (local.get $3)
            )
           )
           (local.tee $10
            (i32.load8_s
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
           )
          )
          (i32.eq
           (local.get $9)
           (local.tee $6
            (i32.load8_s
             (i32.add
              (local.get $3)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
        (block
         (local.set $7
          (i32.or
           (local.get $7)
           (i32.const 1)
          )
         )
         (local.set $9
          (i32.and
           (i32.shr_u
            (i32.add
             (i32.add
              (i32.mul
               (local.get $14)
               (i32.and
                (local.get $9)
                (i32.const 255)
               )
              )
              (i32.mul
               (local.get $11)
               (i32.and
                (local.get $10)
                (i32.const 255)
               )
              )
             )
             (i32.mul
              (local.get $12)
              (i32.and
               (local.get $6)
               (i32.const 255)
              )
             )
            )
            (i32.const 15)
           )
           (i32.const 255)
          )
         )
        )
       )
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 3)
        )
       )
       (local.set $6
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $5)
        (local.get $9)
       )
       (if
        (i32.ne
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.get $8)
        )
        (block
         (local.set $5
          (local.get $6)
         )
         (br $while-in5)
        )
       )
      )
     )
     (local.set $7
      (i32.const 0)
     )
    )
   )
   (local.set $7
    (i32.const 0)
   )
  )
  (local.set $16
   (i32.add
    (local.get $1)
    (i32.const 9)
   )
  )
  (if
   (i32.eq
    (i32.load8_s
     (local.get $20)
    )
    (i32.const 6)
   )
   (block $label$break$L42
    (if
     (i32.eq
      (i32.load8_s
       (local.get $16)
      )
      (i32.const 8)
     )
     (block
      (if
       (local.tee $3
        (i32.load
         (local.tee $10
          (i32.add
           (local.get $0)
           (i32.const 452)
          )
         )
        )
       )
       (if
        (local.tee $5
         (i32.load
          (local.tee $9
           (i32.add
            (local.get $0)
            (i32.const 456)
           )
          )
         )
        )
        (block
         (br_if $label$break$L42
          (i32.eqz
           (local.get $8)
          )
         )
         (local.set $4
          (local.get $2)
         )
         (local.set $0
          (i32.const 0)
         )
         (loop $while-in8
          (local.set $7
           (i32.or
            (local.get $7)
            (i32.or
             (i32.ne
              (local.tee $13
               (i32.load8_s
                (i32.add
                 (i32.load8_u
                  (local.get $4)
                 )
                 (local.get $5)
                )
               )
              )
              (local.tee $6
               (i32.load8_s
                (i32.add
                 (local.get $5)
                 (i32.load8_u
                  (i32.add
                   (local.get $4)
                   (i32.const 1)
                  )
                 )
                )
               )
              )
             )
             (i32.ne
              (local.get $13)
              (local.tee $5
               (i32.load8_s
                (i32.add
                 (local.get $5)
                 (i32.load8_u
                  (i32.add
                   (local.get $4)
                   (i32.const 2)
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
          (i32.store8
           (local.get $2)
           (i32.load8_s
            (i32.add
             (i32.shr_u
              (i32.add
               (i32.add
                (i32.mul
                 (local.get $14)
                 (i32.and
                  (local.get $13)
                  (i32.const 255)
                 )
                )
                (i32.mul
                 (local.get $11)
                 (i32.and
                  (local.get $6)
                  (i32.const 255)
                 )
                )
               )
               (i32.mul
                (local.get $12)
                (i32.and
                 (local.get $5)
                 (i32.const 255)
                )
               )
              )
              (i32.const 15)
             )
             (local.get $3)
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
           (i32.load8_s
            (i32.add
             (local.get $4)
             (i32.const 3)
            )
           )
          )
          (br_if $label$break$L42
           (i32.eq
            (local.tee $0
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
            (local.get $8)
           )
          )
          (local.set $4
           (i32.add
            (local.get $4)
            (i32.const 4)
           )
          )
          (local.set $2
           (i32.add
            (local.get $2)
            (i32.const 2)
           )
          )
          (local.set $5
           (i32.load
            (local.get $9)
           )
          )
          (local.set $3
           (i32.load
            (local.get $10)
           )
          )
          (br $while-in8)
         )
        )
       )
      )
      (br_if $label$break$L42
       (i32.eqz
        (local.get $8)
       )
      )
      (local.set $0
       (local.get $2)
      )
      (local.set $5
       (i32.const 0)
      )
      (loop $while-in10
       (local.set $7
        (i32.or
         (local.get $7)
         (i32.or
          (i32.ne
           (local.tee $6
            (i32.load8_s
             (local.get $0)
            )
           )
           (local.tee $4
            (i32.load8_s
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
           )
          )
          (i32.ne
           (local.get $6)
           (local.tee $3
            (i32.load8_s
             (i32.add
              (local.get $0)
              (i32.const 2)
             )
            )
           )
          )
         )
        )
       )
       (i32.store8
        (local.get $2)
        (i32.shr_u
         (i32.add
          (i32.mul
           (local.get $11)
           (i32.add
            (i32.and
             (local.get $6)
             (i32.const 255)
            )
            (i32.and
             (local.get $4)
             (i32.const 255)
            )
           )
          )
          (i32.mul
           (local.get $12)
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
          )
         )
         (i32.const 8)
        )
       )
       (local.set $4
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const 2)
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 3)
         )
        )
       )
       (br_if $label$break$L42
        (i32.eq
         (local.tee $5
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (local.get $8)
        )
       )
       (local.set $0
        (local.get $4)
       )
       (local.set $2
        (local.get $3)
       )
       (br $while-in10)
      )
     )
    )
    (if
     (i32.load
      (local.tee $21
       (i32.add
        (local.get $0)
        (i32.const 468)
       )
      )
     )
     (if
      (i32.load
       (local.tee $22
        (i32.add
         (local.get $0)
         (i32.const 464)
        )
       )
      )
      (block
       (br_if $label$break$L42
        (i32.eqz
         (local.get $8)
        )
       )
       (local.set $23
        (i32.add
         (local.get $0)
         (i32.const 436)
        )
       )
       (local.set $0
        (local.get $2)
       )
       (local.set $5
        (i32.const 0)
       )
       (loop $while-in12
        (local.set $17
         (i32.load8_u
          (i32.add
           (local.get $2)
           (i32.const 4)
          )
         )
        )
        (local.set $19
         (i32.load8_u
          (i32.add
           (local.get $2)
           (i32.const 5)
          )
         )
        )
        (local.set $15
         (i32.add
          (local.get $2)
          (i32.const 6)
         )
        )
        (block $__rjto$1
         (block $__rjti$1
          (br_if $__rjti$1
           (i32.ne
            (local.tee $10
             (i32.or
              (local.tee $13
               (i32.and
                (local.tee $3
                 (i32.load8_s
                  (i32.add
                   (local.get $2)
                   (i32.const 1)
                  )
                 )
                )
                (i32.const 255)
               )
              )
              (i32.shl
               (local.tee $18
                (i32.and
                 (local.tee $4
                  (i32.load8_s
                   (local.get $2)
                  )
                 )
                 (i32.const 255)
                )
               )
               (i32.const 8)
              )
             )
            )
            (i32.or
             (local.tee $6
              (i32.load8_u
               (i32.add
                (local.get $2)
                (i32.const 3)
               )
              )
             )
             (i32.shl
              (local.tee $9
               (i32.load8_u
                (i32.add
                 (local.get $2)
                 (i32.const 2)
                )
               )
              )
              (i32.const 8)
             )
            )
           )
          )
          (br_if $__rjti$1
           (i32.ne
            (i32.or
             (local.get $19)
             (i32.shl
              (local.get $17)
              (i32.const 8)
             )
            )
            (local.get $10)
           )
          )
          (br $__rjto$1)
         )
         (local.set $3
          (i32.and
           (local.tee $4
            (i32.load16_s
             (i32.add
              (i32.shl
               (i32.and
                (i32.shr_u
                 (local.tee $3
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $14)
                     (i32.load16_u
                      (i32.add
                       (i32.load
                        (i32.add
                         (local.tee $3
                          (i32.load
                           (local.get $21)
                          )
                         )
                         (i32.shl
                          (i32.shr_u
                           (local.get $13)
                           (local.tee $4
                            (i32.load
                             (local.get $23)
                            )
                           )
                          )
                          (i32.const 2)
                         )
                        )
                       )
                       (i32.shl
                        (local.get $18)
                        (i32.const 1)
                       )
                      )
                     )
                    )
                    (i32.mul
                     (local.get $11)
                     (i32.load16_u
                      (i32.add
                       (i32.load
                        (i32.add
                         (i32.shl
                          (i32.shr_u
                           (local.get $6)
                           (local.get $4)
                          )
                          (i32.const 2)
                         )
                         (local.get $3)
                        )
                       )
                       (i32.shl
                        (local.get $9)
                        (i32.const 1)
                       )
                      )
                     )
                    )
                   )
                   (i32.mul
                    (local.get $12)
                    (i32.load16_u
                     (i32.add
                      (i32.load
                       (i32.add
                        (i32.shl
                         (i32.shr_u
                          (local.get $19)
                          (local.get $4)
                         )
                         (i32.const 2)
                        )
                        (local.get $3)
                       )
                      )
                      (i32.shl
                       (local.get $17)
                       (i32.const 1)
                      )
                     )
                    )
                   )
                  )
                 )
                 (i32.const 23)
                )
                (i32.const 255)
               )
               (i32.const 1)
              )
              (i32.load
               (i32.add
                (i32.load
                 (local.get $22)
                )
                (i32.shl
                 (i32.shr_u
                  (i32.and
                   (i32.shr_u
                    (local.get $3)
                    (i32.const 15)
                   )
                   (i32.const 255)
                  )
                  (local.get $4)
                 )
                 (i32.const 2)
                )
               )
              )
             )
            )
           )
           (i32.const 255)
          )
         )
         (local.set $4
          (i32.shr_u
           (i32.and
            (local.get $4)
            (i32.const 65535)
           )
           (i32.const 8)
          )
         )
         (local.set $7
          (i32.or
           (local.get $7)
           (i32.const 1)
          )
         )
        )
        (i32.store8
         (local.get $0)
         (local.get $4)
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
         (local.get $3)
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (i32.const 2)
         )
         (i32.load8_s
          (local.get $15)
         )
        )
        (local.set $4
         (i32.add
          (local.get $2)
          (i32.const 8)
         )
        )
        (local.set $3
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (i32.const 3)
         )
         (i32.load8_s
          (i32.add
           (local.get $2)
           (i32.const 7)
          )
         )
        )
        (br_if $label$break$L42
         (i32.eq
          (local.get $8)
          (local.tee $5
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
         )
        )
        (local.set $0
         (local.get $3)
        )
        (local.set $2
         (local.get $4)
        )
        (br $while-in12)
       )
      )
     )
    )
    (if
     (local.get $8)
     (block
      (local.set $0
       (local.get $2)
      )
      (local.set $5
       (i32.const 0)
      )
      (loop $while-in14
       (local.set $7
        (i32.or
         (local.get $7)
         (i32.or
          (i32.ne
           (local.tee $6
            (i32.or
             (i32.load8_u
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
             (i32.shl
              (i32.load8_u
               (local.get $2)
              )
              (i32.const 8)
             )
            )
           )
           (local.tee $4
            (i32.or
             (i32.load8_u
              (i32.add
               (local.get $2)
               (i32.const 3)
              )
             )
             (i32.shl
              (i32.load8_u
               (i32.add
                (local.get $2)
                (i32.const 2)
               )
              )
              (i32.const 8)
             )
            )
           )
          )
          (i32.ne
           (local.get $6)
           (local.tee $3
            (i32.or
             (i32.load8_u
              (i32.add
               (local.get $2)
               (i32.const 5)
              )
             )
             (i32.shl
              (i32.load8_u
               (i32.add
                (local.get $2)
                (i32.const 4)
               )
              )
              (i32.const 8)
             )
            )
           )
          )
         )
        )
       )
       (i32.store8
        (local.get $0)
        (i32.shr_u
         (local.tee $3
          (i32.add
           (i32.add
            (i32.mul
             (local.get $6)
             (local.get $14)
            )
            (i32.mul
             (local.get $4)
             (local.get $11)
            )
           )
           (i32.mul
            (local.get $3)
            (local.get $12)
           )
          )
         )
         (i32.const 23)
        )
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
        (i32.shr_u
         (local.get $3)
         (i32.const 15)
        )
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 2)
        )
        (i32.load8_s
         (i32.add
          (local.get $2)
          (i32.const 6)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $2)
         (i32.const 8)
        )
       )
       (local.set $3
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 3)
        )
        (i32.load8_s
         (i32.add
          (local.get $2)
          (i32.const 7)
         )
        )
       )
       (if
        (i32.ne
         (local.tee $5
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (local.get $8)
        )
        (block
         (local.set $0
          (local.get $3)
         )
         (local.set $2
          (local.get $4)
         )
         (br $while-in14)
        )
       )
      )
     )
    )
   )
  )
  (local.set $2
   (i32.load8_s
    (local.tee $0
     (i32.add
      (local.get $1)
      (i32.const 10)
     )
    )
   )
  )
  (i32.store8
   (local.get $0)
   (i32.add
    (i32.and
     (local.get $2)
     (i32.const 255)
    )
    (i32.const 254)
   )
  )
  (i32.store8
   (local.get $20)
   (i32.and
    (i32.load8_s
     (local.get $20)
    )
    (i32.const -3)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 11)
   )
   (local.tee $0
    (i32.mul
     (i32.load8_u
      (local.get $16)
     )
     (i32.and
      (i32.shr_s
       (i32.shl
        (i32.add
         (local.get $2)
         (i32.const -2)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const 255)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 4)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (local.get $8)
      (i32.and
       (local.get $0)
       (i32.const 255)
      )
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
  (local.get $7)
 )
 (func $_png_do_gray_to_rgb (; 119 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (if
   (i32.le_s
    (i32.and
     (local.tee $2
      (i32.load8_s
       (local.tee $8
        (i32.add
         (local.get $0)
         (i32.const 9)
        )
       )
      )
     )
     (i32.const 255)
    )
    (i32.const 7)
   )
   (return)
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load8_s
      (local.tee $7
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
     )
    )
    (i32.const 2)
   )
   (return)
  )
  (block $label$break$L7
   (block $switch-case6
    (block $switch-case
     (br_table $switch-case $label$break$L7 $label$break$L7 $label$break$L7 $switch-case6 $label$break$L7
      (local.get $4)
     )
    )
    (if
     (i32.eq
      (local.get $2)
      (i32.const 8)
     )
     (block
      (br_if $label$break$L7
       (i32.eqz
        (local.get $3)
       )
      )
      (local.set $2
       (i32.add
        (local.tee $1
         (i32.add
          (i32.add
           (local.get $1)
           (local.get $3)
          )
          (i32.const -1)
         )
        )
        (i32.shl
         (local.get $3)
         (i32.const 1)
        )
       )
      )
      (local.set $4
       (i32.const 0)
      )
      (loop $while-in
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $5
        (i32.add
         (local.get $1)
         (i32.const -1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $2)
         (i32.const -3)
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const -2)
        )
        (i32.load8_s
         (local.get $1)
        )
       )
       (if
        (i32.ne
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.get $3)
        )
        (block
         (local.set $2
          (local.get $6)
         )
         (local.set $1
          (local.get $5)
         )
         (br $while-in)
        )
       )
      )
     )
     (block
      (br_if $label$break$L7
       (i32.eqz
        (local.get $3)
       )
      )
      (local.set $2
       (i32.add
        (local.tee $1
         (i32.add
          (i32.add
           (local.get $1)
           (i32.shl
            (local.get $3)
            (i32.const 1)
           )
          )
          (i32.const -1)
         )
        )
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
       )
      )
      (local.set $4
       (i32.const 0)
      )
      (loop $while-in1
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
        (i32.load8_s
         (local.tee $6
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
         )
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const -2)
        )
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const -3)
        )
        (i32.load8_s
         (local.get $6)
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const -4)
        )
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const -2)
        )
       )
       (local.set $5
        (i32.add
         (local.get $2)
         (i32.const -6)
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const -5)
        )
        (i32.load8_s
         (local.get $6)
        )
       )
       (if
        (i32.ne
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.get $3)
        )
        (block
         (local.set $2
          (local.get $5)
         )
         (br $while-in1)
        )
       )
      )
     )
    )
    (br $label$break$L7)
   )
   (if
    (i32.eq
     (local.get $2)
     (i32.const 8)
    )
    (block
     (br_if $label$break$L7
      (i32.eqz
       (local.get $3)
      )
     )
     (local.set $1
      (i32.add
       (i32.add
        (local.get $1)
        (local.tee $2
         (i32.shl
          (local.get $3)
          (i32.const 1)
         )
        )
       )
       (i32.const -1)
      )
     )
     (local.set $2
      (i32.add
       (local.get $1)
       (local.get $2)
      )
     )
     (local.set $4
      (i32.const 0)
     )
     (loop $while-in3
      (i32.store8
       (local.get $2)
       (i32.load8_s
        (local.get $1)
       )
      )
      (i32.store8
       (i32.add
        (local.get $2)
        (i32.const -1)
       )
       (i32.load8_s
        (local.tee $6
         (i32.add
          (local.get $1)
          (i32.const -1)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.get $2)
        (i32.const -2)
       )
       (i32.load8_s
        (local.get $6)
       )
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const -2)
       )
      )
      (local.set $5
       (i32.add
        (local.get $2)
        (i32.const -4)
       )
      )
      (i32.store8
       (i32.add
        (local.get $2)
        (i32.const -3)
       )
       (i32.load8_s
        (local.get $6)
       )
      )
      (if
       (i32.ne
        (local.tee $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (local.get $3)
       )
       (block
        (local.set $2
         (local.get $5)
        )
        (br $while-in3)
       )
      )
     )
    )
    (block
     (br_if $label$break$L7
      (i32.eqz
       (local.get $3)
      )
     )
     (local.set $2
      (local.tee $4
       (i32.add
        (i32.add
         (local.get $1)
         (local.tee $1
          (i32.shl
           (local.get $3)
           (i32.const 2)
          )
         )
        )
        (i32.const -1)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $4)
      )
     )
     (local.set $4
      (i32.const 0)
     )
     (loop $while-in5
      (i32.store8
       (local.get $1)
       (i32.load8_s
        (local.get $2)
       )
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -1)
       )
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
       )
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -2)
       )
       (i32.load8_s
        (local.tee $5
         (i32.add
          (local.get $2)
          (i32.const -2)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -3)
       )
       (i32.load8_s
        (local.tee $6
         (i32.add
          (local.get $2)
          (i32.const -3)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -4)
       )
       (i32.load8_s
        (local.get $5)
       )
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -5)
       )
       (i32.load8_s
        (local.get $6)
       )
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -6)
       )
       (i32.load8_s
        (local.get $5)
       )
      )
      (local.set $2
       (i32.add
        (local.get $2)
        (i32.const -4)
       )
      )
      (local.set $5
       (i32.add
        (local.get $1)
        (i32.const -8)
       )
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -7)
       )
       (i32.load8_s
        (local.get $6)
       )
      )
      (if
       (i32.ne
        (local.tee $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (local.get $3)
       )
       (block
        (local.set $1
         (local.get $5)
        )
        (br $while-in5)
       )
      )
     )
    )
   )
  )
  (local.set $1
   (i32.load8_s
    (local.tee $2
     (i32.add
      (local.get $0)
      (i32.const 10)
     )
    )
   )
  )
  (i32.store8
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $1)
     (i32.const 255)
    )
    (i32.const 2)
   )
  )
  (i32.store8
   (local.get $7)
   (i32.or
    (i32.load8_s
     (local.get $7)
    )
    (i32.const 2)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 11)
   )
   (local.tee $1
    (i32.mul
     (i32.load8_u
      (local.get $8)
     )
     (i32.and
      (i32.shr_s
       (i32.shl
        (i32.add
         (local.get $1)
         (i32.const 2)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const 255)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
      (local.get $3)
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
 )
 (func $_png_do_background (; 120 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local.set $12
   (i32.load
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (local.get $3)
   )
   (return)
  )
  (if
   (i32.and
    (local.tee $13
     (i32.load8_s
      (local.tee $19
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
     )
    )
    (i32.const 4)
   )
   (if
    (i32.eqz
     (i32.and
      (i32.ne
       (local.get $13)
       (i32.const 3)
      )
      (i32.ne
       (local.get $2)
       (i32.const 0)
      )
     )
    )
    (return)
   )
  )
  (block $label$break$L8
   (block $switch-case80
    (block $switch-case55
     (block $switch-case30
      (block $switch-case21
       (br_table $switch-case21 $label$break$L8 $switch-case30 $label$break$L8 $switch-case55 $label$break$L8 $switch-case80 $label$break$L8
        (local.get $13)
       )
      )
      (block $switch-case20
       (block $switch-case15
        (block $switch-case10
         (block $switch-case5
          (block $switch-case
           (br_table $switch-case $switch-case5 $label$break$L8 $switch-case10 $label$break$L8 $label$break$L8 $label$break$L8 $switch-case15 $label$break$L8 $label$break$L8 $label$break$L8 $label$break$L8 $label$break$L8 $label$break$L8 $label$break$L8 $switch-case20 $label$break$L8
            (i32.sub
             (i32.load8_s
              (i32.add
               (local.get $0)
               (i32.const 9)
              )
             )
             (i32.const 1)
            )
           )
          )
          (br_if $label$break$L8
           (i32.eqz
            (local.get $12)
           )
          )
          (local.set $4
           (i32.add
            (local.get $2)
            (i32.const 8)
           )
          )
          (local.set $5
           (i32.add
            (local.get $3)
            (i32.const 8)
           )
          )
          (local.set $3
           (i32.const 0)
          )
          (local.set $2
           (i32.const 7)
          )
          (loop $while-in
           (if
            (i32.eq
             (i32.load16_u
              (local.get $4)
             )
             (i32.and
              (i32.shr_u
               (local.tee $6
                (i32.load8_u
                 (local.get $1)
                )
               )
               (local.get $2)
              )
              (i32.const 1)
             )
            )
            (block
             (i32.store8
              (local.get $1)
              (local.tee $6
               (i32.and
                (local.get $6)
                (i32.shr_u
                 (i32.const 32639)
                 (i32.sub
                  (i32.const 7)
                  (local.get $2)
                 )
                )
               )
              )
             )
             (i32.store8
              (local.get $1)
              (i32.or
               (local.get $6)
               (i32.shl
                (i32.load16_u
                 (local.get $5)
                )
                (local.get $2)
               )
              )
             )
            )
           )
           (local.set $2
            (select
             (i32.const 7)
             (i32.add
              (local.get $2)
              (i32.const -1)
             )
             (local.tee $6
              (i32.eqz
               (local.get $2)
              )
             )
            )
           )
           (local.set $1
            (select
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
             (local.get $1)
             (local.get $6)
            )
           )
           (br_if $while-in
            (i32.ne
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.get $12)
            )
           )
          )
          (br $label$break$L8)
         )
         (local.set $4
          (i32.ne
           (local.get $12)
           (i32.const 0)
          )
         )
         (if
          (i32.eqz
           (local.get $5)
          )
          (block
           (br_if $label$break$L8
            (i32.eqz
             (local.get $4)
            )
           )
           (local.set $4
            (i32.add
             (local.get $2)
             (i32.const 8)
            )
           )
           (local.set $5
            (i32.add
             (local.get $3)
             (i32.const 8)
            )
           )
           (local.set $2
            (i32.const 0)
           )
           (local.set $3
            (i32.const 6)
           )
           (loop $while-in2
            (if
             (i32.eq
              (i32.load16_u
               (local.get $4)
              )
              (i32.and
               (i32.shr_u
                (local.tee $6
                 (i32.load8_u
                  (local.get $1)
                 )
                )
                (local.get $3)
               )
               (i32.const 3)
              )
             )
             (block
              (i32.store8
               (local.get $1)
               (local.tee $6
                (i32.and
                 (local.get $6)
                 (i32.shr_u
                  (i32.const 16191)
                  (i32.sub
                   (i32.const 6)
                   (local.get $3)
                  )
                 )
                )
               )
              )
              (i32.store8
               (local.get $1)
               (i32.or
                (local.get $6)
                (i32.shl
                 (i32.load16_u
                  (local.get $5)
                 )
                 (local.get $3)
                )
               )
              )
             )
            )
            (br_if $label$break$L8
             (i32.eq
              (local.tee $2
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
              )
              (local.get $12)
             )
            )
            (local.set $3
             (select
              (i32.const 6)
              (i32.add
               (local.get $3)
               (i32.const -2)
              )
              (local.tee $6
               (i32.eqz
                (local.get $3)
               )
              )
             )
            )
            (local.set $1
             (select
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
              (local.get $1)
              (local.get $6)
             )
            )
            (br $while-in2)
           )
          )
         )
         (br_if $label$break$L8
          (i32.eqz
           (local.get $4)
          )
         )
         (local.set $7
          (i32.add
           (local.get $2)
           (i32.const 8)
          )
         )
         (local.set $8
          (i32.add
           (local.get $3)
           (i32.const 8)
          )
         )
         (local.set $3
          (i32.const 0)
         )
         (local.set $2
          (i32.const 6)
         )
         (loop $while-in4
          (i32.store8
           (local.get $1)
           (if (result i32)
            (i32.eq
             (local.tee $4
              (i32.and
               (i32.shr_u
                (local.tee $6
                 (i32.load8_u
                  (local.get $1)
                 )
                )
                (local.get $2)
               )
               (i32.const 3)
              )
             )
             (i32.load16_u
              (local.get $7)
             )
            )
            (block (result i32)
             (i32.store8
              (local.get $1)
              (local.tee $4
               (i32.and
                (local.get $6)
                (i32.shr_u
                 (i32.const 16191)
                 (i32.sub
                  (i32.const 6)
                  (local.get $2)
                 )
                )
               )
              )
             )
             (i32.or
              (local.get $4)
              (i32.and
               (i32.shl
                (i32.load16_u
                 (local.get $8)
                )
                (local.get $2)
               )
               (i32.const 255)
              )
             )
            )
            (i32.or
             (i32.and
              (local.get $6)
              (i32.shr_u
               (i32.const 16191)
               (i32.sub
                (i32.const 6)
                (local.get $2)
               )
              )
             )
             (i32.shl
              (i32.shr_u
               (i32.load8_u
                (i32.add
                 (local.get $5)
                 (i32.or
                  (i32.or
                   (i32.or
                    (local.get $4)
                    (i32.shl
                     (local.get $4)
                     (i32.const 2)
                    )
                   )
                   (i32.shl
                    (local.get $4)
                    (i32.const 4)
                   )
                  )
                  (i32.shl
                   (local.get $4)
                   (i32.const 6)
                  )
                 )
                )
               )
               (i32.const 6)
              )
              (local.get $2)
             )
            )
           )
          )
          (local.set $2
           (select
            (i32.const 6)
            (i32.add
             (local.get $2)
             (i32.const -2)
            )
            (local.tee $4
             (i32.eqz
              (local.get $2)
             )
            )
           )
          )
          (local.set $1
           (select
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
            (local.get $1)
            (local.get $4)
           )
          )
          (br_if $while-in4
           (i32.ne
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $12)
           )
          )
         )
         (br $label$break$L8)
        )
        (local.set $4
         (i32.ne
          (local.get $12)
          (i32.const 0)
         )
        )
        (if
         (i32.eqz
          (local.get $5)
         )
         (block
          (br_if $label$break$L8
           (i32.eqz
            (local.get $4)
           )
          )
          (local.set $4
           (i32.add
            (local.get $2)
            (i32.const 8)
           )
          )
          (local.set $5
           (i32.add
            (local.get $3)
            (i32.const 8)
           )
          )
          (local.set $2
           (i32.const 0)
          )
          (local.set $3
           (i32.const 4)
          )
          (loop $while-in7
           (if
            (i32.eq
             (i32.load16_u
              (local.get $4)
             )
             (i32.and
              (i32.shr_u
               (local.tee $6
                (i32.load8_u
                 (local.get $1)
                )
               )
               (local.get $3)
              )
              (i32.const 15)
             )
            )
            (block
             (i32.store8
              (local.get $1)
              (local.tee $6
               (i32.and
                (local.get $6)
                (i32.shr_u
                 (i32.const 3855)
                 (i32.sub
                  (i32.const 4)
                  (local.get $3)
                 )
                )
               )
              )
             )
             (i32.store8
              (local.get $1)
              (i32.or
               (local.get $6)
               (i32.shl
                (i32.load16_u
                 (local.get $5)
                )
                (local.get $3)
               )
              )
             )
            )
           )
           (br_if $label$break$L8
            (i32.eq
             (local.get $12)
             (local.tee $2
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
            )
           )
           (local.set $3
            (select
             (i32.const 4)
             (i32.add
              (local.get $3)
              (i32.const -4)
             )
             (local.tee $6
              (i32.eqz
               (local.get $3)
              )
             )
            )
           )
           (local.set $1
            (select
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
             (local.get $1)
             (local.get $6)
            )
           )
           (br $while-in7)
          )
         )
        )
        (br_if $label$break$L8
         (i32.eqz
          (local.get $4)
         )
        )
        (local.set $7
         (i32.add
          (local.get $2)
          (i32.const 8)
         )
        )
        (local.set $8
         (i32.add
          (local.get $3)
          (i32.const 8)
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (local.set $2
         (i32.const 4)
        )
        (loop $while-in9
         (i32.store8
          (local.get $1)
          (if (result i32)
           (i32.eq
            (local.tee $6
             (i32.and
              (i32.shr_u
               (local.tee $4
                (i32.load8_u
                 (local.get $1)
                )
               )
               (local.get $2)
              )
              (i32.const 15)
             )
            )
            (i32.load16_u
             (local.get $7)
            )
           )
           (block (result i32)
            (i32.store8
             (local.get $1)
             (local.tee $4
              (i32.and
               (local.get $4)
               (i32.shr_u
                (i32.const 3855)
                (i32.sub
                 (i32.const 4)
                 (local.get $2)
                )
               )
              )
             )
            )
            (i32.or
             (local.get $4)
             (i32.and
              (i32.shl
               (i32.load16_u
                (local.get $8)
               )
               (local.get $2)
              )
              (i32.const 255)
             )
            )
           )
           (i32.or
            (i32.and
             (local.get $4)
             (i32.shr_u
              (i32.const 3855)
              (i32.sub
               (i32.const 4)
               (local.get $2)
              )
             )
            )
            (i32.shl
             (i32.shr_u
              (i32.load8_u
               (i32.add
                (local.get $5)
                (i32.or
                 (local.get $6)
                 (i32.shl
                  (local.get $6)
                  (i32.const 4)
                 )
                )
               )
              )
              (i32.const 4)
             )
             (local.get $2)
            )
           )
          )
         )
         (local.set $2
          (select
           (i32.const 4)
           (i32.add
            (local.get $2)
            (i32.const -4)
           )
           (local.tee $4
            (i32.eqz
             (local.get $2)
            )
           )
          )
         )
         (local.set $1
          (select
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
           (local.get $1)
           (local.get $4)
          )
         )
         (br_if $while-in9
          (i32.ne
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (local.get $12)
          )
         )
        )
        (br $label$break$L8)
       )
       (local.set $4
        (i32.ne
         (local.get $12)
         (i32.const 0)
        )
       )
       (if
        (i32.eqz
         (local.get $5)
        )
        (block
         (br_if $label$break$L8
          (i32.eqz
           (local.get $4)
          )
         )
         (local.set $4
          (i32.add
           (local.get $2)
           (i32.const 8)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 8)
          )
         )
         (local.set $2
          (local.get $1)
         )
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in12
          (if
           (i32.eq
            (i32.load8_u
             (local.get $2)
            )
            (i32.load16_u
             (local.get $4)
            )
           )
           (i32.store8
            (local.get $2)
            (i32.load16_s
             (local.get $3)
            )
           )
          )
          (br_if $label$break$L8
           (i32.eq
            (local.get $12)
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
          )
          (local.set $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (br $while-in12)
         )
        )
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $4)
        )
       )
       (local.set $4
        (i32.add
         (local.get $2)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.add
         (local.get $3)
         (i32.const 8)
        )
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in14
        (i32.store8
         (local.get $1)
         (if (result i32)
          (i32.eq
           (local.tee $3
            (i32.load8_u
             (local.get $1)
            )
           )
           (i32.load16_u
            (local.get $4)
           )
          )
          (i32.and
           (i32.load16_s
            (local.get $6)
           )
           (i32.const 255)
          )
          (i32.load8_s
           (i32.add
            (local.get $3)
            (local.get $5)
           )
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br_if $while-in14
         (i32.ne
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (local.get $12)
         )
        )
       )
       (br $label$break$L8)
      )
      (local.set $4
       (i32.ne
        (local.get $12)
        (i32.const 0)
       )
      )
      (if
       (i32.eqz
        (local.get $8)
       )
       (block
        (br_if $label$break$L8
         (i32.eqz
          (local.get $4)
         )
        )
        (local.set $4
         (i32.add
          (local.get $2)
          (i32.const 8)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const 8)
         )
        )
        (local.set $2
         (local.get $1)
        )
        (local.set $1
         (i32.const 0)
        )
        (loop $while-in17
         (if
          (i32.eq
           (i32.load16_u
            (local.get $4)
           )
           (i32.or
            (i32.load8_u
             (local.tee $5
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
            )
            (i32.shl
             (i32.load8_u
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (block
           (i32.store8
            (local.get $2)
            (i32.shr_u
             (i32.load16_u
              (local.get $3)
             )
             (i32.const 8)
            )
           )
           (i32.store8
            (local.get $5)
            (i32.load16_s
             (local.get $3)
            )
           )
          )
         )
         (br_if $label$break$L8
          (i32.eq
           (local.get $12)
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.const 2)
          )
         )
         (br $while-in17)
        )
       )
      )
      (br_if $label$break$L8
       (i32.eqz
        (local.get $4)
       )
      )
      (local.set $5
       (i32.add
        (local.get $2)
        (i32.const 8)
       )
      )
      (local.set $3
       (i32.add
        (local.get $3)
        (i32.const 8)
       )
      )
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in19
       (local.set $4
        (if (result i32)
         (i32.eq
          (i32.load16_u
           (local.get $5)
          )
          (i32.or
           (local.tee $7
            (i32.load8_u
             (local.tee $6
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
            )
           )
           (i32.shl
            (local.tee $4
             (i32.load8_u
              (local.get $1)
             )
            )
            (i32.const 8)
           )
          )
         )
         (block (result i32)
          (i32.store8
           (local.get $1)
           (i32.shr_u
            (i32.load16_u
             (local.get $3)
            )
            (i32.const 8)
           )
          )
          (i32.and
           (i32.load16_s
            (local.get $3)
           )
           (i32.const 255)
          )
         )
         (block (result i32)
          (i32.store8
           (local.get $1)
           (i32.shr_u
            (i32.and
             (local.tee $4
              (i32.load16_s
               (i32.add
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.shr_u
                    (local.get $7)
                    (local.get $11)
                   )
                   (i32.const 2)
                  )
                  (local.get $8)
                 )
                )
                (i32.shl
                 (local.get $4)
                 (i32.const 1)
                )
               )
              )
             )
             (i32.const 65535)
            )
            (i32.const 8)
           )
          )
          (i32.and
           (local.get $4)
           (i32.const 255)
          )
         )
        )
       )
       (i32.store8
        (local.get $6)
        (local.get $4)
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 2)
        )
       )
       (br_if $while-in19
        (i32.ne
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.get $12)
        )
       )
      )
      (br $label$break$L8)
     )
     (if
      (i32.eq
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 9)
        )
       )
       (i32.const 8)
      )
      (block
       (local.set $4
        (i32.ne
         (local.get $12)
         (i32.const 0)
        )
       )
       (if
        (i32.eqz
         (local.get $5)
        )
        (block
         (br_if $label$break$L8
          (i32.eqz
           (local.get $4)
          )
         )
         (local.set $4
          (i32.add
           (local.get $2)
           (i32.const 2)
          )
         )
         (local.set $5
          (i32.add
           (local.get $2)
           (i32.const 4)
          )
         )
         (local.set $6
          (i32.add
           (local.get $2)
           (i32.const 6)
          )
         )
         (local.set $7
          (i32.add
           (local.get $3)
           (i32.const 2)
          )
         )
         (local.set $8
          (i32.add
           (local.get $3)
           (i32.const 4)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 6)
          )
         )
         (local.set $2
          (i32.const 0)
         )
         (loop $while-in23
          (if
           (i32.eq
            (i32.load8_u
             (local.get $1)
            )
            (i32.load16_u
             (local.get $4)
            )
           )
           (if
            (i32.eq
             (i32.load8_u
              (local.tee $9
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
             )
             (i32.load16_u
              (local.get $5)
             )
            )
            (if
             (i32.eq
              (i32.load8_u
               (local.tee $10
                (i32.add
                 (local.get $1)
                 (i32.const 2)
                )
               )
              )
              (i32.load16_u
               (local.get $6)
              )
             )
             (block
              (i32.store8
               (local.get $1)
               (i32.load16_s
                (local.get $7)
               )
              )
              (i32.store8
               (local.get $9)
               (i32.load16_s
                (local.get $8)
               )
              )
              (i32.store8
               (local.get $10)
               (i32.load16_s
                (local.get $3)
               )
              )
             )
            )
           )
          )
          (br_if $label$break$L8
           (i32.eq
            (local.get $12)
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (i32.const 3)
           )
          )
          (br $while-in23)
         )
        )
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $4)
        )
       )
       (local.set $6
        (i32.add
         (local.get $2)
         (i32.const 2)
        )
       )
       (local.set $7
        (i32.add
         (local.get $2)
         (i32.const 4)
        )
       )
       (local.set $8
        (i32.add
         (local.get $2)
         (i32.const 6)
        )
       )
       (local.set $9
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
       (local.set $10
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
       )
       (local.set $11
        (i32.add
         (local.get $3)
         (i32.const 6)
        )
       )
       (local.set $2
        (local.get $1)
       )
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in25
        (local.set $4
         (i32.load8_u
          (local.tee $3
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
         )
        )
        (block $__rjto$0
         (block $__rjti$0
          (br_if $__rjti$0
           (i32.ne
            (local.tee $13
             (i32.load8_u
              (local.get $2)
             )
            )
            (i32.load16_u
             (local.get $6)
            )
           )
          )
          (br_if $__rjti$0
           (i32.ne
            (i32.load16_u
             (local.get $7)
            )
            (local.get $4)
           )
          )
          (br_if $__rjti$0
           (i32.ne
            (i32.load8_u
             (local.tee $15
              (i32.add
               (local.get $2)
               (i32.const 2)
              )
             )
            )
            (i32.load16_u
             (local.get $8)
            )
           )
          )
          (i32.store8
           (local.get $2)
           (i32.load16_s
            (local.get $9)
           )
          )
          (i32.store8
           (local.get $3)
           (i32.load16_s
            (local.get $10)
           )
          )
          (i32.store8
           (local.get $15)
           (i32.load16_s
            (local.get $11)
           )
          )
          (br $__rjto$0)
         )
         (i32.store8
          (local.get $2)
          (i32.load8_s
           (i32.add
            (local.get $5)
            (local.get $13)
           )
          )
         )
         (i32.store8
          (local.get $3)
          (i32.load8_s
           (i32.add
            (local.get $4)
            (local.get $5)
           )
          )
         )
         (i32.store8
          (local.tee $3
           (i32.add
            (local.get $2)
            (i32.const 2)
           )
          )
          (i32.load8_s
           (i32.add
            (local.get $5)
            (i32.load8_u
             (local.get $3)
            )
           )
          )
         )
        )
        (br_if $label$break$L8
         (i32.eq
          (local.get $12)
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 3)
         )
        )
        (br $while-in25)
       )
      )
     )
     (local.set $4
      (i32.ne
       (local.get $12)
       (i32.const 0)
      )
     )
     (if
      (i32.eqz
       (local.get $8)
      )
      (block
       (br_if $label$break$L8
        (i32.eqz
         (local.get $4)
        )
       )
       (local.set $8
        (i32.add
         (local.get $2)
         (i32.const 2)
        )
       )
       (local.set $9
        (i32.add
         (local.get $2)
         (i32.const 4)
        )
       )
       (local.set $10
        (i32.add
         (local.get $2)
         (i32.const 6)
        )
       )
       (local.set $4
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
       (local.set $5
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
       )
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 6)
        )
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in27
        (local.set $6
         (i32.add
          (local.get $1)
          (i32.const 2)
         )
        )
        (local.set $7
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
        )
        (local.set $15
         (i32.or
          (i32.load8_u
           (local.tee $13
            (i32.add
             (local.get $1)
             (i32.const 5)
            )
           )
          )
          (i32.shl
           (i32.load8_u
            (local.tee $11
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
           )
           (i32.const 8)
          )
         )
        )
        (if
         (i32.eq
          (i32.load16_u
           (local.get $8)
          )
          (i32.or
           (i32.load8_u
            (local.tee $16
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
           (i32.shl
            (i32.load8_u
             (local.get $1)
            )
            (i32.const 8)
           )
          )
         )
         (if
          (i32.eq
           (i32.load16_u
            (local.get $9)
           )
           (i32.or
            (i32.load8_u
             (local.get $7)
            )
            (i32.shl
             (i32.load8_u
              (local.get $6)
             )
             (i32.const 8)
            )
           )
          )
          (if
           (i32.eq
            (local.get $15)
            (i32.load16_u
             (local.get $10)
            )
           )
           (block
            (i32.store8
             (local.get $1)
             (i32.shr_u
              (i32.load16_u
               (local.get $4)
              )
              (i32.const 8)
             )
            )
            (i32.store8
             (local.get $16)
             (i32.load16_s
              (local.get $4)
             )
            )
            (i32.store8
             (local.get $6)
             (i32.shr_u
              (i32.load16_u
               (local.get $5)
              )
              (i32.const 8)
             )
            )
            (i32.store8
             (local.get $7)
             (i32.load16_s
              (local.get $5)
             )
            )
            (i32.store8
             (local.get $11)
             (i32.shr_u
              (i32.load16_u
               (local.get $3)
              )
              (i32.const 8)
             )
            )
            (i32.store8
             (local.get $13)
             (i32.load16_s
              (local.get $3)
             )
            )
           )
          )
         )
        )
        (br_if $label$break$L8
         (i32.eq
          (local.get $12)
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 6)
         )
        )
        (br $while-in27)
       )
      )
     )
     (if
      (local.get $4)
      (block
       (local.set $16
        (i32.add
         (local.get $2)
         (i32.const 2)
        )
       )
       (local.set $17
        (i32.add
         (local.get $2)
         (i32.const 4)
        )
       )
       (local.set $14
        (i32.add
         (local.get $2)
         (i32.const 6)
        )
       )
       (local.set $7
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
       (local.set $9
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
       )
       (local.set $10
        (i32.add
         (local.get $3)
         (i32.const 6)
        )
       )
       (local.set $4
        (i32.const 0)
       )
       (loop $while-in29
        (local.set $5
         (i32.add
          (local.get $1)
          (i32.const 2)
         )
        )
        (local.set $6
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
        )
        (local.set $18
         (i32.or
          (local.tee $21
           (i32.load8_u
            (local.tee $2
             (i32.add
              (local.get $1)
              (i32.const 5)
             )
            )
           )
          )
          (i32.shl
           (local.tee $20
            (i32.load8_u
             (local.tee $13
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
            )
           )
           (i32.const 8)
          )
         )
        )
        (i32.store8
         (local.get $2)
         (block $__rjto$1 (result i32)
          (block $__rjti$1
           (br $__rjto$1
            (if (result i32)
             (i32.eq
              (i32.load16_u
               (local.get $16)
              )
              (i32.or
               (local.tee $23
                (i32.load8_u
                 (local.tee $15
                  (i32.add
                   (local.get $1)
                   (i32.const 1)
                  )
                 )
                )
               )
               (i32.shl
                (local.tee $22
                 (i32.load8_u
                  (local.get $1)
                 )
                )
                (i32.const 8)
               )
              )
             )
             (if (result i32)
              (i32.eq
               (i32.load16_u
                (local.get $17)
               )
               (i32.or
                (local.tee $2
                 (i32.load8_u
                  (local.get $6)
                 )
                )
                (i32.shl
                 (local.tee $3
                  (i32.load8_u
                   (local.get $5)
                  )
                 )
                 (i32.const 8)
                )
               )
              )
              (if (result i32)
               (i32.eq
                (local.get $18)
                (i32.load16_u
                 (local.get $14)
                )
               )
               (block (result i32)
                (i32.store8
                 (local.get $1)
                 (i32.shr_u
                  (i32.load16_u
                   (local.get $7)
                  )
                  (i32.const 8)
                 )
                )
                (i32.store8
                 (local.get $15)
                 (i32.load16_s
                  (local.get $7)
                 )
                )
                (i32.store8
                 (local.get $5)
                 (i32.shr_u
                  (i32.load16_u
                   (local.get $9)
                  )
                  (i32.const 8)
                 )
                )
                (i32.store8
                 (local.get $6)
                 (i32.load16_s
                  (local.get $9)
                 )
                )
                (i32.store8
                 (local.get $13)
                 (i32.shr_u
                  (i32.load16_u
                   (local.get $10)
                  )
                  (i32.const 8)
                 )
                )
                (i32.and
                 (i32.load16_s
                  (local.get $10)
                 )
                 (i32.const 255)
                )
               )
               (br $__rjti$1)
              )
              (br $__rjti$1)
             )
             (block
              (local.set $2
               (i32.load8_u
                (local.get $6)
               )
              )
              (local.set $3
               (i32.load8_u
                (local.get $5)
               )
              )
              (br $__rjti$1)
             )
            )
           )
          )
          (i32.store8
           (local.get $1)
           (i32.shr_u
            (i32.and
             (local.tee $18
              (i32.load16_s
               (i32.add
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.shr_u
                    (local.get $23)
                    (local.get $11)
                   )
                   (i32.const 2)
                  )
                  (local.get $8)
                 )
                )
                (i32.shl
                 (local.get $22)
                 (i32.const 1)
                )
               )
              )
             )
             (i32.const 65535)
            )
            (i32.const 8)
           )
          )
          (i32.store8
           (local.get $15)
           (local.get $18)
          )
          (i32.store8
           (local.get $5)
           (i32.shr_u
            (i32.and
             (local.tee $2
              (i32.load16_s
               (i32.add
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.shr_u
                    (local.get $2)
                    (local.get $11)
                   )
                   (i32.const 2)
                  )
                  (local.get $8)
                 )
                )
                (i32.shl
                 (local.get $3)
                 (i32.const 1)
                )
               )
              )
             )
             (i32.const 65535)
            )
            (i32.const 8)
           )
          )
          (i32.store8
           (local.get $6)
           (local.get $2)
          )
          (i32.store8
           (local.get $13)
           (i32.shr_u
            (i32.and
             (local.tee $2
              (i32.load16_s
               (i32.add
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.shr_u
                    (local.get $21)
                    (local.get $11)
                   )
                   (i32.const 2)
                  )
                  (local.get $8)
                 )
                )
                (i32.shl
                 (local.get $20)
                 (i32.const 1)
                )
               )
              )
             )
             (i32.const 65535)
            )
            (i32.const 8)
           )
          )
          (i32.and
           (local.get $2)
           (i32.const 255)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 6)
         )
        )
        (br_if $while-in29
         (i32.ne
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.get $12)
         )
        )
       )
      )
     )
     (br $label$break$L8)
    )
    (if
     (i32.eq
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 9)
       )
      )
      (i32.const 8)
     )
     (block
      (local.set $2
       (i32.ne
        (local.get $12)
        (i32.const 0)
       )
      )
      (if
       (i32.and
        (i32.and
         (i32.ne
          (local.get $7)
          (i32.const 0)
         )
         (i32.ne
          (local.get $6)
          (i32.const 0)
         )
        )
        (i32.ne
         (local.get $5)
         (i32.const 0)
        )
       )
       (block
        (br_if $label$break$L8
         (i32.eqz
          (local.get $2)
         )
        )
        (local.set $8
         (i32.add
          (local.get $4)
          (i32.const 8)
         )
        )
        (local.set $9
         (i32.add
          (local.get $3)
          (i32.const 8)
         )
        )
        (local.set $3
         (local.get $1)
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in32
         (local.set $4
          (i32.and
           (local.tee $10
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
           (i32.const 255)
          )
         )
         (i32.store8
          (local.get $3)
          (block $switch33 (result i32)
           (block $switch-default36
            (block $switch-case35
             (block $switch-case34
              (br_table $switch-case34 $switch-case35 $switch-default36
               (i32.sub
                (local.get $10)
                (i32.const -1)
               )
              )
             )
             (br $switch33
              (i32.load8_s
               (i32.add
                (local.get $5)
                (i32.load8_u
                 (local.get $1)
                )
               )
              )
             )
            )
            (br $switch33
             (i32.and
              (i32.load16_s
               (local.get $9)
              )
              (i32.const 255)
             )
            )
           )
           (i32.load8_s
            (i32.add
             (local.get $6)
             (i32.and
              (i32.shr_u
               (i32.add
                (local.tee $4
                 (i32.add
                  (i32.add
                   (i32.mul
                    (local.get $4)
                    (i32.load8_u
                     (i32.add
                      (local.get $7)
                      (i32.load8_u
                       (local.get $1)
                      )
                     )
                    )
                   )
                   (i32.const 128)
                  )
                  (i32.mul
                   (i32.load16_u
                    (local.get $8)
                   )
                   (i32.xor
                    (local.get $4)
                    (i32.const 255)
                   )
                  )
                 )
                )
                (i32.and
                 (i32.shr_u
                  (local.get $4)
                  (i32.const 8)
                 )
                 (i32.const 255)
                )
               )
               (i32.const 8)
              )
              (i32.const 255)
             )
            )
           )
          )
         )
         (br_if $label$break$L8
          (i32.eq
           (local.get $12)
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
         (br $while-in32)
        )
       )
       (block
        (br_if $label$break$L8
         (i32.eqz
          (local.get $2)
         )
        )
        (local.set $5
         (i32.add
          (local.get $4)
          (i32.const 8)
         )
        )
        (local.set $6
         (i32.add
          (local.get $3)
          (i32.const 8)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (local.set $3
         (local.get $1)
        )
        (loop $while-in38
         (i32.store8
          (local.get $3)
          (block $switch39 (result i32)
           (block $switch-default42
            (block $switch-case41
             (block $switch-case40
              (br_table $switch-case40 $switch-case41 $switch-default42
               (i32.sub
                (local.tee $4
                 (i32.load8_s
                  (i32.add
                   (local.get $1)
                   (i32.const 1)
                  )
                 )
                )
                (i32.const -1)
               )
              )
             )
             (br $switch39
              (i32.load8_s
               (local.get $1)
              )
             )
            )
            (br $switch39
             (i32.and
              (i32.load16_s
               (local.get $6)
              )
              (i32.const 255)
             )
            )
           )
           (i32.and
            (i32.shr_u
             (i32.add
              (local.tee $4
               (i32.add
                (i32.mul
                 (i32.load16_u
                  (local.get $5)
                 )
                 (i32.xor
                  (local.tee $4
                   (i32.and
                    (local.get $4)
                    (i32.const 255)
                   )
                  )
                  (i32.const 255)
                 )
                )
                (i32.add
                 (i32.mul
                  (i32.load8_u
                   (local.get $1)
                  )
                  (local.get $4)
                 )
                 (i32.const 128)
                )
               )
              )
              (i32.and
               (i32.shr_u
                (local.get $4)
                (i32.const 8)
               )
               (i32.const 255)
              )
             )
             (i32.const 8)
            )
            (i32.const 255)
           )
          )
         )
         (br_if $label$break$L8
          (i32.eq
           (local.get $12)
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
         (br $while-in38)
        )
       )
      )
     )
     (block
      (local.set $2
       (i32.ne
        (local.get $12)
        (i32.const 0)
       )
      )
      (if
       (i32.and
        (i32.and
         (i32.ne
          (local.get $8)
          (i32.const 0)
         )
         (i32.ne
          (local.get $9)
          (i32.const 0)
         )
        )
        (i32.ne
         (local.get $10)
         (i32.const 0)
        )
       )
       (block
        (br_if $label$break$L8
         (i32.eqz
          (local.get $2)
         )
        )
        (local.set $6
         (i32.add
          (local.get $4)
          (i32.const 8)
         )
        )
        (local.set $5
         (i32.add
          (local.get $3)
          (i32.const 8)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (local.set $3
         (local.get $1)
        )
        (loop $while-in44
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
          (block $switch45 (result i32)
           (block $switch-default48
            (block $switch-case47
             (block $switch-case46
              (br_table $switch-case46 $switch-case47 $switch-default48
               (i32.sub
                (i32.shr_s
                 (i32.shl
                  (local.tee $4
                   (i32.or
                    (i32.load8_u
                     (i32.add
                      (local.get $3)
                      (i32.const 3)
                     )
                    )
                    (i32.shl
                     (i32.load8_u
                      (i32.add
                       (local.get $3)
                       (i32.const 2)
                      )
                     )
                     (i32.const 8)
                    )
                   )
                  )
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
                (i32.const -1)
               )
              )
             )
             (i32.store8
              (local.get $1)
              (i32.shr_u
               (i32.and
                (local.tee $4
                 (i32.load16_s
                  (i32.add
                   (i32.load
                    (i32.add
                     (i32.shl
                      (i32.shr_u
                       (i32.load8_u
                        (i32.add
                         (local.get $3)
                         (i32.const 1)
                        )
                       )
                       (local.get $11)
                      )
                      (i32.const 2)
                     )
                     (local.get $8)
                    )
                   )
                   (i32.shl
                    (i32.load8_u
                     (local.get $3)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                )
                (i32.const 65535)
               )
               (i32.const 8)
              )
             )
             (br $switch45
              (i32.and
               (local.get $4)
               (i32.const 255)
              )
             )
            )
            (i32.store8
             (local.get $1)
             (i32.shr_u
              (i32.load16_u
               (local.get $5)
              )
              (i32.const 8)
             )
            )
            (br $switch45
             (i32.and
              (i32.load16_s
               (local.get $5)
              )
              (i32.const 255)
             )
            )
           )
           (i32.store8
            (local.get $1)
            (i32.shr_u
             (i32.and
              (local.tee $4
               (i32.load16_s
                (i32.add
                 (i32.shl
                  (i32.shr_u
                   (local.tee $4
                    (i32.add
                     (local.tee $4
                      (i32.add
                       (i32.add
                        (i32.mul
                         (local.get $4)
                         (i32.load16_u
                          (i32.add
                           (i32.load
                            (i32.add
                             (i32.shl
                              (i32.shr_u
                               (i32.load8_u
                                (i32.add
                                 (local.get $3)
                                 (i32.const 1)
                                )
                               )
                               (local.get $11)
                              )
                              (i32.const 2)
                             )
                             (local.get $10)
                            )
                           )
                           (i32.shl
                            (i32.load8_u
                             (local.get $3)
                            )
                            (i32.const 1)
                           )
                          )
                         )
                        )
                        (i32.const 32768)
                       )
                       (i32.mul
                        (i32.load16_u
                         (local.get $6)
                        )
                        (i32.xor
                         (local.get $4)
                         (i32.const 65535)
                        )
                       )
                      )
                     )
                     (i32.shr_u
                      (local.get $4)
                      (i32.const 16)
                     )
                    )
                   )
                   (i32.const 24)
                  )
                  (i32.const 1)
                 )
                 (i32.load
                  (i32.add
                   (i32.shl
                    (i32.shr_u
                     (i32.and
                      (i32.shr_u
                       (local.get $4)
                       (i32.const 16)
                      )
                      (i32.const 255)
                     )
                     (local.get $11)
                    )
                    (i32.const 2)
                   )
                   (local.get $9)
                  )
                 )
                )
               )
              )
              (i32.const 65535)
             )
             (i32.const 8)
            )
           )
           (i32.and
            (local.get $4)
            (i32.const 255)
           )
          )
         )
         (br_if $label$break$L8
          (i32.eq
           (local.get $12)
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 4)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
         (br $while-in44)
        )
       )
       (block
        (br_if $label$break$L8
         (i32.eqz
          (local.get $2)
         )
        )
        (local.set $6
         (i32.add
          (local.get $4)
          (i32.const 8)
         )
        )
        (local.set $4
         (i32.add
          (local.get $3)
          (i32.const 8)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (local.set $3
         (local.get $1)
        )
        (loop $while-in50
         (block $switch51
          (block $switch-default54
           (block $switch-case53
            (block $switch-case52
             (br_table $switch-case52 $switch-case53 $switch-default54
              (i32.sub
               (i32.shr_s
                (i32.shl
                 (local.tee $5
                  (i32.or
                   (i32.load8_u
                    (i32.add
                     (local.get $3)
                     (i32.const 3)
                    )
                   )
                   (i32.shl
                    (i32.load8_u
                     (i32.add
                      (local.get $3)
                      (i32.const 2)
                     )
                    )
                    (i32.const 8)
                   )
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
               (i32.const -1)
              )
             )
            )
            (i32.store16 align=1
             (local.get $1)
             (i32.load16_s align=1
              (local.get $3)
             )
            )
            (br $switch51)
           )
           (i32.store8
            (local.get $1)
            (i32.shr_u
             (i32.load16_u
              (local.get $4)
             )
             (i32.const 8)
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
            (i32.load16_s
             (local.get $4)
            )
           )
           (br $switch51)
          )
          (i32.store8
           (local.get $1)
           (i32.shr_u
            (local.tee $5
             (i32.add
              (local.tee $5
               (i32.add
                (i32.add
                 (i32.mul
                  (i32.load16_u
                   (local.get $6)
                  )
                  (i32.xor
                   (local.get $5)
                   (i32.const 65535)
                  )
                 )
                 (i32.const 32768)
                )
                (i32.mul
                 (local.get $5)
                 (i32.or
                  (i32.load8_u
                   (i32.add
                    (local.get $3)
                    (i32.const 1)
                   )
                  )
                  (i32.shl
                   (i32.load8_u
                    (local.get $3)
                   )
                   (i32.const 8)
                  )
                 )
                )
               )
              )
              (i32.shr_u
               (local.get $5)
               (i32.const 16)
              )
             )
            )
            (i32.const 24)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
           (i32.shr_u
            (local.get $5)
            (i32.const 16)
           )
          )
         )
         (br_if $label$break$L8
          (i32.eq
           (local.get $12)
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 4)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
         (br $while-in50)
        )
       )
      )
     )
    )
   )
   (if
    (i32.eq
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 9)
      )
     )
     (i32.const 8)
    )
    (block
     (local.set $2
      (i32.ne
       (local.get $12)
       (i32.const 0)
      )
     )
     (if
      (i32.and
       (i32.and
        (i32.ne
         (local.get $7)
         (i32.const 0)
        )
        (i32.ne
         (local.get $6)
         (i32.const 0)
        )
       )
       (i32.ne
        (local.get $5)
        (i32.const 0)
       )
      )
      (block
       (br_if $label$break$L8
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $9
        (i32.add
         (local.get $4)
         (i32.const 2)
        )
       )
       (local.set $10
        (i32.add
         (local.get $4)
         (i32.const 4)
        )
       )
       (local.set $11
        (i32.add
         (local.get $4)
         (i32.const 6)
        )
       )
       (local.set $13
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
       (local.set $15
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
       )
       (local.set $16
        (i32.add
         (local.get $3)
         (i32.const 6)
        )
       )
       (local.set $3
        (i32.const 0)
       )
       (local.set $2
        (local.get $1)
       )
       (loop $while-in57
        (i32.store8
         (i32.add
          (local.get $1)
          (i32.const 2)
         )
         (block $switch58 (result i32)
          (block $switch-default61
           (block $switch-case60
            (block $switch-case59
             (br_table $switch-case59 $switch-case60 $switch-default61
              (i32.sub
               (local.tee $4
                (i32.load8_s
                 (i32.add
                  (local.get $2)
                  (i32.const 3)
                 )
                )
               )
               (i32.const -1)
              )
             )
            )
            (i32.store8
             (local.get $1)
             (i32.load8_s
              (i32.add
               (local.get $5)
               (i32.load8_u
                (local.get $2)
               )
              )
             )
            )
            (i32.store8
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
             (i32.load8_s
              (i32.add
               (local.get $5)
               (i32.load8_u
                (i32.add
                 (local.get $2)
                 (i32.const 1)
                )
               )
              )
             )
            )
            (br $switch58
             (i32.load8_s
              (i32.add
               (local.get $5)
               (i32.load8_u
                (i32.add
                 (local.get $2)
                 (i32.const 2)
                )
               )
              )
             )
            )
           )
           (i32.store8
            (local.get $1)
            (i32.load16_s
             (local.get $13)
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
            (i32.load16_s
             (local.get $15)
            )
           )
           (br $switch58
            (i32.and
             (i32.load16_s
              (local.get $16)
             )
             (i32.const 255)
            )
           )
          )
          (i32.store8
           (local.get $1)
           (i32.load8_s
            (i32.add
             (local.get $6)
             (i32.and
              (i32.shr_u
               (i32.add
                (local.tee $17
                 (i32.add
                  (i32.mul
                   (local.tee $8
                    (i32.xor
                     (local.tee $4
                      (i32.and
                       (local.get $4)
                       (i32.const 255)
                      )
                     )
                     (i32.const 255)
                    )
                   )
                   (i32.load16_u
                    (local.get $9)
                   )
                  )
                  (i32.add
                   (i32.mul
                    (i32.load8_u
                     (i32.add
                      (local.get $7)
                      (i32.load8_u
                       (local.get $2)
                      )
                     )
                    )
                    (local.get $4)
                   )
                   (i32.const 128)
                  )
                 )
                )
                (i32.and
                 (i32.shr_u
                  (local.get $17)
                  (i32.const 8)
                 )
                 (i32.const 255)
                )
               )
               (i32.const 8)
              )
              (i32.const 255)
             )
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
           (i32.load8_s
            (i32.add
             (local.get $6)
             (i32.and
              (i32.shr_u
               (i32.add
                (local.tee $17
                 (i32.add
                  (i32.add
                   (i32.mul
                    (local.get $4)
                    (i32.load8_u
                     (i32.add
                      (local.get $7)
                      (i32.load8_u
                       (i32.add
                        (local.get $2)
                        (i32.const 1)
                       )
                      )
                     )
                    )
                   )
                   (i32.const 128)
                  )
                  (i32.mul
                   (local.get $8)
                   (i32.load16_u
                    (local.get $10)
                   )
                  )
                 )
                )
                (i32.and
                 (i32.shr_u
                  (local.get $17)
                  (i32.const 8)
                 )
                 (i32.const 255)
                )
               )
               (i32.const 8)
              )
              (i32.const 255)
             )
            )
           )
          )
          (i32.load8_s
           (i32.add
            (local.get $6)
            (i32.and
             (i32.shr_u
              (i32.add
               (local.tee $4
                (i32.add
                 (i32.add
                  (i32.mul
                   (local.get $4)
                   (i32.load8_u
                    (i32.add
                     (local.get $7)
                     (i32.load8_u
                      (i32.add
                       (local.get $2)
                       (i32.const 2)
                      )
                     )
                    )
                   )
                  )
                  (i32.const 128)
                 )
                 (i32.mul
                  (local.get $8)
                  (i32.load16_u
                   (local.get $11)
                  )
                 )
                )
               )
               (i32.and
                (i32.shr_u
                 (local.get $4)
                 (i32.const 8)
                )
                (i32.const 255)
               )
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
           )
          )
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 4)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
        )
        (br_if $while-in57
         (i32.ne
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (local.get $12)
         )
        )
       )
      )
      (block
       (br_if $label$break$L8
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $5
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
       (local.set $6
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
       )
       (local.set $7
        (i32.add
         (local.get $3)
         (i32.const 6)
        )
       )
       (local.set $3
        (i32.const 0)
       )
       (local.set $2
        (local.get $1)
       )
       (loop $while-in63
        (i32.store8
         (i32.add
          (local.get $1)
          (i32.const 2)
         )
         (block $switch64 (result i32)
          (block $switch-default67
           (block $switch-case66
            (block $switch-case65
             (br_table $switch-case65 $switch-case66 $switch-default67
              (i32.sub
               (local.tee $4
                (i32.load8_s
                 (i32.add
                  (local.get $2)
                  (i32.const 3)
                 )
                )
               )
               (i32.const -1)
              )
             )
            )
            (i32.store8
             (local.get $1)
             (i32.load8_s
              (local.get $2)
             )
            )
            (i32.store8
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
             (i32.load8_s
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
            )
            (br $switch64
             (i32.load8_s
              (i32.add
               (local.get $2)
               (i32.const 2)
              )
             )
            )
           )
           (i32.store8
            (local.get $1)
            (i32.load16_s
             (local.get $5)
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
            (i32.load16_s
             (local.get $6)
            )
           )
           (br $switch64
            (i32.and
             (i32.load16_s
              (local.get $7)
             )
             (i32.const 255)
            )
           )
          )
          (i32.store8
           (local.get $1)
           (i32.shr_u
            (i32.add
             (local.tee $9
              (i32.add
               (i32.mul
                (local.tee $8
                 (i32.xor
                  (local.tee $4
                   (i32.and
                    (local.get $4)
                    (i32.const 255)
                   )
                  )
                  (i32.const 255)
                 )
                )
                (i32.load16_u
                 (local.get $5)
                )
               )
               (i32.add
                (i32.mul
                 (i32.load8_u
                  (local.get $2)
                 )
                 (local.get $4)
                )
                (i32.const 128)
               )
              )
             )
             (i32.and
              (i32.shr_u
               (local.get $9)
               (i32.const 8)
              )
              (i32.const 255)
             )
            )
            (i32.const 8)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
           (i32.shr_u
            (i32.add
             (local.tee $9
              (i32.add
               (i32.add
                (i32.mul
                 (local.get $4)
                 (i32.load8_u
                  (i32.add
                   (local.get $2)
                   (i32.const 1)
                  )
                 )
                )
                (i32.const 128)
               )
               (i32.mul
                (local.get $8)
                (i32.load16_u
                 (local.get $6)
                )
               )
              )
             )
             (i32.and
              (i32.shr_u
               (local.get $9)
               (i32.const 8)
              )
              (i32.const 255)
             )
            )
            (i32.const 8)
           )
          )
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $4
              (i32.add
               (i32.add
                (i32.mul
                 (local.get $4)
                 (i32.load8_u
                  (i32.add
                   (local.get $2)
                   (i32.const 2)
                  )
                 )
                )
                (i32.const 128)
               )
               (i32.mul
                (local.get $8)
                (i32.load16_u
                 (local.get $7)
                )
               )
              )
             )
             (i32.and
              (i32.shr_u
               (local.get $4)
               (i32.const 8)
              )
              (i32.const 255)
             )
            )
            (i32.const 8)
           )
           (i32.const 255)
          )
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 4)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
        )
        (br_if $while-in63
         (i32.ne
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (local.get $12)
         )
        )
       )
      )
     )
    )
    (block
     (local.set $2
      (i32.ne
       (local.get $12)
       (i32.const 0)
      )
     )
     (if
      (i32.and
       (i32.and
        (i32.ne
         (local.get $8)
         (i32.const 0)
        )
        (i32.ne
         (local.get $9)
         (i32.const 0)
        )
       )
       (i32.ne
        (local.get $10)
        (i32.const 0)
       )
      )
      (block
       (br_if $label$break$L8
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $15
        (i32.add
         (local.get $4)
         (i32.const 2)
        )
       )
       (local.set $16
        (i32.add
         (local.get $4)
         (i32.const 4)
        )
       )
       (local.set $17
        (i32.add
         (local.get $4)
         (i32.const 6)
        )
       )
       (local.set $5
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
       (local.set $6
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
       )
       (local.set $7
        (i32.add
         (local.get $3)
         (i32.const 6)
        )
       )
       (local.set $3
        (i32.const 0)
       )
       (local.set $2
        (local.get $1)
       )
       (loop $while-in69
        (i32.store8
         (i32.add
          (local.get $1)
          (i32.const 5)
         )
         (block $switch70 (result i32)
          (block $switch-default73
           (block $switch-case72
            (block $switch-case71
             (br_table $switch-case71 $switch-case72 $switch-default73
              (i32.sub
               (i32.shr_s
                (i32.shl
                 (local.tee $4
                  (i32.or
                   (i32.load8_u
                    (i32.add
                     (local.get $2)
                     (i32.const 7)
                    )
                   )
                   (i32.shl
                    (i32.load8_u
                     (i32.add
                      (local.get $2)
                      (i32.const 6)
                     )
                    )
                    (i32.const 8)
                   )
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
               (i32.const -1)
              )
             )
            )
            (i32.store8
             (local.get $1)
             (i32.shr_u
              (i32.and
               (local.tee $4
                (i32.load16_s
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.shl
                     (i32.shr_u
                      (i32.load8_u
                       (i32.add
                        (local.get $2)
                        (i32.const 1)
                       )
                      )
                      (local.get $11)
                     )
                     (i32.const 2)
                    )
                    (local.get $8)
                   )
                  )
                  (i32.shl
                   (i32.load8_u
                    (local.get $2)
                   )
                   (i32.const 1)
                  )
                 )
                )
               )
               (i32.const 65535)
              )
              (i32.const 8)
             )
            )
            (i32.store8
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
             (local.get $4)
            )
            (i32.store8
             (i32.add
              (local.get $1)
              (i32.const 2)
             )
             (i32.shr_u
              (i32.and
               (local.tee $4
                (i32.load16_s
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.shl
                     (i32.shr_u
                      (i32.load8_u
                       (i32.add
                        (local.get $2)
                        (i32.const 3)
                       )
                      )
                      (local.get $11)
                     )
                     (i32.const 2)
                    )
                    (local.get $8)
                   )
                  )
                  (i32.shl
                   (i32.load8_u
                    (i32.add
                     (local.get $2)
                     (i32.const 2)
                    )
                   )
                   (i32.const 1)
                  )
                 )
                )
               )
               (i32.const 65535)
              )
              (i32.const 8)
             )
            )
            (i32.store8
             (i32.add
              (local.get $1)
              (i32.const 3)
             )
             (local.get $4)
            )
            (i32.store8
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
             (i32.shr_u
              (i32.and
               (local.tee $4
                (i32.load16_s
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.shl
                     (i32.shr_u
                      (i32.load8_u
                       (i32.add
                        (local.get $2)
                        (i32.const 5)
                       )
                      )
                      (local.get $11)
                     )
                     (i32.const 2)
                    )
                    (local.get $8)
                   )
                  )
                  (i32.shl
                   (i32.load8_u
                    (i32.add
                     (local.get $2)
                     (i32.const 4)
                    )
                   )
                   (i32.const 1)
                  )
                 )
                )
               )
               (i32.const 65535)
              )
              (i32.const 8)
             )
            )
            (br $switch70
             (i32.and
              (local.get $4)
              (i32.const 255)
             )
            )
           )
           (i32.store8
            (local.get $1)
            (i32.shr_u
             (i32.load16_u
              (local.get $5)
             )
             (i32.const 8)
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
            (i32.load16_s
             (local.get $5)
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 2)
            )
            (i32.shr_u
             (i32.load16_u
              (local.get $6)
             )
             (i32.const 8)
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 3)
            )
            (i32.load16_s
             (local.get $6)
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 4)
            )
            (i32.shr_u
             (i32.load16_u
              (local.get $7)
             )
             (i32.const 8)
            )
           )
           (br $switch70
            (i32.and
             (i32.load16_s
              (local.get $7)
             )
             (i32.const 255)
            )
           )
          )
          (i32.store8
           (local.get $1)
           (i32.shr_u
            (i32.and
             (local.tee $14
              (i32.load16_s
               (i32.add
                (i32.shl
                 (i32.shr_u
                  (local.tee $14
                   (i32.add
                    (local.tee $14
                     (i32.add
                      (i32.add
                       (i32.mul
                        (local.get $4)
                        (i32.load16_u
                         (i32.add
                          (i32.load
                           (i32.add
                            (i32.shl
                             (i32.shr_u
                              (i32.load8_u
                               (i32.add
                                (local.get $2)
                                (i32.const 1)
                               )
                              )
                              (local.get $11)
                             )
                             (i32.const 2)
                            )
                            (local.get $10)
                           )
                          )
                          (i32.shl
                           (i32.load8_u
                            (local.get $2)
                           )
                           (i32.const 1)
                          )
                         )
                        )
                       )
                       (i32.const 32768)
                      )
                      (i32.mul
                       (local.tee $13
                        (i32.xor
                         (local.get $4)
                         (i32.const 65535)
                        )
                       )
                       (i32.load16_u
                        (local.get $15)
                       )
                      )
                     )
                    )
                    (i32.shr_u
                     (local.get $14)
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.const 24)
                 )
                 (i32.const 1)
                )
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.shr_u
                    (i32.and
                     (i32.shr_u
                      (local.get $14)
                      (i32.const 16)
                     )
                     (i32.const 255)
                    )
                    (local.get $11)
                   )
                   (i32.const 2)
                  )
                  (local.get $9)
                 )
                )
               )
              )
             )
             (i32.const 65535)
            )
            (i32.const 8)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
           (local.get $14)
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 2)
           )
           (i32.shr_u
            (i32.and
             (local.tee $14
              (i32.load16_s
               (i32.add
                (i32.shl
                 (i32.shr_u
                  (local.tee $14
                   (i32.add
                    (local.tee $14
                     (i32.add
                      (i32.add
                       (i32.mul
                        (local.get $4)
                        (i32.load16_u
                         (i32.add
                          (i32.load
                           (i32.add
                            (i32.shl
                             (i32.shr_u
                              (i32.load8_u
                               (i32.add
                                (local.get $2)
                                (i32.const 3)
                               )
                              )
                              (local.get $11)
                             )
                             (i32.const 2)
                            )
                            (local.get $10)
                           )
                          )
                          (i32.shl
                           (i32.load8_u
                            (i32.add
                             (local.get $2)
                             (i32.const 2)
                            )
                           )
                           (i32.const 1)
                          )
                         )
                        )
                       )
                       (i32.const 32768)
                      )
                      (i32.mul
                       (local.get $13)
                       (i32.load16_u
                        (local.get $16)
                       )
                      )
                     )
                    )
                    (i32.shr_u
                     (local.get $14)
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.const 24)
                 )
                 (i32.const 1)
                )
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.shr_u
                    (i32.and
                     (i32.shr_u
                      (local.get $14)
                      (i32.const 16)
                     )
                     (i32.const 255)
                    )
                    (local.get $11)
                   )
                   (i32.const 2)
                  )
                  (local.get $9)
                 )
                )
               )
              )
             )
             (i32.const 65535)
            )
            (i32.const 8)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 3)
           )
           (local.get $14)
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 4)
           )
           (i32.shr_u
            (i32.and
             (local.tee $4
              (i32.load16_s
               (i32.add
                (i32.shl
                 (i32.shr_u
                  (local.tee $4
                   (i32.add
                    (local.tee $4
                     (i32.add
                      (i32.add
                       (i32.mul
                        (local.get $4)
                        (i32.load16_u
                         (i32.add
                          (i32.load
                           (i32.add
                            (i32.shl
                             (i32.shr_u
                              (i32.load8_u
                               (i32.add
                                (local.get $2)
                                (i32.const 5)
                               )
                              )
                              (local.get $11)
                             )
                             (i32.const 2)
                            )
                            (local.get $10)
                           )
                          )
                          (i32.shl
                           (i32.load8_u
                            (i32.add
                             (local.get $2)
                             (i32.const 4)
                            )
                           )
                           (i32.const 1)
                          )
                         )
                        )
                       )
                       (i32.const 32768)
                      )
                      (i32.mul
                       (local.get $13)
                       (i32.load16_u
                        (local.get $17)
                       )
                      )
                     )
                    )
                    (i32.shr_u
                     (local.get $4)
                     (i32.const 16)
                    )
                   )
                  )
                  (i32.const 24)
                 )
                 (i32.const 1)
                )
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.shr_u
                    (i32.and
                     (i32.shr_u
                      (local.get $4)
                      (i32.const 16)
                     )
                     (i32.const 255)
                    )
                    (local.get $11)
                   )
                   (i32.const 2)
                  )
                  (local.get $9)
                 )
                )
               )
              )
             )
             (i32.const 65535)
            )
            (i32.const 8)
           )
          )
          (i32.and
           (local.get $4)
           (i32.const 255)
          )
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 8)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 6)
         )
        )
        (br_if $while-in69
         (i32.ne
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (local.get $12)
         )
        )
       )
      )
      (block
       (br_if $label$break$L8
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $5
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
       (local.set $6
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
       )
       (local.set $7
        (i32.add
         (local.get $3)
         (i32.const 6)
        )
       )
       (local.set $3
        (i32.const 0)
       )
       (local.set $2
        (local.get $1)
       )
       (loop $while-in75
        (block $switch76
         (block $switch-default79
          (block $switch-case78
           (block $switch-case77
            (br_table $switch-case77 $switch-case78 $switch-default79
             (i32.sub
              (i32.shr_s
               (i32.shl
                (local.tee $4
                 (i32.or
                  (i32.load8_u
                   (i32.add
                    (local.get $2)
                    (i32.const 7)
                   )
                  )
                  (i32.shl
                   (i32.load8_u
                    (i32.add
                     (local.get $2)
                     (i32.const 6)
                    )
                   )
                   (i32.const 8)
                  )
                 )
                )
                (i32.const 16)
               )
               (i32.const 16)
              )
              (i32.const -1)
             )
            )
           )
           (i32.store align=1
            (local.get $1)
            (i32.load align=1
             (local.get $2)
            )
           )
           (i32.store16 offset=4 align=1
            (local.get $1)
            (i32.load16_s offset=4 align=1
             (local.get $2)
            )
           )
           (br $switch76)
          )
          (i32.store8
           (local.get $1)
           (i32.shr_u
            (i32.load16_u
             (local.get $5)
            )
            (i32.const 8)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
           (i32.load16_s
            (local.get $5)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 2)
           )
           (i32.shr_u
            (i32.load16_u
             (local.get $6)
            )
            (i32.const 8)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 3)
           )
           (i32.load16_s
            (local.get $6)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 4)
           )
           (i32.shr_u
            (i32.load16_u
             (local.get $7)
            )
            (i32.const 8)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 5)
           )
           (i32.load16_s
            (local.get $7)
           )
          )
          (br $switch76)
         )
         (local.set $9
          (i32.or
           (i32.load8_u
            (i32.add
             (local.get $2)
             (i32.const 3)
            )
           )
           (i32.shl
            (i32.load8_u
             (i32.add
              (local.get $2)
              (i32.const 2)
             )
            )
            (i32.const 8)
           )
          )
         )
         (local.set $10
          (i32.or
           (i32.load8_u
            (i32.add
             (local.get $2)
             (i32.const 5)
            )
           )
           (i32.shl
            (i32.load8_u
             (i32.add
              (local.get $2)
              (i32.const 4)
             )
            )
            (i32.const 8)
           )
          )
         )
         (i32.store8
          (local.get $1)
          (i32.shr_u
           (local.tee $11
            (i32.add
             (local.tee $11
              (i32.add
               (i32.add
                (i32.mul
                 (local.get $4)
                 (i32.or
                  (i32.load8_u
                   (i32.add
                    (local.get $2)
                    (i32.const 1)
                   )
                  )
                  (i32.shl
                   (i32.load8_u
                    (local.get $2)
                   )
                   (i32.const 8)
                  )
                 )
                )
                (i32.const 32768)
               )
               (i32.mul
                (local.tee $8
                 (i32.xor
                  (local.get $4)
                  (i32.const 65535)
                 )
                )
                (i32.load16_u
                 (local.get $5)
                )
               )
              )
             )
             (i32.shr_u
              (local.get $11)
              (i32.const 16)
             )
            )
           )
           (i32.const 24)
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
          (i32.shr_u
           (local.get $11)
           (i32.const 16)
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
          (i32.shr_u
           (local.tee $9
            (i32.add
             (local.tee $9
              (i32.add
               (i32.add
                (i32.mul
                 (local.get $4)
                 (local.get $9)
                )
                (i32.const 32768)
               )
               (i32.mul
                (local.get $8)
                (i32.load16_u
                 (local.get $6)
                )
               )
              )
             )
             (i32.shr_u
              (local.get $9)
              (i32.const 16)
             )
            )
           )
           (i32.const 24)
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const 3)
          )
          (i32.shr_u
           (local.get $9)
           (i32.const 16)
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
          (i32.shr_u
           (local.tee $4
            (i32.add
             (local.tee $4
              (i32.add
               (i32.add
                (i32.mul
                 (local.get $4)
                 (local.get $10)
                )
                (i32.const 32768)
               )
               (i32.mul
                (local.get $8)
                (i32.load16_u
                 (local.get $7)
                )
               )
              )
             )
             (i32.shr_u
              (local.get $4)
              (i32.const 16)
             )
            )
           )
           (i32.const 24)
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const 5)
          )
          (i32.shr_u
           (local.get $4)
           (i32.const 16)
          )
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 8)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 6)
         )
        )
        (br_if $while-in75
         (i32.ne
          (local.get $12)
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $1
      (i32.load8_u
       (local.get $19)
      )
     )
     (i32.const 4)
    )
   )
   (return)
  )
  (i32.store8
   (local.get $19)
   (i32.and
    (local.get $1)
    (i32.const 251)
   )
  )
  (local.set $1
   (i32.shr_s
    (i32.shl
     (i32.add
      (i32.load8_s
       (local.tee $2
        (i32.add
         (local.get $0)
         (i32.const 10)
        )
       )
      )
      (i32.const -1)
     )
     (i32.const 24)
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $2)
   (local.get $1)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 11)
   )
   (local.tee $1
    (i32.mul
     (i32.load8_u
      (i32.add
       (local.get $0)
       (i32.const 9)
      )
     )
     (i32.and
      (local.get $1)
      (i32.const 255)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
      (local.get $12)
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
 )
 (func $_png_do_gamma (; 121 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (i32.load
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
     (i32.lt_s
      (i32.and
       (local.tee $5
        (i32.load8_s
         (local.tee $9
          (i32.add
           (local.get $0)
           (i32.const 9)
          )
         )
        )
       )
       (i32.const 255)
      )
      (i32.const 9)
     )
    )
   )
   (if
    (i32.eqz
     (i32.and
      (i32.eq
       (local.get $5)
       (i32.const 16)
      )
      (i32.ne
       (local.get $3)
       (i32.const 0)
      )
     )
    )
    (return)
   )
  )
  (block $switch
   (block $switch-case24
    (block $switch-case11
     (block $switch-case6
      (block $switch-case
       (br_table $switch-case24 $switch $switch-case $switch $switch-case11 $switch $switch-case6 $switch
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 8)
         )
        )
       )
      )
      (local.set $0
       (i32.ne
        (local.get $6)
        (i32.const 0)
       )
      )
      (if
       (i32.eq
        (local.get $5)
        (i32.const 8)
       )
       (block
        (if
         (i32.eqz
          (local.get $0)
         )
         (return)
        )
        (local.set $0
         (i32.const 0)
        )
        (loop $while-in
         (i32.store8
          (local.get $1)
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.load8_u
             (local.get $1)
            )
           )
          )
         )
         (i32.store8
          (local.tee $3
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.load8_u
             (local.get $3)
            )
           )
          )
         )
         (i32.store8
          (local.tee $3
           (i32.add
            (local.get $1)
            (i32.const 2)
           )
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.load8_u
             (local.get $3)
            )
           )
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 3)
          )
         )
         (br_if $while-in
          (i32.ne
           (local.get $6)
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
          )
         )
        )
        (return)
       )
       (block
        (if
         (i32.eqz
          (local.get $0)
         )
         (return)
        )
        (local.set $0
         (i32.const 0)
        )
        (loop $while-in1
         (i32.store8
          (local.get $1)
          (i32.shr_u
           (i32.and
            (local.tee $5
             (i32.load16_s
              (i32.add
               (i32.load
                (i32.add
                 (i32.shl
                  (i32.shr_u
                   (i32.load8_u
                    (local.tee $2
                     (i32.add
                      (local.get $1)
                      (i32.const 1)
                     )
                    )
                   )
                   (local.get $4)
                  )
                  (i32.const 2)
                 )
                 (local.get $3)
                )
               )
               (i32.shl
                (i32.load8_u
                 (local.get $1)
                )
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 65535)
           )
           (i32.const 8)
          )
         )
         (i32.store8
          (local.get $2)
          (local.get $5)
         )
         (local.set $2
          (i32.load16_s
           (i32.add
            (i32.load
             (i32.add
              (i32.shl
               (i32.shr_u
                (i32.load8_u
                 (local.tee $7
                  (i32.add
                   (local.get $1)
                   (i32.const 3)
                  )
                 )
                )
                (local.get $4)
               )
               (i32.const 2)
              )
              (local.get $3)
             )
            )
            (i32.shl
             (i32.load8_u
              (local.tee $5
               (i32.add
                (local.get $1)
                (i32.const 2)
               )
              )
             )
             (i32.const 1)
            )
           )
          )
         )
         (i32.store8
          (local.get $5)
          (i32.shr_u
           (i32.and
            (local.get $2)
            (i32.const 65535)
           )
           (i32.const 8)
          )
         )
         (i32.store8
          (local.get $7)
          (local.get $2)
         )
         (local.set $2
          (i32.load16_s
           (i32.add
            (i32.load
             (i32.add
              (i32.shl
               (i32.shr_u
                (i32.load8_u
                 (local.tee $7
                  (i32.add
                   (local.get $1)
                   (i32.const 5)
                  )
                 )
                )
                (local.get $4)
               )
               (i32.const 2)
              )
              (local.get $3)
             )
            )
            (i32.shl
             (i32.load8_u
              (local.tee $5
               (i32.add
                (local.get $1)
                (i32.const 4)
               )
              )
             )
             (i32.const 1)
            )
           )
          )
         )
         (i32.store8
          (local.get $5)
          (i32.shr_u
           (i32.and
            (local.get $2)
            (i32.const 65535)
           )
           (i32.const 8)
          )
         )
         (i32.store8
          (local.get $7)
          (local.get $2)
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 6)
          )
         )
         (br_if $while-in1
          (i32.ne
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (local.get $6)
          )
         )
        )
        (return)
       )
      )
     )
     (local.set $0
      (i32.ne
       (local.get $6)
       (i32.const 0)
      )
     )
     (if
      (i32.eq
       (local.get $5)
       (i32.const 8)
      )
      (block
       (if
        (i32.eqz
         (local.get $0)
        )
        (return)
       )
       (local.set $0
        (i32.const 0)
       )
       (loop $while-in3
        (i32.store8
         (local.get $1)
         (i32.load8_s
          (i32.add
           (local.get $2)
           (i32.load8_u
            (local.get $1)
           )
          )
         )
        )
        (i32.store8
         (local.tee $3
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.load8_s
          (i32.add
           (local.get $2)
           (i32.load8_u
            (local.get $3)
           )
          )
         )
        )
        (i32.store8
         (local.tee $3
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
         (i32.load8_s
          (i32.add
           (local.get $2)
           (i32.load8_u
            (local.get $3)
           )
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
        (br_if $while-in3
         (i32.ne
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (local.get $6)
         )
        )
       )
       (return)
      )
      (block
       (if
        (i32.eqz
         (local.get $0)
        )
        (return)
       )
       (local.set $0
        (i32.const 0)
       )
       (loop $while-in5
        (i32.store8
         (local.get $1)
         (i32.shr_u
          (i32.and
           (local.tee $5
            (i32.load16_s
             (i32.add
              (i32.load
               (i32.add
                (i32.shl
                 (i32.shr_u
                  (i32.load8_u
                   (local.tee $2
                    (i32.add
                     (local.get $1)
                     (i32.const 1)
                    )
                   )
                  )
                  (local.get $4)
                 )
                 (i32.const 2)
                )
                (local.get $3)
               )
              )
              (i32.shl
               (i32.load8_u
                (local.get $1)
               )
               (i32.const 1)
              )
             )
            )
           )
           (i32.const 65535)
          )
          (i32.const 8)
         )
        )
        (i32.store8
         (local.get $2)
         (local.get $5)
        )
        (local.set $2
         (i32.load16_s
          (i32.add
           (i32.load
            (i32.add
             (i32.shl
              (i32.shr_u
               (i32.load8_u
                (local.tee $7
                 (i32.add
                  (local.get $1)
                  (i32.const 3)
                 )
                )
               )
               (local.get $4)
              )
              (i32.const 2)
             )
             (local.get $3)
            )
           )
           (i32.shl
            (i32.load8_u
             (local.tee $5
              (i32.add
               (local.get $1)
               (i32.const 2)
              )
             )
            )
            (i32.const 1)
           )
          )
         )
        )
        (i32.store8
         (local.get $5)
         (i32.shr_u
          (i32.and
           (local.get $2)
           (i32.const 65535)
          )
          (i32.const 8)
         )
        )
        (i32.store8
         (local.get $7)
         (local.get $2)
        )
        (local.set $2
         (i32.load16_s
          (i32.add
           (i32.load
            (i32.add
             (i32.shl
              (i32.shr_u
               (i32.load8_u
                (local.tee $7
                 (i32.add
                  (local.get $1)
                  (i32.const 5)
                 )
                )
               )
               (local.get $4)
              )
              (i32.const 2)
             )
             (local.get $3)
            )
           )
           (i32.shl
            (i32.load8_u
             (local.tee $5
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
            )
            (i32.const 1)
           )
          )
         )
        )
        (i32.store8
         (local.get $5)
         (i32.shr_u
          (i32.and
           (local.get $2)
           (i32.const 65535)
          )
          (i32.const 8)
         )
        )
        (i32.store8
         (local.get $7)
         (local.get $2)
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 8)
         )
        )
        (br_if $while-in5
         (i32.ne
          (local.get $6)
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
         )
        )
       )
       (return)
      )
     )
    )
    (local.set $0
     (i32.ne
      (local.get $6)
      (i32.const 0)
     )
    )
    (if
     (i32.eq
      (local.get $5)
      (i32.const 8)
     )
     (block
      (if
       (i32.eqz
        (local.get $0)
       )
       (return)
      )
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in8
       (i32.store8
        (local.get $1)
        (i32.load8_s
         (i32.add
          (local.get $2)
          (i32.load8_u
           (local.get $1)
          )
         )
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 2)
        )
       )
       (br_if $while-in8
        (i32.ne
         (local.get $6)
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
      )
      (return)
     )
     (block
      (if
       (i32.eqz
        (local.get $0)
       )
       (return)
      )
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in10
       (i32.store8
        (local.get $1)
        (i32.shr_u
         (i32.and
          (local.tee $5
           (i32.load16_s
            (i32.add
             (i32.load
              (i32.add
               (i32.shl
                (i32.shr_u
                 (i32.load8_u
                  (local.tee $2
                   (i32.add
                    (local.get $1)
                    (i32.const 1)
                   )
                  )
                 )
                 (local.get $4)
                )
                (i32.const 2)
               )
               (local.get $3)
              )
             )
             (i32.shl
              (i32.load8_u
               (local.get $1)
              )
              (i32.const 1)
             )
            )
           )
          )
          (i32.const 65535)
         )
         (i32.const 8)
        )
       )
       (i32.store8
        (local.get $2)
        (local.get $5)
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br_if $while-in10
        (i32.ne
         (local.get $6)
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
      )
      (return)
     )
    )
   )
   (if
    (i32.and
     (i32.eq
      (local.get $5)
      (i32.const 2)
     )
     (i32.ne
      (local.get $6)
      (i32.const 0)
     )
    )
    (block
     (local.set $5
      (i32.const 0)
     )
     (local.set $0
      (local.get $1)
     )
     (loop $while-in13
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.or
         (i32.or
          (i32.and
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.or
              (i32.shr_u
               (local.tee $8
                (i32.and
                 (local.tee $7
                  (i32.load8_u
                   (local.get $0)
                  )
                 )
                 (i32.const 192)
                )
               )
               (i32.const 4)
              )
              (i32.or
               (i32.or
                (local.get $8)
                (i32.shr_u
                 (local.get $7)
                 (i32.const 6)
                )
               )
               (i32.shr_u
                (local.get $8)
                (i32.const 2)
               )
              )
             )
            )
           )
           (i32.const 192)
          )
          (i32.and
           (i32.shr_u
            (i32.load8_u
             (i32.add
              (local.get $2)
              (i32.or
               (i32.or
                (i32.or
                 (local.tee $8
                  (i32.and
                   (local.get $7)
                   (i32.const 48)
                  )
                 )
                 (i32.shl
                  (local.get $8)
                  (i32.const 2)
                 )
                )
                (i32.shr_u
                 (local.get $8)
                 (i32.const 2)
                )
               )
               (i32.shr_u
                (local.get $8)
                (i32.const 4)
               )
              )
             )
            )
            (i32.const 2)
           )
           (i32.const 48)
          )
         )
         (i32.and
          (i32.shr_u
           (i32.load8_u
            (i32.add
             (local.get $2)
             (i32.or
              (i32.shr_u
               (local.tee $8
                (i32.and
                 (local.get $7)
                 (i32.const 12)
                )
               )
               (i32.const 2)
              )
              (i32.or
               (i32.or
                (local.get $8)
                (i32.shl
                 (local.get $8)
                 (i32.const 2)
                )
               )
               (i32.shl
                (local.get $8)
                (i32.const 4)
               )
              )
             )
            )
           )
           (i32.const 4)
          )
          (i32.const 12)
         )
        )
        (i32.shr_u
         (i32.load8_u
          (i32.add
           (local.get $2)
           (i32.or
            (i32.shl
             (local.tee $7
              (i32.and
               (local.get $7)
               (i32.const 3)
              )
             )
             (i32.const 2)
            )
            (i32.or
             (i32.or
              (local.get $7)
              (i32.shl
               (local.get $7)
               (i32.const 4)
              )
             )
             (i32.shl
              (local.get $7)
              (i32.const 6)
             )
            )
           )
          )
         )
         (i32.const 6)
        )
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (br_if $while-in13
       (i32.lt_u
        (local.tee $5
         (i32.add
          (local.get $5)
          (i32.const 4)
         )
        )
        (local.get $6)
       )
      )
     )
     (local.set $5
      (i32.load8_s
       (local.get $9)
      )
     )
    )
   )
   (block $switch14
    (block $switch-case23
     (block $switch-case20
      (block $switch-case17
       (br_table $switch-case17 $switch14 $switch14 $switch14 $switch-case20 $switch14 $switch14 $switch14 $switch14 $switch14 $switch14 $switch14 $switch-case23 $switch14
        (i32.sub
         (i32.shr_s
          (i32.shl
           (local.get $5)
           (i32.const 24)
          )
          (i32.const 24)
         )
         (i32.const 4)
        )
       )
      )
      (if
       (i32.eqz
        (local.get $6)
       )
       (return)
      )
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in16
       (local.set $4
        (i32.and
         (local.tee $3
          (i32.load8_u
           (local.get $1)
          )
         )
         (i32.const 15)
        )
       )
       (i32.store8
        (local.get $1)
        (i32.or
         (i32.and
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.or
             (i32.and
              (local.get $3)
              (i32.const 240)
             )
             (i32.shr_u
              (local.get $3)
              (i32.const 4)
             )
            )
           )
          )
          (i32.const 240)
         )
         (i32.shr_u
          (i32.load8_u
           (i32.add
            (local.get $2)
            (i32.or
             (local.get $4)
             (i32.shl
              (local.get $4)
              (i32.const 4)
             )
            )
           )
          )
          (i32.const 4)
         )
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (br_if $while-in16
        (i32.lt_u
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 2)
          )
         )
         (local.get $6)
        )
       )
      )
      (return)
     )
     (if
      (i32.eqz
       (local.get $6)
      )
      (return)
     )
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in19
      (i32.store8
       (local.get $1)
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.load8_u
          (local.get $1)
         )
        )
       )
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (br_if $while-in19
       (i32.ne
        (local.get $6)
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
       )
      )
     )
     (return)
    )
    (if
     (i32.eqz
      (local.get $6)
     )
     (return)
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in22
     (i32.store8
      (local.get $1)
      (i32.shr_u
       (i32.and
        (local.tee $5
         (i32.load16_s
          (i32.add
           (i32.load
            (i32.add
             (i32.shl
              (i32.shr_u
               (i32.load8_u
                (local.tee $2
                 (i32.add
                  (local.get $1)
                  (i32.const 1)
                 )
                )
               )
               (local.get $4)
              )
              (i32.const 2)
             )
             (local.get $3)
            )
           )
           (i32.shl
            (i32.load8_u
             (local.get $1)
            )
            (i32.const 1)
           )
          )
         )
        )
        (i32.const 65535)
       )
       (i32.const 8)
      )
     )
     (i32.store8
      (local.get $2)
      (local.get $5)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 2)
      )
     )
     (br_if $while-in22
      (i32.ne
       (local.get $6)
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
  )
 )
 (func $_png_do_dither (; 122 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (if
   (i32.and
    (local.tee $6
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
    (i32.eq
     (local.tee $5
      (i32.load8_s
       (local.tee $9
        (i32.add
         (local.get $0)
         (i32.const 8)
        )
       )
      )
     )
     (i32.const 2)
    )
   )
   (block
    (if
     (i32.ne
      (i32.load8_s
       (local.tee $7
        (i32.add
         (local.get $0)
         (i32.const 9)
        )
       )
      )
      (i32.const 8)
     )
     (return)
    )
    (local.set $1
     (if (result i32)
      (local.get $4)
      (block (result i32)
       (local.set $3
        (local.get $1)
       )
       (local.set $5
        (i32.const 0)
       )
       (loop $while-in
        (local.set $6
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
        )
        (local.set $8
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $3)
         (i32.load8_s
          (i32.add
           (local.get $2)
           (i32.or
            (i32.or
             (i32.shl
              (i32.shr_u
               (i32.load8_u
                (local.get $1)
               )
               (i32.const 3)
              )
              (i32.const 10)
             )
             (i32.shl
              (i32.shr_u
               (i32.load8_u
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (i32.const 3)
              )
              (i32.const 5)
             )
            )
            (i32.shr_u
             (i32.load8_u
              (i32.add
               (local.get $1)
               (i32.const 2)
              )
             )
             (i32.const 3)
            )
           )
          )
         )
        )
        (if
         (i32.ne
          (local.get $4)
          (local.tee $5
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
         )
         (block
          (local.set $3
           (local.get $8)
          )
          (local.set $1
           (local.get $6)
          )
          (br $while-in)
         )
        )
       )
       (i32.load8_s
        (local.get $7)
       )
      )
      (i32.const 8)
     )
    )
    (i32.store8
     (local.get $9)
     (i32.const 3)
    )
    (i32.store8
     (i32.add
      (local.get $0)
      (i32.const 10)
     )
     (i32.const 1)
    )
    (i32.store8
     (i32.add
      (local.get $0)
      (i32.const 11)
     )
     (local.get $1)
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
     (i32.shr_u
      (i32.add
       (i32.mul
        (i32.and
         (local.get $1)
         (i32.const 255)
        )
        (local.get $4)
       )
       (i32.const 7)
      )
      (i32.const 3)
     )
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.eq
      (local.get $5)
      (i32.const 6)
     )
     (local.get $6)
    )
   )
   (block
    (if
     (i32.eqz
      (i32.and
       (i32.eq
        (local.get $5)
        (i32.const 3)
       )
       (i32.ne
        (local.get $3)
        (i32.const 0)
       )
      )
     )
     (return)
    )
    (if
     (i32.eqz
      (i32.and
       (i32.eq
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 9)
         )
        )
        (i32.const 8)
       )
       (i32.ne
        (local.get $4)
        (i32.const 0)
       )
      )
     )
     (return)
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in1
     (i32.store8
      (local.get $1)
      (i32.load8_s
       (i32.add
        (local.get $3)
        (i32.load8_u
         (local.get $1)
        )
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br_if $while-in1
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $4)
      )
     )
    )
    (return)
   )
  )
  (if
   (i32.ne
    (i32.load8_s
     (local.tee $7
      (i32.add
       (local.get $0)
       (i32.const 9)
      )
     )
    )
    (i32.const 8)
   )
   (return)
  )
  (local.set $1
   (if (result i32)
    (local.get $4)
    (block (result i32)
     (local.set $3
      (local.get $1)
     )
     (local.set $5
      (i32.const 0)
     )
     (loop $while-in3
      (local.set $6
       (i32.add
        (local.get $3)
        (i32.const 4)
       )
      )
      (local.set $8
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $1)
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.or
          (i32.or
           (i32.shl
            (i32.shr_u
             (i32.load8_u
              (local.get $3)
             )
             (i32.const 3)
            )
            (i32.const 10)
           )
           (i32.shl
            (i32.shr_u
             (i32.load8_u
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (i32.const 3)
            )
            (i32.const 5)
           )
          )
          (i32.shr_u
           (i32.load8_u
            (i32.add
             (local.get $3)
             (i32.const 2)
            )
           )
           (i32.const 3)
          )
         )
        )
       )
      )
      (if
       (i32.ne
        (local.tee $5
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (local.get $4)
       )
       (block
        (local.set $3
         (local.get $6)
        )
        (local.set $1
         (local.get $8)
        )
        (br $while-in3)
       )
      )
     )
     (i32.load8_s
      (local.get $7)
     )
    )
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $9)
   (i32.const 3)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 10)
   )
   (i32.const 1)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 11)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (local.get $4)
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
 )
 (func $_png_do_unshift (; 123 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.eq
    (local.tee $8
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
    (i32.const 3)
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (local.set $6
   (local.get $4)
  )
  (local.set $9
   (i32.load
    (local.get $0)
   )
  )
  (local.set $7
   (i32.load8_u
    (i32.add
     (local.get $0)
     (i32.const 9)
    )
   )
  )
  (local.set $5
   (if (result i32)
    (i32.and
     (local.get $8)
     (i32.const 2)
    )
    (block (result i32)
     (local.set $3
      (i32.load8_u
       (local.get $2)
      )
     )
     (i32.store
      (i32.add
       (local.get $6)
       (i32.const 4)
      )
      (i32.sub
       (local.get $7)
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
      )
     )
     (i32.store
      (i32.add
       (local.get $6)
       (i32.const 8)
      )
      (i32.sub
       (local.get $7)
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 2)
        )
       )
      )
     )
     (i32.const 3)
    )
    (block (result i32)
     (local.set $3
      (i32.load8_u
       (i32.add
        (local.get $2)
        (i32.const 3)
       )
      )
     )
     (i32.const 1)
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.sub
    (local.get $7)
    (local.get $3)
   )
  )
  (if
   (i32.and
    (local.get $8)
    (i32.const 4)
   )
   (block
    (i32.store
     (i32.add
      (i32.shl
       (local.get $5)
       (i32.const 2)
      )
      (local.get $6)
     )
     (i32.sub
      (local.get $7)
      (i32.load8_u
       (i32.add
        (local.get $2)
        (i32.const 4)
       )
      )
     )
    )
    (local.set $5
     (i32.add
      (local.get $5)
      (i32.const 1)
     )
    )
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (i32.load
      (local.tee $8
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
        (local.get $6)
       )
      )
     )
     (i32.const 1)
    )
    (i32.store
     (local.get $8)
     (i32.const 0)
    )
    (local.set $2
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.lt_s
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.get $5)
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $2)
     (i32.const 65535)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (block $switch-default
   (block $switch-case10
    (block $switch-case7
     (block $switch-case4
      (block $switch-case
       (br_table $switch-case $switch-case4 $switch-default $switch-case7 $switch-default $switch-default $switch-default $switch-case10 $switch-default
        (i32.or
         (i32.shr_u
          (local.tee $2
           (i32.add
            (local.get $7)
            (i32.const -2)
           )
          )
          (i32.const 1)
         )
         (i32.shl
          (local.get $2)
          (i32.const 31)
         )
        )
       )
      )
      (if
       (i32.eqz
        (local.tee $3
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 4)
          )
         )
        )
       )
       (block
        (global.set $STACKTOP
         (local.get $4)
        )
        (return)
       )
      )
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in1
       (local.set $2
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $1)
        (i32.and
         (i32.shr_u
          (i32.load8_u
           (local.get $1)
          )
          (i32.const 1)
         )
         (i32.const 85)
        )
       )
       (if
        (i32.ne
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (local.get $3)
        )
        (block
         (local.set $1
          (local.get $2)
         )
         (br $while-in1)
        )
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
     (local.set $2
      (i32.load
       (local.get $6)
      )
     )
     (if
      (i32.eqz
       (local.tee $3
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
       )
      )
      (block
       (global.set $STACKTOP
        (local.get $4)
       )
       (return)
      )
     )
     (i32.store8
      (local.get $1)
      (i32.and
       (local.tee $5
        (i32.or
         (i32.and
          (i32.shr_u
           (i32.const 240)
           (local.get $2)
          )
          (i32.const 240)
         )
         (i32.shr_u
          (i32.const 15)
          (local.get $2)
         )
        )
       )
       (i32.shr_u
        (i32.load8_u
         (local.get $1)
        )
        (local.get $2)
       )
      )
     )
     (if
      (i32.eq
       (local.get $3)
       (i32.const 1)
      )
      (block
       (global.set $STACKTOP
        (local.get $4)
       )
       (return)
      )
     )
     (local.set $0
      (i32.const 1)
     )
     (loop $while-in3
      (i32.store8
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.and
        (local.get $5)
        (i32.shr_u
         (i32.load8_u
          (local.get $1)
         )
         (i32.load
          (local.get $6)
         )
        )
       )
      )
      (br_if $while-in3
       (i32.ne
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (local.get $3)
       )
      )
     )
     (global.set $STACKTOP
      (local.get $4)
     )
     (return)
    )
    (if
     (i32.eqz
      (local.tee $3
       (i32.mul
        (local.get $5)
        (local.get $9)
       )
      )
     )
     (block
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in6
     (local.set $2
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (i32.store8
      (local.get $1)
      (i32.shr_u
       (i32.load8_u
        (local.get $1)
       )
       (i32.load
        (i32.add
         (i32.shl
          (i32.rem_u
           (local.get $0)
           (local.get $5)
          )
          (i32.const 2)
         )
         (local.get $6)
        )
       )
      )
     )
     (if
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $3)
      )
      (block
       (local.set $1
        (local.get $2)
       )
       (br $while-in6)
      )
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
   (if
    (i32.eqz
     (local.tee $2
      (i32.mul
       (local.get $5)
       (local.get $9)
      )
     )
    )
    (block
     (global.set $STACKTOP
      (local.get $4)
     )
     (return)
    )
   )
   (local.set $0
    (i32.const 0)
   )
   (loop $while-in9
    (i32.store8
     (local.get $1)
     (i32.shr_u
      (local.tee $7
       (i32.shr_u
        (i32.or
         (i32.load8_u
          (local.tee $3
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
         (i32.shl
          (i32.load8_u
           (local.get $1)
          )
          (i32.const 8)
         )
        )
        (i32.load
         (i32.add
          (i32.shl
           (i32.rem_u
            (local.get $0)
            (local.get $5)
           )
           (i32.const 2)
          )
          (local.get $6)
         )
        )
       )
      )
      (i32.const 8)
     )
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (i32.const 2)
     )
    )
    (i32.store8
     (local.get $3)
     (local.get $7)
    )
    (br_if $while-in9
     (i32.ne
      (local.get $2)
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
     )
    )
   )
   (global.set $STACKTOP
    (local.get $4)
   )
   (return)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_png_do_unpack (; 124 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.ge_s
    (i32.and
     (local.tee $2
      (i32.load8_s
       (local.tee $7
        (i32.add
         (local.get $0)
         (i32.const 9)
        )
       )
      )
     )
     (i32.const 255)
    )
    (i32.const 8)
   )
   (return)
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (block $switch
   (block $switch-case5
    (block $switch-case2
     (block $switch-case
      (br_table $switch-case $switch-case2 $switch $switch-case5 $switch
       (i32.sub
        (local.get $2)
        (i32.const 1)
       )
      )
     )
     (if
      (local.get $3)
      (block
       (local.set $2
        (i32.xor
         (i32.and
          (i32.add
           (local.get $3)
           (i32.const 7)
          )
          (i32.const 7)
         )
         (i32.const 7)
        )
       )
       (local.set $4
        (i32.add
         (local.get $1)
         (i32.shr_u
          (i32.add
           (local.get $3)
           (i32.const -1)
          )
          (i32.const 3)
         )
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (local.get $3)
        )
       )
       (loop $while-in
        (i32.store8
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
         )
         (i32.and
          (i32.shr_u
           (i32.load8_u
            (local.get $4)
           )
           (local.get $2)
          )
          (i32.const 1)
         )
        )
        (local.set $4
         (select
          (i32.add
           (local.get $4)
           (i32.const -1)
          )
          (local.get $4)
          (local.tee $6
           (i32.eq
            (local.get $2)
            (i32.const 7)
           )
          )
         )
        )
        (local.set $2
         (select
          (i32.const 0)
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
          (local.get $6)
         )
        )
        (br_if $while-in
         (i32.ne
          (local.get $3)
          (local.tee $5
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     (br $switch)
    )
    (if
     (local.get $3)
     (block
      (local.set $2
       (i32.xor
        (i32.and
         (i32.add
          (i32.shl
           (local.get $3)
           (i32.const 1)
          )
          (i32.const 6)
         )
         (i32.const 6)
        )
        (i32.const 6)
       )
      )
      (local.set $4
       (i32.add
        (local.get $1)
        (i32.shr_u
         (i32.add
          (local.get $3)
          (i32.const -1)
         )
         (i32.const 2)
        )
       )
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (local.get $3)
       )
      )
      (loop $while-in1
       (i32.store8
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const -1)
         )
        )
        (i32.and
         (i32.shr_u
          (i32.load8_u
           (local.get $4)
          )
          (local.get $2)
         )
         (i32.const 3)
        )
       )
       (local.set $4
        (select
         (i32.add
          (local.get $4)
          (i32.const -1)
         )
         (local.get $4)
         (local.tee $6
          (i32.eq
           (local.get $2)
           (i32.const 6)
          )
         )
        )
       )
       (local.set $2
        (select
         (i32.const 0)
         (i32.add
          (local.get $2)
          (i32.const 2)
         )
         (local.get $6)
        )
       )
       (br_if $while-in1
        (i32.ne
         (local.get $3)
         (local.tee $5
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    (br $switch)
   )
   (if
    (local.get $3)
    (block
     (local.set $4
      (i32.and
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (i32.const 4)
      )
     )
     (local.set $2
      (i32.add
       (local.get $1)
       (i32.shr_u
        (i32.add
         (local.get $3)
         (i32.const -1)
        )
        (i32.const 1)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $3)
      )
     )
     (loop $while-in4
      (i32.store8
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const -1)
        )
       )
       (i32.and
        (i32.shr_u
         (i32.load8_u
          (local.get $2)
         )
         (local.get $4)
        )
        (i32.const 15)
       )
      )
      (local.set $2
       (select
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
        (local.get $2)
        (local.tee $4
         (i32.eq
          (local.get $4)
          (i32.const 4)
         )
        )
       )
      )
      (local.set $4
       (select
        (i32.const 0)
        (i32.const 4)
        (local.get $4)
       )
      )
      (br_if $while-in4
       (i32.ne
        (local.tee $5
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (local.get $3)
       )
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $7)
   (i32.const 8)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 11)
   )
   (i32.shl
    (local.tee $1
     (i32.load8_u
      (i32.add
       (local.get $0)
       (i32.const 10)
      )
     )
    )
    (i32.const 3)
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
   (i32.mul
    (local.get $1)
    (local.get $3)
   )
  )
 )
 (func $_png_do_read_filler (; 125 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (local.set $7
   (i32.and
    (i32.shr_u
     (local.get $2)
     (i32.const 8)
    )
    (i32.const 255)
   )
  )
  (local.set $5
   (i32.and
    (local.get $2)
    (i32.const 255)
   )
  )
  (block $switch
   (block $switch-case21
    (block $switch-case8
     (br_table $switch-case8 $switch $switch-case21 $switch
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
     )
    )
    (block $switch-default
     (block $switch-case7
      (block $switch-case
       (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case7 $switch-default
        (i32.sub
         (i32.load8_s
          (i32.add
           (local.get $0)
           (i32.const 9)
          )
         )
         (i32.const 8)
        )
       )
      )
      (local.set $1
       (i32.add
        (local.tee $2
         (i32.add
          (local.get $1)
          (local.get $4)
         )
        )
        (local.get $4)
       )
      )
      (if
       (i32.and
        (local.get $3)
        (i32.const 128)
       )
       (block
        (i32.store8
         (i32.add
          (local.get $1)
          (i32.const -1)
         )
         (local.get $5)
        )
        (if
         (i32.gt_u
          (local.get $4)
          (i32.const 1)
         )
         (block
          (local.set $3
           (i32.const 1)
          )
          (loop $while-in2
           (i32.store8
            (local.tee $6
             (i32.add
              (local.get $1)
              (i32.const -2)
             )
            )
            (i32.load8_s
             (local.tee $2
              (i32.add
               (local.get $2)
               (i32.const -1)
              )
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const -3)
            )
            (local.get $5)
           )
           (if
            (i32.ne
             (local.get $4)
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
            )
            (block
             (local.set $1
              (local.get $6)
             )
             (br $while-in2)
            )
           )
          )
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (i32.const 10)
         )
         (i32.const 2)
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (i32.const 11)
         )
         (i32.const 16)
        )
        (i32.store
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
         (i32.shl
          (local.get $4)
          (i32.const 1)
         )
        )
        (return)
       )
       (block
        (if
         (local.get $4)
         (block
          (local.set $3
           (i32.const 0)
          )
          (loop $while-in
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const -1)
            )
            (i32.load8_s
             (local.tee $2
              (i32.add
               (local.get $2)
               (i32.const -1)
              )
             )
            )
           )
           (i32.store8
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const -2)
             )
            )
            (local.get $5)
           )
           (br_if $while-in
            (i32.ne
             (local.get $4)
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
            )
           )
          )
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (i32.const 10)
         )
         (i32.const 2)
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (i32.const 11)
         )
         (i32.const 16)
        )
        (i32.store
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
         (i32.shl
          (local.get $4)
          (i32.const 1)
         )
        )
        (return)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.tee $2
        (i32.add
         (local.get $1)
         (local.get $4)
        )
       )
       (local.get $4)
      )
     )
     (if
      (i32.and
       (local.get $3)
       (i32.const 128)
      )
      (block
       (i32.store8
        (i32.add
         (local.get $1)
         (i32.const -1)
        )
        (local.get $7)
       )
       (i32.store8
        (i32.add
         (local.get $1)
         (i32.const -2)
        )
        (local.get $5)
       )
       (if
        (i32.gt_u
         (local.get $4)
         (i32.const 1)
        )
        (block
         (local.set $3
          (i32.const 1)
         )
         (loop $while-in6
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -3)
           )
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
           )
          )
          (i32.store8
           (local.tee $6
            (i32.add
             (local.get $1)
             (i32.const -4)
            )
           )
           (i32.load8_s
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const -2)
             )
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -5)
           )
           (local.get $7)
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -6)
           )
           (local.get $5)
          )
          (if
           (i32.ne
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $4)
           )
           (block
            (local.set $1
             (local.get $6)
            )
            (br $while-in6)
           )
          )
         )
        )
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 10)
        )
        (i32.const 2)
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 11)
        )
        (i32.const 32)
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
       )
       (return)
      )
      (block
       (if
        (local.get $4)
        (block
         (local.set $3
          (i32.const 0)
         )
         (loop $while-in4
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -1)
           )
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -2)
           )
           (i32.load8_s
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const -2)
             )
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -3)
           )
           (local.get $7)
          )
          (i32.store8
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const -4)
            )
           )
           (local.get $5)
          )
          (br_if $while-in4
           (i32.ne
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $4)
           )
          )
         )
        )
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 10)
        )
        (i32.const 2)
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 11)
        )
        (i32.const 32)
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
       )
       (return)
      )
     )
    )
    (return)
   )
   (block $switch9
    (block $switch-case19
     (block $switch-case14
      (br_table $switch-case14 $switch9 $switch9 $switch9 $switch9 $switch9 $switch9 $switch9 $switch-case19 $switch9
       (i32.sub
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 9)
         )
        )
        (i32.const 8)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $4)
       (local.tee $2
        (i32.add
         (local.get $1)
         (i32.mul
          (local.get $4)
          (i32.const 3)
         )
        )
       )
      )
     )
     (if
      (i32.and
       (local.get $3)
       (i32.const 128)
      )
      (block
       (i32.store8
        (i32.add
         (local.get $1)
         (i32.const -1)
        )
        (local.get $5)
       )
       (if
        (i32.gt_u
         (local.get $4)
         (i32.const 1)
        )
        (block
         (local.set $3
          (i32.const 1)
         )
         (loop $while-in13
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -2)
           )
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -3)
           )
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.const -2)
            )
           )
          )
          (i32.store8
           (local.tee $6
            (i32.add
             (local.get $1)
             (i32.const -4)
            )
           )
           (i32.load8_s
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const -3)
             )
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -5)
           )
           (local.get $5)
          )
          (if
           (i32.ne
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $4)
           )
           (block
            (local.set $1
             (local.get $6)
            )
            (br $while-in13)
           )
          )
         )
        )
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 10)
        )
        (i32.const 4)
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 11)
        )
        (i32.const 32)
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
       )
       (return)
      )
      (block
       (if
        (local.get $4)
        (block
         (local.set $3
          (i32.const 0)
         )
         (loop $while-in11
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -1)
           )
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -2)
           )
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.const -2)
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const -3)
           )
           (i32.load8_s
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const -3)
             )
            )
           )
          )
          (i32.store8
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const -4)
            )
           )
           (local.get $5)
          )
          (br_if $while-in11
           (i32.ne
            (local.get $4)
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 10)
        )
        (i32.const 4)
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 11)
        )
        (i32.const 32)
       )
       (i32.store
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
       )
       (return)
      )
     )
    )
    (local.set $1
     (i32.add
      (local.tee $2
       (i32.add
        (local.get $1)
        (i32.mul
         (local.get $4)
         (i32.const 3)
        )
       )
      )
      (local.get $4)
     )
    )
    (if
     (i32.and
      (local.get $3)
      (i32.const 128)
     )
     (block
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -1)
       )
       (local.get $7)
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (i32.const -2)
       )
       (local.get $5)
      )
      (if
       (i32.gt_u
        (local.get $4)
        (i32.const 1)
       )
       (block
        (local.set $3
         (i32.const 1)
        )
        (loop $while-in18
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -3)
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.const -1)
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -4)
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.const -2)
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -5)
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.const -3)
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -6)
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.const -4)
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -7)
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.const -5)
           )
          )
         )
         (i32.store8
          (local.tee $6
           (i32.add
            (local.get $1)
            (i32.const -8)
           )
          )
          (i32.load8_s
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const -6)
            )
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -9)
          )
          (local.get $7)
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -10)
          )
          (local.get $5)
         )
         (if
          (i32.ne
           (local.get $4)
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
          )
          (block
           (local.set $1
            (local.get $6)
           )
           (br $while-in18)
          )
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.get $0)
        (i32.const 10)
       )
       (i32.const 4)
      )
      (i32.store8
       (i32.add
        (local.get $0)
        (i32.const 11)
       )
       (i32.const 64)
      )
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 4)
       )
       (i32.shl
        (local.get $4)
        (i32.const 3)
       )
      )
     )
     (block
      (if
       (local.get $4)
       (block
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in16
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.const -1)
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -2)
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.const -2)
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -3)
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.const -3)
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -4)
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.const -4)
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -5)
          )
          (i32.load8_s
           (i32.add
            (local.get $2)
            (i32.const -5)
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -6)
          )
          (i32.load8_s
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const -6)
            )
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (i32.const -7)
          )
          (local.get $7)
         )
         (i32.store8
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const -8)
           )
          )
          (local.get $5)
         )
         (br_if $while-in16
          (i32.ne
           (local.get $4)
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.get $0)
        (i32.const 10)
       )
       (i32.const 4)
      )
      (i32.store8
       (i32.add
        (local.get $0)
        (i32.const 11)
       )
       (i32.const 64)
      )
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 4)
       )
       (i32.shl
        (local.get $4)
        (i32.const 3)
       )
      )
     )
    )
   )
  )
 )
 (func $_png_do_read_swap_alpha (; 126 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (i32.load
    (local.get $0)
   )
  )
  (block $switch
   (block $switch-case6
    (block $switch-case
     (br_table $switch-case6 $switch $switch-case $switch
      (i32.sub
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 8)
        )
       )
       (i32.const 4)
      )
     )
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 4)
       )
      )
     )
    )
    (local.set $2
     (i32.ne
      (local.get $5)
      (i32.const 0)
     )
    )
    (if
     (i32.eq
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 9)
       )
      )
      (i32.const 8)
     )
     (block
      (if
       (i32.eqz
        (local.get $2)
       )
       (return)
      )
      (local.set $0
       (local.get $1)
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in
       (local.set $3
        (i32.load8_s
         (local.tee $2
          (i32.add
           (local.get $0)
           (i32.const -1)
          )
         )
        )
       )
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.tee $2
          (i32.add
           (local.get $0)
           (i32.const -2)
          )
         )
        )
       )
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.tee $2
          (i32.add
           (local.get $0)
           (i32.const -3)
          )
         )
        )
       )
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const -4)
          )
         )
        )
       )
       (i32.store8
        (local.get $0)
        (local.get $3)
       )
       (br_if $while-in
        (i32.ne
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $5)
        )
       )
      )
      (return)
     )
     (block
      (if
       (i32.eqz
        (local.get $2)
       )
       (return)
      )
      (local.set $2
       (i32.const 0)
      )
      (local.set $0
       (local.get $1)
      )
      (loop $while-in1
       (local.set $3
        (i32.load8_s
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const -1)
          )
         )
        )
       )
       (local.set $6
        (i32.load8_s
         (local.tee $4
          (i32.add
           (local.get $0)
           (i32.const -2)
          )
         )
        )
       )
       (i32.store8
        (local.get $1)
        (i32.load8_s
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const -3)
          )
         )
        )
       )
       (i32.store8
        (local.get $4)
        (i32.load8_s
         (local.tee $4
          (i32.add
           (local.get $0)
           (i32.const -4)
          )
         )
        )
       )
       (i32.store8
        (local.get $1)
        (i32.load8_s
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const -5)
          )
         )
        )
       )
       (i32.store8
        (local.get $4)
        (i32.load8_s
         (local.tee $4
          (i32.add
           (local.get $0)
           (i32.const -6)
          )
         )
        )
       )
       (i32.store8
        (local.get $1)
        (i32.load8_s
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const -7)
          )
         )
        )
       )
       (i32.store8
        (local.get $4)
        (i32.load8_s
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const -8)
          )
         )
        )
       )
       (i32.store8
        (local.get $1)
        (local.get $3)
       )
       (i32.store8
        (local.get $0)
        (local.get $6)
       )
       (br_if $while-in1
        (i32.ne
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.get $5)
        )
       )
      )
      (return)
     )
    )
   )
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
    )
   )
   (local.set $2
    (i32.ne
     (local.get $5)
     (i32.const 0)
    )
   )
   (if
    (i32.eq
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 9)
      )
     )
     (i32.const 8)
    )
    (block
     (if
      (i32.eqz
       (local.get $2)
      )
      (return)
     )
     (local.set $2
      (i32.const 0)
     )
     (local.set $0
      (local.get $1)
     )
     (loop $while-in3
      (local.set $3
       (i32.load8_s
        (local.tee $1
         (i32.add
          (local.get $0)
          (i32.const -1)
         )
        )
       )
      )
      (i32.store8
       (local.get $1)
       (i32.load8_s
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const -2)
         )
        )
       )
      )
      (i32.store8
       (local.get $0)
       (local.get $3)
      )
      (br_if $while-in3
       (i32.ne
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (local.get $5)
       )
      )
     )
    )
    (block
     (if
      (i32.eqz
       (local.get $2)
      )
      (return)
     )
     (local.set $2
      (i32.const 0)
     )
     (local.set $0
      (local.get $1)
     )
     (loop $while-in5
      (local.set $3
       (i32.load8_s
        (local.tee $1
         (i32.add
          (local.get $0)
          (i32.const -1)
         )
        )
       )
      )
      (local.set $6
       (i32.load8_s
        (local.tee $4
         (i32.add
          (local.get $0)
          (i32.const -2)
         )
        )
       )
      )
      (i32.store8
       (local.get $1)
       (i32.load8_s
        (local.tee $1
         (i32.add
          (local.get $0)
          (i32.const -3)
         )
        )
       )
      )
      (i32.store8
       (local.get $4)
       (i32.load8_s
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const -4)
         )
        )
       )
      )
      (i32.store8
       (local.get $1)
       (local.get $3)
      )
      (i32.store8
       (local.get $0)
       (local.get $6)
      )
      (br_if $while-in5
       (i32.ne
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (local.get $5)
       )
      )
     )
    )
   )
  )
 )
 (func $_png_get_uint_32 (; 127 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.or
   (i32.load8_u
    (i32.add
     (local.get $0)
     (i32.const 3)
    )
   )
   (i32.or
    (i32.or
     (i32.shl
      (i32.load8_u
       (local.get $0)
      )
      (i32.const 24)
     )
     (i32.shl
      (i32.load8_u
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.const 16)
     )
    )
    (i32.shl
     (i32.load8_u
      (i32.add
       (local.get $0)
       (i32.const 2)
      )
     )
     (i32.const 8)
    )
   )
  )
 )
 (func $_png_crc_read (; 128 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $_png_read_data
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_png_crc_finish (; 129 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.lt_u
    (local.tee $2
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $0)
        (i32.const 268)
       )
      )
     )
    )
    (local.get $1)
   )
   (block
    (call $_png_read_data
     (local.get $0)
     (local.tee $6
      (i32.load
       (local.tee $5
        (i32.add
         (local.get $0)
         (i32.const 264)
        )
       )
      )
     )
     (local.get $2)
    )
    (call $_png_calculate_crc
     (local.get $0)
     (local.get $6)
     (local.get $2)
    )
    (if
     (i32.gt_u
      (local.tee $1
       (i32.sub
        (local.get $1)
        (local.get $2)
       )
      )
      (local.get $2)
     )
     (loop $while-in
      (call $_png_read_data
       (local.get $0)
       (local.tee $6
        (i32.load
         (local.get $5)
        )
       )
       (local.tee $7
        (i32.load
         (local.get $4)
        )
       )
      )
      (call $_png_calculate_crc
       (local.get $0)
       (local.get $6)
       (local.get $7)
      )
      (br_if $while-in
       (i32.gt_u
        (local.tee $1
         (i32.sub
          (local.get $1)
          (local.get $2)
         )
        )
        (local.get $2)
       )
      )
     )
    )
   )
  )
  (if
   (local.get $1)
   (block
    (call $_png_read_data
     (local.get $0)
     (local.tee $2
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 264)
       )
      )
     )
     (local.get $1)
    )
    (call $_png_calculate_crc
     (local.get $0)
     (local.get $2)
     (local.get $1)
    )
   )
  )
  (local.set $1
   (local.get $3)
  )
  (local.set $2
   (i32.load
    (local.tee $4
     (i32.add
      (local.get $0)
      (i32.const 200)
     )
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (i32.and
      (i32.load8_s
       (local.tee $5
        (i32.add
         (local.get $0)
         (i32.const 376)
        )
       )
      )
      (i32.const 32)
     )
     (block
      (local.set $2
       (i32.eq
        (i32.and
         (local.get $2)
         (i32.const 768)
        )
        (i32.const 768)
       )
      )
      (call $_png_read_data
       (local.get $0)
       (local.get $1)
       (i32.const 4)
      )
      (br_if $__rjti$0
       (local.get $2)
      )
     )
     (block
      (local.set $2
       (i32.eqz
        (i32.and
         (local.get $2)
         (i32.const 2048)
        )
       )
      )
      (call $_png_read_data
       (local.get $0)
       (local.get $1)
       (i32.const 4)
      )
      (br_if $__rjti$0
       (i32.eqz
        (local.get $2)
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (global.set $STACKTOP
    (local.get $3)
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.eq
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 364)
     )
    )
    (i32.or
     (i32.load8_u
      (i32.add
       (local.get $1)
       (i32.const 3)
      )
     )
     (i32.or
      (i32.or
       (i32.shl
        (i32.load8_u
         (local.get $1)
        )
        (i32.const 24)
       )
       (i32.shl
        (i32.load8_u
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.const 16)
       )
      )
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $1)
         (i32.const 2)
        )
       )
       (i32.const 8)
      )
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $1
   (i32.load
    (local.get $4)
   )
  )
  (block $__rjti$2
   (if
    (i32.and
     (i32.load8_s
      (local.get $5)
     )
     (i32.const 32)
    )
    (br_if $__rjti$2
     (i32.and
      (local.get $1)
      (i32.const 512)
     )
    )
    (br_if $__rjti$2
     (i32.eqz
      (i32.and
       (local.get $1)
       (i32.const 1024)
      )
     )
    )
   )
   (call $_png_chunk_warning
    (local.get $0)
   )
   (global.set $STACKTOP
    (local.get $3)
   )
   (return
    (i32.const 1)
   )
  )
  (call $_png_chunk_error
   (local.get $0)
   (i32.const 18361)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const 1)
 )
 (func $_png_decompress_chunk (; 130 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (local.set $10
   (local.get $9)
  )
  (local.set $16
   (i32.sub
    (local.get $9)
    (i32.const -64)
   )
  )
  (local.set $17
   (i32.add
    (local.get $9)
    (i32.const 56)
   )
  )
  (i32.store
   (local.tee $13
    (i32.add
     (local.get $0)
     (i32.const 208)
    )
   )
   (i32.add
    (local.get $1)
    (local.get $3)
   )
  )
  (i32.store
   (local.tee $14
    (i32.add
     (local.get $0)
     (i32.const 212)
    )
   )
   (local.tee $5
    (i32.sub
     (local.get $2)
     (local.get $3)
    )
   )
  )
  (i32.store
   (local.tee $18
    (i32.add
     (local.get $0)
     (i32.const 220)
    )
   )
   (i32.load
    (local.tee $15
     (i32.add
      (local.get $0)
      (i32.const 264)
     )
    )
   )
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $0)
     (i32.const 224)
    )
   )
   (i32.load
    (local.tee $12
     (i32.add
      (local.get $0)
      (i32.const 268)
     )
    )
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (i32.store
     (local.tee $19
      (i32.add
       (local.get $9)
       (i32.const 72)
      )
     )
     (block $__rjti$1 (result i32)
      (block $__rjti$0
       (if
        (local.get $5)
        (block $label$break$L5
         (local.set $5
          (i32.const 0)
         )
         (loop $while-in
          (if
           (i32.le_u
            (local.tee $7
             (call $_inflate
              (local.get $13)
             )
            )
            (i32.const 1)
           )
           (block
            (if
             (i32.or
              (local.tee $20
               (i32.eq
                (local.get $7)
                (i32.const 1)
               )
              )
              (i32.eqz
               (local.tee $6
                (i32.load
                 (local.get $11)
                )
               )
              )
             )
             (block
              (local.set $7
               (i32.load
                (local.get $12)
               )
              )
              (i32.store8
               (if (result i32)
                (local.get $5)
                (block (result i32)
                 (drop
                  (call $_memcpy
                   (local.tee $6
                    (call $_png_malloc
                     (local.get $0)
                     (i32.add
                      (local.get $7)
                      (i32.sub
                       (i32.add
                        (local.get $8)
                        (i32.const 1)
                       )
                       (local.get $6)
                      )
                     )
                    )
                   )
                   (local.get $5)
                   (local.get $8)
                  )
                 )
                 (call $_png_free
                  (local.get $0)
                  (local.get $5)
                 )
                 (drop
                  (call $_memcpy
                   (i32.add
                    (local.get $6)
                    (local.get $8)
                   )
                   (i32.load
                    (local.get $15)
                   )
                   (i32.sub
                    (i32.load
                     (local.get $12)
                    )
                    (i32.load
                     (local.get $11)
                    )
                   )
                  )
                 )
                 (local.set $8
                  (local.tee $7
                   (i32.add
                    (local.get $8)
                    (i32.sub
                     (i32.load
                      (local.get $12)
                     )
                     (i32.load
                      (local.get $11)
                     )
                    )
                   )
                  )
                 )
                 (i32.add
                  (local.tee $5
                   (local.get $6)
                  )
                  (local.get $7)
                 )
                )
                (block (result i32)
                 (drop
                  (call $_memcpy
                   (i32.add
                    (local.get $3)
                    (local.tee $7
                     (call $_png_malloc
                      (local.get $0)
                      (i32.add
                       (local.tee $6
                        (i32.add
                         (local.get $7)
                         (i32.sub
                          (local.get $3)
                          (local.get $6)
                         )
                        )
                       )
                       (i32.const 1)
                      )
                     )
                    )
                   )
                   (i32.load
                    (local.get $15)
                   )
                   (i32.sub
                    (local.get $6)
                    (local.get $3)
                   )
                  )
                 )
                 (drop
                  (call $_memcpy
                   (local.get $7)
                   (local.get $1)
                   (local.get $3)
                  )
                 )
                 (local.set $8
                  (local.get $6)
                 )
                 (i32.add
                  (local.get $6)
                  (local.tee $5
                   (local.get $7)
                  )
                 )
                )
               )
               (i32.const 0)
              )
              (if
               (local.get $20)
               (block
                (local.set $3
                 (local.get $8)
                )
                (br $label$break$L5)
               )
              )
              (i32.store
               (local.get $18)
               (i32.load
                (local.get $15)
               )
              )
              (i32.store
               (local.get $11)
               (i32.load
                (local.get $12)
               )
              )
             )
            )
            (br_if $__rjti$0
             (i32.eqz
              (i32.load
               (local.get $14)
              )
             )
            )
            (br $while-in)
           )
          )
         )
         (if
          (local.tee $6
           (i32.load offset=232
            (local.get $0)
           )
          )
          (call $_png_warning
           (local.get $0)
           (local.get $6)
          )
          (call $_png_warning
           (local.get $0)
           (i32.const 1568)
          )
         )
         (drop
          (call $_inflateReset
           (local.get $13)
          )
         )
         (i32.store
          (local.get $14)
          (i32.const 0)
         )
         (local.set $6
          (i32.add
           (local.get $3)
           (i32.const 32)
          )
         )
         (i32.store8
          (i32.add
           (i32.add
            (if (result i32)
             (local.get $5)
             (local.get $8)
             (block (result i32)
              (drop
               (call $_memcpy
                (local.tee $5
                 (call $_png_malloc
                  (local.get $0)
                  (local.get $6)
                 )
                )
                (local.get $1)
                (local.get $3)
               )
              )
              (local.get $6)
             )
            )
            (i32.const -1)
           )
           (local.get $5)
          )
          (i32.const 0)
         )
         (drop
          (call $_memcpy
           (i32.add
            (local.get $3)
            (local.get $5)
           )
           (i32.const 1568)
           (i32.add
            (select
             (local.tee $2
              (i32.sub
               (i32.add
                (local.get $2)
                (i32.add
                 (local.get $1)
                 (i32.const -1)
                )
               )
               (local.get $5)
              )
             )
             (i32.const 31)
             (i32.lt_u
              (local.get $2)
              (i32.const 31)
             )
            )
            (i32.const 1)
           )
          )
         )
         (if
          (i32.eq
           (local.get $7)
           (i32.const -5)
          )
          (block
           (i32.store
            (local.get $17)
            (i32.add
             (local.get $0)
             (i32.const 376)
            )
           )
           (drop
            (call $_sprintf
             (local.get $10)
             (i32.const 18371)
             (local.get $17)
            )
           )
           (br $__rjti$2)
          )
         )
         (drop
          (br_if $__rjti$1
           (local.tee $2
            (i32.add
             (local.get $0)
             (i32.const 376)
            )
           )
           (i32.ne
            (local.get $7)
            (i32.const -3)
           )
          )
         )
         (i32.store
          (local.get $16)
          (local.get $2)
         )
         (drop
          (call $_sprintf
           (local.get $10)
           (i32.const 18421)
           (local.get $16)
          )
         )
         (br $__rjti$2)
        )
        (block
         (local.set $5
          (i32.const 0)
         )
         (br $__rjti$0)
        )
       )
       (br $__rjto$2)
      )
      (i32.add
       (local.get $0)
       (i32.const 376)
      )
     )
    )
    (drop
     (call $_sprintf
      (local.get $10)
      (i32.const 18469)
      (local.get $19)
     )
    )
   )
   (call $_png_warning
    (local.get $0)
    (local.get $10)
   )
   (if
    (i32.eqz
     (local.get $5)
    )
    (drop
     (call $_memcpy
      (local.tee $5
       (call $_png_malloc
        (local.get $0)
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
      )
      (local.get $1)
      (local.get $3)
     )
    )
   )
   (i32.store8
    (i32.add
     (local.get $3)
     (local.get $5)
    )
    (i32.const 0)
   )
  )
  (drop
   (call $_inflateReset
    (local.get $13)
   )
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (call $_png_free
   (local.get $0)
   (local.get $1)
  )
  (i32.store
   (local.get $4)
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
  (local.get $5)
 )
 (func $_png_handle_IHDR (; 131 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (i32.load
     (local.tee $3
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (call $_png_error
    (local.get $0)
    (i32.const 18547)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.const 13)
   )
   (call $_png_error
    (local.get $0)
    (i32.const 18565)
   )
  )
  (i32.store
   (local.get $3)
   (i32.or
    (i32.load
     (local.get $3)
    )
    (i32.const 1)
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $2
    (local.get $4)
   )
   (i32.const 13)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $2)
   (i32.const 13)
  )
  (drop
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
  )
  (local.set $3
   (i32.or
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.const 7)
     )
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 4)
        )
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 5)
        )
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (i32.add
        (local.get $2)
        (i32.const 6)
       )
      )
      (i32.const 8)
     )
    )
   )
  )
  (local.set $5
   (i32.and
    (local.tee $8
     (i32.load8_s
      (i32.add
       (local.get $2)
       (i32.const 8)
      )
     )
    )
    (i32.const 255)
   )
  )
  (local.set $9
   (i32.and
    (local.tee $6
     (i32.load8_s
      (i32.add
       (local.get $2)
       (i32.const 9)
      )
     )
    )
    (i32.const 255)
   )
  )
  (local.set $10
   (i32.load8_u
    (i32.add
     (local.get $2)
     (i32.const 10)
    )
   )
  )
  (local.set $12
   (i32.and
    (local.tee $11
     (i32.load8_s
      (i32.add
       (local.get $2)
       (i32.const 11)
      )
     )
    )
    (i32.const 255)
   )
  )
  (local.set $14
   (i32.and
    (local.tee $13
     (i32.load8_s
      (i32.add
       (local.get $2)
       (i32.const 12)
      )
     )
    )
    (i32.const 255)
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 292)
   )
   (local.tee $7
    (i32.or
     (i32.load8_u
      (i32.add
       (local.get $2)
       (i32.const 3)
      )
     )
     (i32.or
      (i32.or
       (i32.shl
        (i32.load8_u
         (local.get $2)
        )
        (i32.const 24)
       )
       (i32.shl
        (i32.load8_u
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.const 16)
       )
      )
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 2)
        )
       )
       (i32.const 8)
      )
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 296)
   )
   (local.get $3)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 387)
   )
   (local.get $8)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 383)
   )
   (local.get $13)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 386)
   )
   (local.get $6)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 660)
   )
   (local.get $11)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 389)
   )
   (local.tee $2
    (i32.mul
     (local.get $5)
     (i32.and
      (block $switch (result i32)
       (block $switch-default
        (block $switch-case3
         (block $switch-case2
          (block $switch-case1
           (block $switch-case0
            (br_table $switch-case0 $switch-default $switch-case1 $switch-case0 $switch-case2 $switch-default $switch-case3 $switch-default
             (local.get $6)
            )
           )
           (i32.store8
            (i32.add
             (local.get $0)
             (i32.const 390)
            )
            (i32.const 1)
           )
           (br $switch
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $0)
            (i32.const 390)
           )
           (i32.const 3)
          )
          (br $switch
           (i32.const 3)
          )
         )
         (i32.store8
          (i32.add
           (local.get $0)
           (i32.const 390)
          )
          (i32.const 2)
         )
         (br $switch
          (i32.const 2)
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (i32.const 390)
         )
         (i32.const 4)
        )
        (br $switch
         (i32.const 4)
        )
       )
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 390)
        )
       )
      )
      (i32.const 255)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 308)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (local.get $7)
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
  (call $_png_set_IHDR
   (local.get $0)
   (local.get $1)
   (local.get $7)
   (local.get $3)
   (local.get $5)
   (local.get $9)
   (local.get $14)
   (local.get $10)
   (local.get $12)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_png_handle_PLTE (; 132 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 784)
   )
  )
  (if
   (i32.and
    (local.tee $5
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $0)
        (i32.const 196)
       )
      )
     )
    )
    (i32.const 1)
   )
   (if
    (i32.and
     (local.get $5)
     (i32.const 4)
    )
    (block
     (call $_png_warning
      (local.get $0)
      (i32.const 18609)
     )
     (drop
      (call $_png_crc_finish
       (local.get $0)
       (local.get $2)
      )
     )
     (global.set $STACKTOP
      (local.get $3)
     )
     (return)
    )
    (if
     (i32.and
      (local.get $5)
      (i32.const 2)
     )
     (call $_png_error
      (local.get $0)
      (i32.const 18633)
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 18584)
   )
  )
  (i32.store
   (local.get $4)
   (i32.or
    (i32.load
     (local.get $4)
    )
    (i32.const 2)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $4
      (i32.load8_s
       (local.tee $8
        (i32.add
         (local.get $0)
         (i32.const 386)
        )
       )
      )
     )
     (i32.const 2)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 18654)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.eqz
      (i32.rem_u
       (local.get $2)
       (i32.const 3)
      )
     )
     (i32.lt_u
      (local.get $2)
      (i32.const 769)
     )
    )
   )
   (block $do-once0
    (if
     (i32.eq
      (local.get $4)
      (i32.const 3)
     )
     (block
      (call $_png_error
       (local.get $0)
       (i32.const 18691)
      )
      (br $do-once0)
     )
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 18691)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (local.set $4
   (local.get $3)
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 768)
   )
  )
  (local.set $7
   (i32.div_s
    (local.get $2)
    (i32.const 3)
   )
  )
  (if
   (i32.gt_s
    (local.get $2)
    (i32.const 2)
   )
   (block
    (local.set $9
     (i32.add
      (local.get $6)
      (i32.const 1)
     )
    )
    (local.set $10
     (i32.add
      (local.get $6)
      (i32.const 2)
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (local.set $2
     (local.get $4)
    )
    (loop $while-in
     (call $_png_read_data
      (local.get $0)
      (local.get $6)
      (i32.const 3)
     )
     (call $_png_calculate_crc
      (local.get $0)
      (local.get $6)
      (i32.const 3)
     )
     (i32.store8
      (local.get $2)
      (i32.load8_s
       (local.get $6)
      )
     )
     (i32.store8
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
      (i32.load8_s
       (local.get $9)
      )
     )
     (i32.store8
      (i32.add
       (local.get $2)
       (i32.const 2)
      )
      (i32.load8_s
       (local.get $10)
      )
     )
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const 3)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (local.get $7)
      )
     )
    )
   )
  )
  (drop
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
  )
  (call $_png_set_PLTE
   (local.get $0)
   (local.get $1)
   (local.get $4)
   (local.get $7)
  )
  (if
   (i32.eqz
    (i32.and
     (i32.eq
      (i32.load8_s
       (local.get $8)
      )
      (i32.const 3)
     )
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.const 16)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (local.set $2
   (i32.and
    (local.get $7)
    (i32.const 65535)
   )
  )
  (if
   (i32.lt_u
    (local.tee $4
     (i32.and
      (local.get $7)
      (i32.const 65535)
     )
    )
    (i32.load16_u
     (local.tee $5
      (i32.add
       (local.get $0)
       (i32.const 374)
      )
     )
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 18713)
    )
    (i32.store16
     (local.get $5)
     (local.get $2)
    )
   )
  )
  (if
   (i32.ge_u
    (local.get $4)
    (i32.load16_u
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 22)
      )
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 18752)
  )
  (i32.store16
   (local.get $1)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_png_handle_IEND (; 133 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.ne
    (i32.and
     (local.tee $2
      (i32.load
       (local.tee $3
        (i32.add
         (local.get $0)
         (i32.const 196)
        )
       )
      )
     )
     (i32.const 5)
    )
    (i32.const 5)
   )
   (block
    (call $_png_error
     (local.get $0)
     (i32.const 18796)
    )
    (local.set $2
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.or
    (local.get $2)
    (i32.const 24)
   )
  )
  (if
   (local.get $1)
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 18813)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (drop
    (call $_png_crc_finish
     (local.get $0)
     (i32.const 0)
    )
   )
  )
 )
 (func $_png_handle_gAMA (; 134 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (local.tee $3
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block $do-once
    (if
     (i32.and
      (local.get $3)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 18866)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
    )
    (if
     (i32.and
      (local.get $3)
      (i32.const 2)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 18890)
      )
      (br $do-once)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.eq
       (i32.and
        (i32.load
         (i32.add
          (local.get $1)
          (i32.const 8)
         )
        )
        (i32.const 2049)
       )
       (i32.const 1)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 18914)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $4)
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 18841)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.const 4)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 18935)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (local.set $2
   (local.get $4)
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $3
    (i32.add
     (local.get $4)
     (i32.const 4)
    )
   )
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (local.tee $3
     (i32.or
      (i32.load8_u
       (i32.add
        (local.get $3)
        (i32.const 3)
       )
      )
      (i32.or
       (i32.or
        (i32.shl
         (i32.load8_u
          (local.get $3)
         )
         (i32.const 24)
        )
        (i32.shl
         (i32.load8_u
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.const 16)
        )
       )
       (i32.shl
        (i32.load8_u
         (i32.add
          (local.get $3)
          (i32.const 2)
         )
        )
        (i32.const 8)
       )
      )
     )
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 18963)
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (if
   (i32.and
    (i32.ne
     (i32.and
      (i32.load
       (i32.add
        (local.get $1)
        (i32.const 8)
       )
      )
      (i32.const 2048)
     )
     (i32.const 0)
    )
    (i32.gt_u
     (i32.add
      (local.get $3)
      (i32.const -45000)
     )
     (i32.const 1000)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 18996)
    )
    (local.set $0
     (i32.load
      (i32.const 16508)
     )
    )
    (i32.store
     (local.get $2)
     (local.get $3)
    )
    (call $_fprintf
     (local.get $0)
     (i32.const 19052)
     (local.get $2)
    )
    (global.set $STACKTOP
     (local.get $4)
    )
   )
   (block
    (f32.store
     (i32.add
      (local.get $0)
      (i32.const 440)
     )
     (local.tee $5
      (f32.div
       (f32.convert_i32_s
        (local.get $3)
       )
       (f32.const 1e5)
      )
     )
    )
    (call $_png_set_gAMA
     (local.get $0)
     (local.get $1)
     (f64.promote_f32
      (local.get $5)
     )
    )
    (call $_png_set_gAMA_fixed
     (local.get $0)
     (local.get $1)
     (local.get $3)
    )
    (global.set $STACKTOP
     (local.get $4)
    )
   )
  )
 )
 (func $_png_handle_sBIT (; 135 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $3
    (local.get $5)
   )
   (i32.const 0)
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block $do-once
    (if
     (i32.and
      (local.get $4)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 19098)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $5)
      )
      (return)
     )
    )
    (if
     (i32.and
      (local.get $4)
      (i32.const 2)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 19122)
      )
      (br $do-once)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 2)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 19146)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $5)
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 19073)
   )
  )
  (if
   (i32.ne
    (if (result i32)
     (i32.eq
      (i32.load8_s
       (local.tee $7
        (i32.add
         (local.get $0)
         (i32.const 386)
        )
       )
      )
      (i32.const 3)
     )
     (i32.const 3)
     (i32.load8_u
      (i32.add
       (local.get $0)
       (i32.const 390)
      )
     )
    )
    (local.get $2)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 19167)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 3)
   )
  )
  (local.set $8
   (i32.add
    (local.get $3)
    (i32.const 2)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.get $3)
   (local.get $2)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (local.get $2)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (local.set $2
   (i32.load8_s
    (local.get $3)
   )
  )
  (local.set $4
   (if (result i32)
    (i32.and
     (i32.load8_s
      (local.get $7)
     )
     (i32.const 2)
    )
    (block (result i32)
     (local.set $3
      (local.get $6)
     )
     (local.set $6
      (i32.load8_s
       (local.get $8)
      )
     )
     (i32.load8_s
      (local.get $4)
     )
    )
    (block (result i32)
     (i32.store8
      (i32.add
       (local.get $0)
       (i32.const 475)
      )
      (local.get $2)
     )
     (local.set $3
      (local.get $4)
     )
     (local.set $6
      (local.get $2)
     )
     (local.get $2)
    )
   )
  )
  (local.set $3
   (i32.load8_s
    (local.get $3)
   )
  )
  (i32.store8
   (local.tee $7
    (i32.add
     (local.get $0)
     (i32.const 472)
    )
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 473)
   )
   (local.get $4)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 474)
   )
   (local.get $6)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 476)
   )
   (local.get $3)
  )
  (call $_png_set_sBIT
   (local.get $0)
   (local.get $1)
   (local.get $7)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_png_handle_cHRM (; 136 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local $21 f32)
  (local $22 f32)
  (local $23 f32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (if
   (i32.and
    (local.tee $3
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block $do-once
    (if
     (i32.and
      (local.get $3)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 19220)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
    )
    (if
     (i32.and
      (local.get $3)
      (i32.const 2)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 19244)
      )
      (br $do-once)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.eq
       (i32.and
        (i32.load
         (i32.add
          (local.get $1)
          (i32.const 8)
         )
        )
        (i32.const 2052)
       )
       (i32.const 4)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 19269)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $4)
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 19195)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.const 32)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 19290)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (local.set $15
   (i32.add
    (local.get $4)
    (i32.const 32)
   )
  )
  (local.set $2
   (local.get $4)
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $3
    (i32.sub
     (local.get $4)
     (i32.const -64)
    )
   )
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (local.set $8
   (i32.or
    (i32.load8_u
     (local.tee $7
      (i32.add
       (local.get $3)
       (i32.const 3)
      )
     )
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (local.get $3)
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (local.tee $5
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (local.tee $6
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
      )
      (i32.const 8)
     )
    )
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (if
   (i32.or
    (i32.gt_u
     (i32.add
      (local.get $8)
      (local.tee $12
       (i32.or
        (i32.load8_u
         (local.get $7)
        )
        (i32.or
         (i32.or
          (i32.shl
           (i32.load8_u
            (local.get $3)
           )
           (i32.const 24)
          )
          (i32.shl
           (i32.load8_u
            (local.get $5)
           )
           (i32.const 16)
          )
         )
         (i32.shl
          (i32.load8_u
           (local.get $6)
          )
          (i32.const 8)
         )
        )
       )
      )
     )
     (i32.const 100000)
    )
    (i32.or
     (i32.gt_u
      (local.get $8)
      (i32.const 80000)
     )
     (i32.gt_u
      (local.get $12)
      (i32.const 80000)
     )
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 19318)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (i32.const 24)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (local.set $9
   (i32.or
    (i32.load8_u
     (local.get $7)
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (local.get $3)
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (local.get $5)
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (local.get $6)
      )
      (i32.const 8)
     )
    )
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (if
   (i32.or
    (i32.gt_u
     (i32.add
      (local.get $9)
      (local.tee $13
       (i32.or
        (i32.load8_u
         (local.get $7)
        )
        (i32.or
         (i32.or
          (i32.shl
           (i32.load8_u
            (local.get $3)
           )
           (i32.const 24)
          )
          (i32.shl
           (i32.load8_u
            (local.get $5)
           )
           (i32.const 16)
          )
         )
         (i32.shl
          (i32.load8_u
           (local.get $6)
          )
          (i32.const 8)
         )
        )
       )
      )
     )
     (i32.const 100000)
    )
    (i32.or
     (i32.gt_u
      (local.get $9)
      (i32.const 80000)
     )
     (i32.gt_u
      (local.get $13)
      (i32.const 80000)
     )
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 19343)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (i32.const 16)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (local.set $10
   (i32.or
    (i32.load8_u
     (local.get $7)
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (local.get $3)
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (local.get $5)
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (local.get $6)
      )
      (i32.const 8)
     )
    )
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (if
   (i32.or
    (i32.gt_u
     (i32.add
      (local.tee $14
       (i32.or
        (i32.load8_u
         (local.get $7)
        )
        (i32.or
         (i32.or
          (i32.shl
           (i32.load8_u
            (local.get $3)
           )
           (i32.const 24)
          )
          (i32.shl
           (i32.load8_u
            (local.get $5)
           )
           (i32.const 16)
          )
         )
         (i32.shl
          (i32.load8_u
           (local.get $6)
          )
          (i32.const 8)
         )
        )
       )
      )
      (local.get $10)
     )
     (i32.const 100000)
    )
    (i32.or
     (i32.gt_u
      (local.get $10)
      (i32.const 80000)
     )
     (i32.gt_u
      (local.get $14)
      (i32.const 80000)
     )
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 19366)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (i32.const 8)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (local.set $11
   (i32.or
    (i32.load8_u
     (local.get $7)
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (local.get $3)
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (local.get $5)
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (local.get $6)
      )
      (i32.const 8)
     )
    )
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (if
   (i32.or
    (i32.gt_u
     (i32.add
      (local.get $11)
      (local.tee $3
       (i32.or
        (i32.load8_u
         (local.get $7)
        )
        (i32.or
         (i32.or
          (i32.shl
           (i32.load8_u
            (local.get $3)
           )
           (i32.const 24)
          )
          (i32.shl
           (i32.load8_u
            (local.get $5)
           )
           (i32.const 16)
          )
         )
         (i32.shl
          (i32.load8_u
           (local.get $6)
          )
          (i32.const 8)
         )
        )
       )
      )
     )
     (i32.const 100000)
    )
    (i32.or
     (i32.gt_u
      (local.get $11)
      (i32.const 80000)
     )
     (i32.gt_u
      (local.get $3)
      (i32.const 80000)
     )
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 19391)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (i32.const 0)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (local.set $16
   (f32.div
    (f32.convert_i32_s
     (local.get $8)
    )
    (f32.const 1e5)
   )
  )
  (local.set $17
   (f32.div
    (f32.convert_i32_s
     (local.get $12)
    )
    (f32.const 1e5)
   )
  )
  (local.set $18
   (f32.div
    (f32.convert_i32_s
     (local.get $9)
    )
    (f32.const 1e5)
   )
  )
  (local.set $19
   (f32.div
    (f32.convert_i32_s
     (local.get $13)
    )
    (f32.const 1e5)
   )
  )
  (local.set $20
   (f32.div
    (f32.convert_i32_s
     (local.get $10)
    )
    (f32.const 1e5)
   )
  )
  (local.set $21
   (f32.div
    (f32.convert_i32_s
     (local.get $14)
    )
    (f32.const 1e5)
   )
  )
  (local.set $22
   (f32.div
    (f32.convert_i32_s
     (local.get $11)
    )
    (f32.const 1e5)
   )
  )
  (local.set $23
   (f32.div
    (f32.convert_i32_s
     (local.get $3)
    )
    (f32.const 1e5)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.const 2048)
    )
   )
   (block
    (call $_png_set_cHRM
     (local.get $0)
     (local.get $1)
     (f64.promote_f32
      (local.get $16)
     )
     (f64.promote_f32
      (local.get $17)
     )
     (f64.promote_f32
      (local.get $18)
     )
     (f64.promote_f32
      (local.get $19)
     )
     (f64.promote_f32
      (local.get $20)
     )
     (f64.promote_f32
      (local.get $21)
     )
     (f64.promote_f32
      (local.get $22)
     )
     (f64.promote_f32
      (local.get $23)
     )
    )
    (call $_png_set_cHRM_fixed
     (local.get $0)
     (local.get $1)
     (local.get $8)
     (local.get $12)
     (local.get $9)
     (local.get $13)
     (local.get $10)
     (local.get $14)
     (local.get $11)
     (local.get $3)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (i32.const 0)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.gt_s
      (select
       (i32.add
        (local.get $8)
        (i32.const -31270)
       )
       (i32.sub
        (i32.const 31270)
        (local.get $8)
       )
       (i32.gt_s
        (local.get $8)
        (i32.const 31269)
       )
      )
      (i32.const 1000)
     )
    )
    (br_if $__rjti$0
     (i32.gt_s
      (select
       (i32.add
        (local.get $12)
        (i32.const -32900)
       )
       (i32.sub
        (i32.const 32900)
        (local.get $12)
       )
       (i32.gt_s
        (local.get $12)
        (i32.const 32899)
       )
      )
      (i32.const 1000)
     )
    )
    (br_if $__rjti$0
     (i32.gt_s
      (select
       (i32.add
        (local.get $9)
        (i32.const -64000)
       )
       (i32.sub
        (i32.const 64000)
        (local.get $9)
       )
       (i32.gt_s
        (local.get $9)
        (i32.const 63999)
       )
      )
      (i32.const 1000)
     )
    )
    (br_if $__rjti$0
     (i32.gt_s
      (select
       (i32.add
        (local.get $13)
        (i32.const -33000)
       )
       (i32.sub
        (i32.const 33000)
        (local.get $13)
       )
       (i32.gt_s
        (local.get $13)
        (i32.const 32999)
       )
      )
      (i32.const 1000)
     )
    )
    (br_if $__rjti$0
     (i32.gt_s
      (select
       (i32.add
        (local.get $10)
        (i32.const -30000)
       )
       (i32.sub
        (i32.const 30000)
        (local.get $10)
       )
       (i32.gt_s
        (local.get $10)
        (i32.const 29999)
       )
      )
      (i32.const 1000)
     )
    )
    (br_if $__rjti$0
     (i32.gt_s
      (select
       (i32.add
        (local.get $14)
        (i32.const -60000)
       )
       (i32.sub
        (i32.const 60000)
        (local.get $14)
       )
       (i32.gt_s
        (local.get $14)
        (i32.const 59999)
       )
      )
      (i32.const 1000)
     )
    )
    (br_if $__rjti$0
     (i32.gt_s
      (select
       (i32.add
        (local.get $11)
        (i32.const -15000)
       )
       (i32.sub
        (i32.const 15000)
        (local.get $11)
       )
       (i32.gt_s
        (local.get $11)
        (i32.const 14999)
       )
      )
      (i32.const 1000)
     )
    )
    (br_if $__rjti$0
     (i32.gt_s
      (select
       (i32.add
        (local.get $3)
        (i32.const -6000)
       )
       (i32.sub
        (i32.const 6000)
        (local.get $3)
       )
       (i32.gt_s
        (local.get $3)
        (i32.const 5999)
       )
      )
      (i32.const 1000)
     )
    )
    (br $__rjto$0)
   )
   (call $_png_warning
    (local.get $0)
    (i32.const 19415)
   )
   (local.set $1
    (i32.load
     (i32.const 16508)
    )
   )
   (f64.store
    (local.get $2)
    (f64.promote_f32
     (local.get $16)
    )
   )
   (f64.store
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
    (f64.promote_f32
     (local.get $17)
    )
   )
   (f64.store
    (i32.add
     (local.get $2)
     (i32.const 16)
    )
    (f64.promote_f32
     (local.get $18)
    )
   )
   (f64.store
    (i32.add
     (local.get $2)
     (i32.const 24)
    )
    (f64.promote_f32
     (local.get $19)
    )
   )
   (call $_fprintf
    (local.get $1)
    (i32.const 19471)
    (local.get $2)
   )
   (f64.store
    (local.get $15)
    (f64.promote_f32
     (local.get $20)
    )
   )
   (f64.store
    (i32.add
     (local.get $15)
     (i32.const 8)
    )
    (f64.promote_f32
     (local.get $21)
    )
   )
   (f64.store
    (i32.add
     (local.get $15)
     (i32.const 16)
    )
    (f64.promote_f32
     (local.get $22)
    )
   )
   (f64.store
    (i32.add
     (local.get $15)
     (i32.const 24)
    )
    (f64.promote_f32
     (local.get $23)
    )
   )
   (call $_fprintf
    (local.get $1)
    (i32.const 19499)
    (local.get $15)
   )
  )
  (drop
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_png_handle_sRGB (; 137 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block $do-once
    (if
     (i32.and
      (local.get $4)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 19552)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return)
     )
    )
    (if
     (i32.and
      (local.get $4)
      (i32.const 2)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 19576)
      )
      (br $do-once)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 2048)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 19600)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $3)
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 19527)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.const 1)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 19621)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (local.set $4
   (local.get $3)
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $2
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (i32.const 1)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $2)
   (i32.const 1)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (if
   (i32.gt_s
    (local.tee $5
     (i32.load8_u
      (local.get $2)
     )
    )
    (i32.const 3)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 19649)
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (if
   (i32.and
    (local.tee $2
     (i32.load
      (local.tee $6
       (i32.add
        (local.get $1)
        (i32.const 8)
       )
      )
     )
    )
    (i32.const 1)
   )
   (if
    (i32.gt_u
     (i32.add
      (i32.load
       (i32.add
        (local.get $1)
        (i32.const 252)
       )
      )
      (i32.const -45000)
     )
     (i32.const 1000)
    )
    (block
     (call $_png_warning
      (local.get $0)
      (i32.const 18996)
     )
     (local.set $2
      (i32.load
       (i32.const 16508)
      )
     )
     (i32.store
      (local.get $4)
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 656)
       )
      )
     )
     (call $_fprintf
      (local.get $2)
      (i32.const 19669)
      (local.get $4)
     )
     (local.set $2
      (i32.load
       (local.get $6)
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 4)
   )
   (block $do-once0
    (if
     (i32.le_s
      (select
       (i32.add
        (local.tee $2
         (i32.load
          (i32.add
           (local.get $1)
           (i32.const 256)
          )
         )
        )
        (i32.const -31270)
       )
       (i32.sub
        (i32.const 31270)
        (local.get $2)
       )
       (i32.gt_s
        (local.get $2)
        (i32.const 31269)
       )
      )
      (i32.const 1000)
     )
     (if
      (i32.le_s
       (select
        (i32.add
         (local.tee $2
          (i32.load
           (i32.add
            (local.get $1)
            (i32.const 260)
           )
          )
         )
         (i32.const -32900)
        )
        (i32.sub
         (i32.const 32900)
         (local.get $2)
        )
        (i32.gt_s
         (local.get $2)
         (i32.const 32899)
        )
       )
       (i32.const 1000)
      )
      (if
       (i32.le_s
        (select
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $1)
             (i32.const 264)
            )
           )
          )
          (i32.const -64000)
         )
         (i32.sub
          (i32.const 64000)
          (local.get $2)
         )
         (i32.gt_s
          (local.get $2)
          (i32.const 63999)
         )
        )
        (i32.const 1000)
       )
       (if
        (i32.le_s
         (select
          (i32.add
           (local.tee $2
            (i32.load
             (i32.add
              (local.get $1)
              (i32.const 268)
             )
            )
           )
           (i32.const -33000)
          )
          (i32.sub
           (i32.const 33000)
           (local.get $2)
          )
          (i32.gt_s
           (local.get $2)
           (i32.const 32999)
          )
         )
         (i32.const 1000)
        )
        (if
         (i32.le_s
          (select
           (i32.add
            (local.tee $2
             (i32.load
              (i32.add
               (local.get $1)
               (i32.const 272)
              )
             )
            )
            (i32.const -30000)
           )
           (i32.sub
            (i32.const 30000)
            (local.get $2)
           )
           (i32.gt_s
            (local.get $2)
            (i32.const 29999)
           )
          )
          (i32.const 1000)
         )
         (if
          (i32.le_s
           (select
            (i32.add
             (local.tee $2
              (i32.load
               (i32.add
                (local.get $1)
                (i32.const 276)
               )
              )
             )
             (i32.const -60000)
            )
            (i32.sub
             (i32.const 60000)
             (local.get $2)
            )
            (i32.gt_s
             (local.get $2)
             (i32.const 59999)
            )
           )
           (i32.const 1000)
          )
          (if
           (i32.le_s
            (select
             (i32.add
              (local.tee $2
               (i32.load
                (i32.add
                 (local.get $1)
                 (i32.const 280)
                )
               )
              )
              (i32.const -15000)
             )
             (i32.sub
              (i32.const 15000)
              (local.get $2)
             )
             (i32.gt_s
              (local.get $2)
              (i32.const 14999)
             )
            )
            (i32.const 1000)
           )
           (br_if $do-once0
            (i32.le_s
             (select
              (i32.add
               (local.tee $2
                (i32.load
                 (i32.add
                  (local.get $1)
                  (i32.const 284)
                 )
                )
               )
               (i32.const -6000)
              )
              (i32.sub
               (i32.const 6000)
               (local.get $2)
              )
              (i32.gt_s
               (local.get $2)
               (i32.const 5999)
              )
             )
             (i32.const 1000)
            )
           )
          )
         )
        )
       )
      )
     )
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 19415)
    )
   )
  )
  (call $_png_set_sRGB_gAMA_and_cHRM
   (local.get $0)
   (local.get $1)
   (local.get $5)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_png_handle_iCCP (; 138 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (local.tee $3
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block $do-once
    (if
     (i32.and
      (local.get $3)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 19723)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $6)
      )
      (return)
     )
    )
    (if
     (i32.and
      (local.get $3)
      (i32.const 2)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 19747)
      )
      (br $do-once)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 4096)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 19771)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $6)
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 19698)
   )
  )
  (local.set $7
   (local.get $6)
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $4
    (call $_png_malloc
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
   )
   (local.get $2)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $4)
   (local.get $2)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (i32.store8
   (local.tee $8
    (i32.add
     (local.get $2)
     (local.get $4)
    )
   )
   (i32.const 0)
  )
  (local.set $3
   (local.get $4)
  )
  (loop $while-in
   (local.set $5
    (i32.add
     (local.get $3)
     (i32.const 1)
    )
   )
   (if
    (i32.load8_s
     (local.get $3)
    )
    (block
     (local.set $3
      (local.get $5)
     )
     (br $while-in)
    )
   )
  )
  (if
   (i32.ge_u
    (local.get $5)
    (local.get $8)
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $4)
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 19792)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (if
   (i32.load8_s
    (local.get $5)
   )
   (call $_png_warning
    (local.get $0)
    (i32.const 19813)
   )
  )
  (local.set $2
   (call $_png_decompress_chunk
    (local.get $0)
    (local.get $4)
    (local.get $2)
    (local.tee $5
     (i32.sub
      (i32.add
       (local.get $3)
       (i32.const 2)
      )
      (local.get $4)
     )
    )
    (local.get $7)
   )
  )
  (local.set $3
   (i32.sub
    (local.tee $4
     (i32.load
      (local.get $7)
     )
    )
    (local.get $5)
   )
  )
  (if
   (i32.or
    (i32.lt_u
     (local.get $4)
     (local.get $5)
    )
    (i32.lt_u
     (local.get $3)
     (i32.const 4)
    )
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $2)
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 19861)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (if
   (i32.gt_u
    (local.tee $4
     (i32.or
      (i32.or
       (i32.or
        (i32.shl
         (i32.load8_u
          (local.tee $5
           (i32.add
            (local.get $2)
            (local.get $5)
           )
          )
         )
         (i32.const 24)
        )
        (i32.shl
         (i32.load8_u
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (i32.const 16)
        )
       )
       (i32.shl
        (i32.load8_u
         (i32.add
          (local.get $5)
          (i32.const 2)
         )
        )
        (i32.const 8)
       )
      )
      (i32.load8_u
       (i32.add
        (local.get $5)
        (i32.const 3)
       )
      )
     )
    )
    (local.get $3)
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $2)
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 19904)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
   )
   (block
    (call $_png_set_iCCP
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (i32.const 0)
     (local.get $5)
     (select
      (local.get $4)
      (local.get $3)
      (i32.lt_u
       (local.get $4)
       (local.get $3)
      )
     )
    )
    (call $_png_free
     (local.get $0)
     (local.get $2)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
   )
  )
 )
 (func $_png_handle_sPLT (; 139 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (local.tee $3
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (if
    (i32.and
     (local.get $3)
     (i32.const 4)
    )
    (block
     (call $_png_warning
      (local.get $0)
      (i32.const 19963)
     )
     (drop
      (call $_png_crc_finish
       (local.get $0)
       (local.get $2)
      )
     )
     (global.set $STACKTOP
      (local.get $7)
     )
     (return)
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 19938)
   )
  )
  (local.set $8
   (local.get $7)
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $6
    (call $_png_malloc
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
   )
   (local.get $2)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $6)
   (local.get $2)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $6)
    )
    (global.set $STACKTOP
     (local.get $7)
    )
    (return)
   )
  )
  (i32.store8
   (local.tee $5
    (i32.add
     (local.get $2)
     (local.get $6)
    )
   )
   (i32.const 0)
  )
  (local.set $3
   (local.get $6)
  )
  (loop $while-in
   (local.set $4
    (i32.add
     (local.get $3)
     (i32.const 1)
    )
   )
   (if
    (i32.load8_s
     (local.get $3)
    )
    (block
     (local.set $3
      (local.get $4)
     )
     (br $while-in)
    )
   )
  )
  (if
   (i32.gt_u
    (local.get $4)
    (local.get $5)
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $6)
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 19987)
    )
    (global.set $STACKTOP
     (local.get $7)
    )
    (return)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 4)
   )
   (local.tee $4
    (i32.load8_s
     (local.get $4)
    )
   )
  )
  (local.set $2
   (i32.div_s
    (local.tee $5
     (i32.add
      (local.get $2)
      (i32.sub
       (local.get $6)
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
      )
     )
    )
    (local.tee $4
     (select
      (i32.const 6)
      (i32.const 10)
      (local.tee $10
       (i32.eq
        (local.get $4)
        (i32.const 8)
       )
      )
     )
    )
   )
  )
  (if
   (i32.sub
    (local.get $5)
    (i32.mul
     (local.get $2)
     (local.get $4)
    )
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $6)
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 20008)
    )
    (global.set $STACKTOP
     (local.get $7)
    )
    (return)
   )
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $8)
     (i32.const 12)
    )
   )
   (local.get $2)
  )
  (local.set $4
   (call $_png_malloc
    (local.get $0)
    (i32.mul
     (local.get $2)
     (i32.const 10)
    )
   )
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $8)
     (i32.const 8)
    )
   )
   (local.get $4)
  )
  (if
   (i32.gt_s
    (local.get $2)
    (i32.const 0)
   )
   (block $label$break$L22
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in1
     (local.set $5
      (i32.add
       (i32.mul
        (local.get $2)
        (i32.const 10)
       )
       (local.get $4)
      )
     )
     (i32.store16
      (i32.add
       (i32.add
        (i32.mul
         (local.get $2)
         (i32.const 10)
        )
        (local.get $4)
       )
       (i32.const 6)
      )
      (if (result i32)
       (local.get $10)
       (block (result i32)
        (i32.store16
         (local.get $5)
         (i32.load8_u
          (local.get $3)
         )
        )
        (i32.store16
         (i32.add
          (i32.add
           (i32.mul
            (local.get $2)
            (i32.const 10)
           )
           (local.get $4)
          )
          (i32.const 2)
         )
         (i32.load8_u
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
        )
        (i32.store16
         (i32.add
          (i32.add
           (i32.mul
            (local.get $2)
            (i32.const 10)
           )
           (local.get $4)
          )
          (i32.const 4)
         )
         (i32.load8_u
          (i32.add
           (local.get $3)
           (i32.const 2)
          )
         )
        )
        (local.set $5
         (i32.add
          (local.get $3)
          (i32.const 4)
         )
        )
        (i32.load8_u
         (i32.add
          (local.get $3)
          (i32.const 3)
         )
        )
       )
       (block (result i32)
        (i32.store16
         (local.get $5)
         (i32.or
          (i32.load8_u
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (i32.shl
           (i32.load8_u
            (local.get $3)
           )
           (i32.const 8)
          )
         )
        )
        (i32.store16
         (i32.add
          (i32.add
           (i32.mul
            (local.get $2)
            (i32.const 10)
           )
           (local.get $4)
          )
          (i32.const 2)
         )
         (i32.or
          (i32.load8_u
           (i32.add
            (local.get $3)
            (i32.const 3)
           )
          )
          (i32.shl
           (i32.load8_u
            (i32.add
             (local.get $3)
             (i32.const 2)
            )
           )
           (i32.const 8)
          )
         )
        )
        (i32.store16
         (i32.add
          (i32.add
           (i32.mul
            (local.get $2)
            (i32.const 10)
           )
           (local.get $4)
          )
          (i32.const 4)
         )
         (i32.or
          (i32.load8_u
           (i32.add
            (local.get $3)
            (i32.const 5)
           )
          )
          (i32.shl
           (i32.load8_u
            (i32.add
             (local.get $3)
             (i32.const 4)
            )
           )
           (i32.const 8)
          )
         )
        )
        (local.set $5
         (i32.add
          (local.get $3)
          (i32.const 8)
         )
        )
        (i32.or
         (i32.load8_u
          (i32.add
           (local.get $3)
           (i32.const 7)
          )
         )
         (i32.shl
          (i32.load8_u
           (i32.add
            (local.get $3)
            (i32.const 6)
           )
          )
          (i32.const 8)
         )
        )
       )
      )
     )
     (i32.store16
      (i32.add
       (i32.add
        (i32.mul
         (local.get $2)
         (i32.const 10)
        )
        (local.get $4)
       )
       (i32.const 8)
      )
      (i32.or
       (i32.load8_u
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (i32.shl
        (i32.load8_u
         (local.get $5)
        )
        (i32.const 8)
       )
      )
     )
     (br_if $label$break$L22
      (i32.ge_s
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.load
        (local.get $11)
       )
      )
     )
     (local.set $3
      (i32.add
       (local.get $5)
       (i32.const 2)
      )
     )
     (local.set $4
      (i32.load
       (local.get $9)
      )
     )
     (br $while-in1)
    )
   )
  )
  (i32.store
   (local.get $8)
   (local.get $6)
  )
  (call $_png_set_sPLT
   (local.get $0)
   (local.get $1)
   (local.get $8)
  )
  (call $_png_free
   (local.get $0)
   (local.get $6)
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (local.get $9)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_png_handle_tRNS (; 140 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 272)
   )
  )
  (if
   (i32.and
    (local.tee $5
     (i32.load
      (local.tee $6
       (i32.add
        (local.get $0)
        (i32.const 196)
       )
      )
     )
    )
    (i32.const 1)
   )
   (block
    (if
     (i32.and
      (local.get $5)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 20059)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 16)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 20083)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $4)
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 20034)
   )
  )
  (local.set $5
   (local.get $4)
  )
  (local.set $3
   (i32.add
    (local.get $4)
    (i32.const 256)
   )
  )
  (block $label$break$L12
   (block $switch-default
    (block $switch-case1
     (block $switch-case0
      (block $switch-case
       (br_table $switch-case1 $switch-default $switch-case0 $switch-case $switch-default
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 386)
         )
        )
       )
      )
      (if
       (i32.and
        (i32.load
         (local.get $6)
        )
        (i32.const 2)
       )
       (if
        (i32.lt_u
         (i32.load16_u
          (i32.add
           (local.get $0)
           (i32.const 372)
          )
         )
         (local.get $2)
        )
        (block
         (call $_png_warning
          (local.get $0)
          (i32.const 20129)
         )
         (drop
          (call $_png_crc_finish
           (local.get $0)
           (local.get $2)
          )
         )
         (global.set $STACKTOP
          (local.get $4)
         )
         (return)
        )
       )
       (call $_png_warning
        (local.get $0)
        (i32.const 20104)
       )
      )
      (if
       (local.get $2)
       (block
        (call $_png_read_data
         (local.get $0)
         (local.get $5)
         (local.get $2)
        )
        (call $_png_calculate_crc
         (local.get $0)
         (local.get $5)
         (local.get $2)
        )
        (i32.store16
         (i32.add
          (local.get $0)
          (i32.const 374)
         )
         (local.get $2)
        )
        (br $label$break$L12)
       )
      )
      (call $_png_warning
       (local.get $0)
       (i32.const 20157)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (i32.const 0)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
     (if
      (i32.eq
       (local.get $2)
       (i32.const 6)
      )
      (block
       (call $_png_read_data
        (local.get $0)
        (local.get $3)
        (i32.const 6)
       )
       (call $_png_calculate_crc
        (local.get $0)
        (local.get $3)
        (i32.const 6)
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 374)
        )
        (i32.const 1)
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 490)
        )
        (i32.or
         (i32.load8_u
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.shl
          (i32.load8_u
           (local.get $3)
          )
          (i32.const 8)
         )
        )
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 492)
        )
        (i32.or
         (i32.load8_u
          (i32.add
           (local.get $3)
           (i32.const 3)
          )
         )
         (i32.shl
          (i32.load8_u
           (i32.add
            (local.get $3)
            (i32.const 2)
           )
          )
          (i32.const 8)
         )
        )
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 494)
        )
        (i32.or
         (i32.load8_u
          (i32.add
           (local.get $3)
           (i32.const 5)
          )
         )
         (i32.shl
          (i32.load8_u
           (i32.add
            (local.get $3)
            (i32.const 4)
           )
          )
          (i32.const 8)
         )
        )
       )
       (br $label$break$L12)
      )
     )
     (call $_png_warning
      (local.get $0)
      (i32.const 20129)
     )
     (drop
      (call $_png_crc_finish
       (local.get $0)
       (local.get $2)
      )
     )
     (global.set $STACKTOP
      (local.get $4)
     )
     (return)
    )
    (if
     (i32.eq
      (local.get $2)
      (i32.const 2)
     )
     (block
      (call $_png_read_data
       (local.get $0)
       (local.get $3)
       (i32.const 2)
      )
      (call $_png_calculate_crc
       (local.get $0)
       (local.get $3)
       (i32.const 2)
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 374)
       )
       (i32.const 1)
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 496)
       )
       (i32.or
        (i32.load8_u
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (i32.shl
         (i32.load8_u
          (local.get $3)
         )
         (i32.const 8)
        )
       )
      )
      (br $label$break$L12)
     )
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 20129)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
   (call $_png_warning
    (local.get $0)
    (i32.const 20180)
   )
   (drop
    (call $_png_crc_finish
     (local.get $0)
     (local.get $2)
    )
   )
   (global.set $STACKTOP
    (local.get $4)
   )
   (return)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (call $_png_set_tRNS
   (local.get $0)
   (local.get $1)
   (local.get $5)
   (i32.load16_u
    (i32.add
     (local.get $0)
     (i32.const 374)
    )
   )
   (i32.add
    (local.get $0)
    (i32.const 488)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_png_handle_bKGD (; 141 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (local.tee $6
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block
    (if
     (i32.and
      (local.get $6)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 20247)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
    )
    (if
     (i32.and
      (i32.eqz
       (i32.and
        (local.get $6)
        (i32.const 2)
       )
      )
      (i32.eq
       (local.tee $3
        (i32.load8_s
         (local.tee $5
          (i32.add
           (local.get $0)
           (i32.const 386)
          )
         )
        )
       )
       (i32.const 3)
      )
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 20271)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 32)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 20296)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $4)
       )
       (return)
      )
     )
    )
   )
   (block
    (call $_png_error
     (local.get $0)
     (i32.const 20222)
    )
    (local.set $5
     (local.tee $3
      (i32.add
       (local.get $0)
       (i32.const 386)
      )
     )
    )
    (local.set $3
     (i32.load8_s
      (local.get $3)
     )
    )
   )
  )
  (if
   (i32.ne
    (select
     (i32.const 1)
     (i32.or
      (i32.and
       (i32.shl
        (local.get $3)
        (i32.const 1)
       )
       (i32.const 4)
      )
      (i32.const 2)
     )
     (i32.eq
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
      (i32.const 3)
     )
    )
    (local.get $2)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 20317)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $3
    (local.get $4)
   )
   (local.get $2)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (local.get $2)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (if
   (i32.eq
    (local.tee $5
     (i32.load8_s
      (local.get $5)
     )
    )
    (i32.const 3)
   )
   (block $do-once
    (i32.store8
     (i32.add
      (local.get $0)
      (i32.const 404)
     )
     (local.tee $2
      (i32.load8_s
       (local.get $3)
      )
     )
    )
    (if
     (local.tee $3
      (i32.load16_s
       (i32.add
        (local.get $1)
        (i32.const 20)
       )
      )
     )
     (block
      (if
       (i32.le_u
        (local.tee $2
         (i32.and
          (local.get $2)
          (i32.const 255)
         )
        )
        (i32.and
         (local.get $3)
         (i32.const 65535)
        )
       )
       (block
        (i32.store16
         (i32.add
          (local.get $0)
          (i32.const 406)
         )
         (i32.load8_u
          (i32.add
           (local.tee $3
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 368)
             )
            )
           )
           (i32.mul
            (local.get $2)
            (i32.const 3)
           )
          )
         )
        )
        (i32.store16
         (i32.add
          (local.get $0)
          (i32.const 408)
         )
         (i32.load8_u
          (i32.add
           (i32.add
            (i32.mul
             (local.get $2)
             (i32.const 3)
            )
            (local.get $3)
           )
           (i32.const 1)
          )
         )
        )
        (i32.store16
         (i32.add
          (local.get $0)
          (i32.const 410)
         )
         (i32.load8_u
          (i32.add
           (i32.add
            (i32.mul
             (local.get $2)
             (i32.const 3)
            )
            (local.get $3)
           )
           (i32.const 2)
          )
         )
        )
        (br $do-once)
       )
      )
      (call $_png_warning
       (local.get $0)
       (i32.const 20345)
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
    )
   )
   (block
    (local.set $2
     (i32.or
      (i32.load8_u
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (i32.shl
       (i32.load8_u
        (local.get $3)
       )
       (i32.const 8)
      )
     )
    )
    (if
     (i32.and
      (local.get $5)
      (i32.const 2)
     )
     (block
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 406)
       )
       (local.get $2)
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 408)
       )
       (i32.or
        (i32.load8_u
         (i32.add
          (local.get $3)
          (i32.const 3)
         )
        )
        (i32.shl
         (i32.load8_u
          (i32.add
           (local.get $3)
           (i32.const 2)
          )
         )
         (i32.const 8)
        )
       )
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 410)
       )
       (i32.or
        (i32.load8_u
         (i32.add
          (local.get $3)
          (i32.const 5)
         )
        )
        (i32.shl
         (i32.load8_u
          (i32.add
           (local.get $3)
           (i32.const 4)
          )
         )
         (i32.const 8)
        )
       )
      )
     )
     (block
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 412)
       )
       (local.get $2)
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 410)
       )
       (local.get $2)
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 408)
       )
       (local.get $2)
      )
      (i32.store16
       (i32.add
        (local.get $0)
        (i32.const 406)
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (call $_png_set_bKGD
   (local.get $0)
   (local.get $1)
   (i32.add
    (local.get $0)
    (i32.const 404)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_png_handle_hIST (; 142 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 528)
   )
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block
    (if
     (i32.and
      (local.get $4)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 20403)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (local.get $4)
       (i32.const 2)
      )
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 20427)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 64)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 20452)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $3)
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 20378)
   )
  )
  (if
   (i32.ne
    (local.tee $6
     (i32.div_s
      (local.get $2)
      (i32.const 2)
     )
    )
    (i32.load16_u
     (i32.add
      (local.get $0)
      (i32.const 372)
     )
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 20473)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (local.set $4
   (local.get $3)
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 512)
   )
  )
  (if
   (i32.gt_s
    (local.get $2)
    (i32.const 1)
   )
   (block
    (local.set $7
     (i32.add
      (local.get $5)
      (i32.const 1)
     )
    )
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in
     (call $_png_read_data
      (local.get $0)
      (local.get $5)
      (i32.const 2)
     )
     (call $_png_calculate_crc
      (local.get $0)
      (local.get $5)
      (i32.const 2)
     )
     (i32.store16
      (i32.add
       (i32.shl
        (local.get $2)
        (i32.const 1)
       )
       (local.get $4)
      )
      (i32.or
       (i32.load8_u
        (local.get $7)
       )
       (i32.shl
        (i32.load8_u
         (local.get $5)
        )
        (i32.const 8)
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.get $6)
      )
     )
    )
   )
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (call $_png_set_hIST
   (local.get $0)
   (local.get $1)
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_png_handle_pHYs (; 143 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block
    (if
     (i32.and
      (local.get $4)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 20526)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 128)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 20550)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $3)
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 20501)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.const 9)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 20571)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $2
    (local.get $3)
   )
   (i32.const 9)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $2)
   (i32.const 9)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (call $_png_set_pHYs
   (local.get $0)
   (local.get $1)
   (i32.or
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.const 3)
     )
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (local.get $2)
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (i32.add
        (local.get $2)
        (i32.const 2)
       )
      )
      (i32.const 8)
     )
    )
   )
   (i32.or
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.const 7)
     )
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 4)
        )
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 5)
        )
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (i32.add
        (local.get $2)
        (i32.const 6)
       )
      )
      (i32.const 8)
     )
    )
   )
   (i32.load8_u
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_png_handle_oFFs (; 144 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block
    (if
     (i32.and
      (local.get $4)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 20624)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 256)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 20648)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $3)
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 20599)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.const 9)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 20669)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $2
    (local.get $3)
   )
   (i32.const 9)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $2)
   (i32.const 9)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (call $_png_set_oFFs
   (local.get $0)
   (local.get $1)
   (i32.or
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.const 3)
     )
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (local.get $2)
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (i32.add
        (local.get $2)
        (i32.const 2)
       )
      )
      (i32.const 8)
     )
    )
   )
   (i32.or
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.const 7)
     )
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 4)
        )
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 5)
        )
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (i32.add
        (local.get $2)
        (i32.const 6)
       )
      )
      (i32.const 8)
     )
    )
   )
   (i32.load8_u
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_png_handle_pCAL (; 145 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (if
   (i32.and
    (local.tee $3
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block
    (if
     (i32.and
      (local.get $3)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 20722)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (return)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 1024)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 20746)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 20697)
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $4
    (call $_png_malloc
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
   )
   (local.get $2)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $4)
   (local.get $2)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $4)
    )
    (return)
   )
  )
  (i32.store8
   (local.tee $7
    (i32.add
     (local.get $2)
     (local.get $4)
    )
   )
   (i32.const 0)
  )
  (local.set $2
   (local.get $4)
  )
  (loop $while-in
   (local.set $3
    (i32.add
     (local.get $2)
     (i32.const 1)
    )
   )
   (if
    (i32.load8_s
     (local.get $2)
    )
    (block
     (local.set $2
      (local.get $3)
     )
     (br $while-in)
    )
   )
  )
  (if
   (i32.le_u
    (local.get $7)
    (i32.add
     (local.get $2)
     (i32.const 12)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 20767)
    )
    (call $_png_free
     (local.get $0)
     (local.get $4)
    )
    (return)
   )
  )
  (local.set $10
   (i32.or
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.const 4)
     )
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (local.get $3)
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 2)
        )
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (i32.add
        (local.get $2)
        (i32.const 3)
       )
      )
      (i32.const 8)
     )
    )
   )
  )
  (local.set $11
   (i32.or
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.const 8)
     )
    )
    (i32.or
     (i32.or
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 5)
        )
       )
       (i32.const 24)
      )
      (i32.shl
       (i32.load8_u
        (i32.add
         (local.get $2)
         (i32.const 6)
        )
       )
       (i32.const 16)
      )
     )
     (i32.shl
      (i32.load8_u
       (i32.add
        (local.get $2)
        (i32.const 7)
       )
      )
      (i32.const 8)
     )
    )
   )
  )
  (local.set $8
   (i32.add
    (local.get $2)
    (i32.const 11)
   )
  )
  (local.set $12
   (i32.and
    (local.tee $3
     (i32.load8_s
      (i32.add
       (local.get $2)
       (i32.const 9)
      )
     )
    )
    (i32.const 255)
   )
  )
  (if
   (i32.or
    (local.get $3)
    (i32.eq
     (local.tee $5
      (i32.load8_s
       (i32.add
        (local.get $2)
        (i32.const 10)
       )
      )
     )
     (i32.const 2)
    )
   )
   (if
    (if (result i32)
     (i32.eq
      (local.get $5)
      (i32.const 3)
     )
     (i32.const 1)
     (i32.gt_s
      (i32.and
       (i32.shr_s
        (i32.shl
         (i32.add
          (local.get $3)
          (i32.const -1)
         )
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.const 255)
      )
      (i32.const 1)
     )
    )
    (if
     (i32.or
      (i32.eq
       (local.get $5)
       (i32.const 4)
      )
      (i32.ne
       (local.get $3)
       (i32.const 3)
      )
     )
     (block
      (if
       (i32.gt_s
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
        (i32.const 3)
       )
       (call $_png_warning
        (local.get $0)
        (i32.const 23795)
       )
      )
      (local.set $2
       (local.get $8)
      )
      (loop $while-in1
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (if
        (i32.load8_s
         (local.get $2)
        )
        (block
         (local.set $2
          (local.get $3)
         )
         (br $while-in1)
        )
       )
      )
      (local.set $6
       (call $_png_malloc
        (local.get $0)
        (i32.shl
         (local.tee $9
          (i32.and
           (local.get $5)
           (i32.const 255)
          )
         )
         (i32.const 2)
        )
       )
      )
      (if
       (local.get $5)
       (block $label$break$L33
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in3
         (block $while-out2
          (i32.store
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 2)
            )
            (local.get $6)
           )
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
          )
          (loop $while-in5
           (local.set $5
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (if
            (i32.eqz
             (i32.or
              (local.tee $13
               (i32.gt_u
                (local.get $2)
                (local.get $7)
               )
              )
              (i32.eqz
               (i32.load8_s
                (local.get $2)
               )
              )
             )
            )
            (block
             (local.set $2
              (local.get $5)
             )
             (br $while-in5)
            )
           )
          )
          (br_if $while-out2
           (local.get $13)
          )
          (br_if $while-in3
           (i32.lt_u
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $9)
           )
          )
          (br $label$break$L33)
         )
        )
        (call $_png_warning
         (local.get $0)
         (i32.const 20767)
        )
        (call $_png_free
         (local.get $0)
         (local.get $4)
        )
        (call $_png_free
         (local.get $0)
         (local.get $6)
        )
        (return)
       )
      )
      (call $_png_set_pCAL
       (local.get $0)
       (local.get $1)
       (local.get $4)
       (local.get $10)
       (local.get $11)
       (local.get $12)
       (local.get $9)
       (local.get $8)
       (local.get $6)
      )
      (call $_png_free
       (local.get $0)
       (local.get $4)
      )
      (call $_png_free
       (local.get $0)
       (local.get $6)
      )
      (return)
     )
    )
   )
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 20785)
  )
  (call $_png_free
   (local.get $0)
   (local.get $4)
  )
 )
 (func $_png_handle_sCAL (; 146 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (local.tee $5
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1)
   )
   (block
    (if
     (i32.and
      (local.get $5)
      (i32.const 4)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 20852)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return)
     )
    )
    (if
     (local.get $1)
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.const 16384)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 20876)
       )
       (drop
        (call $_png_crc_finish
         (local.get $0)
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $3)
       )
       (return)
      )
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 20827)
   )
  )
  (local.set $6
   (local.get $3)
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $4
    (call $_png_malloc
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
   )
   (local.get $2)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $4)
   (local.get $2)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (i32.store8
   (local.tee $9
    (i32.add
     (local.get $2)
     (local.get $4)
    )
   )
   (i32.const 0)
  )
  (local.set $7
   (call $_strtod
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
    (local.get $6)
   )
  )
  (if
   (i32.load8_s
    (i32.load
     (local.get $6)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 20897)
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (local.set $2
   (local.get $4)
  )
  (loop $while-in
   (local.set $5
    (i32.add
     (local.get $2)
     (i32.const 1)
    )
   )
   (if
    (i32.load8_s
     (local.get $2)
    )
    (block
     (local.set $2
      (local.get $5)
     )
     (br $while-in)
    )
   )
  )
  (local.set $8
   (call $_strtod
    (local.get $5)
    (local.get $6)
   )
  )
  (if
   (i32.load8_s
    (i32.load
     (local.get $6)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 20934)
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (if
   (i32.or
    (i32.or
     (i32.lt_u
      (local.get $9)
      (local.get $5)
     )
     (f64.le
      (local.get $7)
      (f64.const 0)
     )
    )
    (f64.le
     (local.get $8)
     (f64.const 0)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 20972)
    )
    (call $_png_free
     (local.get $0)
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $3)
    )
   )
   (block
    (call $_png_set_sCAL
     (local.get $0)
     (local.get $1)
     (i32.load8_s
      (local.get $4)
     )
     (local.get $7)
     (local.get $8)
    )
    (call $_png_free
     (local.get $0)
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $3)
    )
   )
  )
 )
 (func $_png_handle_tIME (; 147 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.and
    (local.tee $3
     (i32.load
      (local.tee $5
       (i32.add
        (local.get $0)
        (i32.const 196)
       )
      )
     )
    )
    (i32.const 1)
   )
   (if
    (local.get $1)
    (if
     (i32.and
      (i32.load
       (i32.add
        (local.get $1)
        (i32.const 8)
       )
      )
      (i32.const 512)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 21014)
      )
      (drop
       (call $_png_crc_finish
        (local.get $0)
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
    )
   )
   (block
    (call $_png_error
     (local.get $0)
     (i32.const 20990)
    )
    (local.set $3
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $3)
    (i32.const 4)
   )
   (i32.store
    (local.get $5)
    (i32.or
     (local.get $3)
     (i32.const 8)
    )
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.const 7)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 21035)
    )
    (drop
     (call $_png_crc_finish
      (local.get $0)
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (call $_png_read_data
   (local.get $0)
   (local.tee $3
    (i32.add
     (local.tee $2
      (local.get $4)
     )
     (i32.const 8)
    )
   )
   (i32.const 7)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $3)
   (i32.const 7)
  )
  (if
   (call $_png_crc_finish
    (local.get $0)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.const 6)
   )
   (i32.load8_s
    (i32.add
     (local.get $3)
     (i32.const 6)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.const 5)
   )
   (i32.load8_s
    (i32.add
     (local.get $3)
     (i32.const 5)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.const 4)
   )
   (i32.load8_s
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.const 3)
   )
   (i32.load8_s
    (i32.add
     (local.get $3)
     (i32.const 3)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.const 2)
   )
   (i32.load8_s
    (i32.add
     (local.get $3)
     (i32.const 2)
    )
   )
  )
  (i32.store16
   (local.get $2)
   (i32.or
    (i32.load8_u
     (i32.add
      (local.get $3)
      (i32.const 1)
     )
    )
    (i32.shl
     (i32.load8_u
      (local.get $3)
     )
     (i32.const 8)
    )
   )
  )
  (call $_png_set_tIME
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_png_check_chunk_name (; 148 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (if
   (i32.eqz
    (if (result i32)
     (i32.gt_s
      (i32.and
       (i32.shr_s
        (i32.shl
         (i32.add
          (local.tee $2
           (i32.load8_s
            (local.get $1)
           )
          )
          (i32.const -41)
         )
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.const 255)
      )
      (i32.const 81)
     )
     (i32.const 1)
     (i32.lt_s
      (i32.and
       (i32.shr_s
        (i32.shl
         (i32.add
          (local.get $2)
          (i32.const -91)
         )
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.const 255)
      )
      (i32.const 6)
     )
    )
   )
   (if
    (i32.eqz
     (if (result i32)
      (i32.gt_s
       (i32.and
        (i32.shr_s
         (i32.shl
          (i32.add
           (local.tee $2
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
           (i32.const -41)
          )
          (i32.const 24)
         )
         (i32.const 24)
        )
        (i32.const 255)
       )
       (i32.const 81)
      )
      (i32.const 1)
      (i32.lt_s
       (i32.and
        (i32.shr_s
         (i32.shl
          (i32.add
           (local.get $2)
           (i32.const -91)
          )
          (i32.const 24)
         )
         (i32.const 24)
        )
        (i32.const 255)
       )
       (i32.const 6)
      )
     )
    )
    (if
     (i32.eqz
      (if (result i32)
       (i32.gt_s
        (i32.and
         (i32.shr_s
          (i32.shl
           (i32.add
            (local.tee $2
             (i32.load8_s
              (i32.add
               (local.get $1)
               (i32.const 2)
              )
             )
            )
            (i32.const -41)
           )
           (i32.const 24)
          )
          (i32.const 24)
         )
         (i32.const 255)
        )
        (i32.const 81)
       )
       (i32.const 1)
       (i32.lt_s
        (i32.and
         (i32.shr_s
          (i32.shl
           (i32.add
            (local.get $2)
            (i32.const -91)
           )
           (i32.const 24)
          )
          (i32.const 24)
         )
         (i32.const 255)
        )
        (i32.const 6)
       )
      )
     )
     (if
      (i32.eqz
       (if (result i32)
        (i32.gt_s
         (i32.and
          (i32.shr_s
           (i32.shl
            (i32.add
             (local.tee $1
              (i32.load8_s
               (i32.add
                (local.get $1)
                (i32.const 3)
               )
              )
             )
             (i32.const -41)
            )
            (i32.const 24)
           )
           (i32.const 24)
          )
          (i32.const 255)
         )
         (i32.const 81)
        )
        (i32.const 1)
        (i32.lt_s
         (i32.and
          (i32.shr_s
           (i32.shl
            (i32.add
             (local.get $1)
             (i32.const -91)
            )
            (i32.const 24)
           )
           (i32.const 24)
          )
          (i32.const 255)
         )
         (i32.const 6)
        )
       )
      )
      (return)
     )
    )
   )
  )
  (call $_png_chunk_error
   (local.get $0)
   (i32.const 21063)
  )
 )
 (func $_png_do_read_interlace (; 149 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $15
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $5
   (local.get $15)
  )
  (local.set $6
   (i32.add
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 328)
     )
    )
    (i32.const 1)
   )
  )
  (local.set $1
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 204)
    )
   )
  )
  (local.set $10
   (i32.mul
    (local.tee $3
     (i32.load
      (local.tee $13
       (i32.add
        (local.get $0)
        (i32.const 348)
       )
      )
     )
    )
    (local.tee $12
     (i32.load
      (i32.add
       (i32.shl
        (i32.load8_u
         (i32.add
          (local.get $0)
          (i32.const 384)
         )
        )
        (i32.const 2)
       )
       (i32.const 1440)
      )
     )
    )
   )
  )
  (block $label$break$L1
   (block $switch-default
    (block $switch-case11
     (block $switch-case6
      (block $switch-case
       (br_table $switch-case $switch-case6 $switch-default $switch-case11 $switch-default
        (i32.sub
         (local.tee $2
          (i32.load8_s
           (local.tee $16
            (i32.add
             (local.get $0)
             (i32.const 359)
            )
           )
          )
         )
         (i32.const 1)
        )
       )
      )
      (local.set $4
       (i32.and
        (i32.add
         (local.get $3)
         (i32.const 7)
        )
        (i32.const 7)
       )
      )
      (local.set $1
       (if (result i32)
        (i32.and
         (local.get $1)
         (i32.const 65536)
        )
        (block (result i32)
         (local.set $7
          (i32.const 7)
         )
         (local.set $11
          (i32.const -1)
         )
         (i32.and
          (i32.add
           (local.get $10)
           (i32.const 7)
          )
          (i32.const 7)
         )
        )
        (block (result i32)
         (local.set $4
          (i32.xor
           (local.get $4)
           (i32.const 7)
          )
         )
         (local.set $9
          (i32.const 7)
         )
         (local.set $11
          (i32.const 1)
         )
         (i32.xor
          (i32.and
           (i32.add
            (local.get $10)
            (i32.const 7)
           )
           (i32.const 7)
          )
          (i32.const 7)
         )
        )
       )
      )
      (local.set $8
       (i32.add
        (i32.shr_u
         (i32.add
          (local.get $3)
          (i32.const -1)
         )
         (i32.const 3)
        )
        (local.get $6)
       )
      )
      (local.set $2
       (i32.add
        (i32.shr_u
         (i32.add
          (local.get $10)
          (i32.const -1)
         )
         (i32.const 3)
        )
        (local.get $6)
       )
      )
      (if
       (i32.and
        (i32.ne
         (local.get $3)
         (i32.const 0)
        )
        (i32.gt_s
         (local.get $12)
         (i32.const 0)
        )
       )
       (block
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in
         (local.set $6
          (i32.and
           (i32.shr_u
            (i32.load8_u
             (local.get $8)
            )
            (local.get $4)
           )
           (i32.const 1)
          )
         )
         (local.set $5
          (i32.const 0)
         )
         (loop $while-in1
          (i32.store8
           (local.get $2)
           (i32.or
            (i32.and
             (i32.load8_u
              (local.get $2)
             )
             (i32.shr_u
              (i32.const 32639)
              (i32.sub
               (i32.const 7)
               (local.get $1)
              )
             )
            )
            (i32.shl
             (local.get $6)
             (local.get $1)
            )
           )
          )
          (local.set $1
           (select
            (local.get $7)
            (i32.add
             (local.get $1)
             (local.get $11)
            )
            (local.tee $14
             (i32.eq
              (local.get $1)
              (local.get $9)
             )
            )
           )
          )
          (local.set $2
           (select
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
            (local.get $2)
            (local.get $14)
           )
          )
          (br_if $while-in1
           (i32.ne
            (local.tee $5
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.get $12)
           )
          )
         )
         (local.set $4
          (select
           (local.get $7)
           (i32.add
            (local.get $4)
            (local.get $11)
           )
           (local.tee $5
            (i32.eq
             (local.get $4)
             (local.get $9)
            )
           )
          )
         )
         (local.set $8
          (select
           (i32.add
            (local.get $8)
            (i32.const -1)
           )
           (local.get $8)
           (local.get $5)
          )
         )
         (br_if $while-in
          (i32.lt_u
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (i32.load
            (local.get $13)
           )
          )
         )
        )
       )
      )
      (br $label$break$L1)
     )
     (local.set $4
      (i32.and
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 1)
        )
        (i32.const 6)
       )
       (i32.const 6)
      )
     )
     (local.set $1
      (if (result i32)
       (i32.and
        (local.get $1)
        (i32.const 65536)
       )
       (block (result i32)
        (local.set $7
         (i32.const -2)
        )
        (local.set $11
         (i32.const 6)
        )
        (i32.and
         (i32.add
          (i32.shl
           (local.get $10)
           (i32.const 1)
          )
          (i32.const 6)
         )
         (i32.const 6)
        )
       )
       (block (result i32)
        (local.set $7
         (i32.const 2)
        )
        (local.set $9
         (i32.const 6)
        )
        (local.set $4
         (i32.xor
          (local.get $4)
          (i32.const 6)
         )
        )
        (i32.xor
         (i32.and
          (i32.add
           (i32.shl
            (local.get $10)
            (i32.const 1)
           )
           (i32.const 6)
          )
          (i32.const 6)
         )
         (i32.const 6)
        )
       )
      )
     )
     (local.set $8
      (i32.add
       (local.get $6)
       (i32.shr_u
        (i32.add
         (local.get $3)
         (i32.const -1)
        )
        (i32.const 2)
       )
      )
     )
     (local.set $2
      (i32.add
       (local.get $6)
       (i32.shr_u
        (i32.add
         (local.get $10)
         (i32.const -1)
        )
        (i32.const 2)
       )
      )
     )
     (if
      (i32.and
       (i32.ne
        (local.get $3)
        (i32.const 0)
       )
       (i32.gt_s
        (local.get $12)
        (i32.const 0)
       )
      )
      (block
       (local.set $3
        (i32.const 0)
       )
       (loop $while-in3
        (local.set $6
         (i32.and
          (i32.shr_u
           (i32.load8_u
            (local.get $8)
           )
           (local.get $4)
          )
          (i32.const 3)
         )
        )
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in5
         (i32.store8
          (local.get $2)
          (i32.or
           (i32.and
            (i32.load8_u
             (local.get $2)
            )
            (i32.shr_u
             (i32.const 16191)
             (i32.sub
              (i32.const 6)
              (local.get $1)
             )
            )
           )
           (i32.shl
            (local.get $6)
            (local.get $1)
           )
          )
         )
         (local.set $2
          (select
           (i32.add
            (local.get $2)
            (i32.const -1)
           )
           (local.get $2)
           (local.tee $14
            (i32.eq
             (local.get $1)
             (local.get $9)
            )
           )
          )
         )
         (local.set $1
          (select
           (local.get $11)
           (i32.add
            (local.get $1)
            (local.get $7)
           )
           (local.get $14)
          )
         )
         (br_if $while-in5
          (i32.ne
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (local.get $12)
          )
         )
        )
        (local.set $8
         (select
          (i32.add
           (local.get $8)
           (i32.const -1)
          )
          (local.get $8)
          (local.tee $5
           (i32.eq
            (local.get $4)
            (local.get $9)
           )
          )
         )
        )
        (local.set $4
         (select
          (local.get $11)
          (i32.add
           (local.get $4)
           (local.get $7)
          )
          (local.get $5)
         )
        )
        (br_if $while-in3
         (i32.lt_u
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (i32.load
           (local.get $13)
          )
         )
        )
       )
      )
     )
     (br $label$break$L1)
    )
    (local.set $2
     (i32.and
      (local.get $3)
      (i32.const 1)
     )
    )
    (local.set $1
     (if (result i32)
      (i32.and
       (local.get $1)
       (i32.const 65536)
      )
      (block (result i32)
       (local.set $7
        (i32.const -4)
       )
       (local.set $11
        (i32.const 4)
       )
       (local.set $4
        (i32.xor
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.xor
        (i32.and
         (local.get $10)
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
      (block (result i32)
       (local.set $7
        (i32.const 4)
       )
       (local.set $9
        (i32.const 4)
       )
       (local.set $4
        (local.get $2)
       )
       (i32.and
        (local.get $10)
        (i32.const 1)
       )
      )
     )
    )
    (local.set $8
     (i32.add
      (i32.shr_u
       (i32.add
        (local.get $3)
        (i32.const -1)
       )
       (i32.const 1)
      )
      (local.get $6)
     )
    )
    (local.set $2
     (i32.add
      (i32.shr_u
       (i32.add
        (local.get $10)
        (i32.const -1)
       )
       (i32.const 1)
      )
      (local.get $6)
     )
    )
    (if
     (i32.and
      (i32.ne
       (local.get $3)
       (i32.const 0)
      )
      (i32.gt_s
       (local.get $12)
       (i32.const 0)
      )
     )
     (block
      (local.set $3
       (i32.const 0)
      )
      (local.set $1
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
      )
      (local.set $4
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
      )
      (loop $while-in8
       (local.set $6
        (i32.and
         (i32.shr_u
          (i32.load8_u
           (local.get $8)
          )
          (local.get $4)
         )
         (i32.const 15)
        )
       )
       (local.set $5
        (i32.const 0)
       )
       (loop $while-in10
        (i32.store8
         (local.get $2)
         (i32.or
          (i32.and
           (i32.load8_u
            (local.get $2)
           )
           (i32.shr_u
            (i32.const 3855)
            (i32.sub
             (i32.const 4)
             (local.get $1)
            )
           )
          )
          (i32.shl
           (local.get $6)
           (local.get $1)
          )
         )
        )
        (local.set $2
         (select
          (i32.add
           (local.get $2)
           (i32.const -1)
          )
          (local.get $2)
          (local.tee $14
           (i32.eq
            (local.get $1)
            (local.get $9)
           )
          )
         )
        )
        (local.set $1
         (select
          (local.get $11)
          (i32.add
           (local.get $1)
           (local.get $7)
          )
          (local.get $14)
         )
        )
        (br_if $while-in10
         (i32.ne
          (local.tee $5
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
          (local.get $12)
         )
        )
       )
       (local.set $8
        (select
         (i32.add
          (local.get $8)
          (i32.const -1)
         )
         (local.get $8)
         (local.tee $5
          (i32.eq
           (local.get $4)
           (local.get $9)
          )
         )
        )
       )
       (local.set $4
        (select
         (local.get $11)
         (i32.add
          (local.get $4)
          (local.get $7)
         )
         (local.get $5)
        )
       )
       (br_if $while-in8
        (i32.lt_u
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.load
          (local.get $13)
         )
        )
       )
      )
     )
    )
    (br $label$break$L1)
   )
   (local.set $1
    (i32.add
     (i32.mul
      (local.tee $7
       (i32.shr_u
        (i32.and
         (local.get $2)
         (i32.const 255)
        )
        (i32.const 3)
       )
      )
      (i32.add
       (local.get $3)
       (i32.const -1)
      )
     )
     (local.get $6)
    )
   )
   (local.set $2
    (i32.add
     (i32.mul
      (local.get $7)
      (i32.add
       (local.get $10)
       (i32.const -1)
      )
     )
     (local.get $6)
    )
   )
   (if
    (local.get $3)
    (block
     (local.set $6
      (i32.sub
       (i32.const 0)
       (local.get $7)
      )
     )
     (if
      (i32.le_s
       (local.get $12)
       (i32.const 0)
      )
      (block
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in13
        (drop
         (call $_memcpy
          (local.get $5)
          (local.get $1)
          (local.get $7)
         )
        )
        (br_if $label$break$L1
         (i32.ge_u
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (local.get $3)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (local.get $6)
         )
        )
        (br $while-in13)
       )
      )
     )
     (local.set $9
      (i32.sub
       (i32.const 0)
       (i32.mul
        (local.get $7)
        (local.get $12)
       )
      )
     )
     (loop $while-in15
      (drop
       (call $_memcpy
        (local.get $5)
        (local.get $1)
        (local.get $7)
       )
      )
      (local.set $3
       (i32.const 0)
      )
      (local.set $8
       (local.get $2)
      )
      (loop $while-in17
       (drop
        (call $_memcpy
         (local.get $8)
         (local.get $5)
         (local.get $7)
        )
       )
       (local.set $8
        (i32.add
         (local.get $6)
         (local.get $8)
        )
       )
       (br_if $while-in17
        (i32.ne
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.get $12)
        )
       )
      )
      (local.set $2
       (i32.add
        (local.get $2)
        (local.get $9)
       )
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (local.get $6)
       )
      )
      (br_if $while-in15
       (i32.lt_u
        (local.tee $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (i32.load
         (local.get $13)
        )
       )
      )
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $10)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 352)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (local.get $10)
      (i32.load8_u
       (local.get $16)
      )
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
  (global.set $STACKTOP
   (local.get $15)
  )
 )
 (func $_png_read_filter_row (; 150 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (block $switch-default
   (block $switch-case13
    (block $switch-case12
     (block $switch-case7
      (block $switch-case2
       (block $switch-case
        (br_table $switch-case13 $switch-case $switch-case2 $switch-case7 $switch-case12 $switch-default
         (local.get $4)
        )
       )
       (if
        (i32.ge_u
         (local.tee $0
          (i32.shr_u
           (i32.add
            (i32.load8_u
             (i32.add
              (local.get $1)
              (i32.const 11)
             )
            )
            (i32.const 7)
           )
           (i32.const 3)
          )
         )
         (local.tee $4
          (i32.load
           (i32.add
            (local.get $1)
            (i32.const 4)
           )
          )
         )
        )
        (return)
       )
       (local.set $1
        (i32.add
         (local.get $0)
         (local.get $2)
        )
       )
       (loop $while-in
        (local.set $3
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $1)
         (i32.add
          (i32.load8_u
           (local.get $1)
          )
          (i32.load8_u
           (local.get $2)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (if
         (i32.ne
          (local.get $4)
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
         )
         (block
          (local.set $2
           (local.get $3)
          )
          (br $while-in)
         )
        )
       )
       (return)
      )
      (if
       (i32.eqz
        (local.tee $4
         (i32.load
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
        )
       )
       (return)
      )
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in1
       (local.set $1
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $2)
        (i32.add
         (i32.load8_u
          (local.get $2)
         )
         (i32.load8_u
          (local.get $3)
         )
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (if
        (i32.ne
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (local.get $4)
        )
        (block
         (local.set $3
          (local.get $1)
         )
         (br $while-in1)
        )
       )
      )
      (return)
     )
     (local.set $6
      (i32.load
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
     )
     (local.set $0
      (if (result i32)
       (local.tee $5
        (i32.shr_u
         (i32.add
          (i32.load8_u
           (i32.add
            (local.get $1)
            (i32.const 11)
           )
          )
          (i32.const 7)
         )
         (i32.const 3)
        )
       )
       (block (result i32)
        (local.set $7
         (i32.add
          (local.get $3)
          (local.get $5)
         )
        )
        (local.set $1
         (i32.const 0)
        )
        (local.set $0
         (local.get $2)
        )
        (loop $while-in4
         (local.set $4
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $0)
          (i32.add
           (i32.load8_u
            (local.get $0)
           )
           (i32.shr_u
            (i32.load8_u
             (local.get $3)
            )
            (i32.const 1)
           )
          )
         )
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (if
          (i32.ne
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.get $5)
          )
          (block
           (local.set $3
            (local.get $4)
           )
           (br $while-in4)
          )
         )
        )
        (local.set $3
         (local.get $7)
        )
        (i32.add
         (local.get $2)
         (local.get $5)
        )
       )
       (local.get $2)
      )
     )
     (if
      (i32.eqz
       (local.tee $5
        (i32.sub
         (local.get $6)
         (local.get $5)
        )
       )
      )
      (return)
     )
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in6
      (local.set $4
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (local.set $7
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $0)
       (i32.add
        (i32.load8_u
         (local.get $0)
        )
        (i32.shr_u
         (i32.add
          (i32.load8_u
           (local.get $3)
          )
          (i32.load8_u
           (local.get $2)
          )
         )
         (i32.const 1)
        )
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (if
       (i32.ne
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.get $5)
       )
       (block
        (local.set $2
         (local.get $7)
        )
        (local.set $3
         (local.get $4)
        )
        (br $while-in6)
       )
      )
     )
     (return)
    )
    (local.set $8
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
    )
    (local.set $0
     (if (result i32)
      (local.tee $6
       (i32.shr_u
        (i32.add
         (i32.load8_u
          (i32.add
           (local.get $1)
           (i32.const 11)
          )
         )
         (i32.const 7)
        )
        (i32.const 3)
       )
      )
      (block (result i32)
       (local.set $5
        (i32.add
         (local.get $3)
         (local.get $6)
        )
       )
       (local.set $1
        (local.get $3)
       )
       (local.set $0
        (local.get $2)
       )
       (local.set $4
        (i32.const 0)
       )
       (loop $while-in9
        (local.set $7
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $0)
         (i32.add
          (i32.load8_u
           (local.get $0)
          )
          (i32.load8_u
           (local.get $1)
          )
         )
        )
        (local.set $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (if
         (i32.ne
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.get $6)
         )
         (block
          (local.set $1
           (local.get $7)
          )
          (br $while-in9)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $2)
         (local.get $6)
        )
       )
       (local.get $5)
      )
      (block (result i32)
       (local.set $4
        (local.get $2)
       )
       (local.get $3)
      )
     )
    )
    (if
     (i32.eqz
      (local.tee $8
       (i32.sub
        (local.get $8)
        (local.get $6)
       )
      )
     )
     (return)
    )
    (local.set $1
     (local.get $0)
    )
    (local.set $0
     (local.get $4)
    )
    (local.set $4
     (i32.const 0)
    )
    (loop $while-in11
     (local.set $7
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $6
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.sub
       (local.tee $9
        (i32.load8_u
         (local.get $1)
        )
       )
       (local.tee $3
        (i32.load8_u
         (local.get $3)
        )
       )
      )
     )
     (i32.store8
      (local.get $0)
      (i32.add
       (i32.load8_u
        (local.get $0)
       )
       (select
        (select
         (local.get $3)
         (local.get $9)
         (i32.gt_s
          (local.tee $3
           (select
            (i32.sub
             (i32.const 0)
             (local.tee $2
              (i32.sub
               (local.tee $9
                (i32.load8_u
                 (local.get $2)
                )
               )
               (local.get $3)
              )
             )
            )
            (local.get $2)
            (i32.lt_s
             (local.get $2)
             (i32.const 0)
            )
           )
          )
          (local.tee $2
           (select
            (i32.sub
             (i32.const 0)
             (local.tee $2
              (i32.add
               (local.get $1)
               (local.get $2)
              )
             )
            )
            (local.get $2)
            (i32.lt_s
             (local.get $2)
             (i32.const 0)
            )
           )
          )
         )
        )
        (local.get $9)
        (i32.or
         (i32.gt_s
          (local.tee $1
           (select
            (i32.sub
             (i32.const 0)
             (local.get $1)
            )
            (local.get $1)
            (i32.lt_s
             (local.get $1)
             (i32.const 0)
            )
           )
          )
          (local.get $3)
         )
         (i32.gt_s
          (local.get $1)
          (local.get $2)
         )
        )
       )
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (if
      (i32.ne
       (local.get $8)
       (local.tee $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
      )
      (block
       (local.set $3
        (local.get $6)
       )
       (local.set $2
        (local.get $7)
       )
       (local.set $1
        (local.get $5)
       )
       (br $while-in11)
      )
     )
    )
    (return)
   )
   (return)
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 21082)
  )
  (i32.store8
   (local.get $2)
   (i32.const 0)
  )
 )
 (func $_png_read_start_row (; 151 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 212)
   )
   (i32.const 0)
  )
  (call $_png_init_read_transformations
   (local.get $0)
  )
  (if
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.const 383)
    )
   )
   (block
    (local.set $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 296)
      )
     )
    )
    (if
     (i32.eqz
      (i32.and
       (local.tee $3
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 204)
         )
        )
       )
       (i32.const 2)
      )
     )
     (local.set $1
      (i32.div_u
       (i32.sub
        (i32.add
         (local.tee $2
          (i32.load
           (i32.const 1504)
          )
         )
         (i32.add
          (local.get $1)
          (i32.const -1)
         )
        )
        (i32.load
         (i32.const 1472)
        )
       )
       (local.get $2)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 300)
     )
     (local.get $1)
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 316)
     )
     (local.tee $1
      (i32.div_u
       (i32.sub
        (i32.add
         (local.tee $4
          (i32.load
           (i32.add
            (i32.shl
             (local.tee $1
              (i32.load8_u
               (i32.add
                (local.get $0)
                (i32.const 384)
               )
              )
             )
             (i32.const 2)
            )
            (i32.const 1440)
           )
          )
         )
         (i32.add
          (local.tee $2
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 292)
            )
           )
          )
          (i32.const -1)
         )
        )
        (i32.load
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (i32.const 1408)
         )
        )
       )
       (local.get $4)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 312)
     )
     (i32.add
      (i32.shr_u
       (i32.add
        (i32.mul
         (local.get $1)
         (local.tee $1
          (i32.load8_u
           (i32.add
            (local.get $0)
            (i32.const 389)
           )
          )
         )
        )
        (i32.const 7)
       )
       (i32.const 3)
      )
      (i32.const 1)
     )
    )
   )
   (block
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 300)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 296)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 316)
     )
     (local.tee $2
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 292)
       )
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 312)
     )
     (i32.add
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 308)
       )
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load8_u
      (i32.add
       (local.get $0)
       (i32.const 389)
      )
     )
    )
    (local.set $3
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 204)
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $3)
    (i32.const 4)
   )
   (local.set $1
    (select
     (i32.const 8)
     (local.get $1)
     (i32.lt_s
      (i32.load8_u
       (i32.add
        (local.get $0)
        (i32.const 387)
       )
      )
      (i32.const 8)
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $4
     (i32.eqz
      (i32.and
       (local.get $3)
       (i32.const 4096)
      )
     )
    )
   )
   (block $label$break$L11
    (block $switch-case1
     (block $switch-case0
      (block $switch-case
       (br_table $switch-case0 $label$break$L11 $switch-case1 $switch-case $label$break$L11
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 386)
         )
        )
       )
      )
      (local.set $1
       (select
        (i32.const 32)
        (i32.const 24)
        (i32.load16_s
         (i32.add
          (local.get $0)
          (i32.const 374)
         )
        )
       )
      )
      (br $label$break$L11)
     )
     (local.set $1
      (i32.shl
       (select
        (local.get $1)
        (i32.const 8)
        (i32.gt_u
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.ne
        (i32.load16_s
         (i32.add
          (local.get $0)
          (i32.const 374)
         )
        )
        (i32.const 0)
       )
      )
     )
     (br $label$break$L11)
    )
    (br_if $label$break$L11
     (i32.eqz
      (i32.load16_s
       (i32.add
        (local.get $0)
        (i32.const 374)
       )
      )
     )
    )
    (local.set $1
     (i32.div_u
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (i32.const 3)
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $5
     (i32.eqz
      (i32.and
       (local.get $3)
       (i32.const 32768)
      )
     )
    )
   )
   (block $label$break$L19
    (block $switch-case6
     (block $switch-case5
      (block $switch-case4
       (br_table $switch-case5 $label$break$L19 $switch-case6 $switch-case4 $label$break$L19
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 386)
         )
        )
       )
      )
      (local.set $1
       (i32.const 32)
      )
      (br $label$break$L19)
     )
     (local.set $1
      (select
       (i32.const 16)
       (i32.const 32)
       (i32.lt_s
        (local.get $1)
        (i32.const 9)
       )
      )
     )
     (br $label$break$L19)
    )
    (local.set $1
     (select
      (i32.const 32)
      (i32.const 64)
      (i32.lt_s
       (local.get $1)
       (i32.const 33)
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $3)
    (i32.const 16384)
   )
   (local.set $1
    (block $do-once (result i32)
     (if
      (i32.and
       (local.get $5)
       (i32.or
        (local.get $4)
        (i32.eqz
         (i32.load16_s
          (i32.add
           (local.get $0)
           (i32.const 374)
          )
         )
        )
       )
      )
      (if
       (i32.ne
        (local.tee $4
         (i32.load8_s
          (i32.add
           (local.get $0)
           (i32.const 386)
          )
         )
        )
        (i32.const 4)
       )
       (block
        (local.set $4
         (i32.eq
          (local.get $4)
          (i32.const 6)
         )
        )
        (drop
         (br_if $do-once
          (select
           (i32.const 32)
           (i32.const 24)
           (local.get $4)
          )
          (i32.lt_s
           (local.get $1)
           (i32.const 9)
          )
         )
        )
        (br $do-once
         (select
          (i32.const 64)
          (i32.const 48)
          (local.get $4)
         )
        )
       )
      )
     )
     (select
      (i32.const 32)
      (i32.const 64)
      (i32.lt_s
       (local.get $1)
       (i32.const 17)
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $3)
     (i32.const 1048576)
    )
   )
   (block
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 684)
     )
     (local.tee $1
      (call $_png_malloc
       (local.get $0)
       (i32.add
        (i32.add
         (i32.shr_s
          (i32.add
           (local.get $1)
           (i32.const 7)
          )
          (i32.const 3)
         )
         (i32.const 65)
        )
        (i32.shr_u
         (i32.mul
          (local.get $1)
          (i32.and
           (i32.add
            (local.get $2)
            (i32.const 7)
           )
           (i32.const -8)
          )
         )
         (i32.const 3)
        )
       )
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 328)
     )
     (i32.add
      (local.get $1)
      (i32.const 32)
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 324)
     )
     (local.tee $2
      (call $_png_malloc
       (local.get $0)
       (i32.add
        (i32.load
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 308)
          )
         )
        )
        (i32.const 1)
       )
      )
     )
    )
    (call $_png_memset_check
     (local.get $2)
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.or
      (i32.load
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 200)
        )
       )
      )
      (i32.const 64)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $1)
    )
    (return)
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 684)
   )
   (local.tee $1
    (call $_png_malloc
     (local.get $0)
     (i32.add
      (i32.shr_u
       (i32.mul
        (local.tee $1
         (select
          (local.tee $3
           (i32.mul
            (i32.load8_u
             (i32.add
              (local.get $0)
              (i32.const 192)
             )
            )
            (i32.load8_u
             (i32.add
              (local.get $0)
              (i32.const 193)
             )
            )
           )
          )
          (local.get $1)
          (i32.gt_s
           (local.get $3)
           (local.get $1)
          )
         )
        )
        (i32.and
         (i32.add
          (local.get $2)
          (i32.const 7)
         )
         (i32.const -8)
        )
       )
       (i32.const 3)
      )
      (i32.add
       (i32.shr_s
        (i32.add
         (local.get $1)
         (i32.const 7)
        )
        (i32.const 3)
       )
       (i32.const 65)
      )
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 328)
   )
   (i32.add
    (local.get $1)
    (i32.const 32)
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 324)
   )
   (local.tee $2
    (call $_png_malloc
     (local.get $0)
     (i32.add
      (i32.load
       (local.tee $1
        (i32.add
         (local.get $0)
         (i32.const 308)
        )
       )
      )
      (i32.const 1)
     )
    )
   )
  )
  (call $_png_memset_check
   (local.get $2)
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 1)
   )
  )
  (local.set $1
   (i32.or
    (i32.load
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 200)
      )
     )
    )
    (i32.const 64)
   )
  )
  (i32.store
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_png_set_bKGD (; 152 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (i64.store align=2
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 90)
    )
   )
   (i64.load align=2
    (local.get $2)
   )
  )
  (i32.store16 offset=8
   (local.get $0)
   (i32.load16_s offset=8
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 32)
   )
  )
 )
 (func $_png_set_cHRM (; 153 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (param $9 f64)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (if
   (i32.or
    (i32.or
     (i32.or
      (i32.or
       (i32.or
        (i32.or
         (i32.or
          (f64.lt
           (local.get $2)
           (f64.const 0)
          )
          (f64.lt
           (local.get $3)
           (f64.const 0)
          )
         )
         (f64.lt
          (local.get $4)
          (f64.const 0)
         )
        )
        (f64.lt
         (local.get $5)
         (f64.const 0)
        )
       )
       (f64.lt
        (local.get $6)
        (f64.const 0)
       )
      )
      (f64.lt
       (local.get $7)
       (f64.const 0)
      )
     )
     (f64.lt
      (local.get $8)
      (f64.const 0)
     )
    )
    (f64.lt
     (local.get $9)
     (f64.const 0)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 21116)
    )
    (return)
   )
  )
  (if
   (i32.or
    (i32.or
     (i32.or
      (i32.or
       (i32.or
        (i32.or
         (i32.or
          (f64.gt
           (local.get $2)
           (f64.const 21474.83)
          )
          (f64.gt
           (local.get $3)
           (f64.const 21474.83)
          )
         )
         (f64.gt
          (local.get $4)
          (f64.const 21474.83)
         )
        )
        (f64.gt
         (local.get $5)
         (f64.const 21474.83)
        )
       )
       (f64.gt
        (local.get $6)
        (f64.const 21474.83)
       )
      )
      (f64.gt
       (local.get $7)
       (f64.const 21474.83)
      )
     )
     (f64.gt
      (local.get $8)
      (f64.const 21474.83)
     )
    )
    (f64.gt
     (local.get $9)
     (f64.const 21474.83)
    )
   )
   (call $_png_warning
    (local.get $0)
    (i32.const 21168)
   )
   (block
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 128)
     )
     (f32.demote_f64
      (local.get $2)
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 132)
     )
     (f32.demote_f64
      (local.get $3)
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 136)
     )
     (f32.demote_f64
      (local.get $4)
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 140)
     )
     (f32.demote_f64
      (local.get $5)
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 144)
     )
     (f32.demote_f64
      (local.get $6)
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 148)
     )
     (f32.demote_f64
      (local.get $7)
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 152)
     )
     (f32.demote_f64
      (local.get $8)
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 156)
     )
     (f32.demote_f64
      (local.get $9)
     )
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 256)
     )
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (local.get $2)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 260)
     )
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (local.get $3)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 264)
     )
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (local.get $4)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 268)
     )
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (local.get $5)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 272)
     )
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (local.get $6)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 276)
     )
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (local.get $7)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 280)
     )
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (local.get $8)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 284)
     )
     (i32.trunc_f64_s
      (f64.add
       (f64.mul
        (local.get $9)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.or
      (i32.load
       (local.get $0)
      )
      (i32.const 4)
     )
    )
   )
  )
 )
 (func $_png_set_cHRM_fixed (; 154 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (if
   (i32.lt_s
    (i32.or
     (local.get $9)
     (i32.or
      (local.get $8)
      (i32.or
       (local.get $7)
       (i32.or
        (local.get $6)
        (i32.or
         (local.get $5)
         (i32.or
          (local.get $4)
          (i32.or
           (local.get $2)
           (local.get $3)
          )
         )
        )
       )
      )
     )
    )
    (i32.const 0)
   )
   (call $_png_warning
    (local.get $0)
    (i32.const 21116)
   )
   (block
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 256)
     )
     (local.get $2)
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 260)
     )
     (local.get $3)
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 264)
     )
     (local.get $4)
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 268)
     )
     (local.get $5)
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 272)
     )
     (local.get $6)
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 276)
     )
     (local.get $7)
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 280)
     )
     (local.get $8)
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 284)
     )
     (local.get $9)
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 128)
     )
     (f32.demote_f64
      (f64.div
       (f64.convert_i32_s
        (local.get $2)
       )
       (f64.const 1e5)
      )
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 132)
     )
     (f32.demote_f64
      (f64.div
       (f64.convert_i32_s
        (local.get $3)
       )
       (f64.const 1e5)
      )
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 136)
     )
     (f32.demote_f64
      (f64.div
       (f64.convert_i32_s
        (local.get $4)
       )
       (f64.const 1e5)
      )
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 140)
     )
     (f32.demote_f64
      (f64.div
       (f64.convert_i32_s
        (local.get $5)
       )
       (f64.const 1e5)
      )
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 144)
     )
     (f32.demote_f64
      (f64.div
       (f64.convert_i32_s
        (local.get $6)
       )
       (f64.const 1e5)
      )
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 148)
     )
     (f32.demote_f64
      (f64.div
       (f64.convert_i32_s
        (local.get $7)
       )
       (f64.const 1e5)
      )
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 152)
     )
     (f32.demote_f64
      (f64.div
       (f64.convert_i32_s
        (local.get $8)
       )
       (f64.const 1e5)
      )
     )
    )
    (f32.store
     (i32.add
      (local.get $1)
      (i32.const 156)
     )
     (f32.demote_f64
      (f64.div
       (f64.convert_i32_s
        (local.get $9)
       )
       (f64.const 1e5)
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.or
      (i32.load
       (local.get $0)
      )
      (i32.const 4)
     )
    )
   )
  )
 )
 (func $_png_set_gAMA (; 155 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f64)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (if
   (f64.gt
    (local.get $2)
    (f64.const 21474.83)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 21230)
    )
    (local.set $2
     (f64.const 21474.83)
    )
   )
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 40)
   )
   (f32.demote_f64
    (local.get $2)
   )
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 252)
   )
   (i32.trunc_f64_s
    (f64.add
     (f64.mul
      (local.get $2)
      (f64.const 1e5)
     )
     (f64.const 0.5)
    )
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $1)
    )
    (i32.const 1)
   )
  )
  (if
   (f64.ne
    (local.get $2)
    (f64.const 0)
   )
   (return)
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 21257)
  )
 )
 (func $_png_set_gAMA_fixed (; 156 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (if
   (i32.lt_s
    (local.get $2)
    (i32.const 0)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 21273)
    )
    (local.set $2
     (i32.const 0)
    )
   )
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 40)
   )
   (f32.demote_f64
    (f64.div
     (f64.convert_i32_s
      (local.get $2)
     )
     (f64.const 1e5)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 252)
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $1)
    )
    (i32.const 1)
   )
  )
  (if
   (local.get $2)
   (return)
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 21257)
  )
 )
 (func $_png_set_hIST (; 157 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (if
   (i32.eqz
    (i32.load16_s
     (local.tee $3
      (i32.add
       (local.get $1)
       (i32.const 20)
      )
     )
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 21304)
    )
    (return)
   )
  )
  (call $_png_free_data
   (local.get $0)
   (local.get $1)
   (i32.const 8)
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 592)
   )
   (local.tee $4
    (call $_png_malloc
     (local.get $0)
     (i32.const 512)
    )
   )
  )
  (if
   (i32.load16_s
    (local.get $3)
   )
   (block
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (i32.store16
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 1)
       )
       (local.get $4)
      )
      (i32.load16_s
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 1)
        )
        (local.get $2)
       )
      )
     )
     (br_if $while-in
      (i32.lt_u
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (i32.load16_u
        (local.get $3)
       )
      )
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 124)
   )
   (local.get $4)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 64)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 184)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 8)
   )
  )
 )
 (func $_png_set_IHDR (; 158 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (local $9 i32)
  (local $10 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $1)
    )
    (i32.eqz
     (local.get $0)
    )
   )
   (return)
  )
  (if
   (i32.or
    (i32.eqz
     (local.get $2)
    )
    (i32.eqz
     (local.get $3)
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 21345)
   )
  )
  (if
   (i32.lt_s
    (i32.or
     (local.get $2)
     (local.get $3)
    )
    (i32.const 0)
   )
   (call $_png_error
    (local.get $0)
    (i32.const 21383)
   )
  )
  (block $switch
   (block $switch-default
    (br_table $switch $switch $switch-default $switch $switch-default $switch-default $switch-default $switch $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch $switch-default
     (i32.sub
      (local.get $4)
      (i32.const 1)
     )
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 21410)
   )
  )
  (if
   (i32.or
    (i32.eq
     (local.tee $9
      (i32.or
       (local.get $5)
       (i32.const 4)
      )
     )
     (i32.const 5)
    )
    (i32.gt_u
     (local.get $5)
     (i32.const 6)
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 21436)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.and
      (i32.eq
       (local.get $5)
       (i32.const 3)
      )
      (i32.gt_s
       (local.get $4)
       (i32.const 8)
      )
     )
    )
    (br_if $__rjti$0
     (i32.and
      (i32.or
       (i32.eq
        (local.get $5)
        (i32.const 4)
       )
       (i32.eq
        (local.get $9)
        (i32.const 6)
       )
      )
      (i32.lt_s
       (local.get $4)
       (i32.const 8)
      )
     )
    )
    (br $__rjto$0)
   )
   (call $_png_error
    (local.get $0)
    (i32.const 21463)
   )
  )
  (if
   (i32.gt_s
    (local.get $6)
    (i32.const 1)
   )
   (call $_png_error
    (local.get $0)
    (i32.const 21512)
   )
  )
  (if
   (local.get $7)
   (call $_png_error
    (local.get $0)
    (i32.const 21545)
   )
  )
  (if
   (i32.and
    (i32.load
     (local.tee $10
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 4096)
   )
   (if
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 652)
     )
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 21903)
    )
   )
  )
  (if
   (local.get $8)
   (block $do-once
    (if
     (i32.and
      (i32.eq
       (local.get $8)
       (i32.const 64)
      )
      (i32.ne
       (i32.and
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 652)
         )
        )
        (i32.const 4)
       )
       (i32.const 0)
      )
     )
     (br_if $do-once
      (i32.and
       (i32.eqz
        (i32.and
         (i32.load
          (local.get $10)
         )
         (i32.const 4096)
        )
       )
       (i32.eq
        (local.get $9)
        (i32.const 6)
       )
      )
     )
    )
    (call $_png_error
     (local.get $0)
     (i32.const 21580)
    )
    (if
     (i32.and
      (i32.load
       (local.get $10)
      )
      (i32.const 4096)
     )
     (call $_png_warning
      (local.get $0)
      (i32.const 21610)
     )
    )
   )
  )
  (i32.store
   (local.get $1)
   (local.get $2)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 4)
   )
   (local.get $3)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 24)
   )
   (local.get $4)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 25)
   )
   (local.tee $5
    (i32.and
     (local.get $5)
     (i32.const 255)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 26)
   )
   (local.get $7)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 27)
   )
   (local.get $8)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 28)
   )
   (local.get $6)
  )
  (if
   (i32.eq
    (i32.and
     (local.get $5)
     (i32.const 255)
    )
    (i32.const 3)
   )
   (block
    (i32.store8
     (i32.add
      (local.get $1)
      (i32.const 29)
     )
     (i32.const 1)
    )
    (local.set $3
     (i32.const 1)
    )
   )
   (block
    (i32.store8
     (local.tee $6
      (i32.add
       (local.get $1)
       (i32.const 29)
      )
     )
     (local.tee $3
      (i32.or
       (i32.and
        (local.get $5)
        (i32.const 2)
       )
       (i32.const 1)
      )
     )
    )
    (if
     (i32.and
      (local.get $5)
      (i32.const 4)
     )
     (i32.store8
      (local.get $6)
      (local.tee $3
       (i32.shr_s
        (i32.shl
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
         (i32.const 24)
        )
        (i32.const 24)
       )
      )
     )
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 30)
   )
   (local.tee $3
    (i32.mul
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
     (i32.and
      (local.get $4)
      (i32.const 255)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 12)
   )
   (if (result i32)
    (i32.lt_u
     (i32.div_u
      (i32.const 2147483647)
      (i32.shr_u
       (i32.add
        (local.tee $3
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
        )
        (i32.const 7)
       )
       (i32.const 3)
      )
     )
     (local.get $2)
    )
    (block (result i32)
     (call $_png_warning
      (local.get $0)
      (i32.const 21640)
     )
     (i32.const 0)
    )
    (i32.shr_u
     (i32.add
      (i32.mul
       (local.get $2)
       (local.get $3)
      )
      (i32.const 7)
     )
     (i32.const 3)
    )
   )
  )
 )
 (func $_png_set_oFFs (; 159 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 100)
   )
   (local.get $2)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 104)
   )
   (local.get $3)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 108)
   )
   (local.get $4)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 256)
   )
  )
 )
 (func $_png_set_pCAL (; 160 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (local $9 i32)
  (local $10 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $1)
    )
    (i32.eqz
     (local.get $0)
    )
   )
   (return)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 160)
   )
   (local.tee $10
    (call $_png_malloc
     (local.get $0)
     (local.tee $9
      (i32.add
       (call $_strlen
        (local.get $2)
       )
       (i32.const 1)
      )
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $10)
    (local.get $2)
    (local.get $9)
   )
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 164)
   )
   (local.get $3)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 168)
   )
   (local.get $4)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 180)
   )
   (local.get $5)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 181)
   )
   (local.get $6)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 172)
   )
   (local.tee $3
    (call $_png_malloc
     (local.get $0)
     (local.tee $2
      (i32.add
       (call $_strlen
        (local.get $7)
       )
       (i32.const 1)
      )
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $3)
    (local.get $7)
    (local.get $2)
   )
  )
  (local.set $2
   (call $_png_malloc
    (local.get $0)
    (i32.add
     (i32.shl
      (local.get $6)
      (i32.const 2)
     )
     (i32.const 4)
    )
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $1)
     (i32.const 176)
    )
   )
   (local.get $2)
  )
  (i32.store
   (i32.add
    (i32.shl
     (local.get $6)
     (i32.const 2)
    )
    (local.get $2)
   )
   (i32.const 0)
  )
  (if
   (i32.gt_s
    (local.get $6)
    (i32.const 0)
   )
   (block
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in
     (local.set $7
      (call $_png_malloc
       (local.get $0)
       (local.tee $5
        (i32.add
         (call $_strlen
          (i32.load
           (local.tee $4
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (local.get $8)
            )
           )
          )
         )
         (i32.const 1)
        )
       )
      )
     )
     (i32.store
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
      )
      (local.get $7)
     )
     (drop
      (call $_memcpy
       (i32.load
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.shl
          (local.get $2)
          (i32.const 2)
         )
        )
       )
       (i32.load
        (local.get $4)
       )
       (local.get $5)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.get $6)
      )
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 1024)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 184)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 128)
   )
  )
 )
 (func $_png_set_sCAL (; 161 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (param $4 f64)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 220)
   )
   (local.get $2)
  )
  (f64.store
   (i32.add
    (local.get $1)
    (i32.const 224)
   )
   (local.get $3)
  )
  (f64.store
   (i32.add
    (local.get $1)
    (i32.const 232)
   )
   (local.get $4)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 16384)
   )
  )
 )
 (func $_png_set_pHYs (; 162 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 112)
   )
   (local.get $2)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 116)
   )
   (local.get $3)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 120)
   )
   (local.get $4)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 128)
   )
  )
 )
 (func $_png_set_PLTE (; 163 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (call $_png_free_data
   (local.get $0)
   (local.get $1)
   (i32.const 4096)
   (i32.const 0)
  )
  (local.set $4
   (call $_png_zalloc
    (local.get $0)
    (i32.const 256)
    (i32.const 3)
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $0)
     (i32.const 368)
    )
   )
   (local.get $4)
  )
  (if
   (i32.eqz
    (local.get $4)
   )
   (block
    (call $_png_error
     (local.get $0)
     (i32.const 21703)
    )
    (local.set $4
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $4)
    (local.get $2)
    (i32.mul
     (local.get $3)
     (i32.const 3)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 16)
   )
   (i32.load
    (local.get $5)
   )
  )
  (i32.store16
   (i32.add
    (local.get $0)
    (i32.const 372)
   )
   (local.tee $0
    (i32.and
     (local.get $3)
     (i32.const 65535)
    )
   )
  )
  (i32.store16
   (i32.add
    (local.get $1)
    (i32.const 20)
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 184)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 4096)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 8)
   )
  )
 )
 (func $_png_set_sBIT (; 164 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (i32.store align=1
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 68)
    )
   )
   (i32.load align=1
    (local.get $2)
   )
  )
  (i32.store8 offset=4
   (local.get $0)
   (i32.load8_s offset=4
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 2)
   )
  )
 )
 (func $_png_set_sRGB (; 165 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 44)
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 2048)
   )
  )
 )
 (func $_png_set_sRGB_gAMA_and_cHRM (; 166 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 44)
   )
   (local.get $2)
  )
  (local.set $2
   (i32.load
    (local.tee $0
     (i32.add
      (local.get $1)
      (i32.const 8)
     )
    )
   )
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 40)
   )
   (f32.const 0.45454999804496765)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 252)
   )
   (i32.const 45455)
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 128)
   )
   (f32.const 0.3127000033855438)
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 132)
   )
   (f32.const 0.32899999618530273)
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 136)
   )
   (f32.const 0.6399999856948853)
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 140)
   )
   (f32.const 0.33000001311302185)
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 144)
   )
   (f32.const 0.30000001192092896)
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 148)
   )
   (f32.const 0.6000000238418579)
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 152)
   )
   (f32.const 0.15000000596046448)
  )
  (f32.store
   (i32.add
    (local.get $1)
    (i32.const 156)
   )
   (f32.const 0.05999999865889549)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 256)
   )
   (i32.const 31270)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 260)
   )
   (i32.const 32900)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 264)
   )
   (i32.const 64000)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 268)
   )
   (i32.const 33000)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 272)
   )
   (i32.const 30000)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 276)
   )
   (i32.const 60000)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 280)
   )
   (i32.const 15000)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 284)
   )
   (i32.const 6000)
  )
  (i32.store
   (local.get $0)
   (i32.or
    (local.get $2)
    (i32.const 2053)
   )
  )
 )
 (func $_png_set_iCCP (; 167 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $4)
    )
    (i32.or
     (i32.eqz
      (local.get $2)
     )
     (i32.or
      (i32.eqz
       (local.get $0)
      )
      (i32.eqz
       (local.get $1)
      )
     )
    )
   )
   (return)
  )
  (call $_strcpy
   (local.tee $6
    (call $_png_malloc
     (local.get $0)
     (i32.add
      (call $_strlen
       (local.get $2)
      )
      (i32.const 1)
     )
    )
   )
   (local.get $2)
  )
  (drop
   (call $_memcpy
    (local.tee $2
     (call $_png_malloc
      (local.get $0)
      (local.get $5)
     )
    )
    (local.get $4)
    (local.get $5)
   )
  )
  (call $_png_free_data
   (local.get $0)
   (local.get $1)
   (i32.const 16)
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 204)
   )
   (local.get $5)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 196)
   )
   (local.get $6)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 200)
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 208)
   )
   (local.get $3)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 184)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 4096)
   )
  )
 )
 (func $_png_set_text (; 168 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (if
   (i32.gt_s
    (local.tee $7
     (i32.add
      (i32.load
       (local.tee $6
        (i32.add
         (local.get $1)
         (i32.const 48)
        )
       )
      )
      (i32.const 1)
     )
    )
    (local.tee $8
     (i32.load
      (local.tee $3
       (i32.add
        (local.get $1)
        (i32.const 52)
       )
      )
     )
    )
   )
   (if
    (local.tee $5
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $1)
        (i32.const 56)
       )
      )
     )
    )
    (block
     (i32.store
      (local.get $3)
      (local.tee $3
       (i32.add
        (local.get $7)
        (i32.const 8)
       )
      )
     )
     (i32.store
      (local.get $4)
      (local.tee $3
       (call $_png_malloc
        (local.get $0)
        (i32.shl
         (local.get $3)
         (i32.const 4)
        )
       )
      )
     )
     (drop
      (call $_memcpy
       (local.get $3)
       (local.get $5)
       (i32.shl
        (local.get $8)
        (i32.const 4)
       )
      )
     )
     (call $_png_free
      (local.get $0)
      (local.get $5)
     )
    )
    (block
     (i32.store
      (local.get $3)
      (i32.const 9)
     )
     (i32.store
      (local.get $6)
      (i32.const 0)
     )
     (i32.store
      (local.get $4)
      (call $_png_malloc
       (local.get $0)
       (i32.const 144)
      )
     )
     (i32.store
      (local.tee $3
       (i32.add
        (local.get $1)
        (i32.const 184)
       )
      )
      (i32.or
       (i32.load
        (local.get $3)
       )
       (i32.const 16384)
      )
     )
    )
   )
  )
  (local.set $11
   (i32.add
    (local.get $1)
    (i32.const 56)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in
   (local.set $9
    (i32.add
     (local.tee $8
      (i32.load
       (local.get $11)
      )
     )
     (i32.shl
      (local.tee $7
       (i32.load
        (local.get $6)
       )
      )
      (i32.const 4)
     )
    )
   )
   (if
    (local.tee $3
     (i32.load
      (local.tee $10
       (i32.add
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 4)
         )
         (local.get $2)
        )
        (i32.const 4)
       )
      )
     )
    )
    (block $do-once0
     (local.set $5
      (call $_strlen
       (local.get $3)
      )
     )
     (if
      (i32.ge_s
       (local.tee $3
        (i32.load
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 4)
          )
          (local.get $2)
         )
        )
       )
       (i32.const 1)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 21728)
       )
       (br $do-once0)
      )
     )
     (local.set $4
      (if (result i32)
       (local.tee $4
        (i32.load
         (local.tee $13
          (i32.add
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 4)
            )
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
       )
       (if (result i32)
        (i32.load8_s
         (local.get $4)
        )
        (call $_strlen
         (local.get $4)
        )
        (block (result i32)
         (local.set $3
          (i32.const -1)
         )
         (i32.const 0)
        )
       )
       (block (result i32)
        (local.set $3
         (i32.const -1)
        )
        (i32.const 0)
       )
      )
     )
     (i32.store
      (local.get $9)
      (local.get $3)
     )
     (local.set $3
      (call $_png_malloc
       (local.get $0)
       (i32.add
        (local.get $4)
        (i32.add
         (local.get $5)
         (i32.const 4)
        )
       )
      )
     )
     (i32.store
      (local.tee $12
       (i32.add
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 4)
         )
         (local.get $8)
        )
        (i32.const 4)
       )
      )
      (local.get $3)
     )
     (drop
      (call $_memcpy
       (local.get $3)
       (i32.load
        (local.get $10)
       )
       (local.get $5)
      )
     )
     (i32.store8
      (i32.add
       (local.get $5)
       (i32.load
        (local.get $12)
       )
      )
      (i32.const 0)
     )
     (i32.store
      (local.tee $10
       (i32.add
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 4)
         )
         (local.get $8)
        )
        (i32.const 8)
       )
      )
      (local.tee $3
       (i32.add
        (i32.add
         (local.get $5)
         (i32.load
          (local.get $12)
         )
        )
        (i32.const 1)
       )
      )
     )
     (i32.store8
      (i32.add
       (if (result i32)
        (local.get $4)
        (block (result i32)
         (drop
          (call $_memcpy
           (local.get $3)
           (i32.load
            (local.get $13)
           )
           (local.get $4)
          )
         )
         (i32.load
          (local.get $10)
         )
        )
        (local.get $3)
       )
       (local.get $4)
      )
      (i32.const 0)
     )
     (i32.store offset=12
      (i32.add
       (i32.shl
        (local.get $7)
        (i32.const 4)
       )
       (local.get $8)
      )
      (local.get $4)
     )
     (i64.store align=4
      (local.tee $3
       (i32.add
        (i32.load
         (local.get $11)
        )
        (i32.shl
         (i32.load
          (local.get $6)
         )
         (i32.const 4)
        )
       )
      )
      (i64.load align=4
       (local.get $9)
      )
     )
     (i64.store offset=8 align=4
      (local.get $3)
      (i64.load offset=8 align=4
       (local.get $9)
      )
     )
     (i32.store
      (local.get $6)
      (i32.add
       (i32.load
        (local.get $6)
       )
       (i32.const 1)
      )
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (i32.const 1)
    )
   )
  )
 )
 (func $_png_set_tIME (; 169 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (if
   (i32.and
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 196)
     )
    )
    (i32.const 512)
   )
   (return)
  )
  (i64.store align=2
   (i32.add
    (local.get $1)
    (i32.const 60)
   )
   (i64.load align=2
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 512)
   )
  )
 )
 (func $_png_set_tRNS (; 170 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (if
   (local.get $2)
   (block
    (call $_png_free_data
     (local.get $0)
     (local.get $1)
     (i32.const 8192)
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (local.get $1)
      (i32.const 76)
     )
     (local.tee $5
      (call $_png_malloc
       (local.get $0)
       (i32.const 256)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 484)
     )
     (local.get $5)
    )
    (drop
     (call $_memcpy
      (local.get $5)
      (local.get $2)
      (local.get $3)
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (local.get $1)
       (i32.const 184)
      )
     )
     (i32.or
      (i32.load
       (local.get $0)
      )
      (i32.const 8192)
     )
    )
   )
  )
  (if
   (local.get $4)
   (block
    (i64.store align=2
     (local.tee $0
      (i32.add
       (local.get $1)
       (i32.const 80)
      )
     )
     (i64.load align=2
      (local.get $4)
     )
    )
    (i32.store16 offset=8
     (local.get $0)
     (i32.load16_s offset=8
      (local.get $4)
     )
    )
    (local.set $3
     (select
      (local.get $3)
      (i32.const 1)
      (local.get $3)
     )
    )
   )
  )
  (i32.store16
   (i32.add
    (local.get $1)
    (i32.const 22)
   )
   (local.get $3)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 16)
   )
  )
 )
 (func $_png_set_sPLT (; 171 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (drop
   (call $_memcpy
    (local.tee $9
     (call $_png_malloc
      (local.get $0)
      (i32.shl
       (i32.add
        (i32.load
         (local.tee $4
          (i32.add
           (local.get $1)
           (i32.const 216)
          )
         )
        )
        (i32.const 1)
       )
       (i32.const 4)
      )
     )
    )
    (i32.load
     (local.tee $6
      (i32.add
       (local.get $1)
       (i32.const 212)
      )
     )
    )
    (i32.shl
     (i32.load
      (local.get $4)
     )
     (i32.const 4)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (local.get $6)
   )
  )
  (i32.store
   (local.get $6)
   (i32.const 0)
  )
  (loop $while-in
   (i32.store
    (local.tee $7
     (i32.add
      (i32.add
       (i32.shl
        (i32.load
         (local.get $4)
        )
        (i32.const 4)
       )
       (local.get $9)
      )
      (i32.shl
       (local.get $3)
       (i32.const 4)
      )
     )
    )
    (local.tee $8
     (call $_png_malloc
      (local.get $0)
      (i32.add
       (call $_strlen
        (i32.load
         (local.tee $5
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 4)
           )
           (local.get $2)
          )
         )
        )
       )
       (i32.const 1)
      )
     )
    )
   )
   (call $_strcpy
    (local.get $8)
    (i32.load
     (local.get $5)
    )
   )
   (i32.store offset=8
    (local.get $7)
    (local.tee $8
     (call $_png_malloc
      (local.get $0)
      (i32.shl
       (i32.load
        (local.tee $5
         (i32.add
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 4)
           )
           (local.get $2)
          )
          (i32.const 12)
         )
        )
       )
       (i32.const 4)
      )
     )
    )
   )
   (drop
    (call $_memcpy
     (local.get $8)
     (i32.load offset=8
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 4)
       )
       (local.get $2)
      )
     )
     (i32.shl
      (i32.load
       (local.get $5)
      )
      (i32.const 4)
     )
    )
   )
   (i32.store offset=12
    (local.get $7)
    (i32.load
     (local.get $5)
    )
   )
   (i32.store8 offset=4
    (local.get $7)
    (i32.load8_s offset=4
     (i32.add
      (i32.shl
       (local.get $3)
       (i32.const 4)
      )
      (local.get $2)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.const 1)
    )
   )
  )
  (i32.store
   (local.get $6)
   (local.get $9)
  )
  (i32.store
   (local.get $4)
   (i32.add
    (i32.load
     (local.get $4)
    )
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.or
    (i32.load
     (local.tee $2
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
    )
    (i32.const 8192)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (local.set $0
   (i32.or
    (i32.load
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 184)
      )
     )
    )
    (i32.const 32)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
 )
 (func $_png_set_unknown_chunks (; 172 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (return)
  )
  (drop
   (call $_memcpy
    (local.tee $7
     (call $_png_malloc
      (local.get $0)
      (i32.mul
       (i32.add
        (i32.load
         (local.tee $4
          (i32.add
           (local.get $1)
           (i32.const 192)
          )
         )
        )
        (i32.const 1)
       )
       (i32.const 20)
      )
     )
    )
    (i32.load
     (local.tee $5
      (i32.add
       (local.get $1)
       (i32.const 188)
      )
     )
    )
    (i32.mul
     (i32.load
      (local.get $4)
     )
     (i32.const 20)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (local.get $5)
   )
  )
  (i32.store
   (local.get $5)
   (i32.const 0)
  )
  (local.set $9
   (i32.add
    (local.get $0)
    (i32.const 196)
   )
  )
  (loop $while-in
   (call $_strcpy
    (local.tee $6
     (i32.add
      (i32.add
       (i32.mul
        (i32.load
         (local.get $4)
        )
        (i32.const 20)
       )
       (local.get $7)
      )
      (i32.mul
       (local.get $3)
       (i32.const 20)
      )
     )
    )
    (i32.add
     (i32.mul
      (local.get $3)
      (i32.const 20)
     )
     (local.get $2)
    )
   )
   (i32.store offset=8
    (local.get $6)
    (local.tee $10
     (call $_png_malloc
      (local.get $0)
      (i32.load
       (local.tee $8
        (i32.add
         (i32.add
          (i32.mul
           (local.get $3)
           (i32.const 20)
          )
          (local.get $2)
         )
         (i32.const 12)
        )
       )
      )
     )
    )
   )
   (drop
    (call $_memcpy
     (local.get $10)
     (i32.load offset=8
      (i32.add
       (i32.mul
        (local.get $3)
        (i32.const 20)
       )
       (local.get $2)
      )
     )
     (i32.load
      (local.get $8)
     )
    )
   )
   (i32.store offset=12
    (local.get $6)
    (i32.load
     (local.get $8)
    )
   )
   (i32.store8 offset=16
    (local.get $6)
    (i32.load
     (local.get $9)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.const 1)
    )
   )
  )
  (i32.store
   (local.get $5)
   (local.get $7)
  )
  (i32.store
   (local.get $4)
   (i32.add
    (i32.load
     (local.get $4)
    )
    (i32.const 1)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 184)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 512)
   )
  )
 )
 (func $_png_set_interlace_handling (; 173 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 383)
     )
    )
   )
   (return
    (i32.const 1)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 204)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 2)
   )
  )
  (i32.const 7)
 )
 (func $_png_do_invert (; 174 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $switch
   (block $switch-case7
    (block $switch-case
     (br_table $switch-case $switch $switch $switch $switch-case7 $switch
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
     )
    )
    (if
     (i32.eqz
      (local.tee $2
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
      )
     )
     (return)
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (i32.store8
      (local.get $1)
      (i32.xor
       (i32.load8_s
        (local.get $1)
       )
       (i32.const -1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.get $2)
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
    (return)
   )
   (block $switch0
    (block $switch-case6
     (block $switch-case3
      (br_table $switch-case3 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch-case6 $switch0
       (i32.sub
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 9)
         )
        )
        (i32.const 8)
       )
      )
     )
     (if
      (i32.eqz
       (local.tee $2
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
       )
      )
      (return)
     )
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in2
      (i32.store8
       (local.get $1)
       (i32.xor
        (i32.load8_s
         (local.get $1)
        )
        (i32.const -1)
       )
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 2)
       )
      )
      (br_if $while-in2
       (i32.lt_u
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 2)
         )
        )
        (local.get $2)
       )
      )
     )
     (return)
    )
    (if
     (i32.eqz
      (local.tee $2
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
      )
     )
     (return)
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in5
     (i32.store8
      (local.get $1)
      (i32.xor
       (i32.load8_s
        (local.get $1)
       )
       (i32.const -1)
      )
     )
     (i32.store8
      (local.tee $3
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.xor
       (i32.load8_s
        (local.get $3)
       )
       (i32.const -1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (br_if $while-in5
      (i32.lt_u
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (local.get $2)
      )
     )
    )
   )
  )
 )
 (func $_png_do_swap (; 175 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.ne
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 9)
     )
    )
    (i32.const 16)
   )
   (return)
  )
  (if
   (i32.eqz
    (local.tee $2
     (i32.mul
      (i32.load
       (local.get $0)
      )
      (i32.load8_u
       (i32.add
        (local.get $0)
        (i32.const 10)
       )
      )
     )
    )
   )
   (return)
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (local.set $3
    (i32.load8_s
     (local.get $1)
    )
   )
   (i32.store8
    (local.get $1)
    (i32.load8_s
     (local.tee $4
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
   (i32.store8
    (local.get $4)
    (local.get $3)
   )
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 2)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $2)
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
    )
   )
  )
 )
 (func $_png_do_packswap (; 176 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.ge_s
    (i32.and
     (local.tee $2
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 9)
       )
      )
     )
     (i32.const 255)
    )
    (i32.const 8)
   )
   (return)
  )
  (local.set $0
   (i32.add
    (local.get $1)
    (local.tee $3
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
    )
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case1
     (block $switch-case0
      (block $switch-case
       (br_table $switch-case $switch-case0 $switch-default $switch-case1 $switch-default
        (i32.sub
         (local.get $2)
         (i32.const 1)
        )
       )
      )
      (local.set $2
       (i32.const 2112)
      )
      (br $switch)
     )
     (local.set $2
      (i32.const 1600)
     )
     (br $switch)
    )
    (local.set $2
     (i32.const 1856)
    )
    (br $switch)
   )
   (return)
  )
  (if
   (i32.le_s
    (local.get $3)
    (i32.const 0)
   )
   (return)
  )
  (loop $while-in
   (i32.store8
    (local.get $1)
    (i32.load8_s
     (i32.add
      (local.get $2)
      (i32.load8_u
       (local.get $1)
      )
     )
    )
   )
   (br_if $while-in
    (i32.lt_u
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.get $0)
    )
   )
  )
 )
 (func $_png_do_strip_filler (; 177 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (block $label$break$L1
   (block $switch-default
    (block $switch-case15
     (block $switch-case
      (br_table $switch-case15 $switch-default $switch-case $switch-default
       (i32.sub
        (i32.load8_s
         (local.tee $7
          (i32.add
           (local.get $0)
           (i32.const 10)
          )
         )
        )
        (i32.const 2)
       )
      )
     )
     (local.set $2
      (i32.ne
       (i32.and
        (local.get $2)
        (i32.const 128)
       )
       (i32.const 0)
      )
     )
     (i32.store8
      (i32.add
       (local.get $0)
       (i32.const 11)
      )
      (block $do-once (result i32)
       (if (result i32)
        (i32.eq
         (i32.load8_s
          (i32.add
           (local.get $0)
           (i32.const 9)
          )
         )
         (i32.const 8)
        )
        (if (result i32)
         (local.get $2)
         (block (result i32)
          (if
           (i32.le_u
            (local.get $4)
            (i32.const 1)
           )
           (block
            (local.set $2
             (i32.const 3)
            )
            (br $do-once
             (i32.const 24)
            )
           )
          )
          (local.set $3
           (i32.const 1)
          )
          (local.set $2
           (local.get $1)
          )
          (loop $while-in (result i32)
           (i32.store8
            (local.tee $5
             (i32.add
              (local.get $2)
              (i32.const 3)
             )
            )
            (i32.load8_s
             (local.tee $6
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const 4)
            )
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 5)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const 5)
            )
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 6)
             )
            )
           )
           (if (result i32)
            (i32.eq
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.get $4)
            )
            (block (result i32)
             (local.set $2
              (i32.const 3)
             )
             (i32.const 24)
            )
            (block
             (local.set $2
              (local.get $5)
             )
             (local.set $1
              (local.get $6)
             )
             (br $while-in)
            )
           )
          )
         )
         (block (result i32)
          (if
           (i32.eqz
            (local.get $4)
           )
           (block
            (local.set $2
             (i32.const 3)
            )
            (br $do-once
             (i32.const 24)
            )
           )
          )
          (local.set $2
           (local.get $1)
          )
          (loop $while-in2 (result i32)
           (i32.store8
            (local.get $1)
            (i32.load8_s
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
            (i32.load8_s
             (i32.add
              (local.get $2)
              (i32.const 2)
             )
            )
           )
           (local.set $5
            (i32.add
             (local.get $2)
             (i32.const 4)
            )
           )
           (local.set $6
            (i32.add
             (local.get $1)
             (i32.const 3)
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 2)
            )
            (i32.load8_s
             (i32.add
              (local.get $2)
              (i32.const 3)
             )
            )
           )
           (if (result i32)
            (i32.eq
             (local.get $4)
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
            )
            (block (result i32)
             (local.set $2
              (i32.const 3)
             )
             (i32.const 24)
            )
            (block
             (local.set $2
              (local.get $5)
             )
             (local.set $1
              (local.get $6)
             )
             (br $while-in2)
            )
           )
          )
         )
        )
        (if (result i32)
         (local.get $2)
         (block (result i32)
          (if
           (i32.le_u
            (local.get $4)
            (i32.const 1)
           )
           (block
            (local.set $2
             (i32.const 6)
            )
            (br $do-once
             (i32.const 48)
            )
           )
          )
          (local.set $3
           (i32.const 1)
          )
          (local.set $2
           (local.get $1)
          )
          (loop $while-in4 (result i32)
           (i32.store8
            (local.tee $5
             (i32.add
              (local.get $2)
              (i32.const 6)
             )
            )
            (i32.load8_s
             (local.tee $6
              (i32.add
               (local.get $1)
               (i32.const 8)
              )
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const 7)
            )
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 9)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const 8)
            )
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 10)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const 9)
            )
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 11)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const 10)
            )
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 12)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $2)
             (i32.const 11)
            )
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 13)
             )
            )
           )
           (if (result i32)
            (i32.eq
             (local.get $4)
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
            )
            (block (result i32)
             (local.set $2
              (i32.const 6)
             )
             (i32.const 48)
            )
            (block
             (local.set $2
              (local.get $5)
             )
             (local.set $1
              (local.get $6)
             )
             (br $while-in4)
            )
           )
          )
         )
         (block (result i32)
          (if
           (i32.eqz
            (local.get $4)
           )
           (block
            (local.set $2
             (i32.const 6)
            )
            (br $do-once
             (i32.const 48)
            )
           )
          )
          (local.set $2
           (local.get $1)
          )
          (loop $while-in6 (result i32)
           (i32.store8
            (local.get $1)
            (i32.load8_s
             (i32.add
              (local.get $2)
              (i32.const 2)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
            (i32.load8_s
             (i32.add
              (local.get $2)
              (i32.const 3)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 2)
            )
            (i32.load8_s
             (i32.add
              (local.get $2)
              (i32.const 4)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 3)
            )
            (i32.load8_s
             (i32.add
              (local.get $2)
              (i32.const 5)
             )
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 4)
            )
            (i32.load8_s
             (i32.add
              (local.get $2)
              (i32.const 6)
             )
            )
           )
           (local.set $5
            (i32.add
             (local.get $2)
             (i32.const 8)
            )
           )
           (local.set $6
            (i32.add
             (local.get $1)
             (i32.const 6)
            )
           )
           (i32.store8
            (i32.add
             (local.get $1)
             (i32.const 5)
            )
            (i32.load8_s
             (i32.add
              (local.get $2)
              (i32.const 7)
             )
            )
           )
           (if (result i32)
            (i32.eq
             (local.get $4)
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
            )
            (block (result i32)
             (local.set $2
              (i32.const 6)
             )
             (i32.const 48)
            )
            (block
             (local.set $2
              (local.get $5)
             )
             (local.set $1
              (local.get $6)
             )
             (br $while-in6)
            )
           )
          )
         )
        )
       )
      )
     )
     (local.set $1
      (i32.const 3)
     )
     (local.set $4
      (i32.mul
       (local.get $2)
       (local.get $4)
      )
     )
     (br $label$break$L1)
    )
    (local.set $2
     (i32.ne
      (i32.and
       (local.get $2)
       (i32.const 128)
      )
      (i32.const 0)
     )
    )
    (if
     (i32.eq
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 9)
       )
      )
      (i32.const 8)
     )
     (block
      (local.set $3
       (i32.ne
        (local.get $4)
        (i32.const 0)
       )
      )
      (if
       (local.get $2)
       (if
        (local.get $3)
        (block
         (local.set $2
          (local.get $1)
         )
         (local.set $3
          (i32.const 0)
         )
         (loop $while-in8
          (local.set $5
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (local.get $1)
           (i32.load8_s
            (local.get $2)
           )
          )
          (local.set $2
           (i32.add
            (local.get $2)
            (i32.const 2)
           )
          )
          (if
           (i32.ne
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $4)
           )
           (block
            (local.set $1
             (local.get $5)
            )
            (br $while-in8)
           )
          )
         )
        )
       )
       (if
        (local.get $3)
        (block
         (local.set $2
          (local.get $1)
         )
         (local.set $3
          (i32.const 0)
         )
         (loop $while-in10
          (local.set $5
           (i32.add
            (local.get $2)
            (i32.const 2)
           )
          )
          (local.set $6
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (local.get $1)
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
          )
          (if
           (i32.ne
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $4)
           )
           (block
            (local.set $2
             (local.get $5)
            )
            (local.set $1
             (local.get $6)
            )
            (br $while-in10)
           )
          )
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.get $0)
        (i32.const 11)
       )
       (i32.const 8)
      )
      (local.set $1
       (i32.const 1)
      )
      (br $label$break$L1)
     )
     (block
      (if
       (local.get $2)
       (if
        (i32.gt_u
         (local.get $4)
         (i32.const 1)
        )
        (block
         (local.set $3
          (i32.const 1)
         )
         (local.set $2
          (local.get $1)
         )
         (loop $while-in12
          (i32.store8
           (local.tee $5
            (i32.add
             (local.get $2)
             (i32.const 2)
            )
           )
           (i32.load8_s
            (local.tee $6
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $2)
            (i32.const 3)
           )
           (i32.load8_s
            (i32.add
             (local.get $1)
             (i32.const 5)
            )
           )
          )
          (if
           (i32.ne
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $4)
           )
           (block
            (local.set $2
             (local.get $5)
            )
            (local.set $1
             (local.get $6)
            )
            (br $while-in12)
           )
          )
         )
        )
       )
       (if
        (local.get $4)
        (block
         (local.set $2
          (local.get $1)
         )
         (loop $while-in14
          (i32.store8
           (local.get $1)
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.const 2)
            )
           )
          )
          (local.set $5
           (i32.add
            (local.get $2)
            (i32.const 4)
           )
          )
          (local.set $6
           (i32.add
            (local.get $1)
            (i32.const 2)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.const 3)
            )
           )
          )
          (if
           (i32.ne
            (local.get $4)
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
           )
           (block
            (local.set $2
             (local.get $5)
            )
            (local.set $1
             (local.get $6)
            )
            (br $while-in14)
           )
          )
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.get $0)
        (i32.const 11)
       )
       (i32.const 16)
      )
      (local.set $1
       (i32.const 1)
      )
      (local.set $4
       (i32.shl
        (local.get $4)
        (i32.const 1)
       )
      )
      (br $label$break$L1)
     )
    )
   )
   (return)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
   (local.get $4)
  )
  (i32.store8
   (local.get $7)
   (local.get $1)
  )
  (i32.store8
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 8)
    )
   )
   (i32.and
    (i32.load8_s
     (local.get $0)
    )
    (i32.const -5)
   )
  )
 )
 (func $_png_do_bgr (; 178 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eqz
    (i32.and
     (local.tee $2
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
     )
     (i32.const 2)
    )
   )
   (return)
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (block $switch
   (block $switch-case13
    (block $switch-case4
     (br_table $switch-case4 $switch $switch $switch $switch $switch $switch $switch $switch-case13 $switch
      (i32.sub
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 9)
        )
       )
       (i32.const 8)
      )
     )
    )
    (block $switch-default
     (block $switch-case3
      (block $switch-case
       (br_table $switch-case $switch-default $switch-default $switch-default $switch-case3 $switch-default
        (i32.sub
         (local.get $2)
         (i32.const 2)
        )
       )
      )
      (if
       (i32.eqz
        (local.get $4)
       )
       (return)
      )
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in
       (local.set $2
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.store8
        (local.get $1)
        (i32.load8_s
         (local.tee $3
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
        )
       )
       (i32.store8
        (local.get $3)
        (local.get $2)
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 3)
        )
       )
       (br_if $while-in
        (i32.ne
         (local.get $4)
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
      )
      (return)
     )
     (if
      (i32.eqz
       (local.get $4)
      )
      (return)
     )
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in2
      (local.set $2
       (i32.load8_s
        (local.get $1)
       )
      )
      (i32.store8
       (local.get $1)
       (i32.load8_s
        (local.tee $3
         (i32.add
          (local.get $1)
          (i32.const 2)
         )
        )
       )
      )
      (i32.store8
       (local.get $3)
       (local.get $2)
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
      (br_if $while-in2
       (i32.ne
        (local.get $4)
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
       )
      )
     )
     (return)
    )
    (return)
   )
   (block $switch5
    (block $switch-case11
     (block $switch-case8
      (br_table $switch-case8 $switch5 $switch5 $switch5 $switch-case11 $switch5
       (i32.sub
        (local.get $2)
        (i32.const 2)
       )
      )
     )
     (if
      (i32.eqz
       (local.get $4)
      )
      (return)
     )
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in7
      (local.set $2
       (i32.load8_s
        (local.get $1)
       )
      )
      (i32.store8
       (local.get $1)
       (i32.load8_s
        (local.tee $3
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
       )
      )
      (i32.store8
       (local.get $3)
       (local.get $2)
      )
      (local.set $3
       (i32.load8_s
        (local.tee $2
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
      (i32.store8
       (local.get $2)
       (i32.load8_s
        (local.tee $2
         (i32.add
          (local.get $1)
          (i32.const 5)
         )
        )
       )
      )
      (i32.store8
       (local.get $2)
       (local.get $3)
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 6)
       )
      )
      (br_if $while-in7
       (i32.ne
        (local.get $4)
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
       )
      )
     )
     (return)
    )
    (if
     (i32.eqz
      (local.get $4)
     )
     (return)
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in10
     (local.set $2
      (i32.load8_s
       (local.get $1)
      )
     )
     (i32.store8
      (local.get $1)
      (i32.load8_s
       (local.tee $3
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
      )
     )
     (i32.store8
      (local.get $3)
      (local.get $2)
     )
     (local.set $3
      (i32.load8_s
       (local.tee $2
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
      )
     )
     (i32.store8
      (local.get $2)
      (i32.load8_s
       (local.tee $2
        (i32.add
         (local.get $1)
         (i32.const 5)
        )
       )
      )
     )
     (i32.store8
      (local.get $2)
      (local.get $3)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (br_if $while-in10
      (i32.ne
       (local.get $4)
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
  )
 )
 (func $_png_write_data (; 179 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (if
   (local.tee $3
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 168)
     )
    )
   )
   (call_indirect (type $FUNCSIG$viii)
    (local.get $0)
    (local.get $1)
    (local.get $2)
    (i32.add
     (i32.and
      (local.get $3)
      (i32.const 7)
     )
     (i32.const 58)
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 21754)
   )
  )
 )
 (func $_png_default_write_data (; 180 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.eq
    (call $_fwrite
     (local.get $1)
     (local.get $2)
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 176)
      )
     )
    )
    (local.get $2)
   )
   (return)
  )
  (call $_png_error
   (local.get $0)
   (i32.const 21782)
  )
 )
 (func $_png_flush (; 181 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (if
   (i32.eqz
    (local.tee $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 424)
      )
     )
    )
   )
   (return)
  )
  (call_indirect (type $FUNCSIG$vi)
   (local.get $0)
   (i32.add
    (i32.and
     (local.get $1)
     (i32.const 7)
    )
    (i32.const 34)
   )
  )
 )
 (func $_png_default_flush (; 182 ;) (; has Stack IR ;) (param $0 i32)
  (if
   (i32.eqz
    (local.tee $0
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 176)
      )
     )
    )
   )
   (return)
  )
  (drop
   (call $_fflush
    (local.get $0)
   )
  )
 )
 (func $_png_set_write_fn (; 183 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 176)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 168)
   )
   (select
    (local.get $2)
    (i32.const 7)
    (local.get $2)
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 424)
   )
   (select
    (local.get $3)
    (i32.const 3)
    (local.get $3)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.tee $1
      (i32.add
       (local.get $0)
       (i32.const 172)
      )
     )
    )
   )
   (return)
  )
  (i32.store
   (local.get $1)
   (i32.const 0)
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 21794)
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 21850)
  )
 )
 (func $_png_write_info_before_PLTE (; 184 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.and
    (i32.load
     (local.tee $5
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
    )
    (i32.const 1024)
   )
   (return)
  )
  (call $_png_write_sig
   (local.get $0)
  )
  (if
   (i32.and
    (i32.load
     (local.get $5)
    )
    (i32.const 4096)
   )
   (if
    (i32.load
     (local.tee $2
      (i32.add
       (local.get $0)
       (i32.const 652)
      )
     )
    )
    (block
     (call $_png_warning
      (local.get $0)
      (i32.const 21903)
     )
     (i32.store
      (local.get $2)
      (i32.const 0)
     )
    )
   )
  )
  (call $_png_write_IHDR
   (local.get $0)
   (i32.load
    (local.get $1)
   )
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 24)
    )
   )
   (i32.load8_u
    (local.tee $4
     (i32.add
      (local.get $1)
      (i32.const 25)
     )
    )
   )
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 26)
    )
   )
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 27)
    )
   )
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 28)
    )
   )
  )
  (if
   (i32.and
    (local.tee $2
     (i32.load
      (local.tee $3
       (i32.add
        (local.get $1)
        (i32.const 8)
       )
      )
     )
    )
    (i32.const 1)
   )
   (block
    (call $_png_write_gAMA
     (local.get $0)
     (f64.promote_f32
      (f32.load
       (i32.add
        (local.get $1)
        (i32.const 40)
       )
      )
     )
    )
    (local.set $2
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 2048)
   )
   (block
    (call $_png_write_sRGB
     (local.get $0)
     (i32.load8_u
      (i32.add
       (local.get $1)
       (i32.const 44)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 4096)
   )
   (block
    (call $_png_write_iCCP
     (local.get $0)
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 196)
      )
     )
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 200)
      )
     )
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 204)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 2)
   )
   (block
    (call $_png_write_sBIT
     (local.get $0)
     (i32.add
      (local.get $1)
      (i32.const 68)
     )
     (i32.load8_u
      (local.get $4)
     )
    )
    (local.set $2
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 4)
   )
   (call $_png_write_cHRM
    (local.get $0)
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 128)
      )
     )
    )
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 132)
      )
     )
    )
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 136)
      )
     )
    )
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 140)
      )
     )
    )
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 144)
      )
     )
    )
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 148)
      )
     )
    )
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 152)
      )
     )
    )
    (f64.promote_f32
     (f32.load
      (i32.add
       (local.get $1)
       (i32.const 156)
      )
     )
    )
   )
  )
  (if
   (local.tee $4
    (i32.load
     (local.tee $3
      (i32.add
       (local.get $1)
       (i32.const 192)
      )
     )
    )
   )
   (block
    (local.set $2
     (i32.add
      (local.get $1)
      (i32.const 188)
     )
    )
    (if
     (i32.gt_s
      (local.get $4)
      (i32.const 0)
     )
     (block
      (local.set $4
       (i32.add
        (local.get $0)
        (i32.const 200)
       )
      )
      (local.set $1
       (i32.load
        (local.get $2)
       )
      )
      (loop $while-in
       (if
        (i32.ne
         (local.tee $6
          (call $_png_handle_as_unknown
           (local.get $0)
           (local.get $1)
          )
         )
         (i32.const 1)
        )
        (if
         (i32.and
          (i32.ne
           (local.tee $7
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.const 16)
             )
            )
           )
           (i32.const 0)
          )
          (i32.eqz
           (i32.and
            (local.get $7)
            (i32.const 2)
           )
          )
         )
         (block $do-once
          (if
           (i32.eqz
            (i32.or
             (i32.eq
              (local.get $6)
              (i32.const 3)
             )
             (i32.ne
              (i32.and
               (i32.load8_s
                (i32.add
                 (local.get $1)
                 (i32.const 3)
                )
               )
               (i32.const 32)
              )
              (i32.const 0)
             )
            )
           )
           (br_if $do-once
            (i32.eqz
             (i32.and
              (i32.load
               (local.get $4)
              )
              (i32.const 65536)
             )
            )
           )
          )
          (call $_png_write_chunk
           (local.get $0)
           (local.get $1)
           (i32.load
            (i32.add
             (local.get $1)
             (i32.const 8)
            )
           )
           (i32.load
            (i32.add
             (local.get $1)
             (i32.const 12)
            )
           )
          )
         )
        )
       )
       (br_if $while-in
        (i32.lt_u
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 20)
          )
         )
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.mul
           (i32.load
            (local.get $3)
           )
           (i32.const 20)
          )
         )
        )
       )
      )
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.or
    (i32.load
     (local.get $5)
    )
    (i32.const 1024)
   )
  )
 )
 (func $_png_write_info (; 185 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (call $_png_write_info_before_PLTE
   (local.get $0)
   (local.get $1)
  )
  (if
   (i32.and
    (i32.load
     (local.tee $5
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
    )
    (i32.const 8)
   )
   (call $_png_write_PLTE
    (local.get $0)
    (i32.load
     (i32.add
      (local.get $1)
      (i32.const 16)
     )
    )
    (i32.load16_u
     (i32.add
      (local.get $1)
      (i32.const 20)
     )
    )
   )
   (if
    (i32.eq
     (i32.load8_s
      (i32.add
       (local.get $1)
       (i32.const 25)
      )
     )
     (i32.const 3)
    )
    (call $_png_error
     (local.get $0)
     (i32.const 21953)
    )
   )
  )
  (if
   (i32.and
    (local.tee $2
     (i32.load
      (local.get $5)
     )
    )
    (i32.const 16)
   )
   (block
    (local.set $6
     (i32.add
      (local.get $1)
      (i32.const 25)
     )
    )
    (if
     (i32.and
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 204)
       )
      )
      (i32.const 524288)
     )
     (if
      (i32.eq
       (i32.load8_s
        (local.get $6)
       )
       (i32.const 3)
      )
      (if
       (i32.load16_s
        (local.tee $7
         (i32.add
          (local.get $1)
          (i32.const 22)
         )
        )
       )
       (block
        (local.set $4
         (i32.add
          (local.get $1)
          (i32.const 76)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in
         (i32.store8
          (local.tee $3
           (i32.add
            (local.get $2)
            (i32.load
             (local.get $4)
            )
           )
          )
          (i32.xor
           (i32.load8_s
            (local.get $3)
           )
           (i32.const -1)
          )
         )
         (br_if $while-in
          (i32.lt_u
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (i32.load16_u
            (local.get $7)
           )
          )
         )
        )
       )
      )
     )
    )
    (call $_png_write_tRNS
     (local.get $0)
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 76)
      )
     )
     (i32.add
      (local.get $1)
      (i32.const 80)
     )
     (i32.load16_u
      (i32.add
       (local.get $1)
       (i32.const 22)
      )
     )
     (i32.load8_u
      (local.get $6)
     )
    )
    (local.set $2
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 32)
   )
   (block
    (call $_png_write_bKGD
     (local.get $0)
     (i32.add
      (local.get $1)
      (i32.const 90)
     )
     (i32.load8_u
      (i32.add
       (local.get $1)
       (i32.const 25)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 64)
   )
   (block
    (call $_png_write_hIST
     (local.get $0)
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 124)
      )
     )
     (i32.load16_u
      (i32.add
       (local.get $1)
       (i32.const 20)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 256)
   )
   (block
    (call $_png_write_oFFs
     (local.get $0)
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 100)
      )
     )
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 104)
      )
     )
     (i32.load8_u
      (i32.add
       (local.get $1)
       (i32.const 108)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 1024)
   )
   (block
    (call $_png_write_pCAL
     (local.get $0)
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 160)
      )
     )
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 164)
      )
     )
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 168)
      )
     )
     (i32.load8_u
      (i32.add
       (local.get $1)
       (i32.const 180)
      )
     )
     (i32.load8_u
      (i32.add
       (local.get $1)
       (i32.const 181)
      )
     )
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 172)
      )
     )
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 176)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 16384)
   )
   (block
    (call $_png_write_sCAL
     (local.get $0)
     (i32.load8_u
      (i32.add
       (local.get $1)
       (i32.const 220)
      )
     )
     (f64.load
      (i32.add
       (local.get $1)
       (i32.const 224)
      )
     )
     (f64.load
      (i32.add
       (local.get $1)
       (i32.const 232)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 128)
   )
   (block
    (call $_png_write_pHYs
     (local.get $0)
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 112)
      )
     )
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 116)
      )
     )
     (i32.load8_u
      (i32.add
       (local.get $1)
       (i32.const 120)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 512)
   )
   (block
    (call $_png_write_tIME
     (local.get $0)
     (i32.add
      (local.get $1)
      (i32.const 60)
     )
    )
    (i32.store
     (local.tee $2
      (i32.add
       (local.get $0)
       (i32.const 196)
      )
     )
     (i32.or
      (i32.load
       (local.get $2)
      )
      (i32.const 512)
     )
    )
    (local.set $2
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 8192)
   )
   (if
    (i32.gt_s
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $1)
        (i32.const 216)
       )
      )
     )
     (i32.const 0)
    )
    (block
     (local.set $3
      (i32.add
       (local.get $1)
       (i32.const 212)
      )
     )
     (local.set $2
      (i32.const 0)
     )
     (loop $while-in1
      (call $_png_write_sPLT
       (local.get $0)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.shl
         (local.get $2)
         (i32.const 4)
        )
       )
      )
      (br_if $while-in1
       (i32.lt_s
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.load
         (local.get $4)
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (local.tee $7
      (i32.add
       (local.get $1)
       (i32.const 48)
      )
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $3
     (i32.const 0)
    )
    (local.set $2
     (i32.load
      (local.tee $6
       (i32.add
        (local.get $1)
        (i32.const 56)
       )
      )
     )
    )
    (loop $while-in3
     (block $__rjto$0
      (block $__rjti$0
       (if
        (i32.gt_s
         (local.tee $4
          (i32.load
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 4)
            )
            (local.get $2)
           )
          )
         )
         (i32.const 0)
        )
        (block
         (call $_png_warning
          (local.get $0)
          (i32.const 21997)
         )
         (local.set $4
          (i32.const -3)
         )
         (local.set $2
          (i32.load
           (local.get $6)
          )
         )
         (br $__rjti$0)
        )
        (block $switch-default
         (block $switch-case4
          (block $switch-case
           (br_table $switch-case4 $switch-case $switch-default
            (i32.sub
             (local.get $4)
             (i32.const -1)
            )
           )
          )
          (call $_png_write_zTXt
           (local.get $0)
           (i32.load
            (i32.add
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 4)
              )
              (local.get $2)
             )
             (i32.const 4)
            )
           )
           (i32.load
            (i32.add
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 4)
              )
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $4
           (i32.const -2)
          )
          (local.set $2
           (i32.load
            (local.get $6)
           )
          )
          (br $__rjti$0)
         )
         (call $_png_write_tEXt
          (local.get $0)
          (i32.load
           (i32.add
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 4)
             )
             (local.get $2)
            )
            (i32.const 4)
           )
          )
          (i32.load
           (i32.add
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 4)
             )
             (local.get $2)
            )
            (i32.const 8)
           )
          )
         )
         (local.set $4
          (i32.const -3)
         )
         (local.set $2
          (i32.load
           (local.get $6)
          )
         )
         (br $__rjti$0)
        )
       )
       (br $__rjto$0)
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 4)
        )
        (local.get $2)
       )
       (local.get $4)
      )
     )
     (br_if $while-in3
      (i32.lt_s
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.load
        (local.get $7)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $2
     (i32.load
      (local.tee $6
       (i32.add
        (local.get $1)
        (i32.const 192)
       )
      )
     )
    )
   )
   (return)
  )
  (if
   (i32.le_s
    (local.get $2)
    (i32.const 0)
   )
   (return)
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 200)
   )
  )
  (local.set $1
   (i32.load
    (local.tee $4
     (i32.add
      (local.get $1)
      (i32.const 188)
     )
    )
   )
  )
  (loop $while-in6
   (if
    (i32.ne
     (local.tee $3
      (call $_png_handle_as_unknown
       (local.get $0)
       (local.get $1)
      )
     )
     (i32.const 1)
    )
    (if
     (i32.and
      (i32.ne
       (local.tee $2
        (i32.load8_s
         (i32.add
          (local.get $1)
          (i32.const 16)
         )
        )
       )
       (i32.const 0)
      )
      (i32.eq
       (i32.and
        (local.get $2)
        (i32.const 6)
       )
       (i32.const 2)
      )
     )
     (block $do-once
      (if
       (i32.eqz
        (i32.or
         (i32.eq
          (local.get $3)
          (i32.const 3)
         )
         (i32.ne
          (i32.and
           (i32.load8_s
            (i32.add
             (local.get $1)
             (i32.const 3)
            )
           )
           (i32.const 32)
          )
          (i32.const 0)
         )
        )
       )
       (br_if $do-once
        (i32.eqz
         (i32.and
          (i32.load
           (local.get $7)
          )
          (i32.const 65536)
         )
        )
       )
      )
      (call $_png_write_chunk
       (local.get $0)
       (local.get $1)
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 12)
        )
       )
      )
     )
    )
   )
   (br_if $while-in6
    (i32.lt_u
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 20)
      )
     )
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.mul
       (i32.load
        (local.get $6)
       )
       (i32.const 20)
      )
     )
    )
   )
  )
 )
 (func $_png_write_end (; 186 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.tee $1
       (i32.add
        (local.get $0)
        (i32.const 196)
       )
      )
     )
     (i32.const 4)
    )
   )
   (call $_png_error
    (local.get $0)
    (i32.const 22033)
   )
  )
  (i32.store
   (local.get $1)
   (i32.or
    (i32.load
     (local.get $1)
    )
    (i32.const 8)
   )
  )
  (call $_png_write_IEND
   (local.get $0)
  )
 )
 (func $_png_create_write_struct (; 187 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call $_png_create_write_struct_2
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
 )
 (func $_png_create_write_struct_2 (; 188 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local.set $19
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (local.set $23
   (i32.add
    (local.get $19)
    (i32.const 88)
   )
  )
  (local.set $24
   (i32.add
    (local.get $19)
    (i32.const 80)
   )
  )
  (local.set $9
   (i32.const 4)
  )
  (i32.store
   (local.tee $7
    (call $_malloc
     (i32.const 40)
    )
   )
   (i32.const 0)
  )
  (local.set $21
   (local.get $19)
  )
  (global.set $__THREW__
   (i32.const 0)
  )
  (local.set $10
   (call $invoke_iiii
    (i32.const 5)
    (i32.const 1)
    (i32.const 0)
    (i32.const 0)
   )
  )
  (local.set $4
   (global.get $__THREW__)
  )
  (global.set $__THREW__
   (i32.const 0)
  )
  (if
   (i32.and
    (i32.ne
     (local.get $4)
     (i32.const 0)
    )
    (i32.ne
     (global.get $threwValue)
     (i32.const 0)
    )
   )
   (block
    (if
     (i32.eqz
      (local.tee $5
       (call $_testSetjmp
        (i32.load
         (local.get $4)
        )
        (local.get $7)
        (i32.const 4)
       )
      )
     )
     (call $_longjmp
      (local.get $4)
      (global.get $threwValue)
     )
    )
    (call $setTempRet0
     (global.get $threwValue)
    )
   )
   (local.set $5
    (i32.const -1)
   )
  )
  (local.set $4
   (call $getTempRet0)
  )
  (block $label$break$L1
   (block $switch-default8
    (block $switch-case0
     (block $switch-case
      (br_table $switch-case $switch-case0 $switch-default8
       (i32.sub
        (local.get $5)
        (i32.const 1)
       )
      )
     )
     (local.set $11
      (local.get $4)
     )
     (local.set $8
      (i32.const 36)
     )
     (br $label$break$L1)
    )
    (local.set $13
     (local.get $4)
    )
    (br $label$break$L1)
   )
   (if
    (i32.eqz
     (local.get $10)
    )
    (block
     (call $_free
      (local.get $7)
     )
     (global.set $STACKTOP
      (local.get $19)
     )
     (return
      (i32.const 0)
     )
    )
   )
   (global.set $__THREW__
    (i32.const 0)
   )
   (call $invoke_vi
    (i32.const 2)
    (local.get $10)
   )
   (local.set $4
    (global.get $__THREW__)
   )
   (global.set $__THREW__
    (i32.const 0)
   )
   (if
    (i32.and
     (i32.ne
      (local.get $4)
      (i32.const 0)
     )
     (i32.ne
      (global.get $threwValue)
      (i32.const 0)
     )
    )
    (block
     (if
      (i32.eqz
       (local.tee $5
        (call $_testSetjmp
         (i32.load
          (local.get $4)
         )
         (local.get $7)
         (i32.const 4)
        )
       )
      )
      (call $_longjmp
       (local.get $4)
       (global.get $threwValue)
      )
     )
     (call $setTempRet0
      (global.get $threwValue)
     )
    )
    (local.set $5
     (i32.const -1)
    )
   )
   (local.set $4
    (call $getTempRet0)
   )
   (block $switch1
    (block $switch-case3
     (block $switch-case2
      (br_table $switch-case2 $switch-case3 $switch1
       (i32.sub
        (local.get $5)
        (i32.const 1)
       )
      )
     )
     (local.set $14
      (local.get $10)
     )
     (local.set $11
      (local.get $4)
     )
     (local.set $8
      (i32.const 36)
     )
     (br $label$break$L1)
    )
    (local.set $6
     (local.get $10)
    )
    (local.set $13
     (local.get $4)
    )
    (br $label$break$L1)
   )
   (local.set $7
    (call $_saveSetjmp
     (local.get $10)
     (i32.const 2)
     (local.get $7)
     (i32.const 4)
    )
   )
   (local.set $9
    (call $getTempRet0)
   )
   (global.set $__THREW__
    (i32.const 0)
   )
   (local.set $4
    (global.get $__THREW__)
   )
   (global.set $__THREW__
    (i32.const 0)
   )
   (if
    (i32.and
     (i32.ne
      (local.get $4)
      (i32.const 0)
     )
     (i32.ne
      (global.get $threwValue)
      (i32.const 0)
     )
    )
    (block
     (if
      (i32.eqz
       (local.tee $5
        (call $_testSetjmp
         (i32.load
          (local.get $4)
         )
         (local.get $7)
         (local.get $9)
        )
       )
      )
      (call $_longjmp
       (local.get $4)
       (global.get $threwValue)
      )
     )
     (call $setTempRet0
      (global.get $threwValue)
     )
    )
    (local.set $5
     (i32.const -1)
    )
   )
   (local.set $4
    (call $getTempRet0)
   )
   (block $switch4
    (block $switch-case6
     (block $switch-case5
      (br_table $switch-case5 $switch-case6 $switch4
       (i32.sub
        (local.get $5)
        (i32.const 1)
       )
      )
     )
     (local.set $16
      (local.get $10)
     )
     (local.set $14
      (local.get $10)
     )
     (local.set $11
      (local.get $4)
     )
     (local.set $8
      (i32.const 36)
     )
     (br $label$break$L1)
    )
    (local.set $6
     (local.tee $12
      (local.get $10)
     )
    )
    (local.set $13
     (local.get $4)
    )
    (br $label$break$L1)
   )
   (local.set $6
    (local.tee $12
     (local.get $10)
    )
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (loop $label$continue$L8
     (block $__rjti$0
      (if
       (i32.eq
        (local.get $8)
        (i32.const 36)
       )
       (block
        (local.set $8
         (i32.const 0)
        )
        (br_if $__rjti$2
         (i32.eqz
          (local.get $11)
         )
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_v
         (i32.const 1)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch-case11
         (block $switch-case10
          (br_table $switch-case10 $switch-case11 $__rjto$2
           (i32.sub
            (local.get $5)
            (i32.const 1)
           )
          )
         )
         (local.set $11
          (local.get $4)
         )
         (local.set $8
          (i32.const 36)
         )
         (br $label$continue$L8)
        )
        (local.set $6
         (local.get $14)
        )
        (local.set $13
         (local.get $4)
        )
        (local.set $12
         (local.get $16)
        )
       )
      )
      (if
       (local.get $13)
       (block
        (local.set $4
         (i32.load
          (local.tee $5
           (i32.add
            (local.get $10)
            (i32.const 264)
           )
          )
         )
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_vii
         (i32.const 4)
         (local.get $6)
         (local.get $4)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $15
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $15
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch13
         (block $switch-case15
          (block $switch-case14
           (br_table $switch-case14 $switch-case15 $switch13
            (i32.sub
             (local.get $15)
             (i32.const 1)
            )
           )
          )
          (local.set $16
           (local.get $12)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $8
           (i32.const 36)
          )
          (br $label$continue$L8)
         )
         (local.set $13
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (i32.store
         (local.get $5)
         (i32.const 0)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_vi
         (i32.const 4)
         (local.get $10)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch-case19
         (block $switch-case18
          (br_table $switch-case18 $switch-case19 $__rjti$0
           (i32.sub
            (local.get $5)
            (i32.const 1)
           )
          )
         )
         (local.set $16
          (local.get $12)
         )
         (local.set $14
          (local.get $6)
         )
         (local.set $11
          (local.get $4)
         )
         (local.set $8
          (i32.const 36)
         )
         (br $label$continue$L8)
        )
        (local.set $13
         (local.get $4)
        )
        (br $label$continue$L8)
       )
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viiii
       (i32.const 4)
       (local.get $6)
       (i32.const 0)
       (i32.const 0)
       (i32.const 0)
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $5
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $5
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch21
       (block $switch-case23
        (block $switch-case22
         (br_table $switch-case22 $switch-case23 $switch21
          (i32.sub
           (local.get $5)
           (i32.const 1)
          )
         )
        )
        (local.set $16
         (local.get $12)
        )
        (local.set $14
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $8
         (i32.const 36)
        )
        (br $label$continue$L8)
       )
       (local.set $13
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viiii
       (i32.const 5)
       (local.get $6)
       (local.get $1)
       (local.get $2)
       (local.get $3)
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $5
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $5
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch25
       (block $switch-case27
        (block $switch-case26
         (br_table $switch-case26 $switch-case27 $switch25
          (i32.sub
           (local.get $5)
           (i32.const 1)
          )
         )
        )
        (local.set $16
         (local.get $12)
        )
        (local.set $14
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $8
         (i32.const 36)
        )
        (br $label$continue$L8)
       )
       (local.set $13
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (local.set $15
       (i32.add
        (local.get $10)
        (i32.const 200)
       )
      )
      (local.set $4
       (i32.const 0)
      )
      (loop $while-in
       (if
        (i32.ne
         (local.tee $5
          (i32.load8_s
           (i32.add
            (local.get $4)
            (i32.const 1376)
           )
          )
         )
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.get $4)
          )
         )
        )
        (i32.store
         (local.get $15)
         (i32.or
          (i32.load
           (local.get $15)
          )
          (i32.const 131072)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (local.get $5)
       )
      )
      (if
       (i32.and
        (i32.load
         (local.get $15)
        )
        (i32.const 131072)
       )
       (block $label$break$L25
        (if
         (i32.eq
          (local.tee $4
           (i32.load8_s
            (local.get $0)
           )
          )
          (i32.load8_s
           (i32.const 1376)
          )
         )
         (block $label$break$L27
          (block $switch-case33
           (block $switch-case32
            (br_table $switch-case33 $switch-case32 $label$break$L25
             (i32.sub
              (local.get $4)
              (i32.const 48)
             )
            )
           )
           (br_if $label$break$L25
            (i32.eq
             (i32.load8_s offset=2
              (local.get $0)
             )
             (i32.load8_s
              (i32.const 1378)
             )
            )
           )
           (br $label$break$L27)
          )
          (br_if $label$break$L27
           (i32.lt_s
            (i32.load8_s offset=2
             (local.get $0)
            )
            (i32.const 57)
           )
          )
          (br $label$break$L25)
         )
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (i32.store
         (local.get $24)
         (local.get $0)
        )
        (drop
         (call $invoke_iiii
          (i32.const 6)
          (local.get $21)
          (i32.const 22060)
          (local.get $24)
         )
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch35
         (block $switch-case37
          (block $switch-case36
           (br_table $switch-case36 $switch-case37 $switch35
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $16
           (local.get $12)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $8
           (i32.const 36)
          )
          (br $label$continue$L8)
         )
         (local.set $13
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_vii
         (i32.const 5)
         (local.get $6)
         (local.get $21)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch39
         (block $switch-case41
          (block $switch-case40
           (br_table $switch-case40 $switch-case41 $switch39
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $16
           (local.get $12)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $8
           (i32.const 36)
          )
          (br $label$continue$L8)
         )
         (local.set $13
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (i32.store
         (local.get $23)
         (i32.const 1376)
        )
        (drop
         (call $invoke_iiii
          (i32.const 6)
          (local.get $21)
          (i32.const 22114)
          (local.get $23)
         )
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch43
         (block $switch-case45
          (block $switch-case44
           (br_table $switch-case44 $switch-case45 $switch43
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $16
           (local.get $12)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $8
           (i32.const 36)
          )
          (br $label$continue$L8)
         )
         (local.set $13
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_vii
         (i32.const 5)
         (local.get $6)
         (local.get $21)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch47
         (block $switch-case49
          (block $switch-case48
           (br_table $switch-case48 $switch-case49 $switch47
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $16
           (local.get $12)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $8
           (i32.const 36)
          )
          (br $label$continue$L8)
         )
         (local.set $13
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (i32.store
         (local.get $15)
         (i32.const 0)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (call $invoke_vii
         (i32.const 6)
         (local.get $6)
         (i32.const 22168)
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch51
         (block $switch-case53
          (block $switch-case52
           (br_table $switch-case52 $switch-case53 $switch51
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $16
           (local.get $12)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $8
           (i32.const 36)
          )
          (br $label$continue$L8)
         )
         (local.set $13
          (local.get $4)
         )
         (br $label$continue$L8)
        )
       )
      )
      (i32.store offset=268
       (local.get $10)
       (i32.const 8192)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (local.set $5
       (call $invoke_iii
        (i32.const 4)
        (local.get $6)
        (i32.const 8192)
       )
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $15
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $15
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch55
       (block $switch-case57
        (block $switch-case56
         (br_table $switch-case56 $switch-case57 $switch55
          (i32.sub
           (local.get $15)
           (i32.const 1)
          )
         )
        )
        (local.set $16
         (local.get $12)
        )
        (local.set $14
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $8
         (i32.const 36)
        )
        (br $label$continue$L8)
       )
       (local.set $13
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (i32.store offset=264
       (local.get $10)
       (local.get $5)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (call $invoke_viiii
       (i32.const 1)
       (local.get $6)
       (i32.const 0)
       (i32.const 0)
       (i32.const 0)
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $5
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $5
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch59
       (block $switch-case61
        (block $switch-case60
         (br_table $switch-case60 $switch-case61 $switch59
          (i32.sub
           (local.get $5)
           (i32.const 1)
          )
         )
        )
        (local.set $16
         (local.get $12)
        )
        (local.set $14
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $8
         (i32.const 36)
        )
        (br $label$continue$L8)
       )
       (local.set $13
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (i32.store8 offset=597
       (local.get $10)
       (i32.const 0)
      )
      (i32.store8 offset=596
       (local.get $10)
       (i32.const 1)
      )
      (if
       (local.tee $4
        (i32.load
         (local.tee $18
          (i32.add
           (local.get $10)
           (i32.const 612)
          )
         )
        )
       )
       (block
        (local.set $17
         (i32.add
          (local.get $10)
          (i32.const 616)
         )
        )
        (local.set $22
         (i32.add
          (local.get $4)
          (i32.const 2)
         )
        )
        (local.set $18
         (i32.add
          (local.get $4)
          (i32.const 4)
         )
        )
        (local.set $15
         (i32.add
          (local.get $4)
          (i32.const 6)
         )
        )
        (local.set $5
         (i32.add
          (local.get $4)
          (i32.const 8)
         )
        )
       )
       (block
        (global.set $__THREW__
         (i32.const 0)
        )
        (local.set $5
         (call $invoke_iii
          (i32.const 4)
          (local.get $6)
          (i32.const 10)
         )
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $15
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $15
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch63
         (block $switch-case65
          (block $switch-case64
           (br_table $switch-case64 $switch-case65 $switch63
            (i32.sub
             (local.get $15)
             (i32.const 1)
            )
           )
          )
          (local.set $16
           (local.get $12)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $8
           (i32.const 36)
          )
          (br $label$continue$L8)
         )
         (local.set $13
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (i32.store
         (local.get $18)
         (local.get $5)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (local.set $17
         (call $invoke_iii
          (i32.const 4)
          (local.get $6)
          (i32.const 10)
         )
        )
        (local.set $4
         (global.get $__THREW__)
        )
        (global.set $__THREW__
         (i32.const 0)
        )
        (if
         (i32.and
          (i32.ne
           (local.get $4)
           (i32.const 0)
          )
          (i32.ne
           (global.get $threwValue)
           (i32.const 0)
          )
         )
         (block
          (if
           (i32.eqz
            (local.tee $5
             (call $_testSetjmp
              (i32.load
               (local.get $4)
              )
              (local.get $7)
              (local.get $9)
             )
            )
           )
           (call $_longjmp
            (local.get $4)
            (global.get $threwValue)
           )
          )
          (call $setTempRet0
           (global.get $threwValue)
          )
         )
         (local.set $5
          (i32.const -1)
         )
        )
        (local.set $4
         (call $getTempRet0)
        )
        (block $switch67
         (block $switch-case69
          (block $switch-case68
           (br_table $switch-case68 $switch-case69 $switch67
            (i32.sub
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (local.set $16
           (local.get $12)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $11
           (local.get $4)
          )
          (local.set $8
           (i32.const 36)
          )
          (br $label$continue$L8)
         )
         (local.set $13
          (local.get $4)
         )
         (br $label$continue$L8)
        )
        (i32.store
         (local.tee $22
          (i32.add
           (local.get $10)
           (i32.const 616)
          )
         )
         (local.get $17)
        )
        (i32.store16
         (local.tee $20
          (i32.load
           (local.get $18)
          )
         )
         (i32.const 8)
        )
        (i32.store16
         (local.get $17)
         (i32.const 8)
        )
        (i32.store16
         (local.tee $18
          (i32.add
           (local.get $20)
           (i32.const 2)
          )
         )
         (i32.const 8)
        )
        (i32.store16 offset=2
         (local.get $17)
         (i32.const 8)
        )
        (i32.store16
         (local.tee $15
          (i32.add
           (local.get $20)
           (i32.const 4)
          )
         )
         (i32.const 8)
        )
        (i32.store16 offset=4
         (local.get $17)
         (i32.const 8)
        )
        (i32.store16
         (local.tee $5
          (i32.add
           (local.get $20)
           (i32.const 6)
          )
         )
         (i32.const 8)
        )
        (i32.store16 offset=6
         (local.get $17)
         (i32.const 8)
        )
        (i32.store16
         (local.tee $4
          (i32.add
           (local.get $20)
           (i32.const 8)
          )
         )
         (i32.const 8)
        )
        (i32.store16 offset=8
         (local.get $17)
         (i32.const 8)
        )
        (local.set $17
         (local.get $22)
        )
        (local.set $22
         (local.get $18)
        )
        (local.set $18
         (local.get $15)
        )
        (local.set $15
         (local.get $5)
        )
        (local.set $5
         (local.get $4)
        )
        (local.set $4
         (local.get $20)
        )
       )
      )
      (i32.store16
       (local.get $4)
       (i32.const 8)
      )
      (i32.store16
       (local.tee $4
        (i32.load
         (local.get $17)
        )
       )
       (i32.const 8)
      )
      (i32.store16
       (local.get $22)
       (i32.const 8)
      )
      (i32.store16 offset=2
       (local.get $4)
       (i32.const 8)
      )
      (i32.store16
       (local.get $18)
       (i32.const 8)
      )
      (i32.store16 offset=4
       (local.get $4)
       (i32.const 8)
      )
      (i32.store16
       (local.get $15)
       (i32.const 8)
      )
      (i32.store16 offset=6
       (local.get $4)
       (i32.const 8)
      )
      (i32.store16
       (local.get $5)
       (i32.const 8)
      )
      (i32.store16 offset=8
       (local.get $4)
       (i32.const 8)
      )
      (local.set $7
       (call $_saveSetjmp
        (local.get $12)
        (i32.const 1)
        (local.get $7)
        (local.get $9)
       )
      )
      (local.set $9
       (call $getTempRet0)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (local.set $4
       (global.get $__THREW__)
      )
      (global.set $__THREW__
       (i32.const 0)
      )
      (if
       (i32.and
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
        (i32.ne
         (global.get $threwValue)
         (i32.const 0)
        )
       )
       (block
        (if
         (i32.eqz
          (local.tee $5
           (call $_testSetjmp
            (i32.load
             (local.get $4)
            )
            (local.get $7)
            (local.get $9)
           )
          )
         )
         (call $_longjmp
          (local.get $4)
          (global.get $threwValue)
         )
        )
        (call $setTempRet0
         (global.get $threwValue)
        )
       )
       (local.set $5
        (i32.const -1)
       )
      )
      (local.set $4
       (call $getTempRet0)
      )
      (block $switch71
       (block $switch-case73
        (block $switch-case72
         (br_table $switch-case72 $switch-case73 $switch71
          (i32.sub
           (local.get $5)
           (i32.const 1)
          )
         )
        )
        (local.set $16
         (local.get $12)
        )
        (local.set $14
         (local.get $6)
        )
        (local.set $11
         (local.get $4)
        )
        (local.set $8
         (i32.const 36)
        )
        (br $label$continue$L8)
       )
       (local.set $13
        (local.get $4)
       )
       (br $label$continue$L8)
      )
      (local.set $16
       (local.get $12)
      )
      (local.set $14
       (local.get $6)
      )
      (local.set $11
       (i32.const 0)
      )
      (local.set $8
       (i32.const 36)
      )
      (br $label$continue$L8)
     )
    )
    (call $_free
     (local.get $7)
    )
    (global.set $STACKTOP
     (local.get $19)
    )
    (return
     (i32.const 0)
    )
   )
   (call $_free
    (local.get $7)
   )
   (global.set $STACKTOP
    (local.get $19)
   )
   (return
    (local.get $14)
   )
  )
  (i32.const 0)
 )
 (func $_png_write_row (; 189 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.eqz
    (i32.load
     (local.tee $2
      (i32.add
       (local.get $0)
       (i32.const 320)
      )
     )
    )
   )
   (if
    (i32.eqz
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 384)
      )
     )
    )
    (block
     (if
      (i32.eqz
       (i32.and
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 196)
         )
        )
        (i32.const 1024)
       )
      )
      (call $_png_error
       (local.get $0)
       (i32.const 22223)
      )
     )
     (call $_png_write_start_row
      (local.get $0)
     )
    )
   )
  )
  (if
   (i32.load8_s
    (local.tee $6
     (i32.add
      (local.get $0)
      (i32.const 383)
     )
    )
   )
   (if
    (i32.and
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 204)
      )
     )
     (i32.const 2)
    )
    (block $label$break$L8
     (block $switch-case5
      (block $switch-case4
       (block $switch-case3
        (block $switch-case2
         (block $switch-case1
          (block $switch-case0
           (block $switch-case
            (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch-case5 $label$break$L8
             (i32.load8_s
              (i32.add
               (local.get $0)
               (i32.const 384)
              )
             )
            )
           )
           (br_if $label$break$L8
            (i32.eqz
             (i32.and
              (i32.load
               (local.get $2)
              )
              (i32.const 7)
             )
            )
           )
           (call $_png_write_finish_row
            (local.get $0)
           )
           (return)
          )
          (if
           (i32.eqz
            (i32.and
             (i32.load
              (local.get $2)
             )
             (i32.const 7)
            )
           )
           (br_if $label$break$L8
            (i32.ge_u
             (i32.load
              (i32.add
               (local.get $0)
               (i32.const 292)
              )
             )
             (i32.const 5)
            )
           )
          )
          (call $_png_write_finish_row
           (local.get $0)
          )
          (return)
         )
         (br_if $label$break$L8
          (i32.eq
           (i32.and
            (i32.load
             (local.get $2)
            )
            (i32.const 7)
           )
           (i32.const 4)
          )
         )
         (call $_png_write_finish_row
          (local.get $0)
         )
         (return)
        )
        (if
         (i32.eqz
          (i32.and
           (i32.load
            (local.get $2)
           )
           (i32.const 3)
          )
         )
         (br_if $label$break$L8
          (i32.ge_u
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 292)
            )
           )
           (i32.const 3)
          )
         )
        )
        (call $_png_write_finish_row
         (local.get $0)
        )
        (return)
       )
       (br_if $label$break$L8
        (i32.eq
         (i32.and
          (i32.load
           (local.get $2)
          )
          (i32.const 3)
         )
         (i32.const 2)
        )
       )
       (call $_png_write_finish_row
        (local.get $0)
       )
       (return)
      )
      (if
       (i32.eqz
        (i32.and
         (i32.load
          (local.get $2)
         )
         (i32.const 1)
        )
       )
       (br_if $label$break$L8
        (i32.ge_u
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 292)
          )
         )
         (i32.const 2)
        )
       )
      )
      (call $_png_write_finish_row
       (local.get $0)
      )
      (return)
     )
     (br_if $label$break$L8
      (i32.and
       (i32.load
        (local.get $2)
       )
       (i32.const 1)
      )
     )
     (call $_png_write_finish_row
      (local.get $0)
     )
     (return)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 356)
   )
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.const 386)
    )
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $0)
     (i32.const 348)
    )
   )
   (local.tee $5
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 304)
     )
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 358)
   )
   (local.tee $3
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 391)
     )
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 357)
   )
   (local.tee $7
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 388)
     )
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 359)
   )
   (local.tee $3
    (i32.mul
     (i32.and
      (local.get $7)
      (i32.const 255)
     )
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 352)
   )
   (local.tee $3
    (i32.shr_u
     (i32.add
      (i32.mul
       (local.get $5)
       (i32.and
        (local.get $3)
        (i32.const 255)
       )
      )
      (i32.const 7)
     )
     (i32.const 3)
    )
   )
  )
  (call $_png_memcpy_check
   (i32.add
    (i32.load
     (local.tee $5
      (i32.add
       (local.get $0)
       (i32.const 328)
      )
     )
    )
    (i32.const 1)
   )
   (local.get $1)
   (local.get $3)
  )
  (if
   (i32.load8_s
    (local.get $6)
   )
   (block
    (local.set $6
     (local.tee $1
      (i32.load8_u
       (i32.add
        (local.get $0)
        (i32.const 384)
       )
      )
     )
    )
    (if
     (i32.lt_s
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
      (i32.const 6)
     )
     (if
      (i32.and
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 204)
        )
       )
       (i32.const 2)
      )
      (block
       (call $_png_do_write_interlace
        (local.get $4)
        (i32.add
         (i32.load
          (local.get $5)
         )
         (i32.const 1)
        )
        (local.get $6)
       )
       (if
        (i32.eqz
         (i32.load
          (local.get $4)
         )
        )
        (block
         (call $_png_write_finish_row
          (local.get $0)
         )
         (return)
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 204)
    )
   )
   (call $_png_do_write_transformations
    (local.get $0)
   )
  )
  (if
   (i32.and
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 652)
     )
    )
    (i32.const 4)
   )
   (if
    (i32.eq
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 660)
      )
     )
     (i32.const 64)
    )
    (call $_png_do_write_intrapixel
     (local.get $4)
     (i32.add
      (i32.load
       (local.get $5)
      )
      (i32.const 1)
     )
    )
   )
  )
  (call $_png_write_find_filter
   (local.get $0)
   (local.get $4)
  )
  (if
   (i32.eqz
    (local.tee $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 504)
      )
     )
    )
   )
   (return)
  )
  (call_indirect (type $FUNCSIG$viii)
   (local.get $0)
   (i32.load
    (local.get $2)
   )
   (i32.load8_u
    (i32.add
     (local.get $0)
     (i32.const 384)
    )
   )
   (i32.add
    (i32.and
     (local.get $1)
     (i32.const 7)
    )
    (i32.const 58)
   )
  )
 )
 (func $_png_write_image (; 190 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.le_s
    (local.tee $5
     (call $_png_set_interlace_handling
      (local.get $0)
     )
    )
    (i32.const 0)
   )
   (return)
  )
  (local.set $2
   (i32.load
    (local.tee $6
     (i32.add
      (local.get $0)
      (i32.const 296)
     )
    )
   )
  )
  (loop $while-in
   (local.set $2
    (if (result i32)
     (local.get $2)
     (block (result i32)
      (local.set $4
       (i32.const 0)
      )
      (local.set $2
       (local.get $1)
      )
      (loop $while-in1 (result i32)
       (call $_png_write_row
        (local.get $0)
        (i32.load
         (local.get $2)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 4)
        )
       )
       (br_if $while-in1
        (i32.lt_u
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.tee $7
          (i32.load
           (local.get $6)
          )
         )
        )
       )
       (local.get $7)
      )
     )
     (i32.const 0)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $5)
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
    )
   )
  )
 )
 (func $_png_write_flush (; 191 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.ge_u
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 320)
     )
    )
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 300)
     )
    )
   )
   (return)
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 208)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 224)
   )
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 232)
   )
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 264)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 268)
   )
  )
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 220)
   )
  )
  (loop $while-in
   (block $while-out
    (if
     (call $_deflate
      (local.get $4)
      (i32.const 2)
     )
     (if
      (local.tee $3
       (i32.load
        (local.get $7)
       )
      )
      (call $_png_error
       (local.get $0)
       (local.get $3)
      )
      (call $_png_error
       (local.get $0)
       (i32.const 22821)
      )
     )
    )
    (br_if $while-out
     (local.tee $3
      (i32.load
       (local.get $5)
      )
     )
    )
    (call $_png_write_IDAT
     (local.get $0)
     (i32.load
      (local.get $1)
     )
     (i32.load
      (local.get $2)
     )
    )
    (i32.store
     (local.get $6)
     (i32.load
      (local.get $1)
     )
    )
    (i32.store
     (local.get $5)
     (i32.load
      (local.get $2)
     )
    )
    (br $while-in)
   )
  )
  (if
   (i32.ne
    (local.tee $4
     (i32.load
      (local.get $2)
     )
    )
    (local.get $3)
   )
   (block
    (call $_png_write_IDAT
     (local.get $0)
     (i32.load
      (local.get $1)
     )
     (i32.sub
      (local.get $4)
      (local.get $3)
     )
    )
    (i32.store
     (local.get $6)
     (i32.load
      (local.get $1)
     )
    )
    (i32.store
     (local.get $5)
     (i32.load
      (local.get $2)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 432)
   )
   (i32.const 0)
  )
  (call $_png_flush
   (local.get $0)
  )
 )
 (func $_png_destroy_write_struct (; 192 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $4
   (if (result i32)
    (local.get $0)
    (block (result i32)
     (local.set $3
      (i32.load
       (i32.add
        (local.tee $2
         (i32.load
          (local.get $0)
         )
        )
        (i32.const 672)
       )
      )
     )
     (i32.load
      (i32.add
       (local.get $2)
       (i32.const 680)
      )
     )
    )
    (i32.const 0)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (local.get $1)
     )
    )
    (br_if $__rjti$0
     (i32.eqz
      (local.tee $5
       (i32.load
        (local.get $1)
       )
      )
     )
    )
    (call $_png_free_data
     (local.get $2)
     (local.get $5)
     (i32.const 32767)
     (i32.const -1)
    )
    (if
     (i32.load
      (local.tee $6
       (i32.add
        (local.get $2)
        (i32.const 636)
       )
      )
     )
     (block
      (call $_png_free
       (local.get $2)
       (i32.load
        (local.tee $7
         (i32.add
          (local.get $2)
          (i32.const 640)
         )
        )
       )
      )
      (i32.store
       (local.get $7)
       (i32.const 0)
      )
      (i32.store
       (local.get $6)
       (i32.const 0)
      )
     )
    )
    (call $_png_destroy_struct_2
     (local.get $5)
     (local.get $4)
     (local.get $3)
    )
    (i32.store
     (local.get $1)
     (i32.const 0)
    )
    (br $__rjto$0)
   )
   (if
    (i32.eqz
     (local.get $2)
    )
    (return)
   )
  )
  (call $_png_write_destroy
   (local.get $2)
  )
  (call $_png_destroy_struct_2
   (local.get $2)
   (local.get $4)
   (local.get $3)
  )
  (i32.store
   (local.get $0)
   (i32.const 0)
  )
 )
 (func $_png_write_destroy (; 193 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 160)
   )
  )
  (call $_deflateEnd
   (i32.add
    (local.get $0)
    (i32.const 208)
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 264)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 328)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 324)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 332)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 336)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 340)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 344)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 620)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 600)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 604)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 608)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 612)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 616)
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $1)
    (local.get $0)
    (i32.const 156)
   )
  )
  (local.set $3
   (i32.load
    (local.tee $2
     (i32.add
      (local.get $0)
      (i32.const 156)
     )
    )
   )
  )
  (local.set $5
   (i32.load
    (local.tee $4
     (i32.add
      (local.get $0)
      (i32.const 160)
     )
    )
   )
  )
  (local.set $7
   (i32.load
    (local.tee $6
     (i32.add
      (local.get $0)
      (i32.const 164)
     )
    )
   )
  )
  (local.set $9
   (i32.load
    (local.tee $8
     (i32.add
      (local.get $0)
      (i32.const 680)
     )
    )
   )
  )
  (drop
   (call $_memset
    (i32.add
     (local.get $0)
     (i32.const 168)
    )
    (i32.const 0)
    (i32.const 520)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $3)
  )
  (i32.store
   (local.get $4)
   (local.get $5)
  )
  (i32.store
   (local.get $6)
   (local.get $7)
  )
  (i32.store
   (local.get $8)
   (local.get $9)
  )
  (drop
   (call $_memcpy
    (local.get $0)
    (local.get $1)
    (i32.const 156)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_png_do_write_transformations (; 194 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return)
  )
  (if
   (i32.and
    (local.tee $1
     (i32.load
      (local.tee $4
       (i32.add
        (local.get $0)
        (i32.const 204)
       )
      )
     )
    )
    (i32.const 1048576)
   )
   (if
    (local.tee $2
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 184)
      )
     )
    )
    (block
     (call_indirect (type $FUNCSIG$viii)
      (local.get $0)
      (i32.add
       (local.get $0)
       (i32.const 348)
      )
      (i32.add
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 328)
        )
       )
       (i32.const 1)
      )
      (i32.add
       (i32.and
        (local.get $2)
        (i32.const 7)
       )
       (i32.const 58)
      )
     )
     (local.set $1
      (i32.load
       (local.get $4)
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 32768)
   )
   (block
    (call $_png_do_strip_filler
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 328)
       )
      )
      (i32.const 1)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 200)
      )
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 65536)
   )
   (block
    (call $_png_do_packswap
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 328)
       )
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 4)
   )
   (block
    (call $_png_do_pack
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 328)
       )
      )
      (i32.const 1)
     )
     (i32.load8_u
      (i32.add
       (local.get $0)
       (i32.const 387)
      )
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 16)
   )
   (block
    (call $_png_do_swap
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 328)
       )
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 8)
   )
   (block
    (call $_png_do_shift
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 328)
       )
      )
      (i32.const 1)
     )
     (i32.add
      (local.get $0)
      (i32.const 477)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 524288)
   )
   (block $label$break$L23
    (local.set $2
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
    )
    (local.set $1
     (i32.add
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 328)
       )
      )
      (i32.const 1)
     )
    )
    (block $switch
     (block $switch-case6
      (block $switch-case
       (br_table $switch-case6 $switch $switch-case $switch
        (i32.sub
         (i32.load8_s
          (i32.add
           (local.get $0)
           (i32.const 356)
          )
         )
         (i32.const 4)
        )
       )
      )
      (local.set $2
       (i32.ne
        (local.tee $5
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 0)
       )
      )
      (if
       (i32.eq
        (i32.load8_s
         (i32.add
          (local.get $0)
          (i32.const 357)
         )
        )
        (i32.const 8)
       )
       (block
        (br_if $label$break$L23
         (i32.eqz
          (local.get $2)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in
         (local.set $3
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
         (i32.store8
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 3)
           )
          )
          (i32.xor
           (i32.load8_s
            (local.get $1)
           )
           (i32.const -1)
          )
         )
         (if
          (i32.ne
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (local.get $5)
          )
          (block
           (local.set $1
            (local.get $3)
           )
           (br $while-in)
          )
         )
        )
       )
       (block
        (br_if $label$break$L23
         (i32.eqz
          (local.get $2)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in1
         (i32.store8
          (local.tee $3
           (i32.add
            (local.get $1)
            (i32.const 6)
           )
          )
          (i32.xor
           (i32.load8_s
            (local.get $3)
           )
           (i32.const -1)
          )
         )
         (local.set $3
          (i32.add
           (local.get $1)
           (i32.const 8)
          )
         )
         (i32.store8
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 7)
           )
          )
          (i32.xor
           (i32.load8_s
            (local.get $1)
           )
           (i32.const -1)
          )
         )
         (if
          (i32.ne
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (local.get $5)
          )
          (block
           (local.set $1
            (local.get $3)
           )
           (br $while-in1)
          )
         )
        )
       )
      )
      (br $switch)
     )
     (local.set $2
      (i32.ne
       (local.tee $5
        (i32.load
         (local.get $2)
        )
       )
       (i32.const 0)
      )
     )
     (if
      (i32.eq
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 357)
        )
       )
       (i32.const 8)
      )
      (block
       (br_if $label$break$L23
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in3
        (local.set $3
         (i32.add
          (local.get $1)
          (i32.const 2)
         )
        )
        (i32.store8
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.xor
          (i32.load8_s
           (local.get $1)
          )
          (i32.const -1)
         )
        )
        (if
         (i32.ne
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
         (block
          (local.set $1
           (local.get $3)
          )
          (br $while-in3)
         )
        )
       )
      )
      (block
       (br_if $label$break$L23
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in5
        (i32.store8
         (local.tee $3
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
         (i32.xor
          (i32.load8_s
           (local.get $3)
          )
          (i32.const -1)
         )
        )
        (local.set $3
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
        (i32.store8
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 3)
          )
         )
         (i32.xor
          (i32.load8_s
           (local.get $1)
          )
          (i32.const -1)
         )
        )
        (if
         (i32.ne
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
         (block
          (local.set $1
           (local.get $3)
          )
          (br $while-in5)
         )
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $4)
     )
    )
    (i32.const 131072)
   )
   (block
    (call $_png_do_write_swap_alpha
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 328)
       )
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $1)
    (i32.const 1)
   )
   (block
    (call $_png_do_bgr
     (i32.add
      (local.get $0)
      (i32.const 348)
     )
     (i32.add
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 328)
       )
      )
      (i32.const 1)
     )
    )
    (local.set $1
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $1)
     (i32.const 32)
    )
   )
   (return)
  )
  (call $_png_do_invert
   (i32.add
    (local.get $0)
    (i32.const 348)
   )
   (i32.add
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 328)
     )
    )
    (i32.const 1)
   )
  )
 )
 (func $_png_do_pack (; 195 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (if
   (i32.ne
    (i32.load8_s
     (local.tee $8
      (i32.add
       (local.get $0)
       (i32.const 9)
      )
     )
    )
    (i32.const 8)
   )
   (return)
  )
  (if
   (i32.ne
    (i32.load8_s
     (local.tee $9
      (i32.add
       (local.get $0)
       (i32.const 10)
      )
     )
    )
    (i32.const 1)
   )
   (return)
  )
  (local.set $1
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case5
      (block $switch-case2
       (block $switch-case
        (br_table $switch-case $switch-case2 $switch-default $switch-case5 $switch-default
         (i32.sub
          (local.get $2)
          (i32.const 1)
         )
        )
       )
       (br $switch
        (if (result i32)
         (local.tee $7
          (i32.load
           (local.get $0)
          )
         )
         (block (result i32)
          (local.set $5
           (local.get $1)
          )
          (local.set $3
           (i32.const 128)
          )
          (loop $while-in
           (local.set $4
            (i32.or
             (local.get $4)
             (select
              (local.get $3)
              (i32.const 0)
              (i32.load8_s
               (local.get $1)
              )
             )
            )
           )
           (local.set $3
            (if (result i32)
             (i32.gt_s
              (local.get $3)
              (i32.const 1)
             )
             (i32.shr_u
              (local.get $3)
              (i32.const 1)
             )
             (block (result i32)
              (i32.store8
               (local.get $5)
               (local.get $4)
              )
              (local.set $5
               (i32.add
                (local.get $5)
                (i32.const 1)
               )
              )
              (local.set $4
               (i32.const 0)
              )
              (i32.const 128)
             )
            )
           )
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (br_if $while-in
            (i32.ne
             (local.get $7)
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
            )
           )
          )
          (if (result i32)
           (i32.eq
            (local.get $3)
            (i32.const 128)
           )
           (local.get $0)
           (block (result i32)
            (i32.store8
             (local.get $5)
             (local.get $4)
            )
            (local.get $0)
           )
          )
         )
         (local.get $0)
        )
       )
      )
      (br $switch
       (if (result i32)
        (local.tee $7
         (i32.load
          (local.get $0)
         )
        )
        (block (result i32)
         (local.set $3
          (i32.const 6)
         )
         (local.set $5
          (local.get $1)
         )
         (loop $while-in1
          (local.set $4
           (i32.or
            (local.get $4)
            (i32.shl
             (i32.and
              (i32.load8_s
               (local.get $1)
              )
              (i32.const 3)
             )
             (local.get $3)
            )
           )
          )
          (local.set $3
           (if (result i32)
            (local.get $3)
            (i32.add
             (local.get $3)
             (i32.const -2)
            )
            (block (result i32)
             (i32.store8
              (local.get $5)
              (local.get $4)
             )
             (local.set $4
              (i32.const 0)
             )
             (local.set $5
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (i32.const 6)
            )
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (br_if $while-in1
           (i32.ne
            (local.tee $6
             (i32.add
              (local.get $6)
              (i32.const 1)
             )
            )
            (local.get $7)
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.get $3)
           (i32.const 6)
          )
          (local.get $0)
          (block (result i32)
           (i32.store8
            (local.get $5)
            (local.get $4)
           )
           (local.get $0)
          )
         )
        )
        (local.get $0)
       )
      )
     )
     (br $switch
      (if (result i32)
       (local.tee $7
        (i32.load
         (local.get $0)
        )
       )
       (block (result i32)
        (local.set $3
         (i32.const 4)
        )
        (local.set $5
         (local.get $1)
        )
        (loop $while-in4
         (local.set $4
          (i32.or
           (local.get $4)
           (i32.shl
            (i32.and
             (i32.load8_s
              (local.get $1)
             )
             (i32.const 15)
            )
            (local.get $3)
           )
          )
         )
         (local.set $3
          (if (result i32)
           (local.get $3)
           (i32.add
            (local.get $3)
            (i32.const -4)
           )
           (block (result i32)
            (i32.store8
             (local.get $5)
             (local.get $4)
            )
            (local.set $4
             (i32.const 0)
            )
            (local.set $5
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (i32.const 4)
           )
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (br_if $while-in4
          (i32.ne
           (local.tee $6
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
           (local.get $7)
          )
         )
        )
        (if (result i32)
         (i32.eq
          (local.get $3)
          (i32.const 4)
         )
         (local.get $0)
         (block (result i32)
          (i32.store8
           (local.get $5)
           (local.get $4)
          )
          (local.get $0)
         )
        )
       )
       (local.get $0)
      )
     )
    )
    (local.get $0)
   )
  )
  (i32.store8
   (local.get $8)
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 11)
   )
   (local.tee $2
    (i32.mul
     (local.get $2)
     (i32.load8_u
      (local.get $9)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (i32.load
       (local.get $1)
      )
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
 )
 (func $_png_do_shift (; 196 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.eq
    (local.tee $8
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
    (i32.const 3)
   )
   (block
    (global.set $STACKTOP
     (local.get $10)
    )
    (return)
   )
  )
  (local.set $9
   (i32.add
    (local.get $10)
    (i32.const 16)
   )
  )
  (local.set $7
   (local.get $10)
  )
  (local.set $4
   (i32.and
    (local.tee $5
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 9)
      )
     )
    )
    (i32.const 255)
   )
  )
  (local.set $3
   (if (result i32)
    (i32.and
     (local.get $8)
     (i32.const 2)
    )
    (block (result i32)
     (local.set $6
      (i32.load8_u
       (local.get $2)
      )
     )
     (i32.store
      (i32.add
       (local.get $9)
       (i32.const 4)
      )
      (i32.sub
       (local.get $4)
       (local.tee $3
        (i32.load8_u
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (local.get $7)
       (i32.const 4)
      )
      (local.get $3)
     )
     (i32.store
      (i32.add
       (local.get $9)
       (i32.const 8)
      )
      (i32.sub
       (local.get $4)
       (local.tee $3
        (i32.load8_u
         (i32.add
          (local.get $2)
          (i32.const 2)
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (local.get $7)
       (i32.const 8)
      )
      (local.get $3)
     )
     (i32.const 3)
    )
    (block (result i32)
     (local.set $6
      (i32.load8_u
       (i32.add
        (local.get $2)
        (i32.const 3)
       )
      )
     )
     (i32.const 1)
    )
   )
  )
  (i32.store
   (local.get $9)
   (i32.sub
    (local.get $4)
    (local.get $6)
   )
  )
  (i32.store
   (local.get $7)
   (local.get $6)
  )
  (local.set $6
   (if (result i32)
    (i32.and
     (local.get $8)
     (i32.const 4)
    )
    (block (result i32)
     (i32.store
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (local.get $9)
      )
      (i32.sub
       (local.get $4)
       (local.tee $6
        (i32.load8_u
         (i32.add
          (local.get $2)
          (i32.const 4)
         )
        )
       )
      )
     )
     (i32.store
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (local.get $7)
      )
      (local.get $6)
     )
     (i32.add
      (local.get $3)
      (i32.const 1)
     )
    )
    (local.get $3)
   )
  )
  (if
   (i32.lt_s
    (i32.and
     (local.get $5)
     (i32.const 255)
    )
    (i32.const 8)
   )
   (block
    (local.set $6
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
    )
    (local.set $5
     (if (result i32)
      (i32.and
       (i32.eq
        (local.tee $0
         (i32.load8_s
          (i32.add
           (local.get $2)
           (i32.const 3)
          )
         )
        )
        (i32.const 1)
       )
       (i32.eq
        (local.get $5)
        (i32.const 2)
       )
      )
      (i32.const 85)
      (select
       (i32.const 17)
       (i32.const 255)
       (i32.and
        (i32.eq
         (local.get $5)
         (i32.const 4)
        )
        (i32.eq
         (local.get $0)
         (i32.const 3)
        )
       )
      )
     )
    )
    (if
     (local.get $6)
     (block
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in
       (local.set $3
        (i32.load8_u
         (local.get $1)
        )
       )
       (i32.store8
        (local.get $1)
        (i32.const 0)
       )
       (if
        (i32.gt_s
         (local.tee $0
          (i32.load
           (local.get $9)
          )
         )
         (i32.sub
          (i32.const 0)
          (i32.load
           (local.get $7)
          )
         )
        )
        (block
         (local.set $4
          (i32.and
           (local.get $3)
           (i32.const 255)
          )
         )
         (local.set $3
          (i32.const 0)
         )
         (loop $while-in1
          (i32.store8
           (local.get $1)
           (local.tee $3
            (i32.or
             (if (result i32)
              (i32.gt_s
               (local.get $0)
               (i32.const 0)
              )
              (i32.and
               (i32.shl
                (local.get $4)
                (local.get $0)
               )
               (i32.const 255)
              )
              (i32.and
               (local.get $5)
               (i32.shr_u
                (local.get $4)
                (i32.sub
                 (i32.const 0)
                 (local.get $0)
                )
               )
              )
             )
             (i32.and
              (local.get $3)
              (i32.const 255)
             )
            )
           )
          )
          (br_if $while-in1
           (i32.gt_s
            (local.tee $0
             (i32.sub
              (local.get $0)
              (local.tee $8
               (i32.load
                (local.get $7)
               )
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $8)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (i32.ne
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.get $6)
        )
       )
      )
     )
    )
   )
   (block $label$break$L11
    (local.set $0
     (i32.ne
      (local.tee $8
       (i32.mul
        (local.get $6)
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.const 0)
     )
    )
    (if
     (i32.eq
      (local.get $5)
      (i32.const 8)
     )
     (block
      (br_if $label$break$L11
       (i32.eqz
        (local.get $0)
       )
      )
      (local.set $3
       (local.get $1)
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in3
       (local.set $2
        (i32.rem_u
         (local.get $1)
         (local.get $6)
        )
       )
       (local.set $5
        (i32.load8_u
         (local.get $3)
        )
       )
       (i32.store8
        (local.get $3)
        (i32.const 0)
       )
       (if
        (i32.gt_s
         (local.tee $0
          (i32.load
           (i32.add
            (i32.shl
             (local.get $2)
             (i32.const 2)
            )
            (local.get $9)
           )
          )
         )
         (i32.sub
          (i32.const 0)
          (i32.load
           (local.tee $4
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (local.get $7)
            )
           )
          )
         )
        )
        (block
         (local.set $5
          (i32.and
           (local.get $5)
           (i32.const 255)
          )
         )
         (local.set $2
          (i32.const 0)
         )
         (loop $while-in5
          (i32.store8
           (local.get $3)
           (local.tee $2
            (i32.or
             (i32.and
              (local.get $2)
              (i32.const 255)
             )
             (select
              (i32.and
               (i32.shl
                (local.get $5)
                (local.get $0)
               )
               (i32.const 255)
              )
              (i32.shr_u
               (local.get $5)
               (i32.sub
                (i32.const 0)
                (local.get $0)
               )
              )
              (i32.gt_s
               (local.get $0)
               (i32.const 0)
              )
             )
            )
           )
          )
          (br_if $while-in5
           (i32.gt_s
            (local.tee $0
             (i32.sub
              (local.get $0)
              (local.tee $11
               (i32.load
                (local.get $4)
               )
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $11)
            )
           )
          )
         )
        )
       )
       (br_if $label$break$L11
        (i32.eq
         (local.get $8)
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
    )
    (if
     (local.get $0)
     (block
      (local.set $3
       (i32.const 0)
      )
      (loop $while-in7
       (local.set $4
        (i32.or
         (i32.load8_u
          (local.tee $13
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
         (i32.shl
          (i32.load8_u
           (local.get $1)
          )
          (i32.const 8)
         )
        )
       )
       (local.set $0
        (if (result i32)
         (i32.gt_s
          (local.tee $0
           (i32.load
            (i32.add
             (i32.shl
              (local.tee $2
               (i32.rem_u
                (local.get $3)
                (local.get $6)
               )
              )
              (i32.const 2)
             )
             (local.get $9)
            )
           )
          )
          (local.tee $12
           (i32.sub
            (i32.const 0)
            (local.tee $11
             (i32.load
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 2)
               )
               (local.get $7)
              )
             )
            )
           )
          )
         )
         (block (result i32)
          (local.set $5
           (i32.shr_u
            (i32.and
             (local.tee $2
              (select
               (i32.and
                (i32.shl
                 (local.get $4)
                 (local.get $0)
                )
                (i32.const 65535)
               )
               (i32.shr_u
                (local.get $4)
                (i32.sub
                 (i32.const 0)
                 (local.get $0)
                )
               )
               (i32.gt_s
                (local.get $0)
                (i32.const 0)
               )
              )
             )
             (i32.const 65535)
            )
            (i32.const 8)
           )
          )
          (local.set $2
           (if (result i32)
            (i32.gt_s
             (local.tee $0
              (i32.sub
               (local.get $0)
               (local.get $11)
              )
             )
             (local.get $12)
            )
            (block (result i32)
             (loop $while-in9
              (local.set $2
               (i32.or
                (i32.and
                 (local.get $2)
                 (i32.const 65535)
                )
                (select
                 (i32.and
                  (i32.shl
                   (local.get $4)
                   (local.get $0)
                  )
                  (i32.const 65535)
                 )
                 (i32.shr_u
                  (local.get $4)
                  (i32.sub
                   (i32.const 0)
                   (local.get $0)
                  )
                 )
                 (i32.gt_s
                  (local.get $0)
                  (i32.const 0)
                 )
                )
               )
              )
              (br_if $while-in9
               (i32.gt_s
                (local.tee $0
                 (i32.sub
                  (local.get $0)
                  (local.get $11)
                 )
                )
                (local.get $12)
               )
              )
             )
             (i32.shr_u
              (i32.and
               (local.tee $0
                (local.get $2)
               )
               (i32.const 65535)
              )
              (i32.const 8)
             )
            )
            (block (result i32)
             (local.set $0
              (local.get $2)
             )
             (local.get $5)
            )
           )
          )
          (i32.and
           (local.get $0)
           (i32.const 255)
          )
         )
         (block (result i32)
          (local.set $2
           (i32.const 0)
          )
          (i32.const 0)
         )
        )
       )
       (i32.store8
        (local.get $1)
        (local.get $2)
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 2)
        )
       )
       (i32.store8
        (local.get $13)
        (local.get $0)
       )
       (br_if $while-in7
        (i32.ne
         (local.get $8)
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $_png_do_write_swap_alpha (; 197 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (block $switch
   (block $switch-case6
    (block $switch-case
     (br_table $switch-case6 $switch $switch-case $switch
      (i32.sub
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 8)
        )
       )
       (i32.const 4)
      )
     )
    )
    (local.set $2
     (i32.ne
      (local.tee $5
       (i32.load
        (local.get $0)
       )
      )
      (i32.const 0)
     )
    )
    (if
     (i32.eq
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 9)
       )
      )
      (i32.const 8)
     )
     (block
      (if
       (i32.eqz
        (local.get $2)
       )
       (return)
      )
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in
       (local.set $3
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.store8
        (local.get $1)
        (i32.load8_s
         (local.tee $2
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.tee $6
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
        )
       )
       (local.set $2
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (i32.store8
        (local.get $6)
        (i32.load8_s
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 3)
          )
         )
        )
       )
       (i32.store8
        (local.get $1)
        (local.get $3)
       )
       (if
        (i32.ne
         (local.get $5)
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
        (block
         (local.set $1
          (local.get $2)
         )
         (br $while-in)
        )
       )
      )
      (return)
     )
     (block
      (if
       (i32.eqz
        (local.get $2)
       )
       (return)
      )
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in1
       (local.set $3
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $6
        (i32.load8_s
         (local.tee $2
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
       (i32.store8
        (local.get $1)
        (i32.load8_s
         (local.tee $4
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
        )
       )
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.tee $2
          (i32.add
           (local.get $1)
           (i32.const 3)
          )
         )
        )
       )
       (i32.store8
        (local.get $4)
        (i32.load8_s
         (local.tee $4
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
        )
       )
       (i32.store8
        (local.get $2)
        (i32.load8_s
         (local.tee $7
          (i32.add
           (local.get $1)
           (i32.const 5)
          )
         )
        )
       )
       (i32.store8
        (local.get $4)
        (i32.load8_s
         (local.tee $4
          (i32.add
           (local.get $1)
           (i32.const 6)
          )
         )
        )
       )
       (local.set $2
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (i32.store8
        (local.get $7)
        (i32.load8_s
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 7)
          )
         )
        )
       )
       (i32.store8
        (local.get $4)
        (local.get $3)
       )
       (i32.store8
        (local.get $1)
        (local.get $6)
       )
       (if
        (i32.ne
         (local.get $5)
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
        (block
         (local.set $1
          (local.get $2)
         )
         (br $while-in1)
        )
       )
      )
      (return)
     )
    )
   )
   (local.set $2
    (i32.ne
     (local.tee $5
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 0)
    )
   )
   (if
    (i32.eq
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 9)
      )
     )
     (i32.const 8)
    )
    (block
     (if
      (i32.eqz
       (local.get $2)
      )
      (return)
     )
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in3
      (local.set $3
       (i32.load8_s
        (local.get $1)
       )
      )
      (local.set $2
       (i32.add
        (local.get $1)
        (i32.const 2)
       )
      )
      (i32.store8
       (local.get $1)
       (i32.load8_s
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
      (i32.store8
       (local.get $1)
       (local.get $3)
      )
      (if
       (i32.ne
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (local.get $5)
       )
       (block
        (local.set $1
         (local.get $2)
        )
        (br $while-in3)
       )
      )
     )
    )
    (block
     (if
      (i32.eqz
       (local.get $2)
      )
      (return)
     )
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in5
      (local.set $3
       (i32.load8_s
        (local.get $1)
       )
      )
      (local.set $4
       (i32.load8_s
        (local.tee $6
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
      (i32.store8
       (local.get $1)
       (i32.load8_s
        (local.tee $7
         (i32.add
          (local.get $1)
          (i32.const 2)
         )
        )
       )
      )
      (local.set $2
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
      (i32.store8
       (local.get $6)
       (i32.load8_s
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
        )
       )
      )
      (i32.store8
       (local.get $7)
       (local.get $3)
      )
      (i32.store8
       (local.get $1)
       (local.get $4)
      )
      (if
       (i32.ne
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (local.get $5)
       )
       (block
        (local.set $1
         (local.get $2)
        )
        (br $while-in5)
       )
      )
     )
    )
   )
  )
 )
 (func $_png_do_write_intrapixel (; 198 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   (i32.eqz
    (i32.and
     (local.tee $2
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
     )
     (i32.const 2)
    )
   )
   (return)
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (block $switch
   (block $switch-case9
    (block $switch-case2
     (br_table $switch-case2 $switch $switch $switch $switch $switch $switch $switch $switch-case9 $switch
      (i32.sub
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 9)
        )
       )
       (i32.const 8)
      )
     )
    )
    (block $switch0
     (block $switch-default
      (block $switch-case1
       (block $switch-case
        (br_table $switch-case $switch-default $switch-default $switch-default $switch-case1 $switch-default
         (i32.sub
          (local.get $2)
          (i32.const 2)
         )
        )
       )
       (local.set $2
        (i32.const 3)
       )
       (br $switch0)
      )
      (local.set $2
       (i32.const 4)
      )
      (br $switch0)
     )
     (return)
    )
    (if
     (i32.eqz
      (local.get $4)
     )
     (return)
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (i32.store8
      (local.get $1)
      (i32.sub
       (i32.load8_u
        (local.get $1)
       )
       (local.tee $5
        (i32.load8_u
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
     )
     (i32.store8
      (local.tee $3
       (i32.add
        (local.get $1)
        (i32.const 2)
       )
      )
      (i32.sub
       (i32.load8_u
        (local.get $3)
       )
       (local.get $5)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $2)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.get $4)
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
    (return)
   )
   (block $switch3
    (block $switch-default6
     (block $switch-case5
      (block $switch-case4
       (br_table $switch-case4 $switch-default6 $switch-default6 $switch-default6 $switch-case5 $switch-default6
        (i32.sub
         (local.get $2)
         (i32.const 2)
        )
       )
      )
      (local.set $2
       (i32.const 6)
      )
      (br $switch3)
     )
     (local.set $2
      (i32.const 8)
     )
     (br $switch3)
    )
    (return)
   )
   (if
    (i32.eqz
     (local.get $4)
    )
    (return)
   )
   (local.set $0
    (i32.const 0)
   )
   (loop $while-in8
    (local.set $5
     (i32.sub
      (i32.or
       (i32.load8_u
        (local.tee $6
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
       (i32.shl
        (i32.load8_u
         (local.get $1)
        )
        (i32.const 8)
       )
      )
      (local.tee $3
       (i32.or
        (i32.load8_u
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
        )
        (i32.shl
         (i32.load8_u
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
         (i32.const 8)
        )
       )
      )
     )
    )
    (local.set $3
     (i32.sub
      (i32.or
       (i32.load8_u
        (local.tee $8
         (i32.add
          (local.get $1)
          (i32.const 5)
         )
        )
       )
       (i32.shl
        (i32.load8_u
         (local.tee $7
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
        )
        (i32.const 8)
       )
      )
      (local.get $3)
     )
    )
    (i32.store8
     (local.get $1)
     (i32.shr_u
      (local.get $5)
      (i32.const 8)
     )
    )
    (i32.store8
     (local.get $6)
     (local.get $5)
    )
    (i32.store8
     (local.get $7)
     (i32.shr_u
      (local.get $3)
      (i32.const 8)
     )
    )
    (i32.store8
     (local.get $8)
     (local.get $3)
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
    (br_if $while-in8
     (i32.ne
      (local.get $4)
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
     )
    )
   )
  )
 )
 (func $_png_write_chunk (; 199 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.tee $4
    (local.get $5)
   )
   (i32.shr_u
    (local.get $3)
    (i32.const 24)
   )
  )
  (i32.store8
   (local.tee $6
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
   (i32.shr_u
    (local.get $3)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.tee $7
    (i32.add
     (local.get $4)
     (i32.const 2)
    )
   )
   (i32.shr_u
    (local.get $3)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.tee $8
    (i32.add
     (local.get $4)
     (i32.const 3)
    )
   )
   (local.get $3)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $4)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $1)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $1)
   (i32.const 4)
  )
  (if
   (i32.and
    (i32.ne
     (local.get $2)
     (i32.const 0)
    )
    (i32.ne
     (local.get $3)
     (i32.const 0)
    )
   )
   (block
    (call $_png_calculate_crc
     (local.get $0)
     (local.get $2)
     (local.get $3)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $2)
     (local.get $3)
    )
   )
  )
  (i32.store8
   (local.get $4)
   (i32.shr_u
    (local.tee $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $6)
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $7)
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $8)
   (local.get $1)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $4)
   (i32.const 4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_png_write_sig (; 200 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i64.store
   (local.get $1)
   (i64.const 727905341920923785)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.add
    (local.get $1)
    (local.tee $3
     (i32.load8_u
      (local.tee $2
       (i32.add
        (local.get $0)
        (i32.const 392)
       )
      )
     )
    )
   )
   (i32.sub
    (i32.const 8)
    (local.get $3)
   )
  )
  (if
   (i32.ge_s
    (i32.load8_u
     (local.get $2)
    )
    (i32.const 3)
   )
   (block
    (global.set $STACKTOP
     (local.get $1)
    )
    (return)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 196)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 4096)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_png_write_IHDR (; 201 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $9
   (i32.add
    (local.get $10)
    (i32.const 16)
   )
  )
  (local.set $8
   (local.get $10)
  )
  (block $label$break$L1
   (block $switch-default28
    (block $switch-case27
     (block $switch-case22
      (block $switch-case17
       (block $switch-case10
        (block $switch-case5
         (br_table $switch-case5 $switch-default28 $switch-case10 $switch-case17 $switch-case22 $switch-default28 $switch-case27 $switch-default28
          (local.get $4)
         )
        )
        (block $switch-default
         (block $switch-case4
          (br_table $switch-case4 $switch-case4 $switch-default $switch-case4 $switch-default $switch-default $switch-default $switch-case4 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case4 $switch-default
           (i32.sub
            (local.get $3)
            (i32.const 1)
           )
          )
         )
         (i32.store8
          (i32.add
           (local.get $0)
           (i32.const 390)
          )
          (i32.const 1)
         )
         (br $label$break$L1)
        )
        (call $_png_error
         (local.get $0)
         (i32.const 22277)
        )
        (br $label$break$L1)
       )
       (block $switch6
        (block $switch-default9
         (br_table $switch6 $switch-default9 $switch-default9 $switch-default9 $switch-default9 $switch-default9 $switch-default9 $switch-default9 $switch6 $switch-default9
          (i32.sub
           (local.get $3)
           (i32.const 8)
          )
         )
        )
        (call $_png_error
         (local.get $0)
         (i32.const 22315)
        )
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 390)
        )
        (i32.const 3)
       )
       (br $label$break$L1)
      )
      (block $switch-default16
       (block $switch-case15
        (br_table $switch-case15 $switch-case15 $switch-default16 $switch-case15 $switch-default16 $switch-default16 $switch-default16 $switch-case15 $switch-default16
         (i32.sub
          (local.get $3)
          (i32.const 1)
         )
        )
       )
       (i32.store8
        (i32.add
         (local.get $0)
         (i32.const 390)
        )
        (i32.const 1)
       )
       (br $label$break$L1)
      )
      (call $_png_error
       (local.get $0)
       (i32.const 22347)
      )
      (br $label$break$L1)
     )
     (block $switch18
      (block $switch-default21
       (br_table $switch18 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch18 $switch-default21
        (i32.sub
         (local.get $3)
         (i32.const 8)
        )
       )
      )
      (call $_png_error
       (local.get $0)
       (i32.const 22384)
      )
     )
     (i32.store8
      (i32.add
       (local.get $0)
       (i32.const 390)
      )
      (i32.const 2)
     )
     (br $label$break$L1)
    )
    (block $switch23
     (block $switch-default26
      (br_table $switch23 $switch-default26 $switch-default26 $switch-default26 $switch-default26 $switch-default26 $switch-default26 $switch-default26 $switch23 $switch-default26
       (i32.sub
        (local.get $3)
        (i32.const 8)
       )
      )
     )
     (call $_png_error
      (local.get $0)
      (i32.const 22428)
     )
    )
    (i32.store8
     (i32.add
      (local.get $0)
      (i32.const 390)
     )
     (i32.const 4)
    )
    (br $label$break$L1)
   )
   (call $_png_error
    (local.get $0)
    (i32.const 22461)
   )
  )
  (if
   (local.get $5)
   (call $_png_warning
    (local.get $0)
    (i32.const 22496)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (i32.and
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 652)
         )
        )
        (i32.const 4)
       )
      )
     )
     (br_if $__rjti$0
      (i32.and
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 196)
        )
       )
       (i32.const 4096)
      )
     )
     (br_if $__rjti$1
      (i32.and
       (i32.or
        (i32.ne
         (i32.or
          (local.get $4)
          (i32.const 4)
         )
         (i32.const 6)
        )
        (i32.ne
         (local.get $6)
         (i32.const 64)
        )
       )
       (i32.ne
        (local.get $6)
        (i32.const 0)
       )
      )
     )
     (br $__rjto$1)
    )
    (br_if $__rjti$1
     (local.get $6)
    )
    (local.set $6
     (i32.const 0)
    )
    (br $__rjto$1)
   )
   (call $_png_warning
    (local.get $0)
    (i32.const 22531)
   )
   (local.set $6
    (i32.const 0)
   )
  )
  (if
   (i32.gt_u
    (local.get $7)
    (i32.const 1)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 22561)
    )
    (local.set $7
     (i32.const 1)
    )
   )
  )
  (i32.store8
   (local.tee $12
    (i32.add
     (local.get $0)
     (i32.const 387)
    )
   )
   (local.tee $11
    (i32.and
     (local.get $3)
     (i32.const 255)
    )
   )
  )
  (i32.store8
   (local.tee $13
    (i32.add
     (local.get $0)
     (i32.const 386)
    )
   )
   (local.tee $14
    (i32.and
     (local.get $4)
     (i32.const 255)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 383)
   )
   (local.tee $7
    (i32.and
     (local.get $7)
     (i32.const 255)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 660)
   )
   (local.tee $5
    (i32.and
     (local.get $6)
     (i32.const 255)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 292)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 296)
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 389)
   )
   (local.tee $3
    (i32.mul
     (local.get $3)
     (i32.and
      (local.tee $4
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 390)
        )
       )
      )
      (i32.const 255)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 308)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (local.get $1)
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 304)
   )
   (local.get $1)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 388)
   )
   (local.get $11)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 391)
   )
   (local.get $4)
  )
  (i32.store8
   (local.get $8)
   (i32.shr_u
    (local.get $1)
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 1)
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 2)
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 3)
   )
   (local.get $1)
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 4)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 5)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 6)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 7)
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 8)
   )
   (local.get $11)
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 9)
   )
   (local.get $14)
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 10)
   )
   (i32.const 0)
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 11)
   )
   (local.get $5)
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 12)
   )
   (local.get $7)
  )
  (i32.store8
   (local.get $9)
   (i32.const 0)
  )
  (i32.store8
   (local.tee $3
    (i32.add
     (local.get $9)
     (i32.const 1)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $2
    (i32.add
     (local.get $9)
     (i32.const 2)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $1
    (i32.add
     (local.get $9)
     (i32.const 3)
    )
   )
   (i32.const 13)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $9)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17389)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17389)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $8)
   (i32.const 13)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $8)
   (i32.const 13)
  )
  (i32.store8
   (local.get $9)
   (i32.shr_u
    (local.tee $4
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $3)
   (i32.shr_u
    (local.get $4)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $2)
   (i32.shr_u
    (local.get $4)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $1)
   (local.get $4)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $9)
   (i32.const 4)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 240)
   )
   (i32.const 7)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 244)
   )
   (i32.const 7)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 248)
   )
   (local.get $0)
  )
  (if
   (i32.eqz
    (local.tee $1
     (i32.load8_s
      (local.tee $2
       (i32.add
        (local.get $0)
        (i32.const 385)
       )
      )
     )
    )
   )
   (i32.store8
    (local.get $2)
    (local.tee $1
     (if (result i32)
      (i32.eq
       (i32.load8_s
        (local.get $13)
       )
       (i32.const 3)
      )
      (i32.const 8)
      (select
       (i32.const 8)
       (i32.const -8)
       (i32.lt_s
        (i32.load8_u
         (local.get $12)
        )
        (i32.const 8)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $3
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 200)
       )
      )
     )
     (i32.const 1)
    )
   )
   (i32.store
    (i32.add
     (local.get $0)
     (i32.const 288)
    )
    (i32.ne
     (i32.and
      (local.get $1)
      (i32.const 255)
     )
     (i32.const 8)
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $3)
     (i32.const 2)
    )
   )
   (i32.store
    (i32.add
     (local.get $0)
     (i32.const 272)
    )
    (i32.const -1)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $3)
     (i32.const 4)
    )
   )
   (i32.store
    (i32.add
     (local.get $0)
     (i32.const 284)
    )
    (i32.const 8)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $3)
     (i32.const 8)
    )
   )
   (i32.store
    (i32.add
     (local.get $0)
     (i32.const 280)
    )
    (i32.const 15)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 208)
   )
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 276)
   )
  )
  (if
   (i32.and
    (local.get $3)
    (i32.const 16)
   )
   (block
    (call $_deflateInit2_
     (local.get $2)
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 272)
      )
     )
     (i32.load
      (local.get $1)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 280)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 284)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 288)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 220)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 264)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 224)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 268)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 196)
     )
     (i32.const 1)
    )
    (global.set $STACKTOP
     (local.get $10)
    )
   )
   (block
    (i32.store
     (local.get $1)
     (i32.const 8)
    )
    (call $_deflateInit2_
     (local.get $2)
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 272)
      )
     )
     (i32.const 8)
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 280)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 284)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 288)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 220)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 264)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 224)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 268)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 196)
     )
     (i32.const 1)
    )
    (global.set $STACKTOP
     (local.get $10)
    )
   )
  )
 )
 (func $_png_write_PLTE (; 202 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 386)
   )
  )
  (if
   (i32.or
    (i32.eqz
     (i32.or
      (local.get $2)
      (i32.and
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 652)
        )
       )
       (i32.const 1)
      )
     )
    )
    (i32.gt_u
     (local.get $2)
     (i32.const 256)
    )
   )
   (block $do-once
    (if
     (i32.eq
      (i32.load8_s
       (local.get $3)
      )
      (i32.const 3)
     )
     (block
      (call $_png_error
       (local.get $0)
       (i32.const 22594)
      )
      (br $do-once)
     )
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 22594)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load8_s
      (local.get $3)
     )
     (i32.const 2)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 22630)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (i32.store16
   (i32.add
    (local.get $0)
    (i32.const 372)
   )
   (local.get $2)
  )
  (i32.store8
   (local.tee $4
    (i32.add
     (local.tee $5
      (local.get $6)
     )
     (i32.const 4)
    )
   )
   (i32.shr_u
    (local.tee $3
     (i32.mul
      (local.get $2)
      (i32.const 3)
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.tee $7
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
   (i32.shr_u
    (local.get $3)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.tee $8
    (i32.add
     (local.get $4)
     (i32.const 2)
    )
   )
   (i32.shr_u
    (local.get $3)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.tee $9
    (i32.add
     (local.get $4)
     (i32.const 3)
    )
   )
   (local.get $3)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $4)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17404)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17404)
   (i32.const 4)
  )
  (if
   (local.get $2)
   (block
    (local.set $10
     (i32.add
      (local.get $5)
      (i32.const 1)
     )
    )
    (local.set $11
     (i32.add
      (local.get $5)
      (i32.const 2)
     )
    )
    (local.set $3
     (i32.const 0)
    )
    (loop $while-in
     (i32.store8
      (local.get $5)
      (i32.load8_s
       (local.get $1)
      )
     )
     (i32.store8
      (local.get $10)
      (i32.load8_s
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
     )
     (i32.store8
      (local.get $11)
      (i32.load8_s
       (i32.add
        (local.get $1)
        (i32.const 2)
       )
      )
     )
     (call $_png_calculate_crc
      (local.get $0)
      (local.get $5)
      (i32.const 3)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $5)
      (i32.const 3)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 3)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $4)
   (i32.shr_u
    (local.tee $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $7)
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $8)
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $9)
   (local.get $1)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $4)
   (i32.const 4)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 196)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 2)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_png_write_IDAT (; 203 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $_png_write_chunk
   (local.get $0)
   (i32.const 17394)
   (local.get $1)
   (local.get $2)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 196)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 4)
   )
  )
 )
 (func $_png_write_IEND (; 204 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (local.set $4
   (i32.add
    (local.get $1)
    (i32.const 2)
   )
  )
  (local.set $5
   (i32.add
    (local.get $1)
    (i32.const 3)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 0)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $1)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17399)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17399)
   (i32.const 4)
  )
  (i32.store8
   (local.get $1)
   (i32.shr_u
    (local.tee $2
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $3)
   (i32.shr_u
    (local.get $2)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $4)
   (i32.shr_u
    (local.get $2)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $5)
   (local.get $2)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $1)
   (i32.const 4)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 196)
    )
   )
   (i32.or
    (i32.load
     (local.get $0)
    )
    (i32.const 16)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_png_write_gAMA (; 205 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $2)
   (i32.shr_u
    (local.tee $4
     (i32.trunc_f64_u
      (f64.add
       (f64.mul
        (local.get $1)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
   (i32.shr_u
    (local.get $4)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.const 2)
   )
   (i32.shr_u
    (local.get $4)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.const 3)
   )
   (local.get $4)
  )
  (i32.store8
   (local.tee $3
    (i32.add
     (local.get $2)
     (i32.const 4)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $6
    (i32.add
     (local.get $3)
     (i32.const 1)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $7
    (i32.add
     (local.get $3)
     (i32.const 2)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 3)
    )
   )
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17419)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17419)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $2)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $2)
   (i32.const 4)
  )
  (i32.store8
   (local.get $3)
   (i32.shr_u
    (local.tee $5
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $6)
   (i32.shr_u
    (local.get $5)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $7)
   (i32.shr_u
    (local.get $5)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $4)
   (local.get $5)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_png_write_sRGB (; 206 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 3)
   )
   (call $_png_warning
    (local.get $0)
    (i32.const 22686)
   )
  )
  (i32.store8
   (local.get $2)
   (local.get $1)
  )
  (i32.store8
   (local.tee $1
    (i32.add
     (local.get $2)
     (i32.const 4)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $4
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $5
    (i32.add
     (local.get $1)
     (i32.const 2)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $6
    (i32.add
     (local.get $1)
     (i32.const 3)
    )
   )
   (i32.const 1)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $1)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17464)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17464)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $2)
   (i32.const 1)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $2)
   (i32.const 1)
  )
  (i32.store8
   (local.get $1)
   (i32.shr_u
    (local.tee $3
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $4)
   (i32.shr_u
    (local.get $3)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $5)
   (i32.shr_u
    (local.get $3)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $6)
   (local.get $3)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $1)
   (i32.const 4)
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_png_write_iCCP (; 207 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $5)
    (i32.const 24)
   )
  )
  (local.set $7
   (i32.add
    (local.get $5)
    (i32.const 20)
   )
  )
  (local.set $8
   (local.get $5)
  )
  (if
   (local.get $1)
   (if
    (local.tee $9
     (call $_png_check_keyword
      (local.get $0)
      (local.get $1)
      (local.get $7)
     )
    )
    (block
     (i32.store8
      (local.get $4)
      (i32.shr_u
       (local.tee $1
        (i32.add
         (local.tee $6
          (if (result i32)
           (i32.or
            (i32.eqz
             (local.get $2)
            )
            (i32.eqz
             (local.get $3)
            )
           )
           (i32.const 0)
           (call $_png_text_compress
            (local.get $0)
            (local.get $2)
            (local.get $3)
            (local.get $8)
           )
          )
         )
         (local.tee $2
          (i32.add
           (local.get $9)
           (i32.const 2)
          )
         )
        )
       )
       (i32.const 24)
      )
     )
     (i32.store8
      (local.tee $3
       (i32.add
        (local.get $4)
        (i32.const 1)
       )
      )
      (i32.shr_u
       (local.get $1)
       (i32.const 16)
      )
     )
     (i32.store8
      (local.tee $10
       (i32.add
        (local.get $4)
        (i32.const 2)
       )
      )
      (i32.shr_u
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.store8
      (local.tee $11
       (i32.add
        (local.get $4)
        (i32.const 3)
       )
      )
      (local.get $1)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $4)
      (i32.const 4)
     )
     (call $_png_write_data
      (local.get $0)
      (i32.const 17429)
      (i32.const 4)
     )
     (call $_png_reset_crc
      (local.get $0)
     )
     (call $_png_calculate_crc
      (local.get $0)
      (i32.const 17429)
      (i32.const 4)
     )
     (i32.store8
      (i32.add
       (local.tee $1
        (i32.load
         (local.get $7)
        )
       )
       (i32.add
        (local.get $9)
        (i32.const 1)
       )
      )
      (i32.const 0)
     )
     (if
      (i32.and
       (i32.ne
        (local.get $1)
        (i32.const 0)
       )
       (i32.ne
        (local.get $2)
        (i32.const 0)
       )
      )
      (block
       (call $_png_calculate_crc
        (local.get $0)
        (local.get $1)
        (local.get $2)
       )
       (call $_png_write_data
        (local.get $0)
        (local.get $1)
        (local.get $2)
       )
      )
     )
     (if
      (local.get $6)
      (call $_png_write_compressed_data_out
       (local.get $0)
       (local.get $8)
      )
     )
     (i32.store8
      (local.get $4)
      (i32.shr_u
       (local.tee $6
        (i32.load offset=364
         (local.get $0)
        )
       )
       (i32.const 24)
      )
     )
     (i32.store8
      (local.get $3)
      (i32.shr_u
       (local.get $6)
       (i32.const 16)
      )
     )
     (i32.store8
      (local.get $10)
      (i32.shr_u
       (local.get $6)
       (i32.const 8)
      )
     )
     (i32.store8
      (local.get $11)
      (local.get $6)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $4)
      (i32.const 4)
     )
     (call $_png_free
      (local.get $0)
      (local.get $1)
     )
     (global.set $STACKTOP
      (local.get $5)
     )
     (return)
    )
   )
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 22726)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_png_check_keyword (; 208 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 40)
   )
  )
  (local.set $8
   (local.get $6)
  )
  (i32.store
   (local.get $2)
   (i32.const 0)
  )
  (if
   (local.get $1)
   (if
    (local.tee $3
     (call $_strlen
      (local.get $1)
     )
    )
    (block
     (i32.store
      (local.get $2)
      (local.tee $4
       (call $_png_malloc
        (local.get $0)
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
      )
     )
     (if
      (local.tee $9
       (i32.load8_s
        (local.get $1)
       )
      )
      (block
       (local.set $5
        (local.get $1)
       )
       (local.set $1
        (local.get $9)
       )
       (loop $while-in
        (if
         (i32.or
          (i32.eq
           (i32.and
            (local.get $1)
            (i32.const 255)
           )
           (i32.const 127)
          )
          (i32.lt_s
           (i32.shr_s
            (i32.shl
             (local.get $1)
             (i32.const 24)
            )
            (i32.const 24)
           )
           (i32.const 32)
          )
         )
         (block
          (i32.store
           (local.get $7)
           (i32.shr_s
            (i32.shl
             (local.get $1)
             (i32.const 24)
            )
            (i32.const 24)
           )
          )
          (drop
           (call $_sprintf
            (local.get $8)
            (i32.const 22852)
            (local.get $7)
           )
          )
          (call $_png_warning
           (local.get $0)
           (local.get $8)
          )
          (i32.store8
           (local.get $4)
           (i32.const 32)
          )
         )
         (i32.store8
          (local.get $4)
          (local.get $1)
         )
        )
        (local.set $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (br_if $while-in
         (local.tee $1
          (i32.load8_s
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
      )
     )
     (i32.store8
      (local.get $4)
      (i32.const 0)
     )
     (local.set $1
      (if (result i32)
       (i32.eq
        (i32.load8_s
         (local.tee $1
          (i32.add
           (i32.add
            (i32.load
             (local.get $2)
            )
            (local.get $3)
           )
           (i32.const -1)
          )
         )
        )
        (i32.const 32)
       )
       (block (result i32)
        (call $_png_warning
         (local.get $0)
         (i32.const 22885)
        )
        (if (result i32)
         (i32.eq
          (i32.load8_s
           (local.get $1)
          )
          (i32.const 32)
         )
         (loop $while-in1 (result i32)
          (i32.store8
           (local.get $1)
           (i32.const 0)
          )
          (local.set $3
           (i32.add
            (local.get $3)
            (i32.const -1)
           )
          )
          (br_if $while-in1
           (i32.eq
            (i32.load8_s
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const -1)
              )
             )
            )
            (i32.const 32)
           )
          )
          (local.get $3)
         )
         (local.get $3)
        )
       )
       (local.get $3)
      )
     )
     (if
      (i32.eq
       (local.tee $3
        (i32.load8_s
         (local.tee $4
          (i32.load
           (local.get $2)
          )
         )
        )
       )
       (i32.const 32)
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 22922)
       )
       (if
        (i32.eq
         (local.tee $3
          (i32.load8_s
           (local.get $4)
          )
         )
         (i32.const 32)
        )
        (loop $while-in3
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
         )
         (br_if $while-in3
          (i32.eq
           (local.tee $3
            (i32.load8_s
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const 1)
              )
             )
            )
           )
           (i32.const 32)
          )
         )
        )
       )
      )
     )
     (local.set $5
      (i32.load
       (local.get $2)
      )
     )
     (if
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
      (block
       (local.set $9
        (i32.const 0)
       )
       (local.set $8
        (i32.const 0)
       )
       (loop $while-in5
        (local.set $3
         (if (result i32)
          (i32.and
           (local.tee $7
            (i32.eq
             (i32.and
              (local.get $3)
              (i32.const 255)
             )
             (i32.const 32)
            )
           )
           (i32.eqz
            (local.get $9)
           )
          )
          (block (result i32)
           (i32.store8
            (local.get $5)
            (i32.const 32)
           )
           (local.set $9
            (i32.const 1)
           )
           (local.set $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (local.get $8)
          )
          (if (result i32)
           (local.get $7)
           (block (result i32)
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const -1)
             )
            )
            (i32.const 1)
           )
           (block (result i32)
            (i32.store8
             (local.get $5)
             (local.get $3)
            )
            (local.set $9
             (i32.const 0)
            )
            (local.set $5
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.get $8)
           )
          )
         )
        )
        (if
         (local.tee $7
          (i32.load8_s
           (local.tee $4
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
          )
         )
         (block
          (local.set $8
           (local.get $3)
          )
          (local.set $3
           (local.get $7)
          )
          (br $while-in5)
         )
        )
       )
       (i32.store8
        (local.get $5)
        (i32.const 0)
       )
       (if
        (local.get $3)
        (call $_png_warning
         (local.get $0)
         (i32.const 22958)
        )
       )
      )
      (i32.store8
       (local.get $5)
       (i32.const 0)
      )
     )
     (if
      (i32.eqz
       (local.get $1)
      )
      (block
       (call $_png_free
        (local.get $0)
        (i32.load
         (local.get $2)
        )
       )
       (i32.store
        (local.get $2)
        (i32.const 0)
       )
       (call $_png_warning
        (local.get $0)
        (i32.const 23001)
       )
       (global.set $STACKTOP
        (local.get $6)
       )
       (return
        (i32.const 0)
       )
      )
     )
     (if
      (i32.le_u
       (local.get $1)
       (i32.const 79)
      )
      (block
       (global.set $STACKTOP
        (local.get $6)
       )
       (return
        (local.get $1)
       )
      )
     )
     (call $_png_warning
      (local.get $0)
      (i32.const 23021)
     )
     (i32.store
      (i32.add
       (local.get $2)
       (i32.const 316)
      )
      (i32.const 0)
     )
     (global.set $STACKTOP
      (local.get $6)
     )
     (return
      (i32.const 79)
     )
    )
   )
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 22832)
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (i32.const 0)
 )
 (func $_png_text_compress (; 209 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local.set $14
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $3)
     (i32.const 12)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $3)
     (i32.const 8)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $3)
     (i32.const 16)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.get $3)
   (i32.const 0)
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $0)
     (i32.const 212)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $0)
     (i32.const 208)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $0)
     (i32.const 224)
    )
   )
   (i32.load
    (local.tee $1
     (i32.add
      (local.get $0)
      (i32.const 268)
     )
    )
   )
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $0)
     (i32.const 220)
    )
   )
   (i32.load
    (local.tee $10
     (i32.add
      (local.get $0)
      (i32.const 264)
     )
    )
   )
  )
  (local.set $13
   (i32.add
    (local.get $0)
    (i32.const 232)
   )
  )
  (loop $while-in
   (block $while-out
    (if
     (call $_deflate
      (local.get $11)
      (i32.const 0)
     )
     (if
      (local.tee $4
       (i32.load
        (local.get $13)
       )
      )
      (call $_png_error
       (local.get $0)
       (local.get $4)
      )
      (call $_png_error
       (local.get $0)
       (i32.const 22821)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (local.get $2)
      )
     )
     (block
      (br_if $while-out
       (i32.eqz
        (i32.load
         (local.get $3)
        )
       )
      )
      (if
       (i32.ge_s
        (local.tee $4
         (i32.load
          (local.get $5)
         )
        )
        (local.tee $7
         (i32.load
          (local.get $9)
         )
        )
       )
       (block
        (i32.store
         (local.get $9)
         (local.tee $8
          (i32.add
           (local.get $4)
           (i32.const 4)
          )
         )
        )
        (local.set $15
         (i32.eqz
          (local.tee $4
           (i32.load
            (local.get $6)
           )
          )
         )
        )
        (i32.store
         (local.get $6)
         (local.tee $8
          (call $_png_malloc
           (local.get $0)
           (i32.shl
            (local.get $8)
            (i32.const 2)
           )
          )
         )
        )
        (if
         (i32.eqz
          (local.get $15)
         )
         (block
          (drop
           (call $_memcpy
            (local.get $8)
            (local.get $4)
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
           )
          )
          (call $_png_free
           (local.get $0)
           (local.get $4)
          )
         )
        )
       )
      )
      (local.set $4
       (call $_png_malloc
        (local.get $0)
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (local.get $6)
        )
        (i32.shl
         (local.tee $7
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 2)
        )
       )
       (local.get $4)
      )
      (drop
       (call $_memcpy
        (i32.load
         (i32.add
          (i32.load
           (local.get $6)
          )
          (i32.shl
           (local.get $7)
           (i32.const 2)
          )
         )
        )
        (i32.load
         (local.get $10)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (i32.load
         (local.get $5)
        )
        (i32.const 1)
       )
      )
      (i32.store
       (local.get $2)
       (i32.load
        (local.get $1)
       )
      )
      (i32.store
       (local.get $12)
       (i32.load
        (local.get $10)
       )
      )
     )
    )
    (br_if $while-in
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (loop $label$continue$L25
   (block $label$break$L25
    (block $switch-default
     (block $switch-case1
      (br_table $switch-case1 $label$break$L25 $switch-default
       (call $_deflate
        (local.get $11)
        (i32.const 4)
       )
      )
     )
     (if
      (i32.eqz
       (i32.load
        (local.get $2)
       )
      )
      (block
       (if
        (i32.ge_s
         (local.tee $3
          (i32.load
           (local.get $5)
          )
         )
         (local.tee $4
          (i32.load
           (local.get $9)
          )
         )
        )
        (block
         (i32.store
          (local.get $9)
          (local.tee $7
           (i32.add
            (local.get $3)
            (i32.const 4)
           )
          )
         )
         (local.set $8
          (i32.eqz
           (local.tee $3
            (i32.load
             (local.get $6)
            )
           )
          )
         )
         (i32.store
          (local.get $6)
          (local.tee $7
           (call $_png_malloc
            (local.get $0)
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
           )
          )
         )
         (if
          (i32.eqz
           (local.get $8)
          )
          (block
           (drop
            (call $_memcpy
             (local.get $7)
             (local.get $3)
             (i32.shl
              (local.get $4)
              (i32.const 2)
             )
            )
           )
           (call $_png_free
            (local.get $0)
            (local.get $3)
           )
          )
         )
        )
       )
       (local.set $3
        (call $_png_malloc
         (local.get $0)
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $6)
         )
         (i32.shl
          (local.tee $4
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 2)
         )
        )
        (local.get $3)
       )
       (drop
        (call $_memcpy
         (i32.load
          (i32.add
           (i32.load
            (local.get $6)
           )
           (i32.shl
            (local.get $4)
            (i32.const 2)
           )
          )
         )
         (i32.load
          (local.get $10)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (i32.load
          (local.get $5)
         )
         (i32.const 1)
        )
       )
       (i32.store
        (local.get $2)
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $12)
        (i32.load
         (local.get $10)
        )
       )
      )
     )
     (br $label$continue$L25)
    )
    (if
     (local.tee $3
      (i32.load
       (local.get $13)
      )
     )
     (call $_png_error
      (local.get $0)
      (local.get $3)
     )
     (call $_png_error
      (local.get $0)
      (i32.const 22821)
     )
    )
    (br $label$continue$L25)
   )
  )
  (local.set $2
   (i32.add
    (i32.mul
     (local.tee $0
      (i32.load
       (local.get $1)
      )
     )
     (i32.load
      (local.get $5)
     )
    )
    (select
     (i32.sub
      (local.get $0)
      (local.tee $1
       (i32.load
        (local.get $2)
       )
      )
     )
     (i32.const 0)
     (i32.gt_u
      (local.get $0)
      (local.get $1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $14)
  )
  (local.get $2)
 )
 (func $_png_write_compressed_data_out (; 210 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (local.tee $2
    (i32.load
     (local.get $1)
    )
   )
   (block
    (if
     (i32.eqz
      (local.tee $1
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
      )
     )
     (return)
    )
    (call $_png_calculate_crc
     (local.get $0)
     (local.get $2)
     (local.get $1)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $2)
     (local.get $1)
    )
    (return)
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (local.tee $6
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $4
     (i32.add
      (local.get $1)
      (i32.const 16)
     )
    )
    (local.set $7
     (i32.add
      (local.get $0)
      (i32.const 268)
     )
    )
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in
     (if
      (i32.and
       (i32.ne
        (local.tee $3
         (i32.load
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
          )
         )
        )
        (i32.const 0)
       )
       (i32.ne
        (local.tee $5
         (i32.load
          (local.get $7)
         )
        )
        (i32.const 0)
       )
      )
      (block
       (call $_png_calculate_crc
        (local.get $0)
        (local.get $3)
        (local.get $5)
       )
       (call $_png_write_data
        (local.get $0)
        (local.get $3)
        (local.get $5)
       )
       (local.set $3
        (i32.load
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
         )
        )
       )
      )
     )
     (call $_png_free
      (local.get $0)
      (local.get $3)
     )
     (i32.store
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
      )
      (i32.const 0)
     )
     (br_if $while-in
      (i32.lt_s
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.load
        (local.get $6)
       )
      )
     )
    )
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 16)
   )
  )
  (if
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 12)
    )
   )
   (call $_png_free
    (local.get $0)
    (i32.load
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.get $2)
   (i32.const 0)
  )
  (if
   (i32.gt_u
    (local.tee $2
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 268)
      )
     )
    )
    (local.tee $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 224)
      )
     )
    )
   )
   (if
    (i32.and
     (i32.ne
      (local.tee $3
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 264)
        )
       )
      )
      (i32.const 0)
     )
     (i32.ne
      (local.tee $1
       (i32.sub
        (local.get $2)
        (local.get $1)
       )
      )
      (i32.const 0)
     )
    )
    (block
     (call $_png_calculate_crc
      (local.get $0)
      (local.get $3)
      (local.get $1)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $3)
      (local.get $1)
     )
    )
   )
  )
  (drop
   (call $_deflateReset
    (i32.add
     (local.get $0)
     (i32.const 208)
    )
   )
  )
 )
 (func $_png_write_sPLT (; 211 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $6
   (i32.add
    (local.get $7)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.add
    (local.tee $4
     (local.get $7)
    )
    (i32.const 4)
   )
  )
  (local.set $5
   (i32.mul
    (local.tee $12
     (select
      (i32.const 6)
      (i32.const 10)
      (i32.eq
       (i32.load8_s
        (local.tee $9
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
       )
       (i32.const 8)
      )
     )
    )
    (i32.load
     (local.tee $11
      (i32.add
       (local.get $1)
       (i32.const 12)
      )
     )
    )
   )
  )
  (if
   (local.tee $2
    (i32.load
     (local.get $1)
    )
   )
   (if
    (local.tee $2
     (call $_png_check_keyword
      (local.get $0)
      (local.get $2)
      (local.get $4)
     )
    )
    (block
     (i32.store8
      (local.get $6)
      (i32.shr_u
       (local.tee $5
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $5)
          (i32.const 2)
         )
        )
       )
       (i32.const 24)
      )
     )
     (i32.store8
      (local.tee $19
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (i32.shr_u
       (local.get $5)
       (i32.const 16)
      )
     )
     (i32.store8
      (local.tee $20
       (i32.add
        (local.get $6)
        (i32.const 2)
       )
      )
      (i32.shr_u
       (local.get $5)
       (i32.const 8)
      )
     )
     (i32.store8
      (local.tee $21
       (i32.add
        (local.get $6)
        (i32.const 3)
       )
      )
      (local.get $5)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $6)
      (i32.const 4)
     )
     (call $_png_write_data
      (local.get $0)
      (i32.const 17459)
      (i32.const 4)
     )
     (call $_png_reset_crc
      (local.get $0)
     )
     (call $_png_calculate_crc
      (local.get $0)
      (i32.const 17459)
      (i32.const 4)
     )
     (if
      (i32.and
       (i32.ne
        (local.tee $10
         (i32.load
          (local.get $4)
         )
        )
        (i32.const 0)
       )
       (i32.ne
        (local.tee $4
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.const 0)
       )
      )
      (block
       (call $_png_calculate_crc
        (local.get $0)
        (local.get $10)
        (local.get $4)
       )
       (call $_png_write_data
        (local.get $0)
        (local.get $10)
        (local.get $4)
       )
      )
     )
     (call $_png_calculate_crc
      (local.get $0)
      (local.get $9)
      (i32.const 1)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $9)
      (i32.const 1)
     )
     (local.set $13
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (if
      (i32.gt_s
       (i32.load
        (local.get $11)
       )
       (i32.const 0)
      )
      (block
       (local.set $14
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $15
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
       )
       (local.set $16
        (i32.add
         (local.get $3)
         (i32.const 3)
        )
       )
       (local.set $17
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
       )
       (local.set $18
        (i32.add
         (local.get $3)
         (i32.const 5)
        )
       )
       (local.set $22
        (i32.add
         (local.get $3)
         (i32.const 6)
        )
       )
       (local.set $23
        (i32.add
         (local.get $3)
         (i32.const 7)
        )
       )
       (local.set $24
        (i32.add
         (local.get $3)
         (i32.const 8)
        )
       )
       (local.set $25
        (i32.add
         (local.get $3)
         (i32.const 9)
        )
       )
       (local.set $2
        (i32.load
         (local.get $13)
        )
       )
       (loop $while-in
        (local.set $1
         (i32.load16_s
          (local.get $2)
         )
        )
        (local.set $1
         (if (result i32)
          (i32.eq
           (i32.load8_s
            (local.get $9)
           )
           (i32.const 8)
          )
          (block (result i32)
           (i32.store8
            (local.get $3)
            (local.get $1)
           )
           (i32.store8
            (local.get $14)
            (i32.load16_s
             (i32.add
              (local.get $2)
              (i32.const 2)
             )
            )
           )
           (i32.store8
            (local.get $15)
            (i32.load16_s
             (i32.add
              (local.get $2)
              (i32.const 4)
             )
            )
           )
           (local.set $4
            (local.get $17)
           )
           (local.set $5
            (local.get $16)
           )
           (local.set $8
            (i32.and
             (i32.load16_s
              (i32.add
               (local.get $2)
               (i32.const 6)
              )
             )
             (i32.const 255)
            )
           )
           (local.get $18)
          )
          (block (result i32)
           (i32.store8
            (local.get $3)
            (i32.shr_u
             (i32.and
              (local.get $1)
              (i32.const 65535)
             )
             (i32.const 8)
            )
           )
           (i32.store8
            (local.get $14)
            (local.get $1)
           )
           (i32.store8
            (local.get $15)
            (i32.shr_u
             (i32.and
              (local.tee $1
               (i32.load16_s
                (i32.add
                 (local.get $2)
                 (i32.const 2)
                )
               )
              )
              (i32.const 65535)
             )
             (i32.const 8)
            )
           )
           (i32.store8
            (local.get $16)
            (local.get $1)
           )
           (i32.store8
            (local.get $17)
            (i32.shr_u
             (i32.and
              (local.tee $1
               (i32.load16_s
                (i32.add
                 (local.get $2)
                 (i32.const 4)
                )
               )
              )
              (i32.const 65535)
             )
             (i32.const 8)
            )
           )
           (i32.store8
            (local.get $18)
            (local.get $1)
           )
           (i32.store8
            (local.get $22)
            (i32.shr_u
             (i32.and
              (local.tee $8
               (i32.load16_s
                (i32.add
                 (local.get $2)
                 (i32.const 6)
                )
               )
              )
              (i32.const 65535)
             )
             (i32.const 8)
            )
           )
           (local.set $4
            (local.get $24)
           )
           (local.set $5
            (local.get $23)
           )
           (local.set $8
            (i32.and
             (local.get $8)
             (i32.const 255)
            )
           )
           (local.get $25)
          )
         )
        )
        (i32.store8
         (local.get $5)
         (local.get $8)
        )
        (i32.store8
         (local.get $4)
         (i32.shr_u
          (i32.and
           (local.tee $4
            (i32.load16_s
             (i32.add
              (local.get $2)
              (i32.const 8)
             )
            )
           )
           (i32.const 65535)
          )
          (i32.const 8)
         )
        )
        (i32.store8
         (local.get $1)
         (local.get $4)
        )
        (call $_png_calculate_crc
         (local.get $0)
         (local.get $3)
         (local.get $12)
        )
        (call $_png_write_data
         (local.get $0)
         (local.get $3)
         (local.get $12)
        )
        (br_if $while-in
         (i32.lt_u
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 10)
           )
          )
          (i32.add
           (i32.load
            (local.get $13)
           )
           (i32.mul
            (i32.load
             (local.get $11)
            )
            (i32.const 10)
           )
          )
         )
        )
       )
      )
     )
     (i32.store8
      (local.get $6)
      (i32.shr_u
       (local.tee $1
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 364)
         )
        )
       )
       (i32.const 24)
      )
     )
     (i32.store8
      (local.get $19)
      (i32.shr_u
       (local.get $1)
       (i32.const 16)
      )
     )
     (i32.store8
      (local.get $20)
      (i32.shr_u
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.store8
      (local.get $21)
      (local.get $1)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $6)
      (i32.const 4)
     )
     (call $_png_free
      (local.get $0)
      (local.get $10)
     )
     (global.set $STACKTOP
      (local.get $7)
     )
     (return)
    )
   )
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 23062)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_png_write_sBIT (; 212 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $4
   (local.get $5)
  )
  (block $do-once
   (if
    (i32.and
     (local.get $2)
     (i32.const 2)
    )
    (block
     (if
      (i32.lt_s
       (i32.and
        (i32.shr_s
         (i32.shl
          (i32.add
           (local.tee $6
            (i32.load8_s
             (local.get $1)
            )
           )
           (i32.const -1)
          )
          (i32.const 24)
         )
         (i32.const 24)
        )
        (i32.const 255)
       )
       (i32.and
        (local.tee $3
         (if (result i32)
          (i32.eq
           (local.get $2)
           (i32.const 3)
          )
          (i32.const 8)
          (i32.load8_s
           (i32.add
            (local.get $0)
            (i32.const 388)
           )
          )
         )
        )
        (i32.const 255)
       )
      )
      (if
       (i32.lt_s
        (i32.and
         (i32.shr_s
          (i32.shl
           (i32.add
            (local.tee $7
             (i32.load8_s
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
            )
            (i32.const -1)
           )
           (i32.const 24)
          )
          (i32.const 24)
         )
         (i32.const 255)
        )
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
       )
       (if
        (i32.lt_s
         (i32.and
          (i32.shr_s
           (i32.shl
            (i32.add
             (local.tee $8
              (i32.load8_s
               (i32.add
                (local.get $1)
                (i32.const 2)
               )
              )
             )
             (i32.const -1)
            )
            (i32.const 24)
           )
           (i32.const 24)
          )
          (i32.const 255)
         )
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
        )
        (block
         (i32.store8
          (local.get $4)
          (local.get $6)
         )
         (i32.store8
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
          (local.get $7)
         )
         (i32.store8
          (i32.add
           (local.get $4)
           (i32.const 2)
          )
          (local.get $8)
         )
         (local.set $3
          (i32.const 3)
         )
         (br $do-once)
        )
       )
      )
     )
     (call $_png_warning
      (local.get $0)
      (i32.const 23090)
     )
     (global.set $STACKTOP
      (local.get $5)
     )
     (return)
    )
    (block
     (if
      (local.tee $3
       (i32.load8_s
        (i32.add
         (local.get $1)
         (i32.const 3)
        )
       )
      )
      (if
       (i32.le_s
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
        (i32.load8_u
         (i32.add
          (local.get $0)
          (i32.const 388)
         )
        )
       )
       (block
        (i32.store8
         (local.get $4)
         (local.get $3)
        )
        (local.set $3
         (i32.const 1)
        )
        (br $do-once)
       )
      )
     )
     (call $_png_warning
      (local.get $0)
      (i32.const 23090)
     )
     (global.set $STACKTOP
      (local.get $5)
     )
     (return)
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 4)
   )
   (block $do-once0
    (if
     (local.tee $1
      (i32.load8_s
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
     )
     (if
      (i32.le_s
       (i32.and
        (local.get $1)
        (i32.const 255)
       )
       (i32.load8_u
        (i32.add
         (local.get $0)
         (i32.const 388)
        )
       )
      )
      (block
       (i32.store8
        (i32.add
         (local.get $3)
         (local.get $4)
        )
        (local.get $1)
       )
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (br $do-once0)
      )
     )
    )
    (call $_png_warning
     (local.get $0)
     (i32.const 23090)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (call $_png_write_chunk
   (local.get $0)
   (i32.const 17454)
   (local.get $4)
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_png_write_cHRM (; 213 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $9
   (i32.add
    (local.get $11)
    (i32.const 32)
   )
  )
  (if
   (i32.or
    (i32.or
     (i32.or
      (i32.or
       (f64.lt
        (local.get $1)
        (f64.const 0)
       )
       (f64.gt
        (local.get $1)
        (f64.const 0.8)
       )
      )
      (f64.lt
       (local.get $2)
       (f64.const 0)
      )
     )
     (f64.gt
      (local.get $2)
      (f64.const 0.8)
     )
    )
    (f64.gt
     (f64.add
      (local.get $1)
      (local.get $2)
     )
     (f64.const 1)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 23119)
    )
    (local.set $0
     (i32.load
      (i32.const 16508)
     )
    )
    (f64.store
     (local.get $9)
     (local.get $1)
    )
    (f64.store
     (i32.add
      (local.get $9)
      (i32.const 8)
     )
     (local.get $2)
    )
    (call $_fprintf
     (local.get $0)
     (i32.const 23154)
     (local.get $9)
    )
    (global.set $STACKTOP
     (local.get $11)
    )
    (return)
   )
  )
  (i32.store8
   (local.tee $9
    (local.get $11)
   )
   (i32.shr_u
    (local.tee $10
     (i32.trunc_f64_u
      (f64.add
       (f64.mul
        (local.get $1)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 1)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 2)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 3)
   )
   (local.get $10)
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 4)
   )
   (i32.shr_u
    (local.tee $10
     (i32.trunc_f64_u
      (f64.add
       (f64.mul
        (local.get $2)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 5)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 6)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 7)
   )
   (local.get $10)
  )
  (if
   (i32.or
    (i32.or
     (i32.or
      (i32.or
       (f64.lt
        (local.get $3)
        (f64.const 0)
       )
       (f64.gt
        (local.get $3)
        (f64.const 0.8)
       )
      )
      (f64.lt
       (local.get $4)
       (f64.const 0)
      )
     )
     (f64.gt
      (local.get $4)
      (f64.const 0.8)
     )
    )
    (f64.gt
     (f64.add
      (local.get $3)
      (local.get $4)
     )
     (f64.const 1)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 23178)
    )
    (global.set $STACKTOP
     (local.get $11)
    )
    (return)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 8)
   )
   (i32.shr_u
    (local.tee $10
     (i32.trunc_f64_u
      (f64.add
       (f64.mul
        (local.get $3)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 9)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 10)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 11)
   )
   (local.get $10)
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 12)
   )
   (i32.shr_u
    (local.tee $10
     (i32.trunc_f64_u
      (f64.add
       (f64.mul
        (local.get $4)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 13)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 14)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 15)
   )
   (local.get $10)
  )
  (if
   (i32.or
    (i32.or
     (i32.or
      (i32.or
       (f64.lt
        (local.get $5)
        (f64.const 0)
       )
       (f64.gt
        (local.get $5)
        (f64.const 0.8)
       )
      )
      (f64.lt
       (local.get $6)
       (f64.const 0)
      )
     )
     (f64.gt
      (local.get $6)
      (f64.const 0.8)
     )
    )
    (f64.gt
     (f64.add
      (local.get $5)
      (local.get $6)
     )
     (f64.const 1)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 23211)
    )
    (global.set $STACKTOP
     (local.get $11)
    )
    (return)
   )
  )
  (local.set $12
   (i32.add
    (local.get $11)
    (i32.const 48)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 16)
   )
   (i32.shr_u
    (local.tee $10
     (i32.trunc_f64_u
      (f64.add
       (f64.mul
        (local.get $5)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 17)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 18)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 19)
   )
   (local.get $10)
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 20)
   )
   (i32.shr_u
    (local.tee $10
     (i32.trunc_f64_u
      (f64.add
       (f64.mul
        (local.get $6)
        (f64.const 1e5)
       )
       (f64.const 0.5)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 21)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 22)
   )
   (i32.shr_u
    (local.get $10)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $9)
    (i32.const 23)
   )
   (local.get $10)
  )
  (if
   (i32.or
    (i32.or
     (i32.or
      (i32.or
       (f64.lt
        (local.get $7)
        (f64.const 0)
       )
       (f64.gt
        (local.get $7)
        (f64.const 0.8)
       )
      )
      (f64.lt
       (local.get $8)
       (f64.const 0)
      )
     )
     (f64.gt
      (local.get $8)
      (f64.const 0.8)
     )
    )
    (f64.gt
     (f64.add
      (local.get $7)
      (local.get $8)
     )
     (f64.const 1)
    )
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 23246)
    )
    (global.set $STACKTOP
     (local.get $11)
    )
   )
   (block
    (i32.store8
     (i32.add
      (local.get $9)
      (i32.const 24)
     )
     (i32.shr_u
      (local.tee $10
       (i32.trunc_f64_u
        (f64.add
         (f64.mul
          (local.get $7)
          (f64.const 1e5)
         )
         (f64.const 0.5)
        )
       )
      )
      (i32.const 24)
     )
    )
    (i32.store8
     (i32.add
      (local.get $9)
      (i32.const 25)
     )
     (i32.shr_u
      (local.get $10)
      (i32.const 16)
     )
    )
    (i32.store8
     (i32.add
      (local.get $9)
      (i32.const 26)
     )
     (i32.shr_u
      (local.get $10)
      (i32.const 8)
     )
    )
    (i32.store8
     (i32.add
      (local.get $9)
      (i32.const 27)
     )
     (local.get $10)
    )
    (i32.store8
     (i32.add
      (local.get $9)
      (i32.const 28)
     )
     (i32.shr_u
      (local.tee $10
       (i32.trunc_f64_u
        (f64.add
         (f64.mul
          (local.get $8)
          (f64.const 1e5)
         )
         (f64.const 0.5)
        )
       )
      )
      (i32.const 24)
     )
    )
    (i32.store8
     (i32.add
      (local.get $9)
      (i32.const 29)
     )
     (i32.shr_u
      (local.get $10)
      (i32.const 16)
     )
    )
    (i32.store8
     (i32.add
      (local.get $9)
      (i32.const 30)
     )
     (i32.shr_u
      (local.get $10)
      (i32.const 8)
     )
    )
    (i32.store8
     (i32.add
      (local.get $9)
      (i32.const 31)
     )
     (local.get $10)
    )
    (i32.store8
     (local.get $12)
     (i32.const 0)
    )
    (i32.store8
     (local.tee $13
      (i32.add
       (local.get $12)
       (i32.const 1)
      )
     )
     (i32.const 0)
    )
    (i32.store8
     (local.tee $14
      (i32.add
       (local.get $12)
       (i32.const 2)
      )
     )
     (i32.const 0)
    )
    (i32.store8
     (local.tee $10
      (i32.add
       (local.get $12)
       (i32.const 3)
      )
     )
     (i32.const 32)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $12)
     (i32.const 4)
    )
    (call $_png_write_data
     (local.get $0)
     (i32.const 17414)
     (i32.const 4)
    )
    (call $_png_reset_crc
     (local.get $0)
    )
    (call $_png_calculate_crc
     (local.get $0)
     (i32.const 17414)
     (i32.const 4)
    )
    (call $_png_calculate_crc
     (local.get $0)
     (local.get $9)
     (i32.const 32)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $9)
     (i32.const 32)
    )
    (i32.store8
     (local.get $12)
     (i32.shr_u
      (local.tee $9
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 364)
        )
       )
      )
      (i32.const 24)
     )
    )
    (i32.store8
     (local.get $13)
     (i32.shr_u
      (local.get $9)
      (i32.const 16)
     )
    )
    (i32.store8
     (local.get $14)
     (i32.shr_u
      (local.get $9)
      (i32.const 8)
     )
    )
    (i32.store8
     (local.get $10)
     (local.get $9)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $12)
     (i32.const 4)
    )
    (global.set $STACKTOP
     (local.get $11)
    )
   )
  )
 )
 (func $_png_write_tRNS (; 214 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 8)
   )
  )
  (local.set $6
   (local.get $7)
  )
  (block $switch-default
   (block $switch-case1
    (block $switch-case0
     (block $switch-case
      (br_table $switch-case0 $switch-default $switch-case1 $switch-case $switch-default
       (local.get $4)
      )
     )
     (if
      (i32.ge_s
       (local.get $3)
       (i32.const 1)
      )
      (if
       (i32.ge_s
        (i32.load16_u
         (i32.add
          (local.get $0)
          (i32.const 372)
         )
        )
        (local.get $3)
       )
       (block
        (call $_png_write_chunk
         (local.get $0)
         (i32.const 17479)
         (local.get $1)
         (local.get $3)
        )
        (global.set $STACKTOP
         (local.get $7)
        )
        (return)
       )
      )
     )
     (call $_png_warning
      (local.get $0)
      (i32.const 23280)
     )
     (global.set $STACKTOP
      (local.get $7)
     )
     (return)
    )
    (if
     (i32.gt_s
      (i32.shl
       (i32.const 1)
       (i32.load8_u
        (i32.add
         (local.get $0)
         (i32.const 387)
        )
       )
      )
      (i32.and
       (local.tee $1
        (i32.load16_s
         (i32.add
          (local.get $2)
          (i32.const 8)
         )
        )
       )
       (i32.const 65535)
      )
     )
     (block
      (i32.store8
       (local.get $6)
       (i32.shr_u
        (i32.and
         (local.get $1)
         (i32.const 65535)
        )
        (i32.const 8)
       )
      )
      (i32.store8
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
       (local.get $1)
      )
      (i32.store8
       (local.get $5)
       (i32.const 0)
      )
      (i32.store8
       (local.tee $2
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (i32.const 0)
      )
      (i32.store8
       (local.tee $3
        (i32.add
         (local.get $5)
         (i32.const 2)
        )
       )
       (i32.const 0)
      )
      (i32.store8
       (local.tee $4
        (i32.add
         (local.get $5)
         (i32.const 3)
        )
       )
       (i32.const 2)
      )
      (call $_png_write_data
       (local.get $0)
       (local.get $5)
       (i32.const 4)
      )
      (call $_png_write_data
       (local.get $0)
       (i32.const 17479)
       (i32.const 4)
      )
      (call $_png_reset_crc
       (local.get $0)
      )
      (call $_png_calculate_crc
       (local.get $0)
       (i32.const 17479)
       (i32.const 4)
      )
      (call $_png_calculate_crc
       (local.get $0)
       (local.get $6)
       (i32.const 2)
      )
      (call $_png_write_data
       (local.get $0)
       (local.get $6)
       (i32.const 2)
      )
      (i32.store8
       (local.get $5)
       (i32.shr_u
        (local.tee $1
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 364)
          )
         )
        )
        (i32.const 24)
       )
      )
      (i32.store8
       (local.get $2)
       (i32.shr_u
        (local.get $1)
        (i32.const 16)
       )
      )
      (i32.store8
       (local.get $3)
       (i32.shr_u
        (local.get $1)
        (i32.const 8)
       )
      )
      (i32.store8
       (local.get $4)
       (local.get $1)
      )
      (call $_png_write_data
       (local.get $0)
       (local.get $5)
       (i32.const 4)
      )
      (global.set $STACKTOP
       (local.get $7)
      )
      (return)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 23327)
      )
      (global.set $STACKTOP
       (local.get $7)
      )
      (return)
     )
    )
   )
   (i32.store8
    (local.get $6)
    (local.tee $3
     (i32.shr_u
      (i32.and
       (local.tee $1
        (i32.load16_s
         (i32.add
          (local.get $2)
          (i32.const 2)
         )
        )
       )
       (i32.const 65535)
      )
      (i32.const 8)
     )
    )
   )
   (i32.store8
    (i32.add
     (local.get $6)
     (i32.const 1)
    )
    (local.get $1)
   )
   (i32.store8
    (i32.add
     (local.get $6)
     (i32.const 2)
    )
    (local.tee $4
     (i32.shr_u
      (i32.and
       (local.tee $1
        (i32.load16_s
         (i32.add
          (local.get $2)
          (i32.const 4)
         )
        )
       )
       (i32.const 65535)
      )
      (i32.const 8)
     )
    )
   )
   (i32.store8
    (i32.add
     (local.get $6)
     (i32.const 3)
    )
    (local.get $1)
   )
   (i32.store8
    (i32.add
     (local.get $6)
     (i32.const 4)
    )
    (local.tee $2
     (i32.shr_u
      (i32.and
       (local.tee $1
        (i32.load16_s
         (i32.add
          (local.get $2)
          (i32.const 6)
         )
        )
       )
       (i32.const 65535)
      )
      (i32.const 8)
     )
    )
   )
   (i32.store8
    (i32.add
     (local.get $6)
     (i32.const 5)
    )
    (local.get $1)
   )
   (if
    (i32.eq
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 387)
      )
     )
     (i32.const 8)
    )
    (if
     (i32.and
      (i32.or
       (local.get $2)
       (i32.or
        (local.get $3)
        (local.get $4)
       )
      )
      (i32.const 65535)
     )
     (block
      (call $_png_warning
       (local.get $0)
       (i32.const 23391)
      )
      (global.set $STACKTOP
       (local.get $7)
      )
      (return)
     )
    )
   )
   (i32.store8
    (local.get $5)
    (i32.const 0)
   )
   (i32.store8
    (local.tee $2
     (i32.add
      (local.get $5)
      (i32.const 1)
     )
    )
    (i32.const 0)
   )
   (i32.store8
    (local.tee $3
     (i32.add
      (local.get $5)
      (i32.const 2)
     )
    )
    (i32.const 0)
   )
   (i32.store8
    (local.tee $4
     (i32.add
      (local.get $5)
      (i32.const 3)
     )
    )
    (i32.const 6)
   )
   (call $_png_write_data
    (local.get $0)
    (local.get $5)
    (i32.const 4)
   )
   (call $_png_write_data
    (local.get $0)
    (i32.const 17479)
    (i32.const 4)
   )
   (call $_png_reset_crc
    (local.get $0)
   )
   (call $_png_calculate_crc
    (local.get $0)
    (i32.const 17479)
    (i32.const 4)
   )
   (call $_png_calculate_crc
    (local.get $0)
    (local.get $6)
    (i32.const 6)
   )
   (call $_png_write_data
    (local.get $0)
    (local.get $6)
    (i32.const 6)
   )
   (i32.store8
    (local.get $5)
    (i32.shr_u
     (local.tee $1
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 364)
       )
      )
     )
     (i32.const 24)
    )
   )
   (i32.store8
    (local.get $2)
    (i32.shr_u
     (local.get $1)
     (i32.const 16)
    )
   )
   (i32.store8
    (local.get $3)
    (i32.shr_u
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.store8
    (local.get $4)
    (local.get $1)
   )
   (call $_png_write_data
    (local.get $0)
    (local.get $5)
    (i32.const 4)
   )
   (global.set $STACKTOP
    (local.get $7)
   )
   (return)
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 23455)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_png_write_bKGD (; 215 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.add
    (local.get $5)
    (i32.const 8)
   )
  )
  (local.set $4
   (local.get $5)
  )
  (if
   (i32.eq
    (local.get $2)
    (i32.const 3)
   )
   (block
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (local.tee $2
        (i32.load16_s
         (i32.add
          (local.get $0)
          (i32.const 372)
         )
        )
       )
      )
      (br_if $__rjti$0
       (i32.eqz
        (i32.and
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 652)
          )
         )
         (i32.const 1)
        )
       )
      )
      (local.set $1
       (i32.load8_s
        (local.get $1)
       )
      )
      (br $__rjto$0)
     )
     (if
      (i32.gt_u
       (i32.and
        (local.tee $1
         (i32.load8_s
          (local.get $1)
         )
        )
        (i32.const 255)
       )
       (i32.and
        (local.get $2)
        (i32.const 65535)
       )
      )
      (block
       (call $_png_warning
        (local.get $0)
        (i32.const 23494)
       )
       (global.set $STACKTOP
        (local.get $5)
       )
       (return)
      )
     )
    )
    (i32.store8
     (local.get $4)
     (local.get $1)
    )
    (i32.store8
     (local.get $3)
     (i32.const 0)
    )
    (i32.store8
     (local.tee $2
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.const 0)
    )
    (i32.store8
     (local.tee $6
      (i32.add
       (local.get $3)
       (i32.const 2)
      )
     )
     (i32.const 0)
    )
    (i32.store8
     (local.tee $7
      (i32.add
       (local.get $3)
       (i32.const 3)
      )
     )
     (i32.const 1)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $3)
     (i32.const 4)
    )
    (call $_png_write_data
     (local.get $0)
     (i32.const 17409)
     (i32.const 4)
    )
    (call $_png_reset_crc
     (local.get $0)
    )
    (call $_png_calculate_crc
     (local.get $0)
     (i32.const 17409)
     (i32.const 4)
    )
    (call $_png_calculate_crc
     (local.get $0)
     (local.get $4)
     (i32.const 1)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $4)
     (i32.const 1)
    )
    (i32.store8
     (local.get $3)
     (i32.shr_u
      (local.tee $1
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 364)
        )
       )
      )
      (i32.const 24)
     )
    )
    (i32.store8
     (local.get $2)
     (i32.shr_u
      (local.get $1)
      (i32.const 16)
     )
    )
    (i32.store8
     (local.get $6)
     (i32.shr_u
      (local.get $1)
      (i32.const 8)
     )
    )
    (i32.store8
     (local.get $7)
     (local.get $1)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $3)
     (i32.const 4)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $2)
     (i32.const 2)
    )
   )
   (if
    (i32.gt_s
     (i32.shl
      (i32.const 1)
      (i32.load8_u
       (i32.add
        (local.get $0)
        (i32.const 387)
       )
      )
     )
     (i32.and
      (local.tee $1
       (i32.load16_s
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
      )
      (i32.const 65535)
     )
    )
    (block
     (i32.store8
      (local.get $4)
      (i32.shr_u
       (i32.and
        (local.get $1)
        (i32.const 65535)
       )
       (i32.const 8)
      )
     )
     (i32.store8
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
      (local.get $1)
     )
     (i32.store8
      (local.get $3)
      (i32.const 0)
     )
     (i32.store8
      (local.tee $2
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (i32.const 0)
     )
     (i32.store8
      (local.tee $6
       (i32.add
        (local.get $3)
        (i32.const 2)
       )
      )
      (i32.const 0)
     )
     (i32.store8
      (local.tee $7
       (i32.add
        (local.get $3)
        (i32.const 3)
       )
      )
      (i32.const 2)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $3)
      (i32.const 4)
     )
     (call $_png_write_data
      (local.get $0)
      (i32.const 17409)
      (i32.const 4)
     )
     (call $_png_reset_crc
      (local.get $0)
     )
     (call $_png_calculate_crc
      (local.get $0)
      (i32.const 17409)
      (i32.const 4)
     )
     (call $_png_calculate_crc
      (local.get $0)
      (local.get $4)
      (i32.const 2)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $4)
      (i32.const 2)
     )
     (i32.store8
      (local.get $3)
      (i32.shr_u
       (local.tee $1
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 364)
         )
        )
       )
       (i32.const 24)
      )
     )
     (i32.store8
      (local.get $2)
      (i32.shr_u
       (local.get $1)
       (i32.const 16)
      )
     )
     (i32.store8
      (local.get $6)
      (i32.shr_u
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.store8
      (local.get $7)
      (local.get $1)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $3)
      (i32.const 4)
     )
     (global.set $STACKTOP
      (local.get $5)
     )
     (return)
    )
    (block
     (call $_png_warning
      (local.get $0)
      (i32.const 23591)
     )
     (global.set $STACKTOP
      (local.get $5)
     )
     (return)
    )
   )
  )
  (i32.store8
   (local.get $4)
   (local.tee $6
    (i32.shr_u
     (i32.and
      (local.tee $2
       (i32.load16_s
        (i32.add
         (local.get $1)
         (i32.const 2)
        )
       )
      )
      (i32.const 65535)
     )
     (i32.const 8)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 1)
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 2)
   )
   (local.tee $7
    (i32.shr_u
     (i32.and
      (local.tee $2
       (i32.load16_s
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
      )
      (i32.const 65535)
     )
     (i32.const 8)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 3)
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 4)
   )
   (local.tee $2
    (i32.shr_u
     (i32.and
      (local.tee $1
       (i32.load16_s
        (i32.add
         (local.get $1)
         (i32.const 6)
        )
       )
      )
      (i32.const 65535)
     )
     (i32.const 8)
    )
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 5)
   )
   (local.get $1)
  )
  (if
   (i32.eq
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 387)
     )
    )
    (i32.const 8)
   )
   (if
    (i32.and
     (i32.or
      (local.get $2)
      (i32.or
       (local.get $6)
       (local.get $7)
      )
     )
     (i32.const 65535)
    )
    (block
     (call $_png_warning
      (local.get $0)
      (i32.const 23527)
     )
     (global.set $STACKTOP
      (local.get $5)
     )
     (return)
    )
   )
  )
  (i32.store8
   (local.get $3)
   (i32.const 0)
  )
  (i32.store8
   (local.tee $2
    (i32.add
     (local.get $3)
     (i32.const 1)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $6
    (i32.add
     (local.get $3)
     (i32.const 2)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $7
    (i32.add
     (local.get $3)
     (i32.const 3)
    )
   )
   (i32.const 6)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17409)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17409)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $4)
   (i32.const 6)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $4)
   (i32.const 6)
  )
  (i32.store8
   (local.get $3)
   (i32.shr_u
    (local.tee $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $2)
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $6)
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $7)
   (local.get $1)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_png_write_hIST (; 216 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.lt_s
    (i32.load16_u
     (i32.add
      (local.get $0)
      (i32.const 372)
     )
    )
    (local.get $2)
   )
   (block
    (call $_png_warning
     (local.get $0)
     (i32.const 23655)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (i32.store8
   (local.tee $3
    (i32.add
     (local.tee $4
      (local.get $5)
     )
     (i32.const 4)
    )
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 23)
   )
  )
  (i32.store8
   (local.tee $7
    (i32.add
     (local.get $3)
     (i32.const 1)
    )
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 15)
   )
  )
  (i32.store8
   (local.tee $8
    (i32.add
     (local.get $3)
     (i32.const 2)
    )
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 7)
   )
  )
  (i32.store8
   (local.tee $9
    (i32.add
     (local.get $3)
     (i32.const 3)
    )
   )
   (i32.shl
    (local.get $2)
    (i32.const 1)
   )
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17424)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17424)
   (i32.const 4)
  )
  (if
   (i32.gt_s
    (local.get $2)
    (i32.const 0)
   )
   (block
    (local.set $10
     (i32.add
      (local.get $4)
      (i32.const 1)
     )
    )
    (loop $while-in
     (i32.store8
      (local.get $4)
      (i32.shr_u
       (i32.and
        (local.tee $11
         (i32.load16_s
          (i32.add
           (i32.shl
            (local.get $6)
            (i32.const 1)
           )
           (local.get $1)
          )
         )
        )
        (i32.const 65535)
       )
       (i32.const 8)
      )
     )
     (i32.store8
      (local.get $10)
      (local.get $11)
     )
     (call $_png_calculate_crc
      (local.get $0)
      (local.get $4)
      (i32.const 2)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $4)
      (i32.const 2)
     )
     (br_if $while-in
      (i32.ne
       (local.tee $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $3)
   (i32.shr_u
    (local.tee $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $7)
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $8)
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $9)
   (local.get $1)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $3)
   (i32.const 4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_png_write_tEXt (; 217 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  (local.set $4
   (local.get $6)
  )
  (if
   (local.get $1)
   (if
    (local.tee $5
     (call $_png_check_keyword
      (local.get $0)
      (local.get $1)
      (local.get $4)
     )
    )
    (block
     (i32.store8
      (local.get $3)
      (i32.shr_u
       (local.tee $7
        (i32.add
         (local.tee $1
          (if (result i32)
           (local.get $2)
           (if (result i32)
            (i32.load8_s
             (local.get $2)
            )
            (call $_strlen
             (local.get $2)
            )
            (i32.const 0)
           )
           (i32.const 0)
          )
         )
         (local.tee $5
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 24)
      )
     )
     (i32.store8
      (local.tee $8
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (i32.shr_u
       (local.get $7)
       (i32.const 16)
      )
     )
     (i32.store8
      (local.tee $9
       (i32.add
        (local.get $3)
        (i32.const 2)
       )
      )
      (i32.shr_u
       (local.get $7)
       (i32.const 8)
      )
     )
     (i32.store8
      (local.tee $10
       (i32.add
        (local.get $3)
        (i32.const 3)
       )
      )
      (local.get $7)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $3)
      (i32.const 4)
     )
     (call $_png_write_data
      (local.get $0)
      (i32.const 17469)
      (i32.const 4)
     )
     (call $_png_reset_crc
      (local.get $0)
     )
     (call $_png_calculate_crc
      (local.get $0)
      (i32.const 17469)
      (i32.const 4)
     )
     (if
      (i32.and
       (i32.ne
        (local.tee $4
         (i32.load
          (local.get $4)
         )
        )
        (i32.const 0)
       )
       (i32.ne
        (local.get $5)
        (i32.const 0)
       )
      )
      (block
       (call $_png_calculate_crc
        (local.get $0)
        (local.get $4)
        (local.get $5)
       )
       (call $_png_write_data
        (local.get $0)
        (local.get $4)
        (local.get $5)
       )
      )
     )
     (if
      (i32.and
       (i32.ne
        (local.get $1)
        (i32.const 0)
       )
       (i32.ne
        (local.get $2)
        (i32.const 0)
       )
      )
      (block
       (call $_png_calculate_crc
        (local.get $0)
        (local.get $2)
        (local.get $1)
       )
       (call $_png_write_data
        (local.get $0)
        (local.get $2)
        (local.get $1)
       )
      )
     )
     (i32.store8
      (local.get $3)
      (i32.shr_u
       (local.tee $1
        (i32.load offset=364
         (local.get $0)
        )
       )
       (i32.const 24)
      )
     )
     (i32.store8
      (local.get $8)
      (i32.shr_u
       (local.get $1)
       (i32.const 16)
      )
     )
     (i32.store8
      (local.get $9)
      (i32.shr_u
       (local.get $1)
       (i32.const 8)
      )
     )
     (i32.store8
      (local.get $10)
      (local.get $1)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $3)
      (i32.const 4)
     )
     (call $_png_free
      (local.get $0)
      (local.get $4)
     )
     (global.set $STACKTOP
      (local.get $6)
     )
     (return)
    )
   )
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 23701)
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_png_write_zTXt (; 218 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 28)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 24)
   )
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 20)
   )
  )
  (local.set $8
   (local.get $3)
  )
  (if
   (local.get $1)
   (if
    (local.tee $9
     (call $_png_check_keyword
      (local.get $0)
      (local.get $1)
      (local.get $5)
     )
    )
    (block
     (if
      (local.get $2)
      (if
       (i32.load8_s
        (local.get $2)
       )
       (block
        (local.set $7
         (call $_strlen
          (local.get $2)
         )
        )
        (call $_png_free
         (local.get $0)
         (i32.load
          (local.get $5)
         )
        )
        (i32.store8
         (local.get $4)
         (i32.shr_u
          (local.tee $2
           (i32.add
            (call $_png_text_compress
             (local.get $0)
             (local.get $2)
             (local.get $7)
             (local.get $8)
            )
            (i32.add
             (local.get $9)
             (i32.const 2)
            )
           )
          )
          (i32.const 24)
         )
        )
        (i32.store8
         (local.tee $5
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (i32.shr_u
          (local.get $2)
          (i32.const 16)
         )
        )
        (i32.store8
         (local.tee $7
          (i32.add
           (local.get $4)
           (i32.const 2)
          )
         )
         (i32.shr_u
          (local.get $2)
          (i32.const 8)
         )
        )
        (i32.store8
         (local.tee $10
          (i32.add
           (local.get $4)
           (i32.const 3)
          )
         )
         (local.get $2)
        )
        (call $_png_write_data
         (local.get $0)
         (local.get $4)
         (i32.const 4)
        )
        (call $_png_write_data
         (local.get $0)
         (i32.const 17484)
         (i32.const 4)
        )
        (call $_png_reset_crc
         (local.get $0)
        )
        (call $_png_calculate_crc
         (local.get $0)
         (i32.const 17484)
         (i32.const 4)
        )
        (if
         (local.tee $2
          (i32.add
           (local.get $9)
           (i32.const 1)
          )
         )
         (block
          (call $_png_calculate_crc
           (local.get $0)
           (local.get $1)
           (local.get $2)
          )
          (call $_png_write_data
           (local.get $0)
           (local.get $1)
           (local.get $2)
          )
         )
        )
        (i32.store8
         (local.get $6)
         (i32.const 0)
        )
        (call $_png_calculate_crc
         (local.get $0)
         (local.get $6)
         (i32.const 1)
        )
        (call $_png_write_data
         (local.get $0)
         (local.get $6)
         (i32.const 1)
        )
        (call $_png_write_compressed_data_out
         (local.get $0)
         (local.get $8)
        )
        (i32.store8
         (local.get $4)
         (i32.shr_u
          (local.tee $1
           (i32.load offset=364
            (local.get $0)
           )
          )
          (i32.const 24)
         )
        )
        (i32.store8
         (local.get $5)
         (i32.shr_u
          (local.get $1)
          (i32.const 16)
         )
        )
        (i32.store8
         (local.get $7)
         (i32.shr_u
          (local.get $1)
          (i32.const 8)
         )
        )
        (i32.store8
         (local.get $10)
         (local.get $1)
        )
        (call $_png_write_data
         (local.get $0)
         (local.get $4)
         (i32.const 4)
        )
        (global.set $STACKTOP
         (local.get $3)
        )
        (return)
       )
      )
     )
     (call $_png_write_tEXt
      (local.get $0)
      (local.tee $1
       (i32.load
        (local.get $5)
       )
      )
      (local.get $2)
     )
     (call $_png_free
      (local.get $0)
      (local.get $1)
     )
     (global.set $STACKTOP
      (local.get $3)
     )
     (return)
    )
   )
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 23729)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_png_write_oFFs (; 219 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_s
    (local.get $3)
    (i32.const 1)
   )
   (call $_png_warning
    (local.get $0)
    (i32.const 23757)
   )
  )
  (i32.store8
   (local.get $4)
   (i32.shr_u
    (local.get $1)
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 1)
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 2)
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 3)
   )
   (local.get $1)
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 4)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 5)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 6)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 7)
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 8)
   )
   (local.get $3)
  )
  (i32.store8
   (local.tee $5
    (i32.add
     (local.get $4)
     (i32.const 12)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $3
    (i32.add
     (local.get $5)
     (i32.const 1)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 2)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $1
    (i32.add
     (local.get $5)
     (i32.const 3)
    )
   )
   (i32.const 9)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $5)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17434)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17434)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $4)
   (i32.const 9)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $4)
   (i32.const 9)
  )
  (i32.store8
   (local.get $5)
   (i32.shr_u
    (local.tee $6
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $3)
   (i32.shr_u
    (local.get $6)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $2)
   (i32.shr_u
    (local.get $6)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $1)
   (local.get $6)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $5)
   (i32.const 4)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_png_write_pCAL (; 220 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.gt_s
    (local.get $4)
    (i32.const 3)
   )
   (call $_png_warning
    (local.get $0)
    (i32.const 23795)
   )
  )
  (local.set $9
   (i32.add
    (local.get $11)
    (i32.const 16)
   )
  )
  (local.set $8
   (i32.add
    (local.get $11)
    (i32.const 4)
   )
  )
  (local.set $15
   (i32.add
    (local.tee $1
     (call $_png_check_keyword
      (local.get $0)
      (local.get $1)
      (local.tee $17
       (local.get $11)
      )
     )
    )
    (i32.const 1)
   )
  )
  (local.set $1
   (i32.add
    (local.tee $16
     (i32.add
      (call $_strlen
       (local.get $6)
      )
      (i32.ne
       (local.get $5)
       (i32.const 0)
      )
     )
    )
    (i32.add
     (local.get $1)
     (i32.const 11)
    )
   )
  )
  (local.set $12
   (call $_png_malloc
    (local.get $0)
    (i32.shl
     (local.get $5)
     (i32.const 2)
    )
   )
  )
  (if
   (local.tee $18
    (i32.gt_s
     (local.get $5)
     (i32.const 0)
    )
   )
   (block
    (local.set $13
     (i32.add
      (local.get $5)
      (i32.const -1)
     )
    )
    (loop $while-in
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $12)
      )
      (local.tee $14
       (i32.add
        (call $_strlen
         (i32.load
          (i32.add
           (i32.shl
            (local.get $10)
            (i32.const 2)
           )
           (local.get $7)
          )
         )
        )
        (i32.ne
         (local.get $10)
         (local.get $13)
        )
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $14)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $10
        (i32.add
         (local.get $10)
         (i32.const 1)
        )
       )
       (local.get $5)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $9)
   (i32.shr_u
    (local.get $1)
    (i32.const 24)
   )
  )
  (i32.store8
   (local.tee $10
    (i32.add
     (local.get $9)
     (i32.const 1)
    )
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.tee $13
    (i32.add
     (local.get $9)
     (i32.const 2)
    )
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.tee $14
    (i32.add
     (local.get $9)
     (i32.const 3)
    )
   )
   (local.get $1)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $9)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17439)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17439)
   (i32.const 4)
  )
  (if
   (i32.and
    (i32.ne
     (local.tee $1
      (i32.load
       (local.get $17)
      )
     )
     (i32.const 0)
    )
    (i32.ne
     (local.get $15)
     (i32.const 0)
    )
   )
   (block
    (call $_png_calculate_crc
     (local.get $0)
     (local.get $1)
     (local.get $15)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $1)
     (local.get $15)
    )
   )
  )
  (i32.store8
   (local.get $8)
   (i32.shr_u
    (local.get $2)
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 1)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 2)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 3)
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 4)
   )
   (i32.shr_u
    (local.get $3)
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 5)
   )
   (i32.shr_u
    (local.get $3)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 6)
   )
   (i32.shr_u
    (local.get $3)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 7)
   )
   (local.get $3)
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 8)
   )
   (local.get $4)
  )
  (i32.store8
   (i32.add
    (local.get $8)
    (i32.const 9)
   )
   (local.get $5)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $8)
   (i32.const 10)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $8)
   (i32.const 10)
  )
  (if
   (i32.and
    (i32.ne
     (local.get $6)
     (i32.const 0)
    )
    (i32.ne
     (local.get $16)
     (i32.const 0)
    )
   )
   (block
    (call $_png_calculate_crc
     (local.get $0)
     (local.get $6)
     (local.get $16)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $6)
     (local.get $16)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (local.get $1)
  )
  (if
   (i32.eqz
    (local.get $18)
   )
   (block
    (call $_png_free
     (local.get $0)
     (local.get $12)
    )
    (i32.store8
     (local.get $9)
     (i32.shr_u
      (local.tee $1
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 364)
        )
       )
      )
      (i32.const 24)
     )
    )
    (i32.store8
     (local.get $10)
     (i32.shr_u
      (local.get $1)
      (i32.const 16)
     )
    )
    (i32.store8
     (local.get $13)
     (i32.shr_u
      (local.get $1)
      (i32.const 8)
     )
    )
    (i32.store8
     (local.get $14)
     (local.get $1)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $9)
     (i32.const 4)
    )
    (global.set $STACKTOP
     (local.get $11)
    )
    (return)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.and
     (i32.ne
      (local.tee $2
       (i32.load
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $7)
        )
       )
      )
      (i32.const 0)
     )
     (i32.ne
      (local.tee $3
       (i32.load
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $12)
        )
       )
      )
      (i32.const 0)
     )
    )
    (block
     (call $_png_calculate_crc
      (local.get $0)
      (local.get $2)
      (local.get $3)
     )
     (call $_png_write_data
      (local.get $0)
      (local.get $2)
      (local.get $3)
     )
    )
   )
   (br_if $while-in1
    (i32.ne
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.get $5)
    )
   )
  )
  (call $_png_free
   (local.get $0)
   (local.get $12)
  )
  (i32.store8
   (local.get $9)
   (i32.shr_u
    (local.tee $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $10)
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $13)
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $14)
   (local.get $1)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $9)
   (i32.const 4)
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $_png_write_sCAL (; 221 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f64) (param $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (local.set $4
   (i32.add
    (local.get $5)
    (i32.const 72)
   )
  )
  (local.set $7
   (local.get $5)
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $5)
     (i32.const 80)
    )
   )
   (local.get $1)
  )
  (f64.store
   (local.tee $6
    (i32.sub
     (local.get $5)
     (i32.const -64)
    )
   )
   (local.get $2)
  )
  (drop
   (call $_sprintf
    (local.tee $1
     (i32.add
      (local.get $5)
      (i32.const 32)
     )
    )
    (i32.const 23837)
    (local.get $6)
   )
  )
  (f64.store
   (local.get $4)
   (local.get $3)
  )
  (drop
   (call $_sprintf
    (local.get $5)
    (i32.const 23837)
    (local.get $4)
   )
  )
  (i32.store8
   (local.get $4)
   (i32.shr_u
    (local.tee $6
     (i32.add
      (i32.add
       (call $_strlen
        (local.get $1)
       )
       (i32.const 2)
      )
      (call $_strlen
       (local.get $5)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.tee $9
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
   (i32.shr_u
    (local.get $6)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.tee $10
    (i32.add
     (local.get $4)
     (i32.const 2)
    )
   )
   (i32.shr_u
    (local.get $6)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.tee $11
    (i32.add
     (local.get $4)
     (i32.const 3)
    )
   )
   (local.get $6)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $4)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17444)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17444)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $8)
   (i32.const 1)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $8)
   (i32.const 1)
  )
  (if
   (local.tee $6
    (i32.add
     (call $_strlen
      (local.get $1)
     )
     (i32.const 1)
    )
   )
   (block
    (call $_png_calculate_crc
     (local.get $0)
     (local.get $1)
     (local.get $6)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $1)
     (local.get $6)
    )
   )
  )
  (if
   (local.tee $1
    (call $_strlen
     (local.get $7)
    )
   )
   (block
    (call $_png_calculate_crc
     (local.get $0)
     (local.get $7)
     (local.get $1)
    )
    (call $_png_write_data
     (local.get $0)
     (local.get $7)
     (local.get $1)
    )
   )
  )
  (i32.store8
   (local.get $4)
   (i32.shr_u
    (local.tee $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $9)
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $10)
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $11)
   (local.get $1)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $4)
   (i32.const 4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_png_write_pHYs (; 222 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_s
    (local.get $3)
    (i32.const 1)
   )
   (call $_png_warning
    (local.get $0)
    (i32.const 23845)
   )
  )
  (i32.store8
   (local.get $4)
   (i32.shr_u
    (local.get $1)
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 1)
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 2)
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 3)
   )
   (local.get $1)
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 4)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 24)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 5)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 16)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 6)
   )
   (i32.shr_u
    (local.get $2)
    (i32.const 8)
   )
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 7)
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 8)
   )
   (local.get $3)
  )
  (i32.store8
   (local.tee $5
    (i32.add
     (local.get $4)
     (i32.const 12)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $3
    (i32.add
     (local.get $5)
     (i32.const 1)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 2)
    )
   )
   (i32.const 0)
  )
  (i32.store8
   (local.tee $1
    (i32.add
     (local.get $5)
     (i32.const 3)
    )
   )
   (i32.const 9)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $5)
   (i32.const 4)
  )
  (call $_png_write_data
   (local.get $0)
   (i32.const 17449)
   (i32.const 4)
  )
  (call $_png_reset_crc
   (local.get $0)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (i32.const 17449)
   (i32.const 4)
  )
  (call $_png_calculate_crc
   (local.get $0)
   (local.get $4)
   (i32.const 9)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $4)
   (i32.const 9)
  )
  (i32.store8
   (local.get $5)
   (i32.shr_u
    (local.tee $6
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 364)
      )
     )
    )
    (i32.const 24)
   )
  )
  (i32.store8
   (local.get $3)
   (i32.shr_u
    (local.get $6)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $2)
   (i32.shr_u
    (local.get $6)
    (i32.const 8)
   )
  )
  (i32.store8
   (local.get $1)
   (local.get $6)
  )
  (call $_png_write_data
   (local.get $0)
   (local.get $5)
   (i32.const 4)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_png_write_tIME (; 223 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.add
    (local.get $4)
    (i32.const 8)
   )
  )
  (local.set $2
   (local.get $4)
  )
  (if
   (i32.le_s
    (i32.and
     (i32.shr_s
      (i32.shl
       (i32.add
        (local.tee $7
         (i32.load8_s
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
        )
        (i32.const -1)
       )
       (i32.const 24)
      )
      (i32.const 24)
     )
     (i32.const 255)
    )
    (i32.const 11)
   )
   (if
    (i32.le_s
     (i32.and
      (i32.shr_s
       (i32.shl
        (i32.add
         (local.tee $8
          (i32.load8_s
           (i32.add
            (local.get $1)
            (i32.const 3)
           )
          )
         )
         (i32.const -1)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const 255)
     )
     (i32.const 30)
    )
    (if
     (i32.le_s
      (i32.and
       (local.tee $9
        (i32.load8_s
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
       )
       (i32.const 255)
      )
      (i32.const 23)
     )
     (if
      (i32.le_s
       (i32.and
        (local.tee $5
         (i32.load8_s
          (i32.add
           (local.get $1)
           (i32.const 6)
          )
         )
        )
        (i32.const 255)
       )
       (i32.const 60)
      )
      (block
       (i32.store8
        (local.get $2)
        (i32.shr_u
         (i32.and
          (local.tee $6
           (i32.load16_s
            (local.get $1)
           )
          )
          (i32.const 65535)
         )
         (i32.const 8)
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
        (local.get $6)
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const 2)
        )
        (local.get $7)
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const 3)
        )
        (local.get $8)
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const 4)
        )
        (local.get $9)
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const 5)
        )
        (i32.load8_s
         (i32.add
          (local.get $1)
          (i32.const 5)
         )
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const 6)
        )
        (local.get $5)
       )
       (i32.store8
        (local.get $3)
        (i32.const 0)
       )
       (i32.store8
        (local.tee $5
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (i32.const 0)
       )
       (i32.store8
        (local.tee $6
         (i32.add
          (local.get $3)
          (i32.const 2)
         )
        )
        (i32.const 0)
       )
       (i32.store8
        (local.tee $1
         (i32.add
          (local.get $3)
          (i32.const 3)
         )
        )
        (i32.const 7)
       )
       (call $_png_write_data
        (local.get $0)
        (local.get $3)
        (i32.const 4)
       )
       (call $_png_write_data
        (local.get $0)
        (i32.const 17474)
        (i32.const 4)
       )
       (call $_png_reset_crc
        (local.get $0)
       )
       (call $_png_calculate_crc
        (local.get $0)
        (i32.const 17474)
        (i32.const 4)
       )
       (call $_png_calculate_crc
        (local.get $0)
        (local.get $2)
        (i32.const 7)
       )
       (call $_png_write_data
        (local.get $0)
        (local.get $2)
        (i32.const 7)
       )
       (i32.store8
        (local.get $3)
        (i32.shr_u
         (local.tee $2
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 364)
           )
          )
         )
         (i32.const 24)
        )
       )
       (i32.store8
        (local.get $5)
        (i32.shr_u
         (local.get $2)
         (i32.const 16)
        )
       )
       (i32.store8
        (local.get $6)
        (i32.shr_u
         (local.get $2)
         (i32.const 8)
        )
       )
       (i32.store8
        (local.get $1)
        (local.get $2)
       )
       (call $_png_write_data
        (local.get $0)
        (local.get $3)
        (i32.const 4)
       )
       (global.set $STACKTOP
        (local.get $4)
       )
       (return)
      )
     )
    )
   )
  )
  (call $_png_warning
   (local.get $0)
   (i32.const 23883)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_png_write_start_row (; 224 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 328)
   )
   (local.tee $1
    (call $_png_malloc
     (local.get $0)
     (local.tee $4
      (i32.add
       (i32.shr_u
        (i32.add
         (i32.mul
          (i32.load8_u
           (i32.add
            (local.get $0)
            (i32.const 388)
           )
          )
          (i32.mul
           (i32.load
            (local.tee $3
             (i32.add
              (local.get $0)
              (i32.const 292)
             )
            )
           )
           (i32.load8_u
            (i32.add
             (local.get $0)
             (i32.const 391)
            )
           )
          )
         )
         (i32.const 7)
        )
        (i32.const 3)
       )
       (i32.const 1)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $1)
   (i32.const 0)
  )
  (if
   (i32.and
    (local.tee $1
     (i32.load8_s
      (local.tee $2
       (i32.add
        (local.get $0)
        (i32.const 385)
       )
      )
     )
    )
    (i32.const 16)
   )
   (block
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 332)
     )
     (local.tee $1
      (call $_png_malloc
       (local.get $0)
       (i32.add
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 308)
         )
        )
        (i32.const 1)
       )
      )
     )
    )
    (i32.store8
     (local.get $1)
     (i32.const 1)
    )
    (local.set $1
     (i32.load8_s
      (local.get $2)
     )
    )
   )
  )
  (if
   (i32.gt_s
    (i32.and
     (local.get $1)
     (i32.const 255)
    )
    (i32.const 31)
   )
   (block
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 324)
     )
     (local.tee $1
      (call $_png_malloc
       (local.get $0)
       (local.get $4)
      )
     )
    )
    (drop
     (call $_memset
      (local.get $1)
      (i32.const 0)
      (local.get $4)
     )
    )
    (if
     (i32.and
      (local.tee $1
       (i32.load8_s
        (local.get $2)
       )
      )
      (i32.const 32)
     )
     (block
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 336)
       )
       (local.tee $1
        (call $_png_malloc
         (local.get $0)
         (i32.add
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 308)
           )
          )
          (i32.const 1)
         )
        )
       )
      )
      (i32.store8
       (local.get $1)
       (i32.const 2)
      )
      (local.set $1
       (i32.load8_s
        (local.get $2)
       )
      )
     )
    )
    (if
     (i32.and
      (local.get $1)
      (i32.const 64)
     )
     (block
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 340)
       )
       (local.tee $1
        (call $_png_malloc
         (local.get $0)
         (i32.add
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 308)
           )
          )
          (i32.const 1)
         )
        )
       )
      )
      (i32.store8
       (local.get $1)
       (i32.const 3)
      )
      (local.set $1
       (i32.load8_s
        (local.get $2)
       )
      )
     )
    )
    (if
     (i32.lt_s
      (i32.shr_s
       (i32.shl
        (local.get $1)
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const 0)
     )
     (block
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 344)
       )
       (local.tee $1
        (call $_png_malloc
         (local.get $0)
         (i32.add
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 308)
           )
          )
          (i32.const 1)
         )
        )
       )
      )
      (i32.store8
       (local.get $1)
       (i32.const 4)
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 383)
     )
    )
   )
   (block
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 300)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 296)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 304)
     )
     (i32.load
      (local.get $3)
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 224)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 268)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 220)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 264)
      )
     )
    )
    (return)
   )
  )
  (local.set $1
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 296)
    )
   )
  )
  (if
   (i32.and
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 204)
     )
    )
    (i32.const 2)
   )
   (block
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 300)
     )
     (local.get $1)
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 304)
     )
     (i32.load
      (local.get $3)
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 224)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 268)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 220)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 264)
      )
     )
    )
   )
   (block
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 300)
     )
     (i32.div_u
      (i32.sub
       (i32.add
        (local.tee $2
         (i32.load
          (i32.const 1504)
         )
        )
        (i32.add
         (local.get $1)
         (i32.const -1)
        )
       )
       (i32.load
        (i32.const 1472)
       )
      )
      (local.get $2)
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 304)
     )
     (i32.div_u
      (i32.sub
       (i32.add
        (local.tee $1
         (i32.load
          (i32.const 1440)
         )
        )
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.const -1)
        )
       )
       (i32.load
        (i32.const 1408)
       )
      )
      (local.get $1)
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 224)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 268)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 220)
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 264)
      )
     )
    )
   )
  )
 )
 (func $_png_write_finish_row (; 225 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $2
   (i32.add
    (i32.load
     (local.tee $1
      (i32.add
       (local.get $0)
       (i32.const 320)
      )
     )
    )
    (i32.const 1)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $2)
  )
  (if
   (i32.lt_u
    (local.get $2)
    (i32.load
     (local.tee $7
      (i32.add
       (local.get $0)
       (i32.const 300)
      )
     )
    )
   )
   (return)
  )
  (if
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.const 383)
    )
   )
   (block $label$break$L4
    (i32.store
     (local.get $1)
     (i32.const 0)
    )
    (local.set $2
     (i32.eqz
      (i32.and
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 204)
        )
       )
       (i32.const 2)
      )
     )
    )
    (local.set $1
     (i32.shr_s
      (i32.shl
       (i32.add
        (i32.load8_s
         (local.tee $8
          (i32.add
           (local.get $0)
           (i32.const 384)
          )
         )
        )
        (i32.const 1)
       )
       (i32.const 24)
      )
      (i32.const 24)
     )
    )
    (i32.store8
     (local.get $8)
     (local.get $1)
    )
    (if
     (local.get $2)
     (block
      (br_if $label$break$L4
       (i32.gt_s
        (i32.and
         (local.get $1)
         (i32.const 255)
        )
        (i32.const 6)
       )
      )
      (local.set $10
       (i32.add
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 292)
         )
        )
        (i32.const -1)
       )
      )
      (local.set $9
       (i32.add
        (local.get $0)
        (i32.const 304)
       )
      )
      (local.set $11
       (i32.add
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 296)
         )
        )
        (i32.const -1)
       )
      )
      (local.set $2
       (i32.and
        (local.get $1)
        (i32.const 255)
       )
      )
      (block $__rjti$1
       (loop $while-in
        (local.set $3
         (i32.sub
          (i32.add
           (local.get $10)
           (local.tee $4
            (i32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (i32.const 1440)
             )
            )
           )
          )
          (i32.load
           (i32.add
            (i32.shl
             (local.get $2)
             (i32.const 2)
            )
            (i32.const 1408)
           )
          )
         )
        )
        (local.set $6
         (i32.sub
          (i32.add
           (local.get $11)
           (local.tee $5
            (i32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (i32.const 1504)
             )
            )
           )
          )
          (i32.load
           (i32.add
            (i32.shl
             (local.get $2)
             (i32.const 2)
            )
            (i32.const 1472)
           )
          )
         )
        )
        (br_if $__rjti$1
         (i32.eqz
          (i32.or
           (i32.gt_u
            (local.get $4)
            (local.get $3)
           )
           (i32.gt_u
            (local.get $5)
            (local.get $6)
           )
          )
         )
        )
        (i32.store8
         (local.get $8)
         (local.tee $1
          (i32.shr_s
           (i32.shl
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
            (i32.const 24)
           )
           (i32.const 24)
          )
         )
        )
        (local.set $2
         (i32.and
          (local.get $1)
          (i32.const 255)
         )
        )
        (br_if $while-in
         (i32.le_s
          (i32.and
           (local.get $1)
           (i32.const 255)
          )
          (i32.const 6)
         )
        )
       )
       (local.set $1
        (i32.div_u
         (local.get $6)
         (local.get $5)
        )
       )
       (i32.store
        (local.get $9)
        (i32.div_u
         (local.get $3)
         (local.get $4)
        )
       )
       (i32.store
        (local.get $7)
        (local.get $1)
       )
       (br $label$break$L4)
      )
      (local.set $1
       (i32.div_u
        (local.get $6)
        (local.get $5)
       )
      )
      (i32.store
       (local.get $9)
       (i32.div_u
        (local.get $3)
        (local.get $4)
       )
      )
      (i32.store
       (local.get $7)
       (local.get $1)
      )
     )
     (br_if $label$break$L4
      (i32.ge_s
       (i32.and
        (local.get $1)
        (i32.const 255)
       )
       (i32.const 7)
      )
     )
    )
    (if
     (i32.eqz
      (local.tee $1
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 324)
        )
       )
      )
     )
     (return)
    )
    (drop
     (call $_memset
      (local.get $1)
      (i32.const 0)
      (i32.add
       (i32.shr_u
        (i32.add
         (i32.mul
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 292)
           )
          )
          (i32.mul
           (i32.load8_u
            (i32.add
             (local.get $0)
             (i32.const 391)
            )
           )
           (i32.load8_u
            (i32.add
             (local.get $0)
             (i32.const 388)
            )
           )
          )
         )
         (i32.const 7)
        )
        (i32.const 3)
       )
       (i32.const 1)
      )
     )
    )
    (return)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 208)
   )
  )
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 232)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 224)
   )
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 264)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 268)
   )
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 196)
   )
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 220)
   )
  )
  (loop $label$continue$L22
   (block $label$break$L22
    (block $switch-default
     (block $switch-case2
      (br_table $switch-case2 $label$break$L22 $switch-default
       (call $_deflate
        (local.get $5)
        (i32.const 4)
       )
      )
     )
     (if
      (i32.eqz
       (i32.load
        (local.get $2)
       )
      )
      (block
       (call $_png_write_chunk
        (local.get $0)
        (i32.const 17394)
        (i32.load
         (local.get $4)
        )
        (i32.load
         (local.get $3)
        )
       )
       (i32.store
        (local.get $1)
        (i32.or
         (i32.load
          (local.get $1)
         )
         (i32.const 4)
        )
       )
       (i32.store
        (local.get $7)
        (i32.load
         (local.get $4)
        )
       )
       (i32.store
        (local.get $2)
        (i32.load
         (local.get $3)
        )
       )
      )
     )
     (br $label$continue$L22)
    )
    (if
     (local.tee $8
      (i32.load
       (local.get $6)
      )
     )
     (call $_png_error
      (local.get $0)
      (local.get $8)
     )
     (call $_png_error
      (local.get $0)
      (i32.const 22821)
     )
    )
    (br $label$continue$L22)
   )
  )
  (if
   (i32.gt_u
    (local.tee $3
     (i32.load
      (local.get $3)
     )
    )
    (local.tee $2
     (i32.load
      (local.get $2)
     )
    )
   )
   (block
    (call $_png_write_chunk
     (local.get $0)
     (i32.const 17394)
     (i32.load
      (local.get $4)
     )
     (i32.sub
      (local.get $3)
      (local.get $2)
     )
    )
    (i32.store
     (local.get $1)
     (i32.or
      (i32.load
       (local.get $1)
      )
      (i32.const 4)
     )
    )
   )
  )
  (drop
   (call $_deflateReset
    (local.get $5)
   )
  )
 )
 (func $_png_do_write_interlace (; 226 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (if
   (i32.ge_s
    (local.get $2)
    (i32.const 6)
   )
   (return)
  )
  (i32.store
   (local.tee $1
    (block $switch (result i32)
     (block $switch-default
      (block $switch-case5
       (block $switch-case2
        (block $switch-case
         (br_table $switch-case $switch-case2 $switch-default $switch-case5 $switch-default
          (i32.sub
           (local.tee $7
            (i32.load8_s
             (local.tee $10
              (i32.add
               (local.get $0)
               (i32.const 11)
              )
             )
            )
           )
           (i32.const 1)
          )
         )
        )
        (br $switch
         (if (result i32)
          (i32.lt_u
           (local.tee $7
            (i32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (i32.const 1408)
             )
            )
           )
           (local.tee $8
            (i32.load
             (local.get $0)
            )
           )
          )
          (block (result i32)
           (local.set $9
            (i32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (i32.const 1440)
             )
            )
           )
           (local.set $4
            (i32.const 7)
           )
           (local.set $6
            (local.get $7)
           )
           (local.set $5
            (local.get $1)
           )
           (loop $while-in
            (local.set $3
             (i32.or
              (local.get $3)
              (i32.shl
               (i32.and
                (i32.shr_u
                 (i32.load8_u
                  (i32.add
                   (local.get $1)
                   (i32.shr_u
                    (local.get $6)
                    (i32.const 3)
                   )
                  )
                 )
                 (i32.xor
                  (i32.and
                   (local.get $6)
                   (i32.const 7)
                  )
                  (i32.const 7)
                 )
                )
                (i32.const 1)
               )
               (local.get $4)
              )
             )
            )
            (local.set $4
             (if (result i32)
              (local.get $4)
              (i32.add
               (local.get $4)
               (i32.const -1)
              )
              (block (result i32)
               (i32.store8
                (local.get $5)
                (local.get $3)
               )
               (local.set $5
                (i32.add
                 (local.get $5)
                 (i32.const 1)
                )
               )
               (local.set $3
                (i32.const 0)
               )
               (i32.const 7)
              )
             )
            )
            (br_if $while-in
             (i32.lt_u
              (local.tee $6
               (i32.add
                (local.get $6)
                (local.get $9)
               )
              )
              (local.get $8)
             )
            )
           )
           (if (result i32)
            (i32.eq
             (local.get $4)
             (i32.const 7)
            )
            (local.get $0)
            (block (result i32)
             (i32.store8
              (local.get $5)
              (local.get $3)
             )
             (local.get $0)
            )
           )
          )
          (local.get $0)
         )
        )
       )
       (br $switch
        (if (result i32)
         (i32.lt_u
          (local.tee $7
           (i32.load
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (i32.const 1408)
            )
           )
          )
          (local.tee $8
           (i32.load
            (local.get $0)
           )
          )
         )
         (block (result i32)
          (local.set $9
           (i32.load
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (i32.const 1440)
            )
           )
          )
          (local.set $5
           (local.get $1)
          )
          (local.set $4
           (i32.const 6)
          )
          (local.set $6
           (local.get $7)
          )
          (loop $while-in1
           (local.set $3
            (i32.or
             (local.get $3)
             (i32.shl
              (i32.and
               (i32.shr_u
                (i32.load8_u
                 (i32.add
                  (local.get $1)
                  (i32.shr_u
                   (local.get $6)
                   (i32.const 2)
                  )
                 )
                )
                (i32.xor
                 (i32.and
                  (i32.shl
                   (local.get $6)
                   (i32.const 1)
                  )
                  (i32.const 6)
                 )
                 (i32.const 6)
                )
               )
               (i32.const 3)
              )
              (local.get $4)
             )
            )
           )
           (local.set $4
            (if (result i32)
             (local.get $4)
             (i32.add
              (local.get $4)
              (i32.const -2)
             )
             (block (result i32)
              (i32.store8
               (local.get $5)
               (local.get $3)
              )
              (local.set $5
               (i32.add
                (local.get $5)
                (i32.const 1)
               )
              )
              (local.set $3
               (i32.const 0)
              )
              (i32.const 6)
             )
            )
           )
           (br_if $while-in1
            (i32.lt_u
             (local.tee $6
              (i32.add
               (local.get $6)
               (local.get $9)
              )
             )
             (local.get $8)
            )
           )
          )
          (if (result i32)
           (i32.eq
            (local.get $4)
            (i32.const 6)
           )
           (local.get $0)
           (block (result i32)
            (i32.store8
             (local.get $5)
             (local.get $3)
            )
            (local.get $0)
           )
          )
         )
         (local.get $0)
        )
       )
      )
      (br $switch
       (if (result i32)
        (i32.lt_u
         (local.tee $7
          (i32.load
           (i32.add
            (i32.shl
             (local.get $2)
             (i32.const 2)
            )
            (i32.const 1408)
           )
          )
         )
         (local.tee $8
          (i32.load
           (local.get $0)
          )
         )
        )
        (block (result i32)
         (local.set $9
          (i32.load
           (i32.add
            (i32.shl
             (local.get $2)
             (i32.const 2)
            )
            (i32.const 1440)
           )
          )
         )
         (local.set $6
          (local.get $7)
         )
         (local.set $4
          (i32.const 4)
         )
         (local.set $5
          (local.get $1)
         )
         (loop $while-in4
          (local.set $3
           (i32.or
            (local.get $3)
            (i32.shl
             (i32.and
              (i32.shr_u
               (i32.load8_u
                (i32.add
                 (local.get $1)
                 (i32.shr_u
                  (local.get $6)
                  (i32.const 1)
                 )
                )
               )
               (i32.xor
                (i32.and
                 (i32.shl
                  (local.get $6)
                  (i32.const 2)
                 )
                 (i32.const 4)
                )
                (i32.const 4)
               )
              )
              (i32.const 15)
             )
             (local.get $4)
            )
           )
          )
          (local.set $4
           (if (result i32)
            (local.get $4)
            (i32.add
             (local.get $4)
             (i32.const -4)
            )
            (block (result i32)
             (i32.store8
              (local.get $5)
              (local.get $3)
             )
             (local.set $3
              (i32.const 0)
             )
             (local.set $5
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (i32.const 4)
            )
           )
          )
          (br_if $while-in4
           (i32.lt_u
            (local.tee $6
             (i32.add
              (local.get $6)
              (local.get $9)
             )
            )
            (local.get $8)
           )
          )
         )
         (if (result i32)
          (i32.eq
           (local.get $4)
           (i32.const 4)
          )
          (local.get $0)
          (block (result i32)
           (i32.store8
            (local.get $5)
            (local.get $3)
           )
           (local.get $0)
          )
         )
        )
        (local.get $0)
       )
      )
     )
     (local.set $3
      (i32.shr_u
       (i32.and
        (local.get $7)
        (i32.const 255)
       )
       (i32.const 3)
      )
     )
     (if (result i32)
      (i32.lt_u
       (local.tee $7
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (i32.const 1408)
         )
        )
       )
       (local.tee $4
        (i32.load
         (local.get $0)
        )
       )
      )
      (block (result i32)
       (local.set $8
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (i32.const 1440)
         )
        )
       )
       (local.set $6
        (local.get $7)
       )
       (local.set $5
        (local.get $1)
       )
       (loop $while-in7 (result i32)
        (if
         (i32.ne
          (local.tee $9
           (i32.add
            (local.get $1)
            (i32.mul
             (local.get $3)
             (local.get $6)
            )
           )
          )
          (local.get $5)
         )
         (drop
          (call $_memcpy
           (local.get $5)
           (local.get $9)
           (local.get $3)
          )
         )
        )
        (local.set $5
         (i32.add
          (local.get $3)
          (local.get $5)
         )
        )
        (br_if $while-in7
         (i32.lt_u
          (local.tee $6
           (i32.add
            (local.get $6)
            (local.get $8)
           )
          )
          (local.get $4)
         )
        )
        (local.get $0)
       )
      )
      (local.get $0)
     )
    )
   )
   (local.tee $1
    (i32.div_u
     (i32.sub
      (i32.add
       (local.tee $2
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (i32.const 1440)
         )
        )
       )
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const -1)
       )
      )
      (local.get $7)
     )
     (local.get $2)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
   (i32.shr_u
    (i32.add
     (i32.mul
      (local.get $1)
      (i32.load8_u
       (local.get $10)
      )
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
 )
 (func $_png_write_find_filter (; 227 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local.set $14
   (i32.load
    (local.tee $13
     (i32.add
      (local.get $1)
      (i32.const 4)
     )
    )
   )
  )
  (local.set $15
   (i32.and
    (local.tee $17
     (i32.load8_s
      (local.tee $23
       (i32.add
        (local.get $0)
        (i32.const 597)
       )
      )
     )
    )
    (i32.const 255)
   )
  )
  (local.set $3
   (i32.load8_u
    (i32.add
     (local.get $1)
     (i32.const 11)
    )
   )
  )
  (local.set $12
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 324)
    )
   )
  )
  (local.set $10
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 328)
    )
   )
  )
  (if
   (i32.or
    (i32.eqz
     (i32.and
      (local.tee $19
       (i32.and
        (local.tee $18
         (i32.load8_s
          (i32.add
           (local.get $0)
           (i32.const 385)
          )
         )
        )
        (i32.const 255)
       )
      )
      (i32.const 8)
     )
    )
    (i32.eq
     (local.get $18)
     (i32.const 8)
    )
   )
   (local.set $1
    (i32.const 2147483647)
   )
   (block
    (if
     (local.get $14)
     (block
      (local.set $1
       (local.get $10)
      )
      (loop $while-in
       (local.set $1
        (i32.add
         (local.get $7)
         (select
          (local.tee $7
           (i32.and
            (local.tee $1
             (i32.load8_s
              (local.tee $2
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 255)
           )
          )
          (i32.sub
           (i32.const 256)
           (local.get $7)
          )
          (i32.gt_s
           (local.get $1)
           (i32.const -1)
          )
         )
        )
       )
       (if
        (i32.ne
         (local.get $14)
         (local.tee $6
          (i32.add
           (local.get $6)
           (i32.const 1)
          )
         )
        )
        (block
         (local.set $7
          (local.get $1)
         )
         (local.set $1
          (local.get $2)
         )
         (br $while-in)
        )
       )
      )
     )
     (local.set $1
      (i32.const 0)
     )
    )
    (if
     (i32.eq
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 596)
       )
      )
      (i32.const 2)
     )
     (block
      (local.set $7
       (i32.and
        (local.get $1)
        (i32.const 65535)
       )
      )
      (local.set $1
       (i32.and
        (i32.shr_u
         (local.get $1)
         (i32.const 10)
        )
        (i32.const 4194240)
       )
      )
      (if
       (local.get $17)
       (block
        (local.set $2
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 600)
          )
         )
        )
        (local.set $4
         (i32.add
          (local.get $0)
          (i32.const 604)
         )
        )
        (local.set $6
         (i32.const 0)
        )
        (loop $while-in1
         (if
          (i32.eqz
           (i32.load8_s
            (i32.add
             (local.get $2)
             (local.get $6)
            )
           )
          )
          (block
           (local.set $1
            (i32.shr_u
             (i32.mul
              (local.get $1)
              (local.tee $5
               (i32.load16_u
                (i32.add
                 (i32.load
                  (local.get $4)
                 )
                 (i32.shl
                  (local.get $6)
                  (i32.const 1)
                 )
                )
               )
              )
             )
             (i32.const 8)
            )
           )
           (local.set $7
            (i32.shr_u
             (i32.mul
              (local.get $5)
              (local.get $7)
             )
             (i32.const 8)
            )
           )
          )
         )
         (br_if $while-in1
          (i32.ne
           (local.get $15)
           (local.tee $6
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
      )
      (local.set $1
       (i32.mul
        (local.get $1)
        (local.tee $6
         (i32.load16_u
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 612)
           )
          )
         )
        )
       )
      )
      (local.set $1
       (select
        (i32.const 2147483647)
        (i32.add
         (i32.shl
          (i32.shr_u
           (local.get $1)
           (i32.const 3)
          )
          (i32.const 10)
         )
         (i32.shr_u
          (i32.mul
           (local.get $6)
           (local.get $7)
          )
          (i32.const 3)
         )
        )
        (i32.gt_u
         (local.get $1)
         (i32.const 33553927)
        )
       )
      )
     )
    )
   )
  )
  (local.set $7
   (i32.shr_u
    (i32.add
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
     (i32.const 7)
    )
    (i32.const 3)
   )
  )
  (local.set $6
   (if (result i32)
    (i32.eq
     (local.get $18)
     (i32.const 16)
    )
    (block (result i32)
     (local.set $6
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (local.set $3
      (i32.add
       (local.tee $9
        (i32.load
         (local.tee $8
          (i32.add
           (local.get $0)
           (i32.const 332)
          )
         )
        )
       )
       (i32.const 1)
      )
     )
     (local.set $2
      (if (result i32)
       (local.get $7)
       (block (result i32)
        (local.set $5
         (i32.add
          (local.get $10)
          (local.tee $11
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
         )
        )
        (local.set $2
         (local.get $6)
        )
        (local.set $4
         (i32.const 0)
        )
        (loop $while-in3
         (i32.store8
          (local.get $3)
          (i32.load8_s
           (local.get $2)
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (br_if $while-in3
          (i32.ne
           (local.tee $4
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
           (local.get $7)
          )
         )
        )
        (local.set $3
         (i32.add
          (local.get $9)
          (local.get $11)
         )
        )
        (local.set $4
         (local.get $7)
        )
        (local.get $5)
       )
       (block (result i32)
        (local.set $4
         (i32.const 0)
        )
        (local.get $6)
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $4)
       (local.get $14)
      )
      (loop $while-in5
       (i32.store8
        (local.get $3)
        (i32.sub
         (i32.load8_u
          (local.get $2)
         )
         (i32.load8_u
          (local.get $6)
         )
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (br_if $while-in5
        (i32.ne
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.get $14)
        )
       )
      )
     )
     (i32.load
      (local.get $8)
     )
    )
    (if (result i32)
     (i32.and
      (local.get $19)
      (i32.const 16)
     )
     (block (result i32)
      (local.set $9
       (if (result i32)
        (i32.eq
         (i32.load8_s
          (local.tee $16
           (i32.add
            (local.get $0)
            (i32.const 596)
           )
          )
         )
         (i32.const 2)
        )
        (block (result i32)
         (local.set $6
          (i32.and
           (local.get $1)
           (i32.const 65535)
          )
         )
         (local.set $2
          (i32.and
           (i32.shr_u
            (local.get $1)
            (i32.const 10)
           )
           (i32.const 4194240)
          )
         )
         (if
          (local.get $17)
          (block
           (local.set $4
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 600)
             )
            )
           )
           (local.set $5
            (i32.add
             (local.get $0)
             (i32.const 608)
            )
           )
           (local.set $3
            (i32.const 0)
           )
           (loop $while-in7
            (if
             (i32.eq
              (i32.load8_s
               (i32.add
                (local.get $3)
                (local.get $4)
               )
              )
              (i32.const 1)
             )
             (block
              (local.set $6
               (i32.shr_u
                (i32.mul
                 (local.get $6)
                 (local.tee $8
                  (i32.load16_u
                   (i32.add
                    (i32.load
                     (local.get $5)
                    )
                    (i32.shl
                     (local.get $3)
                     (i32.const 1)
                    )
                   )
                  )
                 )
                )
                (i32.const 8)
               )
              )
              (local.set $2
               (i32.shr_u
                (i32.mul
                 (local.get $2)
                 (local.get $8)
                )
                (i32.const 8)
               )
              )
             )
            )
            (br_if $while-in7
             (i32.ne
              (local.get $15)
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
             )
            )
           )
          )
         )
         (local.set $2
          (i32.mul
           (local.get $2)
           (local.tee $3
            (i32.load16_u
             (i32.add
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 616)
               )
              )
              (i32.const 2)
             )
            )
           )
          )
         )
         (select
          (i32.const 2147483647)
          (i32.add
           (i32.shl
            (i32.shr_u
             (local.get $2)
             (i32.const 3)
            )
            (i32.const 10)
           )
           (i32.shr_u
            (i32.mul
             (local.get $3)
             (local.get $6)
            )
            (i32.const 3)
           )
          )
          (i32.gt_u
           (local.get $2)
           (i32.const 33553927)
          )
         )
        )
        (local.get $1)
       )
      )
      (local.set $6
       (i32.add
        (local.get $10)
        (i32.const 1)
       )
      )
      (local.set $3
       (i32.add
        (local.tee $21
         (i32.load
          (local.tee $20
           (i32.add
            (local.get $0)
            (i32.const 332)
           )
          )
         )
        )
        (i32.const 1)
       )
      )
      (local.set $3
       (if (result i32)
        (local.get $7)
        (block (result i32)
         (local.set $11
          (i32.add
           (local.tee $22
            (i32.add
             (local.get $7)
             (i32.const 1)
            )
           )
           (local.get $10)
          )
         )
         (local.set $5
          (i32.const 0)
         )
         (local.set $4
          (i32.const 0)
         )
         (local.set $2
          (local.get $3)
         )
         (local.set $3
          (local.get $6)
         )
         (loop $while-in9
          (i32.store8
           (local.get $2)
           (local.tee $8
            (i32.load8_s
             (local.get $3)
            )
           )
          )
          (local.set $4
           (i32.add
            (local.get $4)
            (select
             (local.tee $4
              (i32.and
               (local.get $8)
               (i32.const 255)
              )
             )
             (i32.sub
              (i32.const 256)
              (local.get $4)
             )
             (i32.gt_s
              (local.get $8)
              (i32.const -1)
             )
            )
           )
          )
          (local.set $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (local.set $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (br_if $while-in9
           (i32.ne
            (local.tee $5
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.get $7)
           )
          )
         )
         (local.set $5
          (local.get $7)
         )
         (local.set $2
          (local.get $4)
         )
         (local.set $8
          (i32.add
           (local.get $21)
           (local.get $22)
          )
         )
         (local.set $4
          (i32.load
           (local.get $13)
          )
         )
         (local.get $11)
        )
        (block (result i32)
         (local.set $5
          (i32.const 0)
         )
         (local.set $2
          (i32.const 0)
         )
         (local.set $8
          (local.get $3)
         )
         (local.set $4
          (local.get $14)
         )
         (local.get $6)
        )
       )
      )
      (if
       (i32.lt_u
        (local.get $5)
        (local.get $4)
       )
       (block $label$break$L50
        (local.set $4
         (local.get $6)
        )
        (local.set $6
         (local.get $2)
        )
        (local.set $2
         (local.get $8)
        )
        (loop $while-in11
         (i32.store8
          (local.get $2)
          (local.tee $8
           (i32.sub
            (i32.load8_u
             (local.get $3)
            )
            (i32.load8_u
             (local.get $4)
            )
           )
          )
         )
         (br_if $label$break$L50
          (i32.gt_u
           (local.tee $6
            (i32.add
             (local.get $6)
             (select
              (local.tee $6
               (i32.and
                (local.get $8)
                (i32.const 255)
               )
              )
              (i32.sub
               (i32.const 256)
               (local.get $6)
              )
              (i32.lt_u
               (local.get $6)
               (i32.const 128)
              )
             )
            )
           )
           (local.get $9)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.set $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (br_if $while-in11
          (i32.lt_u
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (i32.load
            (local.get $13)
           )
          )
         )
        )
       )
       (local.set $6
        (local.get $2)
       )
      )
      (if (result i32)
       (i32.lt_u
        (local.tee $2
         (if (result i32)
          (i32.eq
           (i32.load8_s
            (local.get $16)
           )
           (i32.const 2)
          )
          (block (result i32)
           (local.set $2
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $3
            (i32.and
             (i32.shr_u
              (local.get $6)
              (i32.const 10)
             )
             (i32.const 4194240)
            )
           )
           (if
            (local.get $17)
            (block
             (local.set $4
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 600)
               )
              )
             )
             (local.set $5
              (i32.add
               (local.get $0)
               (i32.const 608)
              )
             )
             (local.set $6
              (local.get $2)
             )
             (local.set $2
              (local.get $3)
             )
             (local.set $3
              (i32.const 0)
             )
             (loop $while-in13
              (if
               (i32.eq
                (i32.load8_s
                 (i32.add
                  (local.get $3)
                  (local.get $4)
                 )
                )
                (i32.const 1)
               )
               (block
                (local.set $6
                 (i32.shr_u
                  (i32.mul
                   (local.get $6)
                   (local.tee $8
                    (i32.load16_u
                     (i32.add
                      (i32.load
                       (local.get $5)
                      )
                      (i32.shl
                       (local.get $3)
                       (i32.const 1)
                      )
                     )
                    )
                   )
                  )
                  (i32.const 8)
                 )
                )
                (local.set $2
                 (i32.shr_u
                  (i32.mul
                   (local.get $2)
                   (local.get $8)
                  )
                  (i32.const 8)
                 )
                )
               )
              )
              (br_if $while-in13
               (i32.ne
                (local.get $15)
                (local.tee $3
                 (i32.add
                  (local.get $3)
                  (i32.const 1)
                 )
                )
               )
              )
             )
            )
            (block
             (local.set $6
              (local.get $2)
             )
             (local.set $2
              (local.get $3)
             )
            )
           )
           (local.set $2
            (i32.mul
             (local.get $2)
             (local.tee $3
              (i32.load16_u
               (i32.add
                (i32.load
                 (i32.add
                  (local.get $0)
                  (i32.const 616)
                 )
                )
                (i32.const 2)
               )
              )
             )
            )
           )
           (select
            (i32.const 2147483647)
            (i32.add
             (i32.shl
              (i32.shr_u
               (local.get $2)
               (i32.const 3)
              )
              (i32.const 10)
             )
             (i32.shr_u
              (i32.mul
               (local.get $3)
               (local.get $6)
              )
              (i32.const 3)
             )
            )
            (i32.gt_u
             (local.get $2)
             (i32.const 33553927)
            )
           )
          )
          (local.get $6)
         )
        )
        (local.get $1)
       )
       (block (result i32)
        (local.set $1
         (local.get $2)
        )
        (i32.load
         (local.get $20)
        )
       )
       (local.get $10)
      )
     )
     (local.get $10)
    )
   )
  )
  (if
   (i32.eq
    (local.get $18)
    (i32.const 32)
   )
   (block
    (local.set $5
     (i32.add
      (local.get $0)
      (i32.const 336)
     )
    )
    (if
     (local.get $14)
     (block
      (local.set $3
       (i32.const 0)
      )
      (local.set $6
       (local.get $10)
      )
      (local.set $4
       (i32.load
        (local.get $5)
       )
      )
      (local.set $2
       (local.get $12)
      )
      (loop $while-in15
       (i32.store8
        (local.tee $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (i32.sub
         (i32.load8_u
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const 1)
           )
          )
         )
         (i32.load8_u
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
         )
        )
       )
       (br_if $while-in15
        (i32.ne
         (local.get $14)
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    (local.set $6
     (i32.load
      (local.get $5)
     )
    )
   )
   (if
    (i32.and
     (local.get $19)
     (i32.const 32)
    )
    (block
     (local.set $11
      (if (result i32)
       (i32.eq
        (local.tee $5
         (i32.load8_s
          (local.tee $16
           (i32.add
            (local.get $0)
            (i32.const 596)
           )
          )
         )
        )
        (i32.const 2)
       )
       (block (result i32)
        (local.set $2
         (i32.and
          (local.get $1)
          (i32.const 65535)
         )
        )
        (local.set $3
         (i32.and
          (i32.shr_u
           (local.get $1)
           (i32.const 10)
          )
          (i32.const 4194240)
         )
        )
        (if
         (local.get $17)
         (block
          (local.set $8
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 600)
            )
           )
          )
          (local.set $9
           (i32.add
            (local.get $0)
            (i32.const 608)
           )
          )
          (local.set $4
           (i32.const 0)
          )
          (loop $while-in17
           (if
            (i32.eq
             (i32.load8_s
              (i32.add
               (local.get $4)
               (local.get $8)
              )
             )
             (i32.const 2)
            )
            (block
             (local.set $2
              (i32.shr_u
               (i32.mul
                (local.get $2)
                (local.tee $11
                 (i32.load16_u
                  (i32.add
                   (i32.load
                    (local.get $9)
                   )
                   (i32.shl
                    (local.get $4)
                    (i32.const 1)
                   )
                  )
                 )
                )
               )
               (i32.const 8)
              )
             )
             (local.set $3
              (i32.shr_u
               (i32.mul
                (local.get $3)
                (local.get $11)
               )
               (i32.const 8)
              )
             )
            )
           )
           (br_if $while-in17
            (i32.ne
             (local.get $15)
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const 1)
              )
             )
            )
           )
          )
         )
        )
        (local.set $3
         (i32.mul
          (local.get $3)
          (local.tee $4
           (i32.load16_u
            (i32.add
             (i32.load
              (i32.add
               (local.get $0)
               (i32.const 616)
              )
             )
             (i32.const 4)
            )
           )
          )
         )
        )
        (select
         (i32.const 2147483647)
         (i32.add
          (i32.shl
           (i32.shr_u
            (local.get $3)
            (i32.const 3)
           )
           (i32.const 10)
          )
          (i32.shr_u
           (i32.mul
            (local.get $2)
            (local.get $4)
           )
           (i32.const 3)
          )
         )
         (i32.gt_u
          (local.get $3)
          (i32.const 33553927)
         )
        )
       )
       (local.get $1)
      )
     )
     (local.set $13
      (i32.add
       (local.get $0)
       (i32.const 336)
      )
     )
     (if
      (i32.eq
       (i32.and
        (if (result i32)
         (local.get $14)
         (block (result i32)
          (local.set $4
           (i32.const 0)
          )
          (local.set $5
           (i32.const 0)
          )
          (local.set $2
           (local.get $10)
          )
          (local.set $8
           (i32.load
            (local.get $13)
           )
          )
          (local.set $3
           (local.get $12)
          )
          (loop $while-in19
           (i32.store8
            (local.tee $8
             (i32.add
              (local.get $8)
              (i32.const 1)
             )
            )
            (local.tee $2
             (i32.sub
              (i32.load8_u
               (local.tee $9
                (i32.add
                 (local.get $2)
                 (i32.const 1)
                )
               )
              )
              (i32.load8_u
               (local.tee $3
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
              )
             )
            )
           )
           (if
            (i32.and
             (i32.lt_u
              (local.tee $4
               (i32.add
                (local.get $4)
                (i32.const 1)
               )
              )
              (local.get $14)
             )
             (i32.le_u
              (local.tee $2
               (i32.add
                (local.get $5)
                (select
                 (local.tee $2
                  (i32.and
                   (local.get $2)
                   (i32.const 255)
                  )
                 )
                 (i32.sub
                  (i32.const 256)
                  (local.get $2)
                 )
                 (i32.lt_u
                  (local.get $2)
                  (i32.const 128)
                 )
                )
               )
              )
              (local.get $11)
             )
            )
            (block
             (local.set $5
              (local.get $2)
             )
             (local.set $2
              (local.get $9)
             )
             (br $while-in19)
            )
           )
          )
          (i32.load8_s
           (local.get $16)
          )
         )
         (block (result i32)
          (local.set $2
           (i32.const 0)
          )
          (local.get $5)
         )
        )
        (i32.const 255)
       )
       (i32.const 2)
      )
      (block
       (local.set $3
        (i32.and
         (local.get $2)
         (i32.const 65535)
        )
       )
       (local.set $4
        (i32.and
         (i32.shr_u
          (local.get $2)
          (i32.const 10)
         )
         (i32.const 4194240)
        )
       )
       (if
        (local.get $17)
        (block
         (local.set $5
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 600)
           )
          )
         )
         (local.set $8
          (i32.add
           (local.get $0)
           (i32.const 604)
          )
         )
         (local.set $2
          (local.get $3)
         )
         (local.set $3
          (local.get $4)
         )
         (local.set $4
          (i32.const 0)
         )
         (loop $while-in21
          (if
           (i32.eq
            (i32.load8_s
             (i32.add
              (local.get $4)
              (local.get $5)
             )
            )
            (i32.const 2)
           )
           (block
            (local.set $2
             (i32.shr_u
              (i32.mul
               (local.get $2)
               (local.tee $9
                (i32.load16_u
                 (i32.add
                  (i32.load
                   (local.get $8)
                  )
                  (i32.shl
                   (local.get $4)
                   (i32.const 1)
                  )
                 )
                )
               )
              )
              (i32.const 8)
             )
            )
            (local.set $3
             (i32.shr_u
              (i32.mul
               (local.get $3)
               (local.get $9)
              )
              (i32.const 8)
             )
            )
           )
          )
          (br_if $while-in21
           (i32.ne
            (local.get $15)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
        (block
         (local.set $2
          (local.get $3)
         )
         (local.set $3
          (local.get $4)
         )
        )
       )
       (local.set $3
        (i32.mul
         (local.get $3)
         (local.tee $4
          (i32.load16_u
           (i32.add
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 612)
             )
            )
            (i32.const 4)
           )
          )
         )
        )
       )
       (local.set $2
        (select
         (i32.const 2147483647)
         (i32.add
          (i32.shl
           (i32.shr_u
            (local.get $3)
            (i32.const 3)
           )
           (i32.const 10)
          )
          (i32.shr_u
           (i32.mul
            (local.get $2)
            (local.get $4)
           )
           (i32.const 3)
          )
         )
         (i32.gt_u
          (local.get $3)
          (i32.const 33553927)
         )
        )
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $2)
       (local.get $1)
      )
      (block
       (local.set $6
        (i32.load
         (local.get $13)
        )
       )
       (local.set $1
        (local.get $2)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eq
    (local.get $18)
    (i32.const 64)
   )
   (block
    (local.set $6
     (i32.add
      (local.get $10)
      (i32.const 1)
     )
    )
    (local.set $2
     (i32.add
      (local.get $12)
      (i32.const 1)
     )
    )
    (local.set $3
     (i32.add
      (local.tee $13
       (i32.load
        (local.tee $16
         (i32.add
          (local.get $0)
          (i32.const 340)
         )
        )
       )
      )
      (i32.const 1)
     )
    )
    (local.set $4
     (if (result i32)
      (local.get $7)
      (block (result i32)
       (local.set $9
        (i32.add
         (local.get $12)
         (local.tee $11
          (i32.add
           (local.get $7)
           (i32.const 1)
          )
         )
        )
       )
       (local.set $5
        (i32.const 0)
       )
       (local.set $4
        (local.get $6)
       )
       (loop $while-in23
        (local.set $8
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $3)
         (i32.sub
          (i32.load8_u
           (local.get $4)
          )
          (i32.shr_u
           (i32.load8_u
            (local.get $2)
           )
           (i32.const 1)
          )
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (if
         (i32.ne
          (local.tee $5
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
          (local.get $7)
         )
         (block
          (local.set $4
           (local.get $8)
          )
          (br $while-in23)
         )
        )
       )
       (local.set $5
        (local.get $7)
       )
       (local.set $2
        (local.get $9)
       )
       (local.set $3
        (i32.add
         (local.get $11)
         (local.get $13)
        )
       )
       (i32.add
        (local.get $10)
        (local.get $11)
       )
      )
      (block (result i32)
       (local.set $5
        (i32.const 0)
       )
       (local.get $6)
      )
     )
    )
    (if
     (i32.lt_u
      (local.get $5)
      (local.get $14)
     )
     (loop $while-in25
      (local.set $8
       (i32.add
        (local.get $4)
        (i32.const 1)
       )
      )
      (local.set $9
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (local.set $11
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (local.set $13
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $3)
       (i32.sub
        (i32.load8_u
         (local.get $4)
        )
        (i32.shr_u
         (i32.add
          (i32.load8_u
           (local.get $2)
          )
          (i32.load8_u
           (local.get $6)
          )
         )
         (i32.const 1)
        )
       )
      )
      (if
       (i32.ne
        (local.get $14)
        (local.tee $5
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
       )
       (block
        (local.set $6
         (local.get $11)
        )
        (local.set $2
         (local.get $9)
        )
        (local.set $3
         (local.get $13)
        )
        (local.set $4
         (local.get $8)
        )
        (br $while-in25)
       )
      )
     )
    )
    (local.set $6
     (i32.load
      (local.get $16)
     )
    )
   )
   (if
    (i32.and
     (local.get $19)
     (i32.const 64)
    )
    (block
     (local.set $13
      (if (result i32)
       (i32.eq
        (i32.load8_s
         (local.tee $21
          (i32.add
           (local.get $0)
           (i32.const 596)
          )
         )
        )
        (i32.const 2)
       )
       (block (result i32)
        (local.set $2
         (i32.and
          (local.get $1)
          (i32.const 65535)
         )
        )
        (local.set $3
         (i32.and
          (i32.shr_u
           (local.get $1)
           (i32.const 10)
          )
          (i32.const 4194240)
         )
        )
        (if
         (local.get $17)
         (block
          (local.set $5
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 600)
            )
           )
          )
          (local.set $8
           (i32.add
            (local.get $0)
            (i32.const 608)
           )
          )
          (local.set $4
           (i32.const 0)
          )
          (loop $while-in27
           (if
            (i32.eq
             (i32.load8_s
              (i32.add
               (local.get $4)
               (local.get $5)
              )
             )
             (i32.const 3)
            )
            (block
             (local.set $2
              (i32.shr_u
               (i32.mul
                (local.get $2)
                (local.tee $9
                 (i32.load16_u
                  (i32.add
                   (i32.load
                    (local.get $8)
                   )
                   (i32.shl
                    (local.get $4)
                    (i32.const 1)
                   )
                  )
                 )
                )
               )
               (i32.const 8)
              )
             )
             (local.set $3
              (i32.shr_u
               (i32.mul
                (local.get $3)
                (local.get $9)
               )
               (i32.const 8)
              )
             )
            )
           )
           (br_if $while-in27
            (i32.ne
             (local.get $15)
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const 1)
              )
             )
            )
           )
          )
         )
        )
        (local.set $3
         (i32.mul
          (local.get $3)
          (local.tee $4
           (i32.load16_u
            (i32.add
             (i32.load
              (i32.add
               (local.get $0)
               (i32.const 616)
              )
             )
             (i32.const 6)
            )
           )
          )
         )
        )
        (select
         (i32.const 2147483647)
         (i32.add
          (i32.shl
           (i32.shr_u
            (local.get $3)
            (i32.const 3)
           )
           (i32.const 10)
          )
          (i32.shr_u
           (i32.mul
            (local.get $2)
            (local.get $4)
           )
           (i32.const 3)
          )
         )
         (i32.gt_u
          (local.get $3)
          (i32.const 33553927)
         )
        )
       )
       (local.get $1)
      )
     )
     (local.set $2
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (local.set $4
      (i32.add
       (local.get $12)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.add
       (local.tee $24
        (i32.load
         (local.tee $22
          (i32.add
           (local.get $0)
           (i32.const 340)
          )
         )
        )
       )
       (i32.const 1)
      )
     )
     (local.set $3
      (if (result i32)
       (local.get $7)
       (block (result i32)
        (local.set $16
         (i32.add
          (local.get $12)
          (local.tee $20
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
         )
        )
        (local.set $8
         (i32.const 0)
        )
        (local.set $9
         (i32.const 0)
        )
        (local.set $3
         (local.get $4)
        )
        (local.set $4
         (local.get $5)
        )
        (local.set $5
         (local.get $2)
        )
        (loop $while-in29
         (local.set $11
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $4)
          (local.tee $5
           (i32.sub
            (i32.load8_u
             (local.get $5)
            )
            (i32.shr_u
             (i32.load8_u
              (local.get $3)
             )
             (i32.const 1)
            )
           )
          )
         )
         (local.set $5
          (i32.add
           (local.get $9)
           (select
            (local.tee $5
             (i32.and
              (local.get $5)
              (i32.const 255)
             )
            )
            (i32.sub
             (i32.const 256)
             (local.get $5)
            )
            (i32.lt_u
             (local.get $5)
             (i32.const 128)
            )
           )
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.set $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (if
          (i32.ne
           (local.tee $8
            (i32.add
             (local.get $8)
             (i32.const 1)
            )
           )
           (local.get $7)
          )
          (block
           (local.set $9
            (local.get $5)
           )
           (local.set $5
            (local.get $11)
           )
           (br $while-in29)
          )
         )
        )
        (local.set $9
         (local.get $7)
        )
        (local.set $4
         (local.get $16)
        )
        (local.set $8
         (i32.add
          (local.get $20)
          (local.get $24)
         )
        )
        (local.set $11
         (i32.add
          (local.get $10)
          (local.get $20)
         )
        )
        (local.get $5)
       )
       (block (result i32)
        (local.set $9
         (i32.const 0)
        )
        (local.set $8
         (local.get $5)
        )
        (local.set $11
         (local.get $2)
        )
        (i32.const 0)
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $9)
       (local.get $14)
      )
      (block $label$break$L140
       (local.set $5
        (local.get $2)
       )
       (local.set $2
        (local.get $3)
       )
       (local.set $3
        (local.get $8)
       )
       (local.set $8
        (local.get $11)
       )
       (loop $while-in32
        (i32.store8
         (local.get $3)
         (local.tee $11
          (i32.sub
           (i32.load8_u
            (local.get $8)
           )
           (i32.shr_u
            (i32.add
             (i32.load8_u
              (local.get $4)
             )
             (i32.load8_u
              (local.get $5)
             )
            )
            (i32.const 1)
           )
          )
         )
        )
        (br_if $label$break$L140
         (i32.gt_u
          (local.tee $2
           (i32.add
            (local.get $2)
            (select
             (local.tee $2
              (i32.and
               (local.get $11)
               (i32.const 255)
              )
             )
             (i32.sub
              (i32.const 256)
              (local.get $2)
             )
             (i32.lt_u
              (local.get $2)
              (i32.const 128)
             )
            )
           )
          )
          (local.get $13)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (local.set $5
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (local.set $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (local.set $8
         (i32.add
          (local.get $8)
          (i32.const 1)
         )
        )
        (br_if $while-in32
         (i32.lt_u
          (local.tee $9
           (i32.add
            (local.get $9)
            (i32.const 1)
           )
          )
          (local.get $14)
         )
        )
       )
      )
      (local.set $2
       (local.get $3)
      )
     )
     (if
      (i32.eq
       (i32.load8_s
        (local.get $21)
       )
       (i32.const 2)
      )
      (block
       (local.set $3
        (i32.and
         (local.get $2)
         (i32.const 65535)
        )
       )
       (local.set $4
        (i32.and
         (i32.shr_u
          (local.get $2)
          (i32.const 10)
         )
         (i32.const 4194240)
        )
       )
       (if
        (local.get $17)
        (block
         (local.set $5
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 600)
           )
          )
         )
         (local.set $8
          (i32.add
           (local.get $0)
           (i32.const 604)
          )
         )
         (local.set $2
          (local.get $3)
         )
         (local.set $3
          (local.get $4)
         )
         (local.set $4
          (i32.const 0)
         )
         (loop $while-in34
          (if
           (i32.eqz
            (i32.load8_s
             (i32.add
              (local.get $4)
              (local.get $5)
             )
            )
           )
           (block
            (local.set $2
             (i32.shr_u
              (i32.mul
               (local.get $2)
               (local.tee $9
                (i32.load16_u
                 (i32.add
                  (i32.load
                   (local.get $8)
                  )
                  (i32.shl
                   (local.get $4)
                   (i32.const 1)
                  )
                 )
                )
               )
              )
              (i32.const 8)
             )
            )
            (local.set $3
             (i32.shr_u
              (i32.mul
               (local.get $3)
               (local.get $9)
              )
              (i32.const 8)
             )
            )
           )
          )
          (br_if $while-in34
           (i32.ne
            (local.get $15)
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
        (block
         (local.set $2
          (local.get $3)
         )
         (local.set $3
          (local.get $4)
         )
        )
       )
       (local.set $3
        (i32.mul
         (local.get $3)
         (local.tee $4
          (i32.load16_u
           (i32.add
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 612)
             )
            )
            (i32.const 6)
           )
          )
         )
        )
       )
       (local.set $2
        (select
         (i32.const 2147483647)
         (i32.add
          (i32.shl
           (i32.shr_u
            (local.get $3)
            (i32.const 3)
           )
           (i32.const 10)
          )
          (i32.shr_u
           (i32.mul
            (local.get $2)
            (local.get $4)
           )
           (i32.const 3)
          )
         )
         (i32.gt_u
          (local.get $3)
          (i32.const 33553927)
         )
        )
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $2)
       (local.get $1)
      )
      (block
       (local.set $6
        (i32.load
         (local.get $22)
        )
       )
       (local.set $1
        (local.get $2)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eq
    (local.get $18)
    (i32.const -128)
   )
   (block
    (local.set $1
     (i32.add
      (local.get $10)
      (i32.const 1)
     )
    )
    (local.set $6
     (i32.add
      (local.get $12)
      (i32.const 1)
     )
    )
    (local.set $4
     (i32.add
      (local.tee $16
       (i32.load
        (local.tee $13
         (i32.add
          (local.get $0)
          (i32.const 344)
         )
        )
       )
      )
      (i32.const 1)
     )
    )
    (local.set $7
     (if (result i32)
      (local.get $7)
      (block (result i32)
       (local.set $12
        (i32.add
         (local.get $12)
         (local.tee $11
          (i32.add
           (local.get $7)
           (i32.const 1)
          )
         )
        )
       )
       (local.set $5
        (i32.const 0)
       )
       (local.set $2
        (local.get $6)
       )
       (local.set $3
        (local.get $4)
       )
       (local.set $4
        (local.get $1)
       )
       (loop $while-in36
        (local.set $8
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (local.set $9
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $3)
         (i32.sub
          (i32.load8_u
           (local.get $4)
          )
          (i32.load8_u
           (local.get $2)
          )
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (if
         (i32.ne
          (local.tee $5
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
          (local.get $7)
         )
         (block
          (local.set $2
           (local.get $9)
          )
          (local.set $4
           (local.get $8)
          )
          (br $while-in36)
         )
        )
       )
       (local.set $3
        (local.get $7)
       )
       (local.set $4
        (i32.add
         (local.get $11)
         (local.get $16)
        )
       )
       (local.set $2
        (i32.add
         (local.get $10)
         (local.get $11)
        )
       )
       (local.get $12)
      )
      (block (result i32)
       (local.set $3
        (i32.const 0)
       )
       (local.set $2
        (local.get $1)
       )
       (local.get $6)
      )
     )
    )
    (if
     (i32.lt_u
      (local.get $3)
      (local.get $14)
     )
     (block
      (local.set $10
       (local.get $4)
      )
      (loop $while-in38
       (local.set $4
        (i32.add
         (local.get $7)
         (i32.const 1)
        )
       )
       (local.set $5
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $8
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $7
        (i32.sub
         (local.tee $11
          (i32.load8_u
           (local.get $7)
          )
         )
         (local.tee $6
          (i32.load8_u
           (local.get $6)
          )
         )
        )
       )
       (local.set $9
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $12
        (i32.add
         (local.get $10)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $10)
        (i32.sub
         (i32.load8_u
          (local.get $2)
         )
         (select
          (select
           (local.get $6)
           (local.get $11)
           (i32.gt_s
            (local.tee $6
             (select
              (i32.sub
               (i32.const 0)
               (local.tee $1
                (i32.sub
                 (local.tee $10
                  (i32.load8_u
                   (local.get $1)
                  )
                 )
                 (local.get $6)
                )
               )
              )
              (local.get $1)
              (i32.lt_s
               (local.get $1)
               (i32.const 0)
              )
             )
            )
            (local.tee $1
             (select
              (i32.sub
               (i32.const 0)
               (local.tee $1
                (i32.add
                 (local.get $1)
                 (local.get $7)
                )
               )
              )
              (local.get $1)
              (i32.lt_s
               (local.get $1)
               (i32.const 0)
              )
             )
            )
           )
          )
          (local.get $10)
          (i32.or
           (i32.gt_s
            (local.tee $7
             (select
              (i32.sub
               (i32.const 0)
               (local.get $7)
              )
              (local.get $7)
              (i32.lt_s
               (local.get $7)
               (i32.const 0)
              )
             )
            )
            (local.get $6)
           )
           (i32.gt_s
            (local.get $7)
            (local.get $1)
           )
          )
         )
        )
       )
       (if
        (i32.ne
         (local.get $14)
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
        )
        (block
         (local.set $1
          (local.get $8)
         )
         (local.set $6
          (local.get $5)
         )
         (local.set $7
          (local.get $4)
         )
         (local.set $10
          (local.get $12)
         )
         (local.set $2
          (local.get $9)
         )
         (br $while-in38)
        )
       )
      )
     )
    )
    (local.set $6
     (i32.load
      (local.get $13)
     )
    )
   )
   (if
    (i32.and
     (local.get $19)
     (i32.const 128)
    )
    (block
     (local.set $16
      (if (result i32)
       (i32.eq
        (i32.load8_s
         (local.tee $20
          (i32.add
           (local.get $0)
           (i32.const 596)
          )
         )
        )
        (i32.const 2)
       )
       (block (result i32)
        (local.set $2
         (i32.and
          (local.get $1)
          (i32.const 65535)
         )
        )
        (local.set $3
         (i32.and
          (i32.shr_u
           (local.get $1)
           (i32.const 10)
          )
          (i32.const 4194240)
         )
        )
        (if
         (local.get $17)
         (block
          (local.set $5
           (i32.load
            (i32.add
             (local.get $0)
             (i32.const 600)
            )
           )
          )
          (local.set $8
           (i32.add
            (local.get $0)
            (i32.const 608)
           )
          )
          (local.set $4
           (i32.const 0)
          )
          (loop $while-in40
           (if
            (i32.eq
             (i32.load8_s
              (i32.add
               (local.get $4)
               (local.get $5)
              )
             )
             (i32.const 4)
            )
            (block
             (local.set $2
              (i32.shr_u
               (i32.mul
                (local.get $2)
                (local.tee $9
                 (i32.load16_u
                  (i32.add
                   (i32.load
                    (local.get $8)
                   )
                   (i32.shl
                    (local.get $4)
                    (i32.const 1)
                   )
                  )
                 )
                )
               )
               (i32.const 8)
              )
             )
             (local.set $3
              (i32.shr_u
               (i32.mul
                (local.get $3)
                (local.get $9)
               )
               (i32.const 8)
              )
             )
            )
           )
           (br_if $while-in40
            (i32.ne
             (local.get $15)
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const 1)
              )
             )
            )
           )
          )
         )
        )
        (local.set $3
         (i32.mul
          (local.get $3)
          (local.tee $4
           (i32.load16_u
            (i32.add
             (i32.load
              (i32.add
               (local.get $0)
               (i32.const 616)
              )
             )
             (i32.const 8)
            )
           )
          )
         )
        )
        (select
         (i32.const 2147483647)
         (i32.add
          (i32.shl
           (i32.shr_u
            (local.get $3)
            (i32.const 3)
           )
           (i32.const 10)
          )
          (i32.shr_u
           (i32.mul
            (local.get $2)
            (local.get $4)
           )
           (i32.const 3)
          )
         )
         (i32.gt_u
          (local.get $3)
          (i32.const 33553927)
         )
        )
       )
       (local.get $1)
      )
     )
     (local.set $2
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (local.set $3
      (i32.add
       (local.get $12)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.add
       (local.tee $22
        (i32.load
         (local.tee $21
          (i32.add
           (local.get $0)
           (i32.const 344)
          )
         )
        )
       )
       (i32.const 1)
      )
     )
     (local.set $4
      (if (result i32)
       (local.get $7)
       (block (result i32)
        (local.set $18
         (i32.add
          (local.get $12)
          (local.tee $19
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
         )
        )
        (local.set $9
         (i32.const 0)
        )
        (local.set $12
         (i32.const 0)
        )
        (local.set $4
         (local.get $3)
        )
        (local.set $8
         (local.get $2)
        )
        (loop $while-in42
         (local.set $11
          (i32.add
           (local.get $8)
           (i32.const 1)
          )
         )
         (local.set $13
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $5)
          (local.tee $4
           (i32.sub
            (i32.load8_u
             (local.get $8)
            )
            (i32.load8_u
             (local.get $4)
            )
           )
          )
         )
         (local.set $4
          (i32.add
           (local.get $12)
           (select
            (local.tee $4
             (i32.and
              (local.get $4)
              (i32.const 255)
             )
            )
            (i32.sub
             (i32.const 256)
             (local.get $4)
            )
            (i32.lt_u
             (local.get $4)
             (i32.const 128)
            )
           )
          )
         )
         (local.set $5
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (if
          (i32.ne
           (local.tee $9
            (i32.add
             (local.get $9)
             (i32.const 1)
            )
           )
           (local.get $7)
          )
          (block
           (local.set $12
            (local.get $4)
           )
           (local.set $4
            (local.get $13)
           )
           (local.set $8
            (local.get $11)
           )
           (br $while-in42)
          )
         )
        )
        (local.set $8
         (local.get $7)
        )
        (local.set $7
         (local.get $4)
        )
        (local.set $5
         (i32.add
          (local.get $19)
          (local.get $22)
         )
        )
        (local.set $9
         (i32.add
          (local.get $10)
          (local.get $19)
         )
        )
        (local.get $18)
       )
       (block (result i32)
        (local.set $8
         (i32.const 0)
        )
        (local.set $7
         (i32.const 0)
        )
        (local.set $9
         (local.get $2)
        )
        (local.get $3)
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $8)
       (local.get $14)
      )
      (block $label$break$L191
       (local.set $10
        (local.get $5)
       )
       (local.set $5
        (local.get $9)
       )
       (loop $while-in45
        (local.set $9
         (i32.sub
          (local.tee $11
           (i32.load8_u
            (local.get $4)
           )
          )
          (local.tee $12
           (i32.load8_u
            (local.get $3)
           )
          )
         )
        )
        (i32.store8
         (local.get $10)
         (local.tee $9
          (i32.sub
           (i32.load8_u
            (local.get $5)
           )
           (select
            (select
             (local.get $12)
             (local.get $11)
             (i32.gt_s
              (local.tee $13
               (select
                (i32.sub
                 (i32.const 0)
                 (local.tee $12
                  (i32.sub
                   (local.tee $11
                    (i32.load8_u
                     (local.get $2)
                    )
                   )
                   (local.get $12)
                  )
                 )
                )
                (local.get $12)
                (i32.lt_s
                 (local.get $12)
                 (i32.const 0)
                )
               )
              )
              (local.tee $12
               (select
                (i32.sub
                 (i32.const 0)
                 (local.tee $12
                  (i32.add
                   (local.get $9)
                   (local.get $12)
                  )
                 )
                )
                (local.get $12)
                (i32.lt_s
                 (local.get $12)
                 (i32.const 0)
                )
               )
              )
             )
            )
            (local.get $11)
            (i32.or
             (i32.gt_s
              (local.tee $9
               (select
                (i32.sub
                 (i32.const 0)
                 (local.get $9)
                )
                (local.get $9)
                (i32.lt_s
                 (local.get $9)
                 (i32.const 0)
                )
               )
              )
              (local.get $13)
             )
             (i32.gt_s
              (local.get $9)
              (local.get $12)
             )
            )
           )
          )
         )
        )
        (br_if $label$break$L191
         (i32.gt_u
          (local.tee $7
           (i32.add
            (local.get $7)
            (select
             (local.tee $7
              (i32.and
               (local.get $9)
               (i32.const 255)
              )
             )
             (i32.sub
              (i32.const 256)
              (local.get $7)
             )
             (i32.lt_u
              (local.get $7)
              (i32.const 128)
             )
            )
           )
          )
          (local.get $16)
         )
        )
        (local.set $10
         (i32.add
          (local.get $10)
          (i32.const 1)
         )
        )
        (local.set $5
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (local.set $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (br_if $while-in45
         (i32.lt_u
          (local.tee $8
           (i32.add
            (local.get $8)
            (i32.const 1)
           )
          )
          (local.get $14)
         )
        )
       )
      )
     )
     (if
      (i32.eq
       (i32.load8_s
        (local.get $20)
       )
       (i32.const 2)
      )
      (block
       (local.set $10
        (i32.and
         (local.get $7)
         (i32.const 65535)
        )
       )
       (local.set $2
        (i32.and
         (i32.shr_u
          (local.get $7)
          (i32.const 10)
         )
         (i32.const 4194240)
        )
       )
       (if
        (local.get $17)
        (block
         (local.set $3
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 600)
           )
          )
         )
         (local.set $4
          (i32.add
           (local.get $0)
           (i32.const 604)
          )
         )
         (local.set $7
          (local.get $10)
         )
         (local.set $10
          (local.get $2)
         )
         (local.set $2
          (i32.const 0)
         )
         (loop $while-in47
          (if
           (i32.eq
            (i32.load8_s
             (i32.add
              (local.get $2)
              (local.get $3)
             )
            )
            (i32.const 4)
           )
           (block
            (local.set $7
             (i32.shr_u
              (i32.mul
               (local.get $7)
               (local.tee $5
                (i32.load16_u
                 (i32.add
                  (i32.load
                   (local.get $4)
                  )
                  (i32.shl
                   (local.get $2)
                   (i32.const 1)
                  )
                 )
                )
               )
              )
              (i32.const 8)
             )
            )
            (local.set $10
             (i32.shr_u
              (i32.mul
               (local.get $5)
               (local.get $10)
              )
              (i32.const 8)
             )
            )
           )
          )
          (br_if $while-in47
           (i32.ne
            (local.get $15)
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
        (block
         (local.set $7
          (local.get $10)
         )
         (local.set $10
          (local.get $2)
         )
        )
       )
       (local.set $10
        (i32.mul
         (local.get $10)
         (local.tee $2
          (i32.load16_u
           (i32.add
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 612)
             )
            )
            (i32.const 8)
           )
          )
         )
        )
       )
       (local.set $7
        (select
         (i32.const 2147483647)
         (i32.add
          (i32.shl
           (i32.shr_u
            (local.get $10)
            (i32.const 3)
           )
           (i32.const 10)
          )
          (i32.shr_u
           (i32.mul
            (local.get $2)
            (local.get $7)
           )
           (i32.const 3)
          )
         )
         (i32.gt_u
          (local.get $10)
          (i32.const 33553927)
         )
        )
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $7)
       (local.get $1)
      )
      (local.set $6
       (i32.load
        (local.get $21)
       )
      )
     )
    )
   )
  )
  (call $_png_write_filtered_row
   (local.get $0)
   (local.get $6)
  )
  (if
   (i32.eqz
    (i32.load8_s
     (local.get $23)
    )
   )
   (return)
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 600)
   )
  )
  (if
   (i32.gt_s
    (i32.and
     (local.get $17)
     (i32.const 255)
    )
    (i32.const 1)
   )
   (block
    (local.set $0
     (i32.const 1)
    )
    (loop $while-in49
     (i32.store8
      (i32.add
       (local.get $0)
       (local.tee $7
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.load8_s
       (i32.add
        (local.get $7)
        (i32.add
         (local.get $0)
         (i32.const -1)
        )
       )
      )
     )
     (br_if $while-in49
      (i32.ne
       (local.get $15)
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
   (local.set $15
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $15)
    (i32.load
     (local.get $1)
    )
   )
   (i32.load8_s
    (local.get $6)
   )
  )
 )
 (func $_png_write_filtered_row (; 228 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $0)
     (i32.const 208)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $0)
     (i32.const 212)
    )
   )
   (i32.add
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 352)
     )
    )
    (i32.const 1)
   )
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 224)
   )
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 232)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 264)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 268)
   )
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 196)
   )
  )
  (local.set $8
   (i32.add
    (local.get $0)
    (i32.const 220)
   )
  )
  (loop $while-in
   (if
    (call $_deflate
     (local.get $5)
     (i32.const 0)
    )
    (if
     (local.tee $9
      (i32.load
       (local.get $7)
      )
     )
     (call $_png_error
      (local.get $0)
      (local.get $9)
     )
     (call $_png_error
      (local.get $0)
      (i32.const 22821)
     )
    )
   )
   (if
    (i32.eqz
     (i32.load
      (local.get $1)
     )
    )
    (block
     (call $_png_write_chunk
      (local.get $0)
      (i32.const 17394)
      (i32.load
       (local.get $2)
      )
      (i32.load
       (local.get $3)
      )
     )
     (i32.store
      (local.get $4)
      (i32.or
       (i32.load
        (local.get $4)
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $8)
      (i32.load
       (local.get $2)
      )
     )
     (i32.store
      (local.get $1)
      (i32.load
       (local.get $3)
      )
     )
    )
   )
   (br_if $while-in
    (i32.load
     (local.get $6)
    )
   )
  )
  (if
   (local.tee $2
    (i32.load
     (local.tee $1
      (i32.add
       (local.get $0)
       (i32.const 324)
      )
     )
    )
   )
   (block
    (i32.store
     (local.get $1)
     (i32.load
      (local.tee $1
       (i32.add
        (local.get $0)
        (i32.const 328)
       )
      )
     )
    )
    (i32.store
     (local.get $1)
     (local.get $2)
    )
   )
  )
  (call $_png_write_finish_row
   (local.get $0)
  )
  (local.set $1
   (i32.add
    (i32.load
     (local.tee $2
      (i32.add
       (local.get $0)
       (i32.const 432)
      )
     )
    )
    (i32.const 1)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  (if
   (i32.ge_u
    (i32.add
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 428)
      )
     )
     (i32.const -1)
    )
    (local.get $1)
   )
   (return)
  )
  (call $_png_write_flush
   (local.get $0)
  )
 )
 (func $_crc32_z (; 229 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $5
   (local.get $3)
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $3)
     (i32.const 12)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $3)
     (i32.const 8)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (local.get $2)
  )
  (if
   (i32.load
    (local.get $6)
   )
   (block
    (i32.store
     (local.get $5)
     (i32.const 1)
    )
    (local.set $2
     (i32.load
      (local.get $7)
     )
    )
    (local.set $1
     (i32.load
      (local.get $6)
     )
    )
    (local.set $0
     (i32.load
      (local.get $0)
     )
    )
    (if
     (i32.load8_s
      (local.get $5)
     )
     (i32.store
      (local.get $4)
      (call $_crc32_little
       (local.get $2)
       (local.get $1)
       (local.get $0)
      )
     )
     (i32.store
      (local.get $4)
      (call $_crc32_big
       (local.get $2)
       (local.get $1)
       (local.get $0)
      )
     )
    )
   )
   (i32.store
    (local.get $4)
    (i32.const 0)
   )
  )
  (local.set $0
   (i32.load
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_crc32_little (; 230 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.tee $3
      (local.get $5)
     )
     (i32.const 16)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 12)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $3)
     (i32.const 8)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (i32.store
   (local.get $0)
   (i32.xor
    (i32.load
     (local.get $0)
    )
    (i32.const -1)
   )
  )
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.eqz
      (i32.load
       (local.get $1)
      )
     )
    )
    (br_if $while-out
     (i32.eqz
      (i32.and
       (i32.load
        (local.get $4)
       )
       (i32.const 3)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.get $0)
     )
    )
    (i32.store
     (local.get $4)
     (i32.add
      (local.tee $6
       (i32.load
        (local.get $4)
       )
      )
      (i32.const 1)
     )
    )
    (i32.store
     (local.get $0)
     (i32.xor
      (i32.load
       (i32.add
        (i32.shl
         (i32.and
          (i32.xor
           (local.get $2)
           (i32.load8_u
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.const 2)
        )
        (i32.const 2368)
       )
      )
      (i32.shr_u
       (i32.load
        (local.get $0)
       )
       (i32.const 8)
      )
     )
    )
    (i32.store
     (local.get $1)
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const -1)
     )
    )
    (br $while-in)
   )
  )
  (i32.store
   (local.get $3)
   (i32.load
    (local.get $4)
   )
  )
  (loop $while-in1
   (if
    (i32.ge_u
     (i32.load
      (local.get $1)
     )
     (i32.const 32)
    )
    (block
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 2368)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 3392)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 5440)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 4416)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 2368)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 3392)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 5440)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 4416)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 2368)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 3392)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 5440)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 4416)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 2368)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 3392)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 5440)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 4416)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 2368)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 3392)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 5440)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 4416)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 2368)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 3392)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 5440)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 4416)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 2368)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 3392)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 5440)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 4416)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 2368)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 3392)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 5440)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 4416)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $1)
      (i32.sub
       (i32.load
        (local.get $1)
       )
       (i32.const 32)
      )
     )
     (br $while-in1)
    )
   )
  )
  (loop $while-in3
   (local.set $2
    (i32.load
     (local.get $3)
    )
   )
   (if
    (i32.ge_u
     (i32.load
      (local.get $1)
     )
     (i32.const 4)
    )
    (block
     (i32.store
      (local.get $3)
      (i32.add
       (local.get $2)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 2368)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 3392)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 5440)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 4416)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $1)
      (i32.sub
       (i32.load
        (local.get $1)
       )
       (i32.const 4)
      )
     )
     (br $while-in3)
    )
   )
  )
  (i32.store
   (local.get $4)
   (local.get $2)
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $1)
    )
   )
   (block
    (i32.store
     (local.get $0)
     (i32.xor
      (i32.load
       (local.get $0)
      )
      (i32.const -1)
     )
    )
    (local.set $0
     (i32.load
      (local.get $0)
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (local.get $0)
    )
   )
  )
  (loop $while-in5
   (local.set $2
    (i32.load
     (local.get $0)
    )
   )
   (i32.store
    (local.get $4)
    (i32.add
     (local.tee $3
      (i32.load
       (local.get $4)
      )
     )
     (i32.const 1)
    )
   )
   (i32.store
    (local.get $0)
    (i32.xor
     (i32.load
      (i32.add
       (i32.shl
        (i32.and
         (i32.xor
          (local.get $2)
          (i32.load8_u
           (local.get $3)
          )
         )
         (i32.const 255)
        )
        (i32.const 2)
       )
       (i32.const 2368)
      )
     )
     (i32.shr_u
      (i32.load
       (local.get $0)
      )
      (i32.const 8)
     )
    )
   )
   (i32.store
    (local.get $1)
    (local.tee $2
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const -1)
     )
    )
   )
   (br_if $while-in5
    (local.get $2)
   )
  )
  (i32.store
   (local.get $0)
   (i32.xor
    (i32.load
     (local.get $0)
    )
    (i32.const -1)
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_crc32_big (; 231 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.tee $3
      (local.get $6)
     )
     (i32.const 16)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 12)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $3)
     (i32.const 8)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (i32.add
    (i32.add
     (i32.add
      (i32.and
       (i32.shr_u
        (i32.load
         (local.get $5)
        )
        (i32.const 8)
       )
       (i32.const 65280)
      )
      (i32.shr_u
       (i32.load
        (local.get $5)
       )
       (i32.const 24)
      )
     )
     (i32.shl
      (i32.and
       (i32.load
        (local.get $5)
       )
       (i32.const 65280)
      )
      (i32.const 8)
     )
    )
    (i32.shl
     (i32.and
      (i32.load
       (local.get $5)
      )
      (i32.const 255)
     )
     (i32.const 24)
    )
   )
  )
  (i32.store
   (local.get $0)
   (i32.xor
    (i32.load
     (local.get $0)
    )
    (i32.const -1)
   )
  )
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.eqz
      (i32.load
       (local.get $1)
      )
     )
    )
    (br_if $while-out
     (i32.eqz
      (i32.and
       (i32.load
        (local.get $4)
       )
       (i32.const 3)
      )
     )
    )
    (local.set $2
     (i32.shr_u
      (i32.load
       (local.get $0)
      )
      (i32.const 24)
     )
    )
    (i32.store
     (local.get $4)
     (i32.add
      (local.tee $5
       (i32.load
        (local.get $4)
       )
      )
      (i32.const 1)
     )
    )
    (i32.store
     (local.get $0)
     (i32.xor
      (i32.load
       (i32.add
        (i32.shl
         (i32.xor
          (local.get $2)
          (i32.load8_u
           (local.get $5)
          )
         )
         (i32.const 2)
        )
        (i32.const 6464)
       )
      )
      (i32.shl
       (i32.load
        (local.get $0)
       )
       (i32.const 8)
      )
     )
    )
    (i32.store
     (local.get $1)
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const -1)
     )
    )
    (br $while-in)
   )
  )
  (i32.store
   (local.get $3)
   (i32.load
    (local.get $4)
   )
  )
  (loop $while-in1
   (if
    (i32.ge_u
     (i32.load
      (local.get $1)
     )
     (i32.const 32)
    )
    (block
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 9536)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 8512)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 6464)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 7488)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 9536)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 8512)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 6464)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 7488)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 9536)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 8512)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 6464)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 7488)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 9536)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 8512)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 6464)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 7488)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 9536)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 8512)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 6464)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 7488)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 9536)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 8512)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 6464)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 7488)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 9536)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 8512)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 6464)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 7488)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.tee $2
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 9536)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 8512)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 6464)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 7488)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $1)
      (i32.sub
       (i32.load
        (local.get $1)
       )
       (i32.const 32)
      )
     )
     (br $while-in1)
    )
   )
  )
  (loop $while-in3
   (local.set $2
    (i32.load
     (local.get $3)
    )
   )
   (if
    (i32.ge_u
     (i32.load
      (local.get $1)
     )
     (i32.const 4)
    )
    (block
     (i32.store
      (local.get $3)
      (i32.add
       (local.get $2)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (local.get $2)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.xor
       (i32.load
        (i32.add
         (i32.shl
          (i32.shr_u
           (i32.load
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.const 2)
         )
         (i32.const 9536)
        )
       )
       (i32.xor
        (i32.load
         (i32.add
          (i32.shl
           (i32.and
            (i32.shr_u
             (i32.load
              (local.get $0)
             )
             (i32.const 16)
            )
            (i32.const 255)
           )
           (i32.const 2)
          )
          (i32.const 8512)
         )
        )
        (i32.xor
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 6464)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.and
             (i32.shr_u
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
             (i32.const 255)
            )
            (i32.const 2)
           )
           (i32.const 7488)
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $1)
      (i32.sub
       (i32.load
        (local.get $1)
       )
       (i32.const 4)
      )
     )
     (br $while-in3)
    )
   )
  )
  (i32.store
   (local.get $4)
   (local.get $2)
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $1)
    )
   )
   (block
    (i32.store
     (local.get $0)
     (i32.xor
      (i32.load
       (local.get $0)
      )
      (i32.const -1)
     )
    )
    (local.set $0
     (i32.add
      (i32.add
       (i32.add
        (i32.and
         (i32.shr_u
          (i32.load
           (local.get $0)
          )
          (i32.const 8)
         )
         (i32.const 65280)
        )
        (i32.shr_u
         (i32.load
          (local.get $0)
         )
         (i32.const 24)
        )
       )
       (i32.shl
        (i32.and
         (i32.load
          (local.get $0)
         )
         (i32.const 65280)
        )
        (i32.const 8)
       )
      )
      (i32.shl
       (i32.and
        (i32.load
         (local.get $0)
        )
        (i32.const 255)
       )
       (i32.const 24)
      )
     )
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (local.get $0)
    )
   )
  )
  (loop $while-in5
   (local.set $2
    (i32.shr_u
     (i32.load
      (local.get $0)
     )
     (i32.const 24)
    )
   )
   (i32.store
    (local.get $4)
    (i32.add
     (local.tee $3
      (i32.load
       (local.get $4)
      )
     )
     (i32.const 1)
    )
   )
   (i32.store
    (local.get $0)
    (i32.xor
     (i32.load
      (i32.add
       (i32.shl
        (i32.xor
         (local.get $2)
         (i32.load8_u
          (local.get $3)
         )
        )
        (i32.const 2)
       )
       (i32.const 6464)
      )
     )
     (i32.shl
      (i32.load
       (local.get $0)
      )
      (i32.const 8)
     )
    )
   )
   (i32.store
    (local.get $1)
    (local.tee $2
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const -1)
     )
    )
   )
   (br_if $while-in5
    (local.get $2)
   )
  )
  (i32.store
   (local.get $0)
   (i32.xor
    (i32.load
     (local.get $0)
    )
    (i32.const -1)
   )
  )
  (local.set $0
   (i32.add
    (i32.add
     (i32.add
      (i32.and
       (i32.shr_u
        (i32.load
         (local.get $0)
        )
        (i32.const 8)
       )
       (i32.const 65280)
      )
      (i32.shr_u
       (i32.load
        (local.get $0)
       )
       (i32.const 24)
      )
     )
     (i32.shl
      (i32.and
       (i32.load
        (local.get $0)
       )
       (i32.const 65280)
      )
      (i32.const 8)
     )
    )
    (i32.shl
     (i32.and
      (i32.load
       (local.get $0)
      )
      (i32.const 255)
     )
     (i32.const 24)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $_crc32 (; 232 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 8)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.get $3)
   (local.get $2)
  )
  (local.set $0
   (call $_crc32_z
    (i32.load
     (local.get $4)
    )
    (i32.load
     (local.get $0)
    )
    (i32.load
     (local.get $3)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_deflateInit2_ (; 233 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $9
   (i32.add
    (local.get $8)
    (i32.const 44)
   )
  )
  (local.set $6
   (i32.add
    (local.get $8)
    (i32.const 8)
   )
  )
  (local.set $11
   (local.get $8)
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $8)
     (i32.const 40)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.get $8)
     (i32.const 36)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $8)
     (i32.const 32)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $8)
     (i32.const 28)
    )
   )
   (local.get $3)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $8)
     (i32.const 24)
    )
   )
   (local.get $4)
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $8)
     (i32.const 20)
    )
   )
   (local.get $5)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $8)
     (i32.const 16)
    )
   )
   (i32.const 23921)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $8)
     (i32.const 12)
    )
   )
   (i32.const 56)
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $8)
     (i32.const 4)
    )
   )
   (i32.const 1)
  )
  (if
   (i32.load
    (local.get $4)
   )
   (if
    (i32.eqz
     (i32.or
      (i32.ne
       (i32.load8_s
        (i32.load
         (local.get $4)
        )
       )
       (i32.load8_s
        (i32.const 23921)
       )
      )
      (i32.ne
       (i32.load
        (local.get $5)
       )
       (i32.const 56)
      )
     )
    )
    (block
     (if
      (i32.eqz
       (i32.load
        (local.get $7)
       )
      )
      (block
       (i32.store
        (local.get $9)
        (i32.const -2)
       )
       (drop
        (i32.load
         (local.get $9)
        )
       )
       (global.set $STACKTOP
        (local.get $8)
       )
       (return)
      )
     )
     (i32.store offset=24
      (i32.load
       (local.get $7)
      )
      (i32.const 0)
     )
     (if
      (i32.eqz
       (i32.load offset=32
        (i32.load
         (local.get $7)
        )
       )
      )
      (block
       (i32.store offset=32
        (i32.load
         (local.get $7)
        )
        (i32.const 9)
       )
       (i32.store offset=40
        (i32.load
         (local.get $7)
        )
        (i32.const 0)
       )
      )
     )
     (if
      (i32.eqz
       (i32.load offset=36
        (i32.load
         (local.get $7)
        )
       )
      )
      (i32.store offset=36
       (i32.load
        (local.get $7)
       )
       (i32.const 8)
      )
     )
     (if
      (i32.eq
       (i32.load
        (local.get $10)
       )
       (i32.const -1)
      )
      (i32.store
       (local.get $10)
       (i32.const 6)
      )
     )
     (if
      (i32.lt_s
       (i32.load
        (local.get $0)
       )
       (i32.const 0)
      )
      (block
       (i32.store
        (local.get $2)
        (i32.const 0)
       )
       (i32.store
        (local.get $0)
        (i32.sub
         (i32.const 0)
         (i32.load
          (local.get $0)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (i32.load
         (local.get $0)
        )
        (i32.const 15)
       )
       (block
        (i32.store
         (local.get $2)
         (i32.const 2)
        )
        (i32.store
         (local.get $0)
         (i32.sub
          (i32.load
           (local.get $0)
          )
          (i32.const 16)
         )
        )
       )
      )
     )
     (if
      (i32.eqz
       (i32.or
        (i32.or
         (i32.or
          (i32.or
           (i32.or
            (i32.or
             (i32.or
              (i32.or
               (i32.lt_s
                (i32.load
                 (local.get $1)
                )
                (i32.const 1)
               )
               (i32.gt_s
                (i32.load
                 (local.get $1)
                )
                (i32.const 9)
               )
              )
              (i32.ne
               (i32.load
                (local.get $12)
               )
               (i32.const 8)
              )
             )
             (i32.lt_s
              (i32.load
               (local.get $0)
              )
              (i32.const 8)
             )
            )
            (i32.gt_s
             (i32.load
              (local.get $0)
             )
             (i32.const 15)
            )
           )
           (i32.lt_s
            (i32.load
             (local.get $10)
            )
            (i32.const 0)
           )
          )
          (i32.gt_s
           (i32.load
            (local.get $10)
           )
           (i32.const 9)
          )
         )
         (i32.lt_s
          (i32.load
           (local.get $3)
          )
          (i32.const 0)
         )
        )
        (i32.gt_s
         (i32.load
          (local.get $3)
         )
         (i32.const 4)
        )
       )
      )
      (if
       (i32.eqz
        (i32.and
         (i32.eq
          (i32.load
           (local.get $0)
          )
          (i32.const 8)
         )
         (i32.ne
          (i32.load
           (local.get $2)
          )
          (i32.const 1)
         )
        )
       )
       (block
        (if
         (i32.eq
          (i32.load
           (local.get $0)
          )
          (i32.const 8)
         )
         (i32.store
          (local.get $0)
          (i32.const 9)
         )
        )
        (i32.store
         (local.get $6)
         (call_indirect (type $FUNCSIG$iiii)
          (i32.load offset=40
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 1)
          (i32.const 5828)
          (i32.add
           (i32.and
            (i32.load offset=32
             (i32.load
              (local.get $7)
             )
            )
            (i32.const 15)
           )
           (i32.const 12)
          )
         )
        )
        (if
         (i32.eqz
          (i32.load
           (local.get $6)
          )
         )
         (block
          (i32.store
           (local.get $9)
           (i32.const -4)
          )
          (drop
           (i32.load
            (local.get $9)
           )
          )
          (global.set $STACKTOP
           (local.get $8)
          )
          (return)
         )
        )
        (i32.store offset=28
         (i32.load
          (local.get $7)
         )
         (i32.load
          (local.get $6)
         )
        )
        (i32.store
         (i32.load
          (local.get $6)
         )
         (i32.load
          (local.get $7)
         )
        )
        (i32.store offset=4
         (i32.load
          (local.get $6)
         )
         (i32.const 42)
        )
        (i32.store offset=24
         (i32.load
          (local.get $6)
         )
         (i32.load
          (local.get $2)
         )
        )
        (i32.store offset=28
         (i32.load
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.store offset=48
         (i32.load
          (local.get $6)
         )
         (i32.load
          (local.get $0)
         )
        )
        (i32.store offset=44
         (i32.load
          (local.get $6)
         )
         (i32.shl
          (i32.const 1)
          (i32.load offset=48
           (i32.load
            (local.get $6)
           )
          )
         )
        )
        (i32.store offset=52
         (i32.load
          (local.get $6)
         )
         (i32.sub
          (i32.load offset=44
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store offset=80
         (i32.load
          (local.get $6)
         )
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 7)
         )
        )
        (i32.store offset=76
         (i32.load
          (local.get $6)
         )
         (i32.shl
          (i32.const 1)
          (i32.load offset=80
           (i32.load
            (local.get $6)
           )
          )
         )
        )
        (i32.store offset=84
         (i32.load
          (local.get $6)
         )
         (i32.sub
          (i32.load offset=76
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store offset=88
         (i32.load
          (local.get $6)
         )
         (i32.div_u
          (i32.add
           (i32.load offset=80
            (i32.load
             (local.get $6)
            )
           )
           (i32.const 2)
          )
          (i32.const 3)
         )
        )
        (local.set $0
         (call_indirect (type $FUNCSIG$iiii)
          (i32.load offset=40
           (i32.load
            (local.get $7)
           )
          )
          (i32.load offset=44
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 2)
          (i32.add
           (i32.and
            (i32.load offset=32
             (i32.load
              (local.get $7)
             )
            )
            (i32.const 15)
           )
           (i32.const 12)
          )
         )
        )
        (i32.store offset=56
         (i32.load
          (local.get $6)
         )
         (local.get $0)
        )
        (local.set $0
         (call_indirect (type $FUNCSIG$iiii)
          (i32.load offset=40
           (i32.load
            (local.get $7)
           )
          )
          (i32.load offset=44
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 2)
          (i32.add
           (i32.and
            (i32.load offset=32
             (i32.load
              (local.get $7)
             )
            )
            (i32.const 15)
           )
           (i32.const 12)
          )
         )
        )
        (i32.store
         (i32.sub
          (i32.load
           (local.get $6)
          )
          (i32.const -64)
         )
         (local.get $0)
        )
        (local.set $0
         (call_indirect (type $FUNCSIG$iiii)
          (i32.load offset=40
           (i32.load
            (local.get $7)
           )
          )
          (i32.load offset=76
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 2)
          (i32.add
           (i32.and
            (i32.load offset=32
             (i32.load
              (local.get $7)
             )
            )
            (i32.const 15)
           )
           (i32.const 12)
          )
         )
        )
        (i32.store offset=68
         (i32.load
          (local.get $6)
         )
         (local.get $0)
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $6)
          )
          (i32.const 5824)
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $6)
          )
          (i32.const 5788)
         )
         (i32.shl
          (i32.const 1)
          (i32.add
           (i32.load
            (local.get $1)
           )
           (i32.const 6)
          )
         )
        )
        (i32.store
         (local.get $11)
         (call_indirect (type $FUNCSIG$iiii)
          (i32.load offset=40
           (i32.load
            (local.get $7)
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $6)
            )
            (i32.const 5788)
           )
          )
          (i32.const 4)
          (i32.add
           (i32.and
            (i32.load offset=32
             (i32.load
              (local.get $7)
             )
            )
            (i32.const 15)
           )
           (i32.const 12)
          )
         )
        )
        (i32.store offset=8
         (i32.load
          (local.get $6)
         )
         (i32.load
          (local.get $11)
         )
        )
        (i32.store offset=12
         (i32.load
          (local.get $6)
         )
         (i32.shl
          (i32.load
           (i32.add
            (i32.load
             (local.get $6)
            )
            (i32.const 5788)
           )
          )
          (i32.const 2)
         )
        )
        (if
         (i32.load offset=56
          (i32.load
           (local.get $6)
          )
         )
         (if
          (i32.load
           (i32.sub
            (i32.load
             (local.get $6)
            )
            (i32.const -64)
           )
          )
          (if
           (i32.load offset=68
            (i32.load
             (local.get $6)
            )
           )
           (if
            (i32.load offset=8
             (i32.load
              (local.get $6)
             )
            )
            (block
             (i32.store
              (i32.add
               (i32.load
                (local.get $6)
               )
               (i32.const 5796)
              )
              (i32.add
               (i32.load
                (local.get $11)
               )
               (i32.shl
                (i32.div_u
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $6)
                   )
                   (i32.const 5788)
                  )
                 )
                 (i32.const 2)
                )
                (i32.const 1)
               )
              )
             )
             (i32.store
              (i32.add
               (i32.load
                (local.get $6)
               )
               (i32.const 5784)
              )
              (i32.add
               (i32.load offset=8
                (i32.load
                 (local.get $6)
                )
               )
               (i32.mul
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $6)
                  )
                  (i32.const 5788)
                 )
                )
                (i32.const 3)
               )
              )
             )
             (i32.store offset=132
              (i32.load
               (local.get $6)
              )
              (i32.load
               (local.get $10)
              )
             )
             (i32.store offset=136
              (i32.load
               (local.get $6)
              )
              (i32.load
               (local.get $3)
              )
             )
             (i32.store8 offset=36
              (i32.load
               (local.get $6)
              )
              (i32.load
               (local.get $12)
              )
             )
             (i32.store
              (local.get $9)
              (call $_deflateReset
               (i32.load
                (local.get $7)
               )
              )
             )
             (drop
              (i32.load
               (local.get $9)
              )
             )
             (global.set $STACKTOP
              (local.get $8)
             )
             (return)
            )
           )
          )
         )
        )
        (i32.store offset=4
         (i32.load
          (local.get $6)
         )
         (i32.const 666)
        )
        (i32.store offset=24
         (i32.load
          (local.get $7)
         )
         (i32.load
          (i32.const 15864)
         )
        )
        (call $_deflateEnd
         (i32.load
          (local.get $7)
         )
        )
        (i32.store
         (local.get $9)
         (i32.const -4)
        )
        (drop
         (i32.load
          (local.get $9)
         )
        )
        (global.set $STACKTOP
         (local.get $8)
        )
        (return)
       )
      )
     )
     (i32.store
      (local.get $9)
      (i32.const -2)
     )
     (drop
      (i32.load
       (local.get $9)
      )
     )
     (global.set $STACKTOP
      (local.get $8)
     )
     (return)
    )
   )
  )
  (i32.store
   (local.get $9)
   (i32.const -6)
  )
  (drop
   (i32.load
    (local.get $9)
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $_deflateEnd (; 234 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $2)
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (if
   (call $_deflateStateCheck
    (i32.load
     (local.get $1)
    )
   )
   (block
    (i32.store
     (local.get $3)
     (i32.const -2)
    )
    (drop
     (i32.load
      (local.get $3)
     )
    )
    (global.set $STACKTOP
     (local.get $2)
    )
    (return)
   )
  )
  (i32.store
   (local.tee $0
    (local.get $2)
   )
   (i32.load offset=4
    (i32.load offset=28
     (i32.load
      (local.get $1)
     )
    )
   )
  )
  (if
   (i32.load offset=8
    (i32.load offset=28
     (i32.load
      (local.get $1)
     )
    )
   )
   (call_indirect (type $FUNCSIG$vii)
    (i32.load offset=40
     (i32.load
      (local.get $1)
     )
    )
    (i32.load offset=8
     (i32.load offset=28
      (i32.load
       (local.get $1)
      )
     )
    )
    (i32.add
     (i32.and
      (i32.load offset=36
       (i32.load
        (local.get $1)
       )
      )
      (i32.const 15)
     )
     (i32.const 42)
    )
   )
  )
  (if
   (i32.load offset=68
    (i32.load offset=28
     (i32.load
      (local.get $1)
     )
    )
   )
   (call_indirect (type $FUNCSIG$vii)
    (i32.load offset=40
     (i32.load
      (local.get $1)
     )
    )
    (i32.load offset=68
     (i32.load offset=28
      (i32.load
       (local.get $1)
      )
     )
    )
    (i32.add
     (i32.and
      (i32.load offset=36
       (i32.load
        (local.get $1)
       )
      )
      (i32.const 15)
     )
     (i32.const 42)
    )
   )
  )
  (if
   (i32.load
    (i32.sub
     (i32.load offset=28
      (i32.load
       (local.get $1)
      )
     )
     (i32.const -64)
    )
   )
   (call_indirect (type $FUNCSIG$vii)
    (i32.load offset=40
     (i32.load
      (local.get $1)
     )
    )
    (i32.load
     (i32.sub
      (i32.load offset=28
       (i32.load
        (local.get $1)
       )
      )
      (i32.const -64)
     )
    )
    (i32.add
     (i32.and
      (i32.load offset=36
       (i32.load
        (local.get $1)
       )
      )
      (i32.const 15)
     )
     (i32.const 42)
    )
   )
  )
  (if
   (i32.load offset=56
    (i32.load offset=28
     (i32.load
      (local.get $1)
     )
    )
   )
   (call_indirect (type $FUNCSIG$vii)
    (i32.load offset=40
     (i32.load
      (local.get $1)
     )
    )
    (i32.load offset=56
     (i32.load offset=28
      (i32.load
       (local.get $1)
      )
     )
    )
    (i32.add
     (i32.and
      (i32.load offset=36
       (i32.load
        (local.get $1)
       )
      )
      (i32.const 15)
     )
     (i32.const 42)
    )
   )
  )
  (call_indirect (type $FUNCSIG$vii)
   (i32.load offset=40
    (i32.load
     (local.get $1)
    )
   )
   (i32.load offset=28
    (i32.load
     (local.get $1)
    )
   )
   (i32.add
    (i32.and
     (i32.load offset=36
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 15)
    )
    (i32.const 42)
   )
  )
  (i32.store offset=28
   (i32.load
    (local.get $1)
   )
   (i32.const 0)
  )
  (i32.store
   (local.get $3)
   (select
    (i32.const -3)
    (i32.const 0)
    (i32.eq
     (i32.load
      (local.get $0)
     )
     (i32.const 113)
    )
   )
  )
  (drop
   (i32.load
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_deflateReset (; 235 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (local.get $1)
   )
   (call $_deflateResetKeep
    (i32.load
     (local.get $2)
    )
   )
  )
  (if
   (i32.load
    (local.get $0)
   )
   (block
    (local.set $0
     (i32.load
      (local.get $0)
     )
    )
    (global.set $STACKTOP
     (local.get $1)
    )
    (return
     (local.get $0)
    )
   )
  )
  (call $_lm_init
   (i32.load
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 28)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $_deflateResetKeep (; 236 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.tee $1
      (local.get $3)
     )
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (if
   (call $_deflateStateCheck
    (i32.load
     (local.get $2)
    )
   )
   (block
    (i32.store
     (local.get $4)
     (i32.const -2)
    )
    (local.set $0
     (i32.load
      (local.get $4)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (local.get $0)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 20)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 8)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 24)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 44)
   )
   (i32.const 2)
  )
  (i32.store
   (local.get $1)
   (i32.load
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 28)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 20)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 16)
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 8)
    )
   )
  )
  (if
   (i32.lt_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 24)
     )
    )
    (i32.const 0)
   )
   (i32.store
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 24)
    )
    (i32.sub
     (i32.const 0)
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 24)
      )
     )
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 4)
   )
   (if (result i32)
    (i32.eq
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 24)
      )
     )
     (i32.const 2)
    )
    (i32.const 57)
    (select
     (i32.const 42)
     (i32.const 113)
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 24)
      )
     )
    )
   )
  )
  (local.set $0
   (if (result i32)
    (i32.eq
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 24)
      )
     )
     (i32.const 2)
    )
    (call $_crc32
     (i32.const 0)
     (i32.const 0)
     (i32.const 0)
    )
    (call $_adler32
     (i32.const 0)
     (i32.const 0)
     (i32.const 0)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 48)
   )
   (local.get $0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 40)
   )
   (i32.const 0)
  )
  (call $__tr_init
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (local.set $0
   (i32.load
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_lm_init (; 237 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 60)
   )
   (i32.shl
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 44)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store16
   (i32.add
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 68)
     )
    )
    (i32.shl
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 76)
       )
      )
      (i32.const 1)
     )
     (i32.const 1)
    )
   )
   (i32.const 0)
  )
  (drop
   (call $_memset
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 68)
     )
    )
    (i32.const 0)
    (i32.shl
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 76)
       )
      )
      (i32.const 1)
     )
     (i32.const 1)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 128)
   )
   (i32.load16_u
    (i32.add
     (i32.mul
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 132)
       )
      )
      (i32.const 12)
     )
     (i32.const 10562)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 140)
   )
   (i32.load16_u
    (i32.add
     (i32.mul
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 132)
       )
      )
      (i32.const 12)
     )
     (i32.const 10560)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 144)
   )
   (i32.load16_u
    (i32.add
     (i32.mul
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 132)
       )
      )
      (i32.const 12)
     )
     (i32.const 10564)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 124)
   )
   (i32.load16_u
    (i32.add
     (i32.mul
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 132)
       )
      )
      (i32.const 12)
     )
     (i32.const 10566)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 108)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 92)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 116)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 5812)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 120)
   )
   (i32.const 2)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 96)
   )
   (i32.const 2)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 104)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 72)
   )
   (i32.const 0)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_deflate_stored (; 238 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 28)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $6)
     (i32.const 24)
    )
   )
   (local.get $1)
  )
  (local.set $0
   (i32.load
    (local.get $2)
   )
  )
  (local.set $9
   (i32.add
    (local.get $6)
    (i32.const 32)
   )
  )
  (local.set $1
   (i32.add
    (local.get $6)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $6)
    (i32.const 12)
   )
  )
  (local.set $3
   (i32.add
    (local.get $6)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.get $6)
     (i32.const 20)
    )
   )
   (if (result i32)
    (i32.gt_u
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 12)
       )
      )
      (i32.const 5)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 44)
      )
     )
    )
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 44)
     )
    )
    (i32.sub
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 12)
      )
     )
     (i32.const 5)
    )
   )
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $6)
     (i32.const 4)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $0
    (local.get $6)
   )
   (i32.load
    (i32.add
     (i32.load
      (i32.load
       (local.get $2)
      )
     )
     (i32.const 4)
    )
   )
  )
  (loop $while-in
   (block $while-out
    (i32.store
     (local.get $1)
     (i32.const 65535)
    )
    (i32.store
     (local.get $3)
     (i32.shr_s
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 5820)
        )
       )
       (i32.const 42)
      )
      (i32.const 3)
     )
    )
    (br_if $while-out
     (i32.lt_u
      (i32.load
       (i32.add
        (i32.load
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 16)
       )
      )
      (i32.load
       (local.get $3)
      )
     )
    )
    (i32.store
     (local.get $3)
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 16)
       )
      )
      (i32.load
       (local.get $3)
      )
     )
    )
    (i32.store
     (local.get $5)
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
     )
    )
    (if
     (i32.gt_u
      (i32.load
       (local.get $1)
      )
      (i32.add
       (i32.load
        (local.get $5)
       )
       (i32.load
        (i32.add
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 4)
        )
       )
      )
     )
     (i32.store
      (local.get $1)
      (i32.add
       (i32.load
        (local.get $5)
       )
       (i32.load
        (i32.add
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 4)
        )
       )
      )
     )
    )
    (if
     (i32.gt_u
      (i32.load
       (local.get $1)
      )
      (i32.load
       (local.get $3)
      )
     )
     (i32.store
      (local.get $1)
      (i32.load
       (local.get $3)
      )
     )
    )
    (if
     (i32.lt_u
      (i32.load
       (local.get $1)
      )
      (i32.load
       (local.get $10)
      )
     )
     (block
      (br_if $while-out
       (i32.or
        (i32.eqz
         (i32.load
          (local.get $7)
         )
        )
        (i32.and
         (i32.eqz
          (i32.load
           (local.get $1)
          )
         )
         (i32.ne
          (i32.load
           (local.get $7)
          )
          (i32.const 4)
         )
        )
       )
      )
      (br_if $while-out
       (i32.ne
        (i32.load
         (local.get $1)
        )
        (i32.add
         (i32.load
          (local.get $5)
         )
         (i32.load
          (i32.add
           (i32.load
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 4)
          )
         )
        )
       )
      )
     )
    )
    (i32.store
     (local.get $8)
     (select
      (i32.const 1)
      (i32.const 0)
      (if (result i32)
       (i32.eq
        (i32.load
         (local.get $7)
        )
        (i32.const 4)
       )
       (i32.eq
        (i32.load
         (local.get $1)
        )
        (i32.add
         (i32.load
          (local.get $5)
         )
         (i32.load
          (i32.add
           (i32.load
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 4)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
    )
    (call $__tr_stored_block
     (i32.load
      (local.get $2)
     )
     (i32.const 0)
     (i32.const 0)
     (i32.load
      (local.get $8)
     )
    )
    (i32.store8
     (i32.add
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 8)
       )
      )
      (i32.sub
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 20)
        )
       )
       (i32.const 4)
      )
     )
     (i32.load
      (local.get $1)
     )
    )
    (i32.store8
     (i32.add
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 8)
       )
      )
      (i32.sub
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 20)
        )
       )
       (i32.const 3)
      )
     )
     (i32.shr_u
      (i32.load
       (local.get $1)
      )
      (i32.const 8)
     )
    )
    (i32.store8
     (i32.add
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 8)
       )
      )
      (i32.sub
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 20)
        )
       )
       (i32.const 2)
      )
     )
     (i32.xor
      (i32.load
       (local.get $1)
      )
      (i32.const -1)
     )
    )
    (i32.store8
     (i32.add
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 8)
       )
      )
      (i32.sub
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 20)
        )
       )
       (i32.const 1)
      )
     )
     (i32.shr_u
      (i32.xor
       (i32.load
        (local.get $1)
       )
       (i32.const -1)
      )
      (i32.const 8)
     )
    )
    (call $_flush_pending
     (i32.load
      (i32.load
       (local.get $2)
      )
     )
    )
    (if
     (i32.load
      (local.get $5)
     )
     (block
      (if
       (i32.gt_u
        (i32.load
         (local.get $5)
        )
        (i32.load
         (local.get $1)
        )
       )
       (i32.store
        (local.get $5)
        (i32.load
         (local.get $1)
        )
       )
      )
      (drop
       (call $_memcpy
        (i32.load
         (i32.add
          (i32.load
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 12)
         )
        )
        (i32.add
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 56)
          )
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 92)
          )
         )
        )
        (i32.load
         (local.get $5)
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 12)
        )
       )
       (i32.add
        (i32.load
         (local.get $5)
        )
        (i32.load
         (local.get $4)
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 16)
        )
       )
       (i32.sub
        (i32.load
         (local.get $4)
        )
        (i32.load
         (local.get $5)
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 20)
        )
       )
       (i32.add
        (i32.load
         (local.get $5)
        )
        (i32.load
         (local.get $4)
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
       (i32.add
        (i32.load
         (local.get $5)
        )
        (i32.load
         (local.get $4)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.sub
        (i32.load
         (local.get $1)
        )
        (i32.load
         (local.get $5)
        )
       )
      )
     )
    )
    (if
     (i32.load
      (local.get $1)
     )
     (block
      (drop
       (call $_read_buf
        (i32.load
         (i32.load
          (local.get $2)
         )
        )
        (i32.load
         (i32.add
          (i32.load
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 12)
         )
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 12)
        )
       )
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.load
         (local.get $4)
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 16)
        )
       )
       (i32.sub
        (i32.load
         (local.get $4)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 20)
        )
       )
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.load
         (local.get $4)
        )
       )
      )
     )
    )
    (br_if $while-in
     (i32.eqz
      (i32.load
       (local.get $8)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $0)
   (i32.sub
    (i32.load
     (local.get $0)
    )
    (i32.load
     (i32.add
      (i32.load
       (i32.load
        (local.get $2)
       )
      )
      (i32.const 4)
     )
    )
   )
  )
  (if
   (i32.load
    (local.get $0)
   )
   (block
    (local.set $4
     (i32.load
      (local.get $2)
     )
    )
    (if
     (i32.ge_u
      (i32.load
       (local.get $0)
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 44)
       )
      )
     )
     (block
      (i32.store
       (i32.add
        (local.get $4)
        (i32.const 5808)
       )
       (i32.const 2)
      )
      (drop
       (call $_memcpy
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 56)
         )
        )
        (i32.sub
         (i32.load
          (i32.load
           (i32.load
            (local.get $2)
           )
          )
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 44)
          )
         )
        )
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 44)
         )
        )
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 44)
        )
       )
      )
     )
     (block
      (if
       (i32.le_u
        (i32.sub
         (i32.load
          (i32.add
           (local.get $4)
           (i32.const 60)
          )
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
        )
        (i32.load
         (local.get $0)
        )
       )
       (block
        (i32.store
         (local.tee $4
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
         (i32.sub
          (i32.load
           (local.get $4)
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 44)
           )
          )
         )
        )
        (drop
         (call $_memcpy
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 56)
           )
          )
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 56)
            )
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 44)
            )
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 108)
           )
          )
         )
        )
        (if
         (i32.lt_u
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5808)
           )
          )
          (i32.const 2)
         )
         (i32.store
          (local.tee $4
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5808)
           )
          )
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 1)
          )
         )
        )
       )
      )
      (drop
       (call $_memcpy
        (i32.add
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 56)
          )
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
        )
        (i32.sub
         (i32.load
          (i32.load
           (i32.load
            (local.get $2)
           )
          )
         )
         (i32.load
          (local.get $0)
         )
        )
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 108)
        )
       )
       (i32.add
        (i32.load
         (local.get $0)
        )
        (i32.load
         (local.get $4)
        )
       )
      )
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
    )
    (i32.store
     (local.tee $4
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 5812)
      )
     )
     (i32.add
      (if (result i32)
       (i32.gt_u
        (i32.load
         (local.get $0)
        )
        (i32.sub
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 44)
          )
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 5812)
          )
         )
        )
       )
       (i32.sub
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 44)
         )
        )
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 5812)
         )
        )
       )
       (i32.load
        (local.get $0)
       )
      )
      (i32.load
       (local.get $4)
      )
     )
    )
   )
  )
  (if
   (i32.lt_u
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 5824)
     )
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 108)
     )
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 5824)
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 108)
     )
    )
   )
  )
  (if
   (i32.load
    (local.get $8)
   )
   (block
    (i32.store
     (local.get $9)
     (i32.const 3)
    )
    (local.set $0
     (i32.load
      (local.get $9)
     )
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (local.get $0)
    )
   )
  )
  (if
   (i32.and
    (i32.ne
     (i32.load
      (local.get $7)
     )
     (i32.const 0)
    )
    (i32.ne
     (i32.load
      (local.get $7)
     )
     (i32.const 4)
    )
   )
   (if
    (i32.eqz
     (i32.load
      (i32.add
       (i32.load
        (i32.load
         (local.get $2)
        )
       )
       (i32.const 4)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
     )
     (block
      (i32.store
       (local.get $9)
       (i32.const 1)
      )
      (local.set $0
       (i32.load
        (local.get $9)
       )
      )
      (global.set $STACKTOP
       (local.get $6)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.sub
    (i32.sub
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 60)
      )
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.gt_u
    (i32.load
     (i32.add
      (i32.load
       (i32.load
        (local.get $2)
       )
      )
      (i32.const 4)
     )
    )
    (i32.load
     (local.get $3)
    )
   )
   (if
    (i32.ge_s
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 92)
      )
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 44)
      )
     )
    )
    (block
     (i32.store
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
      (i32.sub
       (i32.load
        (local.get $0)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 44)
        )
       )
      )
     )
     (i32.store
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.sub
       (i32.load
        (local.get $0)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 44)
        )
       )
      )
     )
     (drop
      (call $_memcpy
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.add
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 56)
         )
        )
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 44)
         )
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 108)
        )
       )
      )
     )
     (if
      (i32.lt_u
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 5808)
        )
       )
       (i32.const 2)
      )
      (i32.store
       (local.tee $0
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 5808)
        )
       )
       (i32.add
        (i32.load
         (local.get $0)
        )
        (i32.const 1)
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 44)
        )
       )
       (i32.load
        (local.get $3)
       )
      )
     )
    )
   )
  )
  (if
   (i32.gt_u
    (i32.load
     (local.get $3)
    )
    (i32.load
     (i32.add
      (i32.load
       (i32.load
        (local.get $2)
       )
      )
      (i32.const 4)
     )
    )
   )
   (i32.store
    (local.get $3)
    (i32.load
     (i32.add
      (i32.load
       (i32.load
        (local.get $2)
       )
      )
      (i32.const 4)
     )
    )
   )
  )
  (if
   (i32.load
    (local.get $3)
   )
   (block
    (drop
     (call $_read_buf
      (i32.load
       (i32.load
        (local.get $2)
       )
      )
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 108)
        )
       )
      )
      (i32.load
       (local.get $3)
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.load
       (local.get $0)
      )
     )
    )
   )
  )
  (if
   (i32.lt_u
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 5824)
     )
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 108)
     )
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 5824)
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 108)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.shr_s
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 5820)
      )
     )
     (i32.const 42)
    )
    (i32.const 3)
   )
  )
  (i32.store
   (local.get $3)
   (if (result i32)
    (i32.gt_u
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 12)
       )
      )
      (i32.load
       (local.get $3)
      )
     )
     (i32.const 65535)
    )
    (i32.const 65535)
    (i32.sub
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 12)
      )
     )
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (i32.store
   (local.get $10)
   (if (result i32)
    (i32.gt_u
     (i32.load
      (local.get $3)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 44)
      )
     )
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 44)
     )
    )
    (i32.load
     (local.get $3)
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.sub
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 108)
     )
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.ge_u
      (i32.load
       (local.get $5)
      )
      (i32.load
       (local.get $10)
      )
     )
    )
    (if
     (i32.and
      (i32.or
       (i32.eq
        (i32.load
         (local.get $7)
        )
        (i32.const 4)
       )
       (i32.ne
        (i32.load
         (local.get $5)
        )
        (i32.const 0)
       )
      )
      (i32.ne
       (i32.load
        (local.get $7)
       )
       (i32.const 0)
      )
     )
     (if
      (i32.eqz
       (i32.load
        (i32.add
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 4)
        )
       )
      )
      (br_if $__rjti$0
       (i32.le_u
        (i32.load
         (local.get $5)
        )
        (i32.load
         (local.get $3)
        )
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (i32.store
    (local.get $1)
    (select
     (i32.load
      (local.get $3)
     )
     (i32.load
      (local.get $5)
     )
     (i32.gt_u
      (i32.load
       (local.get $5)
      )
      (i32.load
       (local.get $3)
      )
     )
    )
   )
   (i32.store
    (local.get $8)
    (select
     (i32.const 1)
     (i32.const 0)
     (if (result i32)
      (i32.eq
       (i32.load
        (local.get $7)
       )
       (i32.const 4)
      )
      (if (result i32)
       (i32.load
        (i32.add
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 4)
        )
       )
       (i32.const 0)
       (i32.eq
        (i32.load
         (local.get $1)
        )
        (i32.load
         (local.get $5)
        )
       )
      )
      (i32.const 0)
     )
    )
   )
   (call $__tr_stored_block
    (i32.load
     (local.get $2)
    )
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 56)
      )
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 92)
      )
     )
    )
    (i32.load
     (local.get $1)
    )
    (i32.load
     (local.get $8)
    )
   )
   (i32.store
    (local.tee $0
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
    )
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.load
      (local.get $0)
     )
    )
   )
   (call $_flush_pending
    (i32.load
     (i32.load
      (local.get $2)
     )
    )
   )
  )
  (i32.store
   (local.get $9)
   (select
    (i32.const 2)
    (i32.const 0)
    (i32.load
     (local.get $8)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $9)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $_deflate_fast (; 239 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (local.set $8
   (local.get $3)
  )
  (local.set $9
   (i32.add
    (local.get $3)
    (i32.const 23)
   )
  )
  (local.set $7
   (i32.add
    (local.get $3)
    (i32.const 20)
   )
  )
  (local.set $10
   (i32.add
    (local.get $3)
    (i32.const 22)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $3)
     (i32.const 12)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 8)
    )
   )
   (local.get $1)
  )
  (block $__rjti$2
   (block $__rjti$1
    (loop $while-in
     (block $__rjti$0
      (if
       (i32.lt_u
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 116)
         )
        )
        (i32.const 262)
       )
       (block
        (call $_fill_window
         (i32.load
          (local.get $2)
         )
        )
        (br_if $__rjti$0
         (i32.and
          (i32.eqz
           (i32.load
            (local.get $0)
           )
          )
          (i32.lt_u
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 116)
            )
           )
           (i32.const 262)
          )
         )
        )
        (br_if $__rjti$2
         (i32.eqz
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 116)
           )
          )
         )
        )
       )
      )
      (i32.store
       (local.get $6)
       (i32.const 0)
      )
      (if
       (i32.ge_u
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 116)
         )
        )
        (i32.const 3)
       )
       (block
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 72)
         )
         (i32.and
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 84)
           )
          )
          (i32.xor
           (i32.load8_u
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 56)
              )
             )
             (i32.add
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 108)
               )
              )
              (i32.const 2)
             )
            )
           )
           (i32.shl
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 72)
             )
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 88)
             )
            )
           )
          )
         )
        )
        (i32.store16
         (i32.add
          (i32.load
           (i32.sub
            (i32.load
             (local.get $2)
            )
            (i32.const -64)
           )
          )
          (i32.shl
           (i32.and
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 108)
             )
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 52)
             )
            )
           )
           (i32.const 1)
          )
         )
         (local.tee $1
          (i32.load16_s
           (i32.add
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 68)
             )
            )
            (i32.shl
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 72)
              )
             )
             (i32.const 1)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $6)
         (i32.and
          (local.get $1)
          (i32.const 65535)
         )
        )
        (i32.store16
         (i32.add
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 68)
           )
          )
          (i32.shl
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 72)
            )
           )
           (i32.const 1)
          )
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
        )
       )
      )
      (if
       (i32.load
        (local.get $6)
       )
       (if
        (i32.le_u
         (i32.sub
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 108)
           )
          )
          (i32.load
           (local.get $6)
          )
         )
         (i32.sub
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 44)
           )
          )
          (i32.const 262)
         )
        )
        (block
         (local.set $1
          (call $_longest_match
           (i32.load
            (local.get $2)
           )
           (i32.load
            (local.get $6)
           )
          )
         )
         (i32.store
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 96)
          )
          (local.get $1)
         )
        )
       )
      )
      (local.set $1
       (i32.load
        (local.get $2)
       )
      )
      (if
       (i32.ge_u
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 96)
         )
        )
        (i32.const 3)
       )
       (block $do-once
        (i32.store8
         (local.get $9)
         (i32.sub
          (i32.load
           (i32.add
            (local.get $1)
            (i32.const 96)
           )
          )
          (i32.const 3)
         )
        )
        (i32.store16
         (local.get $7)
         (i32.sub
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 108)
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 112)
           )
          )
         )
        )
        (i32.store16
         (i32.add
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5796)
           )
          )
          (i32.shl
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5792)
            )
           )
           (i32.const 1)
          )
         )
         (i32.load16_s
          (local.get $7)
         )
        )
        (local.set $5
         (i32.load8_s
          (local.get $9)
         )
        )
        (local.set $11
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 5784)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $12
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5792)
           )
          )
         )
        )
        (i32.store
         (local.get $12)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $11)
         )
         (local.get $5)
        )
        (i32.store16
         (local.get $7)
         (i32.add
          (i32.load16_s
           (local.get $7)
          )
          (i32.const -1)
         )
        )
        (i32.store16
         (local.tee $1
          (i32.add
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.shl
             (i32.load8_u
              (i32.add
               (i32.load8_u
                (local.get $9)
               )
               (i32.const 13680)
              )
             )
             (i32.const 2)
            )
           )
           (i32.const 1176)
          )
         )
         (i32.add
          (i32.load16_s
           (local.get $1)
          )
          (i32.const 1)
         )
        )
        (local.set $5
         (i32.load
          (local.get $2)
         )
        )
        (local.set $1
         (i32.load16_u
          (local.get $7)
         )
        )
        (i32.store16
         (local.tee $1
          (i32.add
           (i32.add
            (local.get $5)
            (i32.const 2440)
           )
           (i32.shl
            (if (result i32)
             (i32.lt_s
              (i32.load16_u
               (local.get $7)
              )
              (i32.const 256)
             )
             (i32.load8_u
              (i32.add
               (local.get $1)
               (i32.const 13168)
              )
             )
             (i32.load8_u
              (i32.add
               (i32.shr_s
                (local.get $1)
                (i32.const 7)
               )
               (i32.const 13424)
              )
             )
            )
            (i32.const 2)
           )
          )
         )
         (i32.add
          (i32.load16_s
           (local.get $1)
          )
          (i32.const 1)
         )
        )
        (i32.store
         (local.get $8)
         (i32.eq
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5792)
           )
          )
          (i32.sub
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5788)
            )
           )
           (i32.const 1)
          )
         )
        )
        (i32.store
         (local.tee $1
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 116)
          )
         )
         (i32.sub
          (i32.load
           (local.get $1)
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 96)
           )
          )
         )
        )
        (if
         (i32.le_u
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 96)
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 128)
           )
          )
         )
         (if
          (i32.ge_u
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 116)
            )
           )
           (i32.const 3)
          )
          (block
           (i32.store
            (local.tee $1
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 96)
             )
            )
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const -1)
            )
           )
           (loop $while-in1
            (i32.store
             (local.tee $1
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 108)
              )
             )
             (i32.add
              (i32.load
               (local.get $1)
              )
              (i32.const 1)
             )
            )
            (i32.store
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 72)
             )
             (i32.and
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 84)
               )
              )
              (i32.xor
               (i32.load8_u
                (i32.add
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 56)
                  )
                 )
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 108)
                   )
                  )
                  (i32.const 2)
                 )
                )
               )
               (i32.shl
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 72)
                 )
                )
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 88)
                 )
                )
               )
              )
             )
            )
            (i32.store16
             (i32.add
              (i32.load
               (i32.sub
                (i32.load
                 (local.get $2)
                )
                (i32.const -64)
               )
              )
              (i32.shl
               (i32.and
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 108)
                 )
                )
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 52)
                 )
                )
               )
               (i32.const 1)
              )
             )
             (local.tee $1
              (i32.load16_s
               (i32.add
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 68)
                 )
                )
                (i32.shl
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 72)
                  )
                 )
                 (i32.const 1)
                )
               )
              )
             )
            )
            (i32.store
             (local.get $6)
             (i32.and
              (local.get $1)
              (i32.const 65535)
             )
            )
            (i32.store16
             (i32.add
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 68)
               )
              )
              (i32.shl
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 72)
                )
               )
               (i32.const 1)
              )
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 108)
              )
             )
            )
            (local.set $1
             (i32.add
              (i32.load
               (local.tee $5
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 96)
                )
               )
              )
              (i32.const -1)
             )
            )
            (i32.store
             (local.get $5)
             (local.get $1)
            )
            (br_if $while-in1
             (local.get $1)
            )
           )
           (i32.store
            (local.tee $1
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 108)
             )
            )
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const 1)
            )
           )
           (br $do-once)
          )
         )
        )
        (i32.store
         (local.tee $1
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
         (i32.add
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 96)
           )
          )
          (i32.load
           (local.get $1)
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 96)
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 72)
         )
         (i32.load8_u
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 56)
            )
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 108)
            )
           )
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 72)
         )
         (i32.and
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 84)
           )
          )
          (i32.xor
           (i32.load8_u
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 56)
              )
             )
             (i32.add
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 108)
               )
              )
              (i32.const 1)
             )
            )
           )
           (i32.shl
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 72)
             )
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 88)
             )
            )
           )
          )
         )
        )
       )
       (block
        (i32.store8
         (local.get $10)
         (i32.load8_s
          (i32.add
           (i32.load
            (i32.add
             (local.get $1)
             (i32.const 56)
            )
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 108)
            )
           )
          )
         )
        )
        (i32.store16
         (i32.add
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5796)
           )
          )
          (i32.shl
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5792)
            )
           )
           (i32.const 1)
          )
         )
         (i32.const 0)
        )
        (local.set $5
         (i32.load8_s
          (local.get $10)
         )
        )
        (local.set $11
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 5784)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $12
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5792)
           )
          )
         )
        )
        (i32.store
         (local.get $12)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $11)
         )
         (local.get $5)
        )
        (i32.store16
         (local.tee $1
          (i32.add
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 148)
           )
           (i32.shl
            (i32.load8_u
             (local.get $10)
            )
            (i32.const 2)
           )
          )
         )
         (i32.add
          (i32.load16_s
           (local.get $1)
          )
          (i32.const 1)
         )
        )
        (i32.store
         (local.get $8)
         (i32.eq
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5792)
           )
          )
          (i32.sub
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5788)
            )
           )
           (i32.const 1)
          )
         )
        )
        (i32.store
         (local.tee $1
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 116)
          )
         )
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const -1)
         )
        )
        (i32.store
         (local.tee $1
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 1)
         )
        )
       )
      )
      (if
       (i32.load
        (local.get $8)
       )
       (block
        (call $__tr_flush_block
         (i32.load
          (local.get $2)
         )
         (if (result i32)
          (i32.ge_s
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 92)
            )
           )
           (i32.const 0)
          )
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 56)
            )
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 92)
            )
           )
          )
          (i32.const 0)
         )
         (i32.sub
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 108)
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 92)
           )
          )
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 92)
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
        )
        (call $_flush_pending
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
        )
        (br_if $__rjti$1
         (i32.eqz
          (i32.load
           (i32.add
            (i32.load
             (i32.load
              (local.get $2)
             )
            )
            (i32.const 16)
           )
          )
         )
        )
       )
      )
      (br $while-in)
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    (local.set $0
     (i32.load
      (local.get $4)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (local.get $0)
    )
   )
   (i32.store
    (local.get $4)
    (i32.const 0)
   )
   (local.set $0
    (i32.load
     (local.get $4)
    )
   )
   (global.set $STACKTOP
    (local.get $3)
   )
   (return
    (local.get $0)
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 5812)
   )
   (if (result i32)
    (i32.lt_u
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
     (i32.const 2)
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 108)
     )
    )
    (i32.const 2)
   )
  )
  (local.set $1
   (i32.load
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (i32.load
     (local.get $0)
    )
    (i32.const 4)
   )
   (block
    (call $__tr_flush_block
     (local.get $1)
     (if (result i32)
      (i32.ge_s
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
       (i32.const 0)
      )
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
      )
      (i32.const 0)
     )
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
     )
     (i32.const 1)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
    )
    (call $_flush_pending
     (i32.load
      (i32.load
       (local.get $2)
      )
     )
    )
    (if
     (i32.load
      (i32.add
       (i32.load
        (i32.load
         (local.get $2)
        )
       )
       (i32.const 16)
      )
     )
     (block
      (i32.store
       (local.get $4)
       (i32.const 3)
      )
      (local.set $0
       (i32.load
        (local.get $4)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return
       (local.get $0)
      )
     )
     (block
      (i32.store
       (local.get $4)
       (i32.const 2)
      )
      (local.set $0
       (i32.load
        (local.get $4)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (if
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 5792)
    )
   )
   (block
    (call $__tr_flush_block
     (i32.load
      (local.get $2)
     )
     (if (result i32)
      (i32.ge_s
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
       (i32.const 0)
      )
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
      )
      (i32.const 0)
     )
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
    )
    (call $_flush_pending
     (i32.load
      (i32.load
       (local.get $2)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (i32.add
        (i32.load
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 16)
       )
      )
     )
     (block
      (i32.store
       (local.get $4)
       (i32.const 0)
      )
      (local.set $0
       (i32.load
        (local.get $4)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 1)
  )
  (local.set $0
   (i32.load
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_deflate_slow (; 240 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 20)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $8
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (local.set $9
   (local.get $3)
  )
  (local.set $10
   (i32.add
    (local.get $3)
    (i32.const 28)
   )
  )
  (local.set $7
   (i32.add
    (local.get $3)
    (i32.const 24)
   )
  )
  (local.set $11
   (i32.add
    (local.get $3)
    (i32.const 27)
   )
  )
  (local.set $12
   (i32.add
    (local.get $3)
    (i32.const 26)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $3)
     (i32.const 16)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 12)
    )
   )
   (local.get $1)
  )
  (block $__rjti$4
   (block $__rjti$3
    (block $__rjti$2
     (loop $label$continue$L1
      (block $__rjti$1
       (if
        (i32.lt_u
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 116)
          )
         )
         (i32.const 262)
        )
        (block
         (call $_fill_window
          (i32.load
           (local.get $2)
          )
         )
         (br_if $__rjti$1
          (i32.and
           (i32.eqz
            (i32.load
             (local.get $0)
            )
           )
           (i32.lt_u
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 116)
             )
            )
            (i32.const 262)
           )
          )
         )
         (br_if $__rjti$4
          (i32.eqz
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 116)
            )
           )
          )
         )
        )
       )
       (i32.store
        (local.get $6)
        (i32.const 0)
       )
       (if
        (i32.ge_u
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 116)
          )
         )
         (i32.const 3)
        )
        (block
         (i32.store
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 72)
          )
          (i32.and
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 84)
            )
           )
           (i32.xor
            (i32.load8_u
             (i32.add
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 56)
               )
              )
              (i32.add
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 108)
                )
               )
               (i32.const 2)
              )
             )
            )
            (i32.shl
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 72)
              )
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 88)
              )
             )
            )
           )
          )
         )
         (i32.store16
          (i32.add
           (i32.load
            (i32.sub
             (i32.load
              (local.get $2)
             )
             (i32.const -64)
            )
           )
           (i32.shl
            (i32.and
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 108)
              )
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 52)
              )
             )
            )
            (i32.const 1)
           )
          )
          (local.tee $1
           (i32.load16_s
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 68)
              )
             )
             (i32.shl
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 72)
               )
              )
              (i32.const 1)
             )
            )
           )
          )
         )
         (i32.store
          (local.get $6)
          (i32.and
           (local.get $1)
           (i32.const 65535)
          )
         )
         (i32.store16
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 68)
            )
           )
           (i32.shl
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 72)
             )
            )
            (i32.const 1)
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 108)
           )
          )
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 120)
        )
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 96)
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 100)
        )
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 112)
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 96)
        )
        (i32.const 2)
       )
       (if
        (i32.load
         (local.get $6)
        )
        (if
         (i32.lt_u
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 120)
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 128)
           )
          )
         )
         (if
          (i32.le_u
           (i32.sub
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 108)
             )
            )
            (i32.load
             (local.get $6)
            )
           )
           (i32.sub
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 44)
             )
            )
            (i32.const 262)
           )
          )
          (block $do-once
           (local.set $1
            (call $_longest_match
             (i32.load
              (local.get $2)
             )
             (i32.load
              (local.get $6)
             )
            )
           )
           (i32.store
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 96)
            )
            (local.get $1)
           )
           (if
            (i32.le_u
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 96)
              )
             )
             (i32.const 5)
            )
            (block
             (if
              (i32.ne
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 136)
                )
               )
               (i32.const 1)
              )
              (block
               (br_if $do-once
                (i32.ne
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 96)
                  )
                 )
                 (i32.const 3)
                )
               )
               (br_if $do-once
                (i32.le_u
                 (i32.sub
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 108)
                   )
                  )
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 112)
                   )
                  )
                 )
                 (i32.const 4096)
                )
               )
              )
             )
             (i32.store
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 96)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
        )
       )
       (block $do-once0
        (block $__rjti$0
         (br_if $__rjti$0
          (i32.lt_u
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 120)
            )
           )
           (i32.const 3)
          )
         )
         (br_if $__rjti$0
          (i32.gt_u
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 96)
            )
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 120)
            )
           )
          )
         )
         (i32.store
          (local.get $9)
          (i32.sub
           (i32.add
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 108)
             )
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 116)
             )
            )
           )
           (i32.const 3)
          )
         )
         (i32.store8
          (local.get $10)
          (i32.sub
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 120)
            )
           )
           (i32.const 3)
          )
         )
         (i32.store16
          (local.get $7)
          (i32.sub
           (i32.sub
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 108)
             )
            )
            (i32.const 1)
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 100)
            )
           )
          )
         )
         (i32.store16
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5796)
            )
           )
           (i32.shl
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 5792)
             )
            )
            (i32.const 1)
           )
          )
          (i32.load16_s
           (local.get $7)
          )
         )
         (local.set $5
          (i32.load8_s
           (local.get $10)
          )
         )
         (local.set $13
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5784)
           )
          )
         )
         (local.set $1
          (i32.load
           (local.tee $14
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5792)
            )
           )
          )
         )
         (i32.store
          (local.get $14)
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.store8
          (i32.add
           (local.get $1)
           (local.get $13)
          )
          (local.get $5)
         )
         (i32.store16
          (local.get $7)
          (i32.add
           (i32.load16_s
            (local.get $7)
           )
           (i32.const -1)
          )
         )
         (i32.store16
          (local.tee $1
           (i32.add
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.shl
              (i32.load8_u
               (i32.add
                (i32.load8_u
                 (local.get $10)
                )
                (i32.const 13680)
               )
              )
              (i32.const 2)
             )
            )
            (i32.const 1176)
           )
          )
          (i32.add
           (i32.load16_s
            (local.get $1)
           )
           (i32.const 1)
          )
         )
         (local.set $5
          (i32.load
           (local.get $2)
          )
         )
         (local.set $1
          (i32.load16_u
           (local.get $7)
          )
         )
         (i32.store16
          (local.tee $1
           (i32.add
            (i32.add
             (local.get $5)
             (i32.const 2440)
            )
            (i32.shl
             (if (result i32)
              (i32.lt_s
               (i32.load16_u
                (local.get $7)
               )
               (i32.const 256)
              )
              (i32.load8_u
               (i32.add
                (local.get $1)
                (i32.const 13168)
               )
              )
              (i32.load8_u
               (i32.add
                (i32.shr_s
                 (local.get $1)
                 (i32.const 7)
                )
                (i32.const 13424)
               )
              )
             )
             (i32.const 2)
            )
           )
          )
          (i32.add
           (i32.load16_s
            (local.get $1)
           )
           (i32.const 1)
          )
         )
         (i32.store
          (local.get $8)
          (i32.eq
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5792)
            )
           )
           (i32.sub
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 5788)
             )
            )
            (i32.const 1)
           )
          )
         )
         (i32.store
          (local.tee $1
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 116)
           )
          )
          (i32.sub
           (i32.load
            (local.get $1)
           )
           (i32.sub
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 120)
             )
            )
            (i32.const 1)
           )
          )
         )
         (i32.store
          (local.tee $1
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 120)
           )
          )
          (i32.sub
           (i32.load
            (local.get $1)
           )
           (i32.const 2)
          )
         )
         (loop $while-in
          (local.set $1
           (i32.add
            (i32.load
             (local.tee $5
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 108)
              )
             )
            )
            (i32.const 1)
           )
          )
          (i32.store
           (local.get $5)
           (local.get $1)
          )
          (if
           (i32.le_u
            (local.get $1)
            (i32.load
             (local.get $9)
            )
           )
           (block
            (i32.store
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 72)
             )
             (i32.and
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 84)
               )
              )
              (i32.xor
               (i32.load8_u
                (i32.add
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 56)
                  )
                 )
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 108)
                   )
                  )
                  (i32.const 2)
                 )
                )
               )
               (i32.shl
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 72)
                 )
                )
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 88)
                 )
                )
               )
              )
             )
            )
            (i32.store16
             (i32.add
              (i32.load
               (i32.sub
                (i32.load
                 (local.get $2)
                )
                (i32.const -64)
               )
              )
              (i32.shl
               (i32.and
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 108)
                 )
                )
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 52)
                 )
                )
               )
               (i32.const 1)
              )
             )
             (local.tee $1
              (i32.load16_s
               (i32.add
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 68)
                 )
                )
                (i32.shl
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 72)
                  )
                 )
                 (i32.const 1)
                )
               )
              )
             )
            )
            (i32.store
             (local.get $6)
             (i32.and
              (local.get $1)
              (i32.const 65535)
             )
            )
            (i32.store16
             (i32.add
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 68)
               )
              )
              (i32.shl
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 72)
                )
               )
               (i32.const 1)
              )
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 108)
              )
             )
            )
           )
          )
          (local.set $1
           (i32.add
            (i32.load
             (local.tee $5
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 120)
              )
             )
            )
            (i32.const -1)
           )
          )
          (i32.store
           (local.get $5)
           (local.get $1)
          )
          (br_if $while-in
           (local.get $1)
          )
         )
         (i32.store
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 104)
          )
          (i32.const 0)
         )
         (i32.store
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 96)
          )
          (i32.const 2)
         )
         (i32.store
          (local.tee $1
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 108)
           )
          )
          (i32.add
           (i32.load
            (local.get $1)
           )
           (i32.const 1)
          )
         )
         (if
          (i32.load
           (local.get $8)
          )
          (block
           (call $__tr_flush_block
            (i32.load
             (local.get $2)
            )
            (if (result i32)
             (i32.ge_s
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 92)
               )
              )
              (i32.const 0)
             )
             (i32.add
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 56)
               )
              )
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 92)
               )
              )
             )
             (i32.const 0)
            )
            (i32.sub
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 108)
              )
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 92)
              )
             )
            )
            (i32.const 0)
           )
           (i32.store
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 92)
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 108)
             )
            )
           )
           (call $_flush_pending
            (i32.load
             (i32.load
              (local.get $2)
             )
            )
           )
           (br_if $__rjti$2
            (i32.eqz
             (i32.load
              (i32.add
               (i32.load
                (i32.load
                 (local.get $2)
                )
               )
               (i32.const 16)
              )
             )
            )
           )
          )
         )
         (br $do-once0)
        )
        (local.set $1
         (i32.load
          (local.get $2)
         )
        )
        (if
         (i32.eqz
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 104)
           )
          )
         )
         (block
          (i32.store
           (i32.add
            (local.get $1)
            (i32.const 104)
           )
           (i32.const 1)
          )
          (i32.store
           (local.tee $1
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 108)
            )
           )
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 1)
           )
          )
          (i32.store
           (local.tee $1
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 116)
            )
           )
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const -1)
           )
          )
          (br $do-once0)
         )
        )
        (i32.store8
         (local.get $11)
         (i32.load8_s
          (i32.add
           (i32.load
            (i32.add
             (local.get $1)
             (i32.const 56)
            )
           )
           (i32.sub
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 108)
             )
            )
            (i32.const 1)
           )
          )
         )
        )
        (i32.store16
         (i32.add
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5796)
           )
          )
          (i32.shl
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5792)
            )
           )
           (i32.const 1)
          )
         )
         (i32.const 0)
        )
        (local.set $5
         (i32.load8_s
          (local.get $11)
         )
        )
        (local.set $13
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 5784)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $14
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5792)
           )
          )
         )
        )
        (i32.store
         (local.get $14)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $13)
         )
         (local.get $5)
        )
        (i32.store16
         (local.tee $1
          (i32.add
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 148)
           )
           (i32.shl
            (i32.load8_u
             (local.get $11)
            )
            (i32.const 2)
           )
          )
         )
         (i32.add
          (i32.load16_s
           (local.get $1)
          )
          (i32.const 1)
         )
        )
        (i32.store
         (local.get $8)
         (i32.eq
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5792)
           )
          )
          (i32.sub
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5788)
            )
           )
           (i32.const 1)
          )
         )
        )
        (if
         (i32.load
          (local.get $8)
         )
         (block
          (call $__tr_flush_block
           (i32.load
            (local.get $2)
           )
           (if (result i32)
            (i32.ge_s
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 92)
              )
             )
             (i32.const 0)
            )
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 56)
              )
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 92)
              )
             )
            )
            (i32.const 0)
           )
           (i32.sub
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 108)
             )
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 92)
             )
            )
           )
           (i32.const 0)
          )
          (i32.store
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 92)
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 108)
            )
           )
          )
          (call $_flush_pending
           (i32.load
            (i32.load
             (local.get $2)
            )
           )
          )
         )
        )
        (i32.store
         (local.tee $1
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 1)
         )
        )
        (i32.store
         (local.tee $1
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 116)
          )
         )
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const -1)
         )
        )
        (br_if $__rjti$3
         (i32.eqz
          (i32.load
           (i32.add
            (i32.load
             (i32.load
              (local.get $2)
             )
            )
            (i32.const 16)
           )
          )
         )
        )
       )
       (br $label$continue$L1)
      )
     )
     (i32.store
      (local.get $4)
      (i32.const 0)
     )
     (local.set $0
      (i32.load
       (local.get $4)
      )
     )
     (global.set $STACKTOP
      (local.get $3)
     )
     (return
      (local.get $0)
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    (local.set $0
     (i32.load
      (local.get $4)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (local.get $0)
    )
   )
   (i32.store
    (local.get $4)
    (i32.const 0)
   )
   (local.set $0
    (i32.load
     (local.get $4)
    )
   )
   (global.set $STACKTOP
    (local.get $3)
   )
   (return
    (local.get $0)
   )
  )
  (if
   (i32.load
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 104)
    )
   )
   (block
    (i32.store8
     (local.get $12)
     (i32.load8_s
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.sub
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 108)
         )
        )
        (i32.const 1)
       )
      )
     )
    )
    (i32.store16
     (i32.add
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 5796)
       )
      )
      (i32.shl
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 5792)
        )
       )
       (i32.const 1)
      )
     )
     (i32.const 0)
    )
    (local.set $9
     (i32.load8_s
      (local.get $12)
     )
    )
    (local.set $6
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 5784)
      )
     )
    )
    (local.set $1
     (i32.load
      (local.tee $7
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 5792)
       )
      )
     )
    )
    (i32.store
     (local.get $7)
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (local.get $6)
     )
     (local.get $9)
    )
    (i32.store16
     (local.tee $1
      (i32.add
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 148)
       )
       (i32.shl
        (i32.load8_u
         (local.get $12)
        )
        (i32.const 2)
       )
      )
     )
     (i32.add
      (i32.load16_s
       (local.get $1)
      )
      (i32.const 1)
     )
    )
    (i32.store
     (local.get $8)
     (i32.eq
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 5792)
       )
      )
      (i32.sub
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 5788)
        )
       )
       (i32.const 1)
      )
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 104)
     )
     (i32.const 0)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 5812)
   )
   (if (result i32)
    (i32.lt_u
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
     (i32.const 2)
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 108)
     )
    )
    (i32.const 2)
   )
  )
  (local.set $1
   (i32.load
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (i32.load
     (local.get $0)
    )
    (i32.const 4)
   )
   (block
    (call $__tr_flush_block
     (local.get $1)
     (if (result i32)
      (i32.ge_s
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
       (i32.const 0)
      )
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
      )
      (i32.const 0)
     )
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
     )
     (i32.const 1)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
    )
    (call $_flush_pending
     (i32.load
      (i32.load
       (local.get $2)
      )
     )
    )
    (if
     (i32.load
      (i32.add
       (i32.load
        (i32.load
         (local.get $2)
        )
       )
       (i32.const 16)
      )
     )
     (block
      (i32.store
       (local.get $4)
       (i32.const 3)
      )
      (local.set $0
       (i32.load
        (local.get $4)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return
       (local.get $0)
      )
     )
     (block
      (i32.store
       (local.get $4)
       (i32.const 2)
      )
      (local.set $0
       (i32.load
        (local.get $4)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (if
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 5792)
    )
   )
   (block
    (call $__tr_flush_block
     (i32.load
      (local.get $2)
     )
     (if (result i32)
      (i32.ge_s
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
       (i32.const 0)
      )
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
      )
      (i32.const 0)
     )
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
    )
    (call $_flush_pending
     (i32.load
      (i32.load
       (local.get $2)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (i32.add
        (i32.load
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 16)
       )
      )
     )
     (block
      (i32.store
       (local.get $4)
       (i32.const 0)
      )
      (local.set $0
       (i32.load
        (local.get $4)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 1)
  )
  (local.set $0
   (i32.load
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_fill_window (; 241 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $8
   (i32.add
    (local.get $2)
    (i32.const 20)
   )
  )
  (local.set $7
   (i32.add
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 4)
   )
  )
  (local.set $3
   (local.get $2)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $2)
     (i32.const 24)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $2)
     (i32.const 12)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 44)
    )
   )
  )
  (loop $while-in
   (block $while-out
    (i32.store
     (local.get $7)
     (i32.sub
      (i32.sub
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 60)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 116)
        )
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 108)
       )
      )
     )
    )
    (if
     (i32.ge_u
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 108)
       )
      )
      (i32.add
       (i32.load
        (local.get $0)
       )
       (i32.sub
        (i32.load
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 44)
         )
        )
        (i32.const 262)
       )
      )
     )
     (block
      (drop
       (call $_memcpy
        (i32.load
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 56)
         )
        )
        (i32.add
         (i32.load
          (i32.add
           (i32.load
            (local.get $1)
           )
           (i32.const 56)
          )
         )
         (i32.load
          (local.get $0)
         )
        )
        (i32.sub
         (i32.load
          (local.get $0)
         )
         (i32.load
          (local.get $7)
         )
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 112)
        )
       )
       (i32.sub
        (i32.load
         (local.get $4)
        )
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 108)
        )
       )
       (i32.sub
        (i32.load
         (local.get $4)
        )
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.store
       (local.tee $4
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 92)
        )
       )
       (i32.sub
        (i32.load
         (local.get $4)
        )
        (i32.load
         (local.get $0)
        )
       )
      )
      (call $_slide_hash
       (i32.load
        (local.get $1)
       )
      )
      (i32.store
       (local.get $7)
       (i32.add
        (i32.load
         (local.get $0)
        )
        (i32.load
         (local.get $7)
        )
       )
      )
     )
    )
    (br_if $while-out
     (i32.eqz
      (i32.load
       (i32.add
        (i32.load
         (i32.load
          (local.get $1)
         )
        )
        (i32.const 4)
       )
      )
     )
    )
    (i32.store
     (local.get $8)
     (call $_read_buf
      (i32.load
       (i32.load
        (local.get $1)
       )
      )
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 116)
        )
       )
       (i32.add
        (i32.load
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 56)
         )
        )
        (i32.load
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 108)
         )
        )
       )
      )
      (i32.load
       (local.get $7)
      )
     )
    )
    (i32.store
     (local.tee $4
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 116)
      )
     )
     (i32.add
      (i32.load
       (local.get $8)
      )
      (i32.load
       (local.get $4)
      )
     )
    )
    (if
     (i32.ge_u
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 116)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 5812)
        )
       )
      )
      (i32.const 3)
     )
     (block $label$break$L7
      (i32.store
       (local.get $5)
       (i32.sub
        (i32.load
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 108)
         )
        )
        (i32.load
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 5812)
         )
        )
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 72)
       )
       (i32.load8_u
        (i32.add
         (i32.load
          (i32.add
           (i32.load
            (local.get $1)
           )
           (i32.const 56)
          )
         )
         (i32.load
          (local.get $5)
         )
        )
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 72)
       )
       (i32.and
        (i32.load
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 84)
         )
        )
        (i32.xor
         (i32.load8_u
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const 56)
            )
           )
           (i32.add
            (i32.load
             (local.get $5)
            )
            (i32.const 1)
           )
          )
         )
         (i32.shl
          (i32.load
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 72)
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 88)
           )
          )
         )
        )
       )
      )
      (loop $while-in1
       (br_if $label$break$L7
        (i32.eqz
         (i32.load
          (i32.add
           (i32.load
            (local.get $1)
           )
           (i32.const 5812)
          )
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 72)
        )
        (i32.and
         (i32.load
          (i32.add
           (i32.load
            (local.get $1)
           )
           (i32.const 84)
          )
         )
         (i32.xor
          (i32.load8_u
           (i32.add
            (i32.load
             (i32.add
              (i32.load
               (local.get $1)
              )
              (i32.const 56)
             )
            )
            (i32.add
             (i32.load
              (local.get $5)
             )
             (i32.const 2)
            )
           )
          )
          (i32.shl
           (i32.load
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const 72)
            )
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const 88)
            )
           )
          )
         )
        )
       )
       (i32.store16
        (i32.add
         (i32.load
          (i32.sub
           (i32.load
            (local.get $1)
           )
           (i32.const -64)
          )
         )
         (i32.shl
          (i32.and
           (i32.load
            (local.get $5)
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const 52)
            )
           )
          )
          (i32.const 1)
         )
        )
        (i32.load16_s
         (i32.add
          (i32.load
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 68)
           )
          )
          (i32.shl
           (i32.load
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const 72)
            )
           )
           (i32.const 1)
          )
         )
        )
       )
       (i32.store16
        (i32.add
         (i32.load
          (i32.add
           (i32.load
            (local.get $1)
           )
           (i32.const 68)
          )
         )
         (i32.shl
          (i32.load
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 72)
           )
          )
          (i32.const 1)
         )
        )
        (i32.load
         (local.get $5)
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (i32.load
          (local.get $5)
         )
         (i32.const 1)
        )
       )
       (i32.store
        (local.tee $4
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 5812)
         )
        )
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const -1)
        )
       )
       (br_if $while-in1
        (i32.ge_u
         (i32.add
          (i32.load
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 116)
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 5812)
           )
          )
         )
         (i32.const 3)
        )
       )
      )
     )
    )
    (br_if $while-out
     (i32.ge_u
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 116)
       )
      )
      (i32.const 262)
     )
    )
    (br_if $while-in
     (i32.load
      (i32.add
       (i32.load
        (i32.load
         (local.get $1)
        )
       )
       (i32.const 4)
      )
     )
    )
   )
  )
  (if
   (i32.ge_u
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5824)
     )
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 60)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $2)
    )
    (return)
   )
  )
  (i32.store
   (local.get $6)
   (i32.add
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 108)
     )
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 116)
     )
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (if
   (i32.lt_u
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5824)
     )
    )
    (i32.load
     (local.get $6)
    )
   )
   (block
    (i32.store
     (local.get $3)
     (local.tee $0
      (i32.sub
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 60)
        )
       )
       (i32.load
        (local.get $6)
       )
      )
     )
    )
    (i32.store
     (local.get $3)
     (select
      (i32.const 258)
      (local.get $0)
      (i32.gt_u
       (i32.load
        (local.get $3)
       )
       (i32.const 258)
      )
     )
    )
    (drop
     (call $_memset
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (local.get $6)
       )
      )
      (i32.const 0)
      (i32.load
       (local.get $3)
      )
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5824)
     )
     (i32.add
      (i32.load
       (local.get $6)
      )
      (i32.load
       (local.get $3)
      )
     )
    )
    (global.set $STACKTOP
     (local.get $2)
    )
    (return)
   )
  )
  (if
   (i32.ge_u
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 5824)
     )
    )
    (i32.add
     (i32.load
      (local.get $6)
     )
     (i32.const 258)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $2)
    )
    (return)
   )
  )
  (i32.store
   (local.get $3)
   (i32.sub
    (i32.add
     (i32.load
      (local.get $6)
     )
     (i32.const 258)
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5824)
     )
    )
   )
  )
  (if
   (i32.gt_u
    (i32.load
     (local.get $3)
    )
    (i32.sub
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 60)
      )
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5824)
      )
     )
    )
   )
   (i32.store
    (local.get $3)
    (i32.sub
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 60)
      )
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5824)
      )
     )
    )
   )
  )
  (drop
   (call $_memset
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 56)
      )
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5824)
      )
     )
    )
    (i32.const 0)
    (i32.load
     (local.get $3)
    )
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 5824)
    )
   )
   (i32.add
    (i32.load
     (local.get $3)
    )
    (i32.load
     (local.get $0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_longest_match (; 242 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $5)
     (i32.const 44)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $5)
     (i32.const 40)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $5)
     (i32.const 36)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 124)
    )
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $5)
     (i32.const 32)
    )
   )
   (i32.add
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 56)
     )
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 108)
     )
    )
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $5)
     (i32.const 20)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 120)
    )
   )
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $5)
     (i32.const 16)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 144)
    )
   )
  )
  (i32.store
   (local.tee $15
    (i32.add
     (local.get $5)
     (i32.const 12)
    )
   )
   (if (result i32)
    (i32.gt_u
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 108)
      )
     )
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 44)
       )
      )
      (i32.const 262)
     )
    )
    (i32.sub
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 108)
      )
     )
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 44)
       )
      )
      (i32.const 262)
     )
    )
    (i32.const 0)
   )
  )
  (i32.store
   (local.tee $16
    (i32.add
     (local.get $5)
     (i32.const 8)
    )
   )
   (i32.load
    (i32.sub
     (i32.load
      (local.get $4)
     )
     (i32.const -64)
    )
   )
  )
  (i32.store
   (local.tee $17
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 52)
    )
   )
  )
  (i32.store
   (local.tee $0
    (local.get $5)
   )
   (i32.add
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 56)
      )
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 108)
      )
     )
    )
    (i32.const 258)
   )
  )
  (i32.store8
   (local.tee $13
    (i32.add
     (local.get $5)
     (i32.const 53)
    )
   )
   (i32.load8_s
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.sub
      (i32.load
       (local.get $7)
      )
      (i32.const 1)
     )
    )
   )
  )
  (i32.store8
   (local.tee $14
    (i32.add
     (local.get $5)
     (i32.const 52)
    )
   )
   (i32.load8_s
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.load
      (local.get $7)
     )
    )
   )
  )
  (if
   (i32.ge_u
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 120)
     )
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 140)
     )
    )
   )
   (i32.store
    (local.get $9)
    (i32.shr_u
     (i32.load
      (local.get $9)
     )
     (i32.const 2)
    )
   )
  )
  (if
   (i32.gt_u
    (i32.load
     (local.get $12)
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 116)
     )
    )
   )
   (i32.store
    (local.get $12)
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 116)
     )
    )
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 48)
   )
  )
  (local.set $3
   (i32.add
    (local.get $5)
    (i32.const 28)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 24)
   )
  )
  (loop $while-in
   (block $while-out
    (i32.store
     (local.get $3)
     (i32.add
      (i32.load
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 56)
       )
      )
      (i32.load
       (local.get $8)
      )
     )
    )
    (if
     (i32.eq
      (i32.load8_u
       (local.get $14)
      )
      (i32.load8_u
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $7)
        )
       )
      )
     )
     (if
      (i32.eq
       (i32.load8_u
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.sub
          (i32.load
           (local.get $7)
          )
          (i32.const 1)
         )
        )
       )
       (i32.load8_u
        (local.get $13)
       )
      )
      (if
       (i32.eq
        (i32.load8_u
         (i32.load
          (local.get $3)
         )
        )
        (i32.load8_u
         (i32.load
          (local.get $1)
         )
        )
       )
       (block
        (i32.store
         (local.get $3)
         (local.tee $2
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 1)
          )
         )
        )
        (if
         (i32.eq
          (i32.load8_u
           (local.get $2)
          )
          (i32.load8_u
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 1)
           )
          )
         )
         (block
          (i32.store
           (local.get $1)
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 2)
           )
          )
          (i32.store
           (local.get $3)
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 1)
           )
          )
          (loop $while-in1
           (block $while-out0
            (i32.store
             (local.get $1)
             (local.tee $2
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 1)
              )
             )
            )
            (local.set $2
             (i32.load8_u
              (local.get $2)
             )
            )
            (i32.store
             (local.get $3)
             (local.tee $6
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 1)
              )
             )
            )
            (br_if $while-out0
             (i32.ne
              (i32.load8_u
               (local.get $6)
              )
              (local.get $2)
             )
            )
            (i32.store
             (local.get $1)
             (local.tee $2
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 1)
              )
             )
            )
            (local.set $2
             (i32.load8_u
              (local.get $2)
             )
            )
            (i32.store
             (local.get $3)
             (local.tee $6
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 1)
              )
             )
            )
            (br_if $while-out0
             (i32.ne
              (i32.load8_u
               (local.get $6)
              )
              (local.get $2)
             )
            )
            (i32.store
             (local.get $1)
             (local.tee $2
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 1)
              )
             )
            )
            (local.set $2
             (i32.load8_u
              (local.get $2)
             )
            )
            (i32.store
             (local.get $3)
             (local.tee $6
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 1)
              )
             )
            )
            (br_if $while-out0
             (i32.ne
              (i32.load8_u
               (local.get $6)
              )
              (local.get $2)
             )
            )
            (i32.store
             (local.get $1)
             (local.tee $2
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 1)
              )
             )
            )
            (local.set $2
             (i32.load8_u
              (local.get $2)
             )
            )
            (i32.store
             (local.get $3)
             (local.tee $6
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 1)
              )
             )
            )
            (br_if $while-out0
             (i32.ne
              (i32.load8_u
               (local.get $6)
              )
              (local.get $2)
             )
            )
            (i32.store
             (local.get $1)
             (local.tee $2
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 1)
              )
             )
            )
            (local.set $2
             (i32.load8_u
              (local.get $2)
             )
            )
            (i32.store
             (local.get $3)
             (local.tee $6
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 1)
              )
             )
            )
            (br_if $while-out0
             (i32.ne
              (i32.load8_u
               (local.get $6)
              )
              (local.get $2)
             )
            )
            (i32.store
             (local.get $1)
             (local.tee $2
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 1)
              )
             )
            )
            (local.set $2
             (i32.load8_u
              (local.get $2)
             )
            )
            (i32.store
             (local.get $3)
             (local.tee $6
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 1)
              )
             )
            )
            (br_if $while-out0
             (i32.ne
              (i32.load8_u
               (local.get $6)
              )
              (local.get $2)
             )
            )
            (i32.store
             (local.get $1)
             (local.tee $2
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 1)
              )
             )
            )
            (local.set $2
             (i32.load8_u
              (local.get $2)
             )
            )
            (i32.store
             (local.get $3)
             (local.tee $6
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 1)
              )
             )
            )
            (br_if $while-out0
             (i32.ne
              (i32.load8_u
               (local.get $6)
              )
              (local.get $2)
             )
            )
            (i32.store
             (local.get $1)
             (local.tee $2
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 1)
              )
             )
            )
            (local.set $2
             (i32.load8_u
              (local.get $2)
             )
            )
            (i32.store
             (local.get $3)
             (local.tee $6
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 1)
              )
             )
            )
            (br_if $while-out0
             (i32.ne
              (i32.load8_u
               (local.get $6)
              )
              (local.get $2)
             )
            )
            (br_if $while-in1
             (i32.lt_u
              (i32.load
               (local.get $1)
              )
              (i32.load
               (local.get $0)
              )
             )
            )
           )
          )
          (i32.store
           (local.get $11)
           (i32.sub
            (i32.const 258)
            (i32.sub
             (i32.load
              (local.get $0)
             )
             (i32.load
              (local.get $1)
             )
            )
           )
          )
          (i32.store
           (local.get $1)
           (i32.add
            (i32.load
             (local.get $0)
            )
            (i32.const -258)
           )
          )
          (if
           (i32.gt_s
            (i32.load
             (local.get $11)
            )
            (i32.load
             (local.get $7)
            )
           )
           (block
            (i32.store
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.const 112)
             )
             (i32.load
              (local.get $8)
             )
            )
            (i32.store
             (local.get $7)
             (i32.load
              (local.get $11)
             )
            )
            (br_if $while-out
             (i32.ge_s
              (i32.load
               (local.get $11)
              )
              (i32.load
               (local.get $12)
              )
             )
            )
            (i32.store8
             (local.get $13)
             (i32.load8_s
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.sub
                (i32.load
                 (local.get $7)
                )
                (i32.const 1)
               )
              )
             )
            )
            (i32.store8
             (local.get $14)
             (i32.load8_s
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.load
                (local.get $7)
               )
              )
             )
            )
           )
          )
         )
        )
       )
      )
     )
    )
    (i32.store
     (local.get $8)
     (local.tee $2
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $16)
        )
        (i32.shl
         (i32.and
          (i32.load
           (local.get $8)
          )
          (i32.load
           (local.get $17)
          )
         )
         (i32.const 1)
        )
       )
      )
     )
    )
    (br_if $while-out
     (i32.le_u
      (local.get $2)
      (i32.load
       (local.get $15)
      )
     )
    )
    (i32.store
     (local.get $9)
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $9)
       )
       (i32.const -1)
      )
     )
    )
    (br_if $while-in
     (local.get $2)
    )
   )
  )
  (if (result i32)
   (i32.le_u
    (i32.load
     (local.get $7)
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 116)
     )
    )
   )
   (block (result i32)
    (i32.store
     (local.get $10)
     (i32.load
      (local.get $7)
     )
    )
    (local.set $0
     (i32.load
      (local.get $10)
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (local.get $0)
   )
   (block (result i32)
    (i32.store
     (local.get $10)
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 116)
      )
     )
    )
    (local.set $0
     (i32.load
      (local.get $10)
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (local.get $0)
   )
  )
 )
 (func $_flush_pending (; 243 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $4)
    (i32.const 4)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $4)
     (i32.const 8)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (local.get $4)
   )
   (i32.load offset=28
    (i32.load
     (local.get $1)
    )
   )
  )
  (local.set $5
   (i32.load
    (local.get $0)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $5)
  )
  (call $_bi_flush
   (i32.load
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.store
   (local.get $2)
   (i32.load offset=20
    (i32.load
     (local.get $0)
    )
   )
  )
  (if
   (i32.gt_u
    (i32.load
     (local.get $2)
    )
    (i32.load offset=16
     (i32.load
      (local.get $1)
     )
    )
   )
   (i32.store
    (local.get $2)
    (i32.load offset=16
     (i32.load
      (local.get $1)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $2)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (drop
   (call $_memcpy
    (i32.load offset=12
     (i32.load
      (local.get $1)
     )
    )
    (i32.load offset=16
     (i32.load
      (local.get $0)
     )
    )
    (i32.load
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 12)
    )
   )
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $3)
    )
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (i32.load
      (local.get $0)
     )
     (i32.const 16)
    )
   )
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $3)
    )
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 20)
    )
   )
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $3)
    )
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 16)
    )
   )
   (i32.sub
    (i32.load
     (local.get $1)
    )
    (i32.load
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (i32.load
      (local.get $0)
     )
     (i32.const 20)
    )
   )
   (i32.sub
    (i32.load
     (local.get $1)
    )
    (i32.load
     (local.get $2)
    )
   )
  )
  (if
   (i32.load offset=20
    (i32.load
     (local.get $0)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (i32.store offset=16
   (i32.load
    (local.get $0)
   )
   (i32.load offset=8
    (i32.load
     (local.get $0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_slide_hash (; 244 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $5)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $5)
     (i32.const 16)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (local.get $5)
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 44)
    )
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $0)
     (i32.const 12)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 76)
    )
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $0)
     (i32.const 4)
    )
   )
   (i32.add
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 68)
     )
    )
    (i32.shl
     (i32.load
      (local.get $2)
     )
     (i32.const 1)
    )
   )
  )
  (loop $while-in
   (i32.store
    (local.get $3)
    (local.tee $6
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const -2)
     )
    )
   )
   (i32.store
    (local.get $4)
    (i32.load16_u
     (local.get $6)
    )
   )
   (i32.store16
    (i32.load
     (local.get $3)
    )
    (if (result i32)
     (i32.ge_u
      (i32.load
       (local.get $4)
      )
      (i32.load
       (local.get $0)
      )
     )
     (i32.sub
      (i32.load
       (local.get $4)
      )
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 0)
    )
   )
   (i32.store
    (local.get $2)
    (local.tee $6
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const -1)
     )
    )
   )
   (br_if $while-in
    (local.get $6)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load
    (local.get $0)
   )
  )
  (i32.store
   (local.get $3)
   (i32.add
    (i32.load
     (i32.sub
      (i32.load
       (local.get $1)
      )
      (i32.const -64)
     )
    )
    (i32.shl
     (i32.load
      (local.get $2)
     )
     (i32.const 1)
    )
   )
  )
  (loop $while-in1
   (i32.store
    (local.get $3)
    (local.tee $1
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const -2)
     )
    )
   )
   (i32.store
    (local.get $4)
    (i32.load16_u
     (local.get $1)
    )
   )
   (i32.store16
    (i32.load
     (local.get $3)
    )
    (if (result i32)
     (i32.ge_u
      (i32.load
       (local.get $4)
      )
      (i32.load
       (local.get $0)
      )
     )
     (i32.sub
      (i32.load
       (local.get $4)
      )
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 0)
    )
   )
   (i32.store
    (local.get $2)
    (local.tee $1
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const -1)
     )
    )
   )
   (br_if $while-in1
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_read_buf (; 245 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $4)
     (i32.const 12)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $4)
     (i32.const 8)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $4)
     (i32.const 4)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $0
    (local.get $4)
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $3)
     )
     (i32.const 4)
    )
   )
  )
  (if
   (i32.gt_u
    (i32.load
     (local.get $0)
    )
    (i32.load
     (local.get $1)
    )
   )
   (i32.store
    (local.get $0)
    (i32.load
     (local.get $1)
    )
   )
  )
  (local.set $1
   (i32.add
    (local.get $4)
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $0)
    )
   )
   (block
    (i32.store
     (local.get $1)
     (i32.const 0)
    )
    (local.set $0
     (i32.load
      (local.get $1)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return
     (local.get $0)
    )
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (i32.load
      (local.get $3)
     )
     (i32.const 4)
    )
   )
   (i32.sub
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $0)
    )
   )
  )
  (drop
   (call $_memcpy
    (i32.load
     (local.get $5)
    )
    (i32.load
     (i32.load
      (local.get $3)
     )
    )
    (i32.load
     (local.get $0)
    )
   )
  )
  (local.set $2
   (i32.load
    (local.get $3)
   )
  )
  (if
   (i32.eq
    (i32.load
     (i32.add
      (i32.load
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 28)
       )
      )
      (i32.const 24)
     )
    )
    (i32.const 1)
   )
   (block
    (local.set $2
     (call $_adler32
      (i32.load
       (i32.add
        (local.get $2)
        (i32.const 48)
       )
      )
      (i32.load
       (local.get $5)
      )
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 48)
     )
     (local.get $2)
    )
   )
   (if
    (i32.eq
     (i32.load
      (i32.add
       (i32.load
        (i32.add
         (local.get $2)
         (i32.const 28)
        )
       )
       (i32.const 24)
      )
     )
     (i32.const 2)
    )
    (block
     (local.set $2
      (call $_crc32
       (i32.load
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.const 48)
        )
       )
       (i32.load
        (local.get $5)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 48)
      )
      (local.get $2)
     )
    )
   )
  )
  (i32.store
   (local.tee $2
    (i32.load
     (local.get $3)
    )
   )
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.load
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (i32.load
      (local.get $3)
     )
     (i32.const 8)
    )
   )
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.load
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.get $1)
   (i32.load
    (local.get $0)
   )
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $_deflateStateCheck (; 246 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.tee $1
      (local.get $3)
     )
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (if
   (i32.load
    (local.get $4)
   )
   (if
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 32)
     )
    )
    (if
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 36)
      )
     )
     (block
      (i32.store
       (local.get $1)
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 28)
        )
       )
      )
      (if
       (i32.load
        (local.get $1)
       )
       (if
        (i32.eq
         (i32.load
          (i32.load
           (local.get $1)
          )
         )
         (i32.load
          (local.get $4)
         )
        )
        (block $do-once
         (if
          (i32.ne
           (i32.load
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const 4)
            )
           )
           (i32.const 42)
          )
          (if
           (i32.ne
            (i32.load
             (i32.add
              (i32.load
               (local.get $1)
              )
              (i32.const 4)
             )
            )
            (i32.const 57)
           )
           (if
            (i32.ne
             (i32.load
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 4)
              )
             )
             (i32.const 69)
            )
            (if
             (i32.ne
              (i32.load
               (i32.add
                (i32.load
                 (local.get $1)
                )
                (i32.const 4)
               )
              )
              (i32.const 73)
             )
             (if
              (i32.ne
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $1)
                 )
                 (i32.const 4)
                )
               )
               (i32.const 91)
              )
              (if
               (i32.ne
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $1)
                  )
                  (i32.const 4)
                 )
                )
                (i32.const 103)
               )
               (if
                (i32.ne
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $1)
                   )
                   (i32.const 4)
                  )
                 )
                 (i32.const 113)
                )
                (br_if $do-once
                 (i32.ne
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $1)
                    )
                    (i32.const 4)
                   )
                  )
                  (i32.const 666)
                 )
                )
               )
              )
             )
            )
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.const 0)
         )
         (local.set $0
          (i32.load
           (local.get $2)
          )
         )
         (global.set $STACKTOP
          (local.get $3)
         )
         (return
          (local.get $0)
         )
        )
       )
      )
      (i32.store
       (local.get $2)
       (i32.const 1)
      )
      (local.set $0
       (i32.load
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $3)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $2)
   (i32.const 1)
  )
  (local.set $0
   (i32.load
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_deflate (; 247 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $6
   (i32.add
    (local.get $7)
    (i32.const 56)
   )
  )
  (local.set $8
   (i32.add
    (local.get $7)
    (i32.const 44)
   )
  )
  (local.set $2
   (i32.add
    (local.get $7)
    (i32.const 40)
   )
  )
  (local.set $3
   (i32.add
    (local.get $7)
    (i32.const 36)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 32)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 28)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 24)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 20)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 16)
   )
  )
  (local.set $15
   (i32.add
    (local.get $7)
    (i32.const 12)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 8)
   )
  )
  (local.set $16
   (i32.add
    (local.get $7)
    (i32.const 4)
   )
  )
  (local.set $9
   (local.get $7)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $7)
     (i32.const 52)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $7)
     (i32.const 48)
    )
   )
   (local.get $1)
  )
  (local.set $1
   (i32.ne
    (call $_deflateStateCheck
     (i32.load
      (local.get $4)
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.or
    (i32.or
     (local.get $1)
     (i32.gt_s
      (i32.load
       (local.get $0)
      )
      (i32.const 5)
     )
    )
    (i32.lt_s
     (i32.load
      (local.get $0)
     )
     (i32.const 0)
    )
   )
   (block
    (i32.store
     (local.get $6)
     (i32.const -2)
    )
    (local.set $0
     (i32.load
      (local.get $6)
     )
    )
    (global.set $STACKTOP
     (local.get $7)
    )
    (return
     (local.get $0)
    )
   )
  )
  (i32.store
   (local.get $2)
   (i32.load
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 28)
    )
   )
  )
  (if
   (i32.load
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 12)
    )
   )
   (block $do-once
    (if
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 4)
      )
     )
     (br_if $do-once
      (i32.eqz
       (i32.load
        (i32.load
         (local.get $4)
        )
       )
      )
     )
    )
    (if
     (i32.eqz
      (i32.and
       (i32.eq
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
        )
        (i32.const 666)
       )
       (i32.ne
        (i32.load
         (local.get $0)
        )
        (i32.const 4)
       )
      )
     )
     (block
      (if
       (i32.eqz
        (i32.load
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 16)
         )
        )
       )
       (block
        (i32.store
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 24)
         )
         (i32.load
          (i32.const 15868)
         )
        )
        (i32.store
         (local.get $6)
         (i32.const -5)
        )
        (local.set $0
         (i32.load
          (local.get $6)
         )
        )
        (global.set $STACKTOP
         (local.get $7)
        )
        (return
         (local.get $0)
        )
       )
      )
      (i32.store
       (local.get $8)
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 40)
        )
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 40)
       )
       (i32.load
        (local.get $0)
       )
      )
      (local.set $1
       (i32.load
        (local.get $4)
       )
      )
      (if
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 20)
        )
       )
       (block
        (call $_flush_pending
         (local.get $1)
        )
        (if
         (i32.eqz
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 16)
           )
          )
         )
         (block
          (i32.store
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 40)
           )
           (i32.const -1)
          )
          (i32.store
           (local.get $6)
           (i32.const 0)
          )
          (local.set $0
           (i32.load
            (local.get $6)
           )
          )
          (global.set $STACKTOP
           (local.get $7)
          )
          (return
           (local.get $0)
          )
         )
        )
       )
       (if
        (i32.eqz
         (i32.load
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
        )
        (if
         (i32.and
          (i32.ne
           (i32.load
            (local.get $0)
           )
           (i32.const 4)
          )
          (i32.le_s
           (i32.sub
            (i32.shl
             (i32.load
              (local.get $0)
             )
             (i32.const 1)
            )
            (select
             (i32.const 9)
             (i32.const 0)
             (i32.gt_s
              (i32.load
               (local.get $0)
              )
              (i32.const 4)
             )
            )
           )
           (i32.sub
            (i32.shl
             (i32.load
              (local.get $8)
             )
             (i32.const 1)
            )
            (select
             (i32.const 9)
             (i32.const 0)
             (i32.gt_s
              (i32.load
               (local.get $8)
              )
              (i32.const 4)
             )
            )
           )
          )
         )
         (block
          (i32.store
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 24)
           )
           (i32.load
            (i32.const 15868)
           )
          )
          (i32.store
           (local.get $6)
           (i32.const -5)
          )
          (local.set $0
           (i32.load
            (local.get $6)
           )
          )
          (global.set $STACKTOP
           (local.get $7)
          )
          (return
           (local.get $0)
          )
         )
        )
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
        )
        (i32.const 666)
       )
       (if
        (i32.load
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 4)
         )
        )
        (block
         (i32.store
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 24)
          )
          (i32.load
           (i32.const 15868)
          )
         )
         (i32.store
          (local.get $6)
          (i32.const -5)
         )
         (local.set $0
          (i32.load
           (local.get $6)
          )
         )
         (global.set $STACKTOP
          (local.get $7)
         )
         (return
          (local.get $0)
         )
        )
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
        )
        (i32.const 42)
       )
       (block
        (i32.store
         (local.get $3)
         (i32.shl
          (i32.add
           (i32.shl
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 48)
             )
            )
            (i32.const 4)
           )
           (i32.const -120)
          )
          (i32.const 8)
         )
        )
        (block $__rjto$0
         (block $__rjti$0
          (br_if $__rjti$0
           (i32.ge_s
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 136)
             )
            )
            (i32.const 2)
           )
          )
          (br_if $__rjti$0
           (i32.lt_s
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 132)
             )
            )
            (i32.const 2)
           )
          )
          (block $do-once0
           (if
            (i32.lt_s
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 132)
              )
             )
             (i32.const 6)
            )
            (block
             (i32.store
              (local.get $5)
              (i32.const 1)
             )
             (br $do-once0)
            )
           )
           (if
            (i32.eq
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 132)
              )
             )
             (i32.const 6)
            )
            (i32.store
             (local.get $5)
             (i32.const 2)
            )
            (i32.store
             (local.get $5)
             (i32.const 3)
            )
           )
          )
          (br $__rjto$0)
         )
         (i32.store
          (local.get $5)
          (i32.const 0)
         )
        )
        (i32.store
         (local.get $3)
         (i32.or
          (i32.load
           (local.get $3)
          )
          (i32.shl
           (i32.load
            (local.get $5)
           )
           (i32.const 6)
          )
         )
        )
        (if
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
         (i32.store
          (local.get $3)
          (i32.or
           (i32.load
            (local.get $3)
           )
           (i32.const 32)
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.sub
           (i32.const 31)
           (i32.rem_u
            (i32.load
             (local.get $3)
            )
            (i32.const 31)
           )
          )
         )
        )
        (call $_putShortMSB
         (i32.load
          (local.get $2)
         )
         (i32.load
          (local.get $3)
         )
        )
        (if
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
         (block
          (call $_putShortMSB
           (i32.load
            (local.get $2)
           )
           (i32.shr_u
            (i32.load
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.const 48)
             )
            )
            (i32.const 16)
           )
          )
          (call $_putShortMSB
           (i32.load
            (local.get $2)
           )
           (i32.and
            (i32.load
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.const 48)
             )
            )
            (i32.const 65535)
           )
          )
         )
        )
        (local.set $1
         (call $_adler32
          (i32.const 0)
          (i32.const 0)
          (i32.const 0)
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 48)
         )
         (local.get $1)
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
         (i32.const 113)
        )
        (call $_flush_pending
         (i32.load
          (local.get $4)
         )
        )
        (if
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 20)
          )
         )
         (block
          (i32.store
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 40)
           )
           (i32.const -1)
          )
          (i32.store
           (local.get $6)
           (i32.const 0)
          )
          (local.set $0
           (i32.load
            (local.get $6)
           )
          )
          (global.set $STACKTOP
           (local.get $7)
          )
          (return
           (local.get $0)
          )
         )
        )
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
        )
        (i32.const 57)
       )
       (block $do-once2
        (local.set $1
         (call $_crc32
          (i32.const 0)
          (i32.const 0)
          (i32.const 0)
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 48)
         )
         (local.get $1)
        )
        (local.set $3
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $5
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $3)
         )
         (i32.const 31)
        )
        (local.set $3
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $5
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $3)
         )
         (i32.const -117)
        )
        (local.set $3
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $5
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $3)
         )
         (i32.const 8)
        )
        (local.set $1
         (i32.load
          (local.get $2)
         )
        )
        (if
         (i32.eqz
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 28)
           )
          )
         )
         (block
          (local.set $3
           (i32.load
            (i32.add
             (local.get $1)
             (i32.const 8)
            )
           )
          )
          (local.set $1
           (i32.load
            (local.tee $5
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $5)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $3)
           )
           (i32.const 0)
          )
          (local.set $3
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $1
           (i32.load
            (local.tee $5
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $5)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $3)
           )
           (i32.const 0)
          )
          (local.set $3
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $1
           (i32.load
            (local.tee $5
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $5)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $3)
           )
           (i32.const 0)
          )
          (local.set $3
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $1
           (i32.load
            (local.tee $5
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $5)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $3)
           )
           (i32.const 0)
          )
          (local.set $3
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $1
           (i32.load
            (local.tee $5
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $5)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $3)
           )
           (i32.const 0)
          )
          (local.set $1
           (if (result i32)
            (i32.eq
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 132)
              )
             )
             (i32.const 9)
            )
            (i32.const 2)
            (select
             (i32.const 4)
             (i32.const 0)
             (if (result i32)
              (i32.ge_s
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 136)
                )
               )
               (i32.const 2)
              )
              (i32.const 1)
              (i32.lt_s
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 132)
                )
               )
               (i32.const 2)
              )
             )
            )
           )
          )
          (local.set $5
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $3
           (i32.load
            (local.tee $8
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $8)
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $3)
            (local.get $5)
           )
           (local.get $1)
          )
          (local.set $3
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $1
           (i32.load
            (local.tee $5
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $5)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $3)
           )
           (i32.const 3)
          )
          (i32.store
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 4)
           )
           (i32.const 113)
          )
          (call $_flush_pending
           (i32.load
            (local.get $4)
           )
          )
          (br_if $do-once2
           (i32.eqz
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 40)
           )
           (i32.const -1)
          )
          (i32.store
           (local.get $6)
           (i32.const 0)
          )
          (local.set $0
           (i32.load
            (local.get $6)
           )
          )
          (global.set $STACKTOP
           (local.get $7)
          )
          (return
           (local.get $0)
          )
         )
        )
        (local.set $3
         (i32.and
          (i32.add
           (i32.add
            (i32.add
             (i32.add
              (select
               (i32.const 1)
               (i32.const 0)
               (i32.load
                (i32.load
                 (i32.add
                  (local.get $1)
                  (i32.const 28)
                 )
                )
               )
              )
              (select
               (i32.const 2)
               (i32.const 0)
               (i32.load
                (i32.add
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 28)
                  )
                 )
                 (i32.const 44)
                )
               )
              )
             )
             (select
              (i32.const 4)
              (i32.const 0)
              (i32.load
               (i32.add
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 28)
                 )
                )
                (i32.const 16)
               )
              )
             )
            )
            (select
             (i32.const 8)
             (i32.const 0)
             (i32.load
              (i32.add
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 28)
                )
               )
               (i32.const 28)
              )
             )
            )
           )
           (select
            (i32.const 16)
            (i32.const 0)
            (i32.load
             (i32.add
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 28)
               )
              )
              (i32.const 36)
             )
            )
           )
          )
          (i32.const 255)
         )
        )
        (local.set $5
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $8
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $8)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $5)
         )
         (local.get $3)
        )
        (local.set $3
         (i32.and
          (i32.load
           (i32.add
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 28)
             )
            )
            (i32.const 4)
           )
          )
          (i32.const 255)
         )
        )
        (local.set $5
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $8
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $8)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $5)
         )
         (local.get $3)
        )
        (local.set $3
         (i32.and
          (i32.shr_u
           (i32.load
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 28)
              )
             )
             (i32.const 4)
            )
           )
           (i32.const 8)
          )
          (i32.const 255)
         )
        )
        (local.set $5
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $8
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $8)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $5)
         )
         (local.get $3)
        )
        (local.set $3
         (i32.and
          (i32.shr_u
           (i32.load
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 28)
              )
             )
             (i32.const 4)
            )
           )
           (i32.const 16)
          )
          (i32.const 255)
         )
        )
        (local.set $5
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $8
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $8)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $5)
         )
         (local.get $3)
        )
        (local.set $3
         (i32.shr_u
          (i32.load
           (i32.add
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 28)
             )
            )
            (i32.const 4)
           )
          )
          (i32.const 24)
         )
        )
        (local.set $5
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $8
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $8)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $5)
         )
         (local.get $3)
        )
        (local.set $1
         (if (result i32)
          (i32.eq
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 132)
            )
           )
           (i32.const 9)
          )
          (i32.const 2)
          (select
           (i32.const 4)
           (i32.const 0)
           (if (result i32)
            (i32.ge_s
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 136)
              )
             )
             (i32.const 2)
            )
            (i32.const 1)
            (i32.lt_s
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 132)
              )
             )
             (i32.const 2)
            )
           )
          )
         )
        )
        (local.set $5
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $3
         (i32.load
          (local.tee $8
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $8)
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $3)
          (local.get $5)
         )
         (local.get $1)
        )
        (local.set $3
         (i32.and
          (i32.load
           (i32.add
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 28)
             )
            )
            (i32.const 12)
           )
          )
          (i32.const 255)
         )
        )
        (local.set $5
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $8
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $8)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $5)
         )
         (local.get $3)
        )
        (if
         (i32.load
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 28)
            )
           )
           (i32.const 16)
          )
         )
         (block
          (local.set $3
           (i32.and
            (i32.load
             (i32.add
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 28)
               )
              )
              (i32.const 20)
             )
            )
            (i32.const 255)
           )
          )
          (local.set $5
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $1
           (i32.load
            (local.tee $8
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $8)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $5)
           )
           (local.get $3)
          )
          (local.set $3
           (i32.and
            (i32.shr_u
             (i32.load
              (i32.add
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 28)
                )
               )
               (i32.const 20)
              )
             )
             (i32.const 8)
            )
            (i32.const 255)
           )
          )
          (local.set $5
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $1
           (i32.load
            (local.tee $8
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $8)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $5)
           )
           (local.get $3)
          )
         )
        )
        (if
         (i32.load
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 28)
            )
           )
           (i32.const 44)
          )
         )
         (block
          (local.set $1
           (call $_crc32
            (i32.load
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.const 48)
             )
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 8)
             )
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 48)
           )
           (local.get $1)
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 32)
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
         (i32.const 69)
        )
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
        )
        (i32.const 69)
       )
       (block
        (if
         (i32.load
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 28)
            )
           )
           (i32.const 16)
          )
         )
         (block
          (i32.store
           (local.get $10)
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 20)
            )
           )
          )
          (i32.store
           (local.get $12)
           (i32.sub
            (i32.and
             (i32.load
              (i32.add
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 28)
                )
               )
               (i32.const 20)
              )
             )
             (i32.const 65535)
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 32)
             )
            )
           )
          )
          (block $__rjto$1
           (block $__rjti$1
            (loop $while-in
             (block $while-out
              (local.set $1
               (i32.load
                (local.get $2)
               )
              )
              (br_if $while-out
               (i32.le_u
                (i32.add
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 20)
                  )
                 )
                 (i32.load
                  (local.get $12)
                 )
                )
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 12)
                 )
                )
               )
              )
              (i32.store
               (local.get $14)
               (i32.sub
                (i32.load
                 (i32.add
                  (local.get $1)
                  (i32.const 12)
                 )
                )
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 20)
                 )
                )
               )
              )
              (drop
               (call $_memcpy
                (i32.add
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 8)
                  )
                 )
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 20)
                  )
                 )
                )
                (i32.add
                 (i32.load
                  (i32.add
                   (i32.load
                    (i32.add
                     (i32.load
                      (local.get $2)
                     )
                     (i32.const 28)
                    )
                   )
                   (i32.const 16)
                  )
                 )
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 32)
                  )
                 )
                )
                (i32.load
                 (local.get $14)
                )
               )
              )
              (i32.store
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 20)
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 12)
                )
               )
              )
              (if
               (i32.load
                (i32.add
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 28)
                  )
                 )
                 (i32.const 44)
                )
               )
               (if
                (i32.gt_u
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 20)
                  )
                 )
                 (i32.load
                  (local.get $10)
                 )
                )
                (block
                 (local.set $1
                  (call $_crc32
                   (i32.load
                    (i32.add
                     (i32.load
                      (local.get $4)
                     )
                     (i32.const 48)
                    )
                   )
                   (i32.add
                    (i32.load
                     (i32.add
                      (i32.load
                       (local.get $2)
                      )
                      (i32.const 8)
                     )
                    )
                    (i32.load
                     (local.get $10)
                    )
                   )
                   (i32.sub
                    (i32.load
                     (i32.add
                      (i32.load
                       (local.get $2)
                      )
                      (i32.const 20)
                     )
                    )
                    (i32.load
                     (local.get $10)
                    )
                   )
                  )
                 )
                 (i32.store
                  (i32.add
                   (i32.load
                    (local.get $4)
                   )
                   (i32.const 48)
                  )
                  (local.get $1)
                 )
                )
               )
              )
              (i32.store
               (local.tee $1
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 32)
                )
               )
               (i32.add
                (i32.load
                 (local.get $14)
                )
                (i32.load
                 (local.get $1)
                )
               )
              )
              (call $_flush_pending
               (i32.load
                (local.get $4)
               )
              )
              (br_if $__rjti$1
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 20)
                )
               )
              )
              (i32.store
               (local.get $10)
               (i32.const 0)
              )
              (i32.store
               (local.get $12)
               (i32.sub
                (i32.load
                 (local.get $12)
                )
                (i32.load
                 (local.get $14)
                )
               )
              )
              (br $while-in)
             )
            )
            (br $__rjto$1)
           )
           (i32.store
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 40)
            )
            (i32.const -1)
           )
           (i32.store
            (local.get $6)
            (i32.const 0)
           )
           (local.set $0
            (i32.load
             (local.get $6)
            )
           )
           (global.set $STACKTOP
            (local.get $7)
           )
           (return
            (local.get $0)
           )
          )
          (drop
           (call $_memcpy
            (i32.add
             (i32.load
              (i32.add
               (local.get $1)
               (i32.const 8)
              )
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 20)
              )
             )
            )
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 28)
                )
               )
               (i32.const 16)
              )
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 32)
              )
             )
            )
            (i32.load
             (local.get $12)
            )
           )
          )
          (i32.store
           (local.tee $1
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 20)
            )
           )
           (i32.add
            (i32.load
             (local.get $12)
            )
            (i32.load
             (local.get $1)
            )
           )
          )
          (if
           (i32.load
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 28)
              )
             )
             (i32.const 44)
            )
           )
           (if
            (i32.gt_u
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 20)
              )
             )
             (i32.load
              (local.get $10)
             )
            )
            (block
             (local.set $1
              (call $_crc32
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $4)
                 )
                 (i32.const 48)
                )
               )
               (i32.add
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 8)
                 )
                )
                (i32.load
                 (local.get $10)
                )
               )
               (i32.sub
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 20)
                 )
                )
                (i32.load
                 (local.get $10)
                )
               )
              )
             )
             (i32.store
              (i32.add
               (i32.load
                (local.get $4)
               )
               (i32.const 48)
              )
              (local.get $1)
             )
            )
           )
          )
          (i32.store
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 32)
           )
           (i32.const 0)
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
         (i32.const 73)
        )
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
        )
        (i32.const 73)
       )
       (block
        (if
         (i32.load
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 28)
            )
           )
           (i32.const 28)
          )
         )
         (block
          (i32.store
           (local.get $11)
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 20)
            )
           )
          )
          (block $__rjto$2
           (block $__rjti$2
            (loop $while-in5
             (if
              (i32.eq
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 20)
                )
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 12)
                )
               )
              )
              (block
               (if
                (i32.load
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 28)
                   )
                  )
                  (i32.const 44)
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 20)
                   )
                  )
                  (i32.load
                   (local.get $11)
                  )
                 )
                 (block
                  (local.set $1
                   (call $_crc32
                    (i32.load
                     (i32.add
                      (i32.load
                       (local.get $4)
                      )
                      (i32.const 48)
                     )
                    )
                    (i32.add
                     (i32.load
                      (i32.add
                       (i32.load
                        (local.get $2)
                       )
                       (i32.const 8)
                      )
                     )
                     (i32.load
                      (local.get $11)
                     )
                    )
                    (i32.sub
                     (i32.load
                      (i32.add
                       (i32.load
                        (local.get $2)
                       )
                       (i32.const 20)
                      )
                     )
                     (i32.load
                      (local.get $11)
                     )
                    )
                   )
                  )
                  (i32.store
                   (i32.add
                    (i32.load
                     (local.get $4)
                    )
                    (i32.const 48)
                   )
                   (local.get $1)
                  )
                 )
                )
               )
               (call $_flush_pending
                (i32.load
                 (local.get $4)
                )
               )
               (br_if $__rjti$2
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 20)
                 )
                )
               )
               (i32.store
                (local.get $11)
                (i32.const 0)
               )
              )
             )
             (local.set $3
              (i32.load
               (i32.add
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 28)
                 )
                )
                (i32.const 28)
               )
              )
             )
             (local.set $1
              (i32.load
               (local.tee $10
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 32)
                )
               )
              )
             )
             (i32.store
              (local.get $10)
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.store
              (local.get $15)
              (i32.load8_u
               (i32.add
                (local.get $1)
                (local.get $3)
               )
              )
             )
             (local.set $3
              (i32.and
               (i32.load
                (local.get $15)
               )
               (i32.const 255)
              )
             )
             (local.set $10
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 8)
               )
              )
             )
             (local.set $1
              (i32.load
               (local.tee $12
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 20)
                )
               )
              )
             )
             (i32.store
              (local.get $12)
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.store8
              (i32.add
               (local.get $1)
               (local.get $10)
              )
              (local.get $3)
             )
             (br_if $while-in5
              (i32.load
               (local.get $15)
              )
             )
            )
            (br $__rjto$2)
           )
           (i32.store
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 40)
            )
            (i32.const -1)
           )
           (i32.store
            (local.get $6)
            (i32.const 0)
           )
           (local.set $0
            (i32.load
             (local.get $6)
            )
           )
           (global.set $STACKTOP
            (local.get $7)
           )
           (return
            (local.get $0)
           )
          )
          (if
           (i32.load
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 28)
              )
             )
             (i32.const 44)
            )
           )
           (if
            (i32.gt_u
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 20)
              )
             )
             (i32.load
              (local.get $11)
             )
            )
            (block
             (local.set $1
              (call $_crc32
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $4)
                 )
                 (i32.const 48)
                )
               )
               (i32.add
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 8)
                 )
                )
                (i32.load
                 (local.get $11)
                )
               )
               (i32.sub
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 20)
                 )
                )
                (i32.load
                 (local.get $11)
                )
               )
              )
             )
             (i32.store
              (i32.add
               (i32.load
                (local.get $4)
               )
               (i32.const 48)
              )
              (local.get $1)
             )
            )
           )
          )
          (i32.store
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 32)
           )
           (i32.const 0)
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
         (i32.const 91)
        )
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
        )
        (i32.const 91)
       )
       (block
        (if
         (i32.load
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 28)
            )
           )
           (i32.const 36)
          )
         )
         (block
          (i32.store
           (local.get $13)
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 20)
            )
           )
          )
          (block $__rjto$3
           (block $__rjti$3
            (loop $while-in9
             (if
              (i32.eq
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 20)
                )
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 12)
                )
               )
              )
              (block
               (if
                (i32.load
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 28)
                   )
                  )
                  (i32.const 44)
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 20)
                   )
                  )
                  (i32.load
                   (local.get $13)
                  )
                 )
                 (block
                  (local.set $1
                   (call $_crc32
                    (i32.load
                     (i32.add
                      (i32.load
                       (local.get $4)
                      )
                      (i32.const 48)
                     )
                    )
                    (i32.add
                     (i32.load
                      (i32.add
                       (i32.load
                        (local.get $2)
                       )
                       (i32.const 8)
                      )
                     )
                     (i32.load
                      (local.get $13)
                     )
                    )
                    (i32.sub
                     (i32.load
                      (i32.add
                       (i32.load
                        (local.get $2)
                       )
                       (i32.const 20)
                      )
                     )
                     (i32.load
                      (local.get $13)
                     )
                    )
                   )
                  )
                  (i32.store
                   (i32.add
                    (i32.load
                     (local.get $4)
                    )
                    (i32.const 48)
                   )
                   (local.get $1)
                  )
                 )
                )
               )
               (call $_flush_pending
                (i32.load
                 (local.get $4)
                )
               )
               (br_if $__rjti$3
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 20)
                 )
                )
               )
               (i32.store
                (local.get $13)
                (i32.const 0)
               )
              )
             )
             (local.set $3
              (i32.load
               (i32.add
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 28)
                 )
                )
                (i32.const 36)
               )
              )
             )
             (local.set $1
              (i32.load
               (local.tee $10
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 32)
                )
               )
              )
             )
             (i32.store
              (local.get $10)
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.store
              (local.get $16)
              (i32.load8_u
               (i32.add
                (local.get $1)
                (local.get $3)
               )
              )
             )
             (local.set $3
              (i32.and
               (i32.load
                (local.get $16)
               )
               (i32.const 255)
              )
             )
             (local.set $10
              (i32.load
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 8)
               )
              )
             )
             (local.set $1
              (i32.load
               (local.tee $11
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 20)
                )
               )
              )
             )
             (i32.store
              (local.get $11)
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.store8
              (i32.add
               (local.get $1)
               (local.get $10)
              )
              (local.get $3)
             )
             (br_if $while-in9
              (i32.load
               (local.get $16)
              )
             )
            )
            (br $__rjto$3)
           )
           (i32.store
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 40)
            )
            (i32.const -1)
           )
           (i32.store
            (local.get $6)
            (i32.const 0)
           )
           (local.set $0
            (i32.load
             (local.get $6)
            )
           )
           (global.set $STACKTOP
            (local.get $7)
           )
           (return
            (local.get $0)
           )
          )
          (if
           (i32.load
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 28)
              )
             )
             (i32.const 44)
            )
           )
           (if
            (i32.gt_u
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 20)
              )
             )
             (i32.load
              (local.get $13)
             )
            )
            (block
             (local.set $1
              (call $_crc32
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $4)
                 )
                 (i32.const 48)
                )
               )
               (i32.add
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 8)
                 )
                )
                (i32.load
                 (local.get $13)
                )
               )
               (i32.sub
                (i32.load
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 20)
                 )
                )
                (i32.load
                 (local.get $13)
                )
               )
              )
             )
             (i32.store
              (i32.add
               (i32.load
                (local.get $4)
               )
               (i32.const 48)
              )
              (local.get $1)
             )
            )
           )
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
         (i32.const 103)
        )
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
        )
        (i32.const 103)
       )
       (block
        (if
         (i32.load
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 28)
            )
           )
           (i32.const 44)
          )
         )
         (block
          (if
           (i32.gt_u
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 20)
              )
             )
             (i32.const 2)
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 12)
             )
            )
           )
           (block
            (call $_flush_pending
             (i32.load
              (local.get $4)
             )
            )
            (if
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 20)
              )
             )
             (block
              (i32.store
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 40)
               )
               (i32.const -1)
              )
              (i32.store
               (local.get $6)
               (i32.const 0)
              )
              (local.set $0
               (i32.load
                (local.get $6)
               )
              )
              (global.set $STACKTOP
               (local.get $7)
              )
              (return
               (local.get $0)
              )
             )
            )
           )
          )
          (local.set $3
           (i32.and
            (i32.load
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.const 48)
             )
            )
            (i32.const 255)
           )
          )
          (local.set $10
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $1
           (i32.load
            (local.tee $11
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $11)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $10)
           )
           (local.get $3)
          )
          (local.set $3
           (i32.and
            (i32.shr_u
             (i32.load
              (i32.add
               (i32.load
                (local.get $4)
               )
               (i32.const 48)
              )
             )
             (i32.const 8)
            )
            (i32.const 255)
           )
          )
          (local.set $10
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $1
           (i32.load
            (local.tee $11
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $11)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $10)
           )
           (local.get $3)
          )
          (local.set $1
           (call $_crc32
            (i32.const 0)
            (i32.const 0)
            (i32.const 0)
           )
          )
          (i32.store
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 48)
           )
           (local.get $1)
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
         (i32.const 113)
        )
        (call $_flush_pending
         (i32.load
          (local.get $4)
         )
        )
        (if
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 20)
          )
         )
         (block
          (i32.store
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 40)
           )
           (i32.const -1)
          )
          (i32.store
           (local.get $6)
           (i32.const 0)
          )
          (local.set $0
           (i32.load
            (local.get $6)
           )
          )
          (global.set $STACKTOP
           (local.get $7)
          )
          (return
           (local.get $0)
          )
         )
        )
       )
      )
      (block $do-once12
       (block $__rjti$4
        (br_if $__rjti$4
         (i32.load
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 4)
          )
         )
        )
        (br_if $__rjti$4
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 116)
          )
         )
        )
        (if
         (i32.load
          (local.get $0)
         )
         (br_if $__rjti$4
          (i32.ne
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 4)
            )
           )
           (i32.const 666)
          )
         )
        )
        (br $do-once12)
       )
       (local.set $1
        (i32.load
         (local.get $2)
        )
       )
       (i32.store
        (local.get $9)
        (if (result i32)
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 132)
          )
         )
         (block $do-once14 (result i32)
          (local.set $3
           (i32.load
            (local.get $2)
           )
          )
          (if
           (i32.eq
            (i32.load
             (i32.add
              (local.get $1)
              (i32.const 136)
             )
            )
            (i32.const 2)
           )
           (br $do-once14
            (call $_deflate_huff
             (local.get $3)
             (i32.load
              (local.get $0)
             )
            )
           )
          )
          (local.set $1
           (i32.load
            (local.get $2)
           )
          )
          (if (result i32)
           (i32.eq
            (i32.load
             (i32.add
              (local.get $3)
              (i32.const 136)
             )
            )
            (i32.const 3)
           )
           (call $_deflate_rle
            (local.get $1)
            (i32.load
             (local.get $0)
            )
           )
           (block (result i32)
            (local.set $1
             (i32.load
              (i32.add
               (i32.mul
                (i32.load
                 (i32.add
                  (local.get $1)
                  (i32.const 132)
                 )
                )
                (i32.const 12)
               )
               (i32.const 10568)
              )
             )
            )
            (call_indirect (type $FUNCSIG$iii)
             (i32.load
              (local.get $2)
             )
             (i32.load
              (local.get $0)
             )
             (i32.add
              (i32.and
               (local.get $1)
               (i32.const 7)
              )
              (i32.const 4)
             )
            )
           )
          )
         )
         (call $_deflate_stored
          (local.get $1)
          (i32.load
           (local.get $0)
          )
         )
        )
       )
       (if
        (i32.or
         (i32.eq
          (i32.load
           (local.get $9)
          )
          (i32.const 2)
         )
         (i32.eq
          (i32.load
           (local.get $9)
          )
          (i32.const 3)
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 4)
         )
         (i32.const 666)
        )
       )
       (if
        (i32.or
         (i32.eqz
          (i32.load
           (local.get $9)
          )
         )
         (i32.eq
          (i32.load
           (local.get $9)
          )
          (i32.const 2)
         )
        )
        (block
         (if
          (i32.eqz
           (i32.load
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 16)
            )
           )
          )
          (i32.store
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 40)
           )
           (i32.const -1)
          )
         )
         (i32.store
          (local.get $6)
          (i32.const 0)
         )
         (local.set $0
          (i32.load
           (local.get $6)
          )
         )
         (global.set $STACKTOP
          (local.get $7)
         )
         (return
          (local.get $0)
         )
        )
       )
       (if
        (i32.eq
         (i32.load
          (local.get $9)
         )
         (i32.const 1)
        )
        (block
         (if
          (i32.eq
           (i32.load
            (local.get $0)
           )
           (i32.const 1)
          )
          (call $__tr_align
           (i32.load
            (local.get $2)
           )
          )
          (block $do-once16
           (br_if $do-once16
            (i32.eq
             (i32.load
              (local.get $0)
             )
             (i32.const 5)
            )
           )
           (call $__tr_stored_block
            (i32.load
             (local.get $2)
            )
            (i32.const 0)
            (i32.const 0)
            (i32.const 0)
           )
           (br_if $do-once16
            (i32.ne
             (i32.load
              (local.get $0)
             )
             (i32.const 3)
            )
           )
           (i32.store16
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 68)
              )
             )
             (i32.shl
              (i32.sub
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 76)
                )
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
            (i32.const 0)
           )
           (drop
            (call $_memset
             (i32.load
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 68)
              )
             )
             (i32.const 0)
             (i32.shl
              (i32.sub
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 76)
                )
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
            )
           )
           (br_if $do-once16
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 116)
             )
            )
           )
           (i32.store
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 108)
            )
            (i32.const 0)
           )
           (i32.store
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 92)
            )
            (i32.const 0)
           )
           (i32.store
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5812)
            )
            (i32.const 0)
           )
          )
         )
         (call $_flush_pending
          (i32.load
           (local.get $4)
          )
         )
         (br_if $do-once12
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 16)
           )
          )
         )
         (i32.store
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 40)
          )
          (i32.const -1)
         )
         (i32.store
          (local.get $6)
          (i32.const 0)
         )
         (local.set $0
          (i32.load
           (local.get $6)
          )
         )
         (global.set $STACKTOP
          (local.get $7)
         )
         (return
          (local.get $0)
         )
        )
       )
      )
      (if
       (i32.ne
        (i32.load
         (local.get $0)
        )
        (i32.const 4)
       )
       (block
        (i32.store
         (local.get $6)
         (i32.const 0)
        )
        (local.set $0
         (i32.load
          (local.get $6)
         )
        )
        (global.set $STACKTOP
         (local.get $7)
        )
        (return
         (local.get $0)
        )
       )
      )
      (if
       (i32.le_s
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 24)
         )
        )
        (i32.const 0)
       )
       (block
        (i32.store
         (local.get $6)
         (i32.const 1)
        )
        (local.set $0
         (i32.load
          (local.get $6)
         )
        )
        (global.set $STACKTOP
         (local.get $7)
        )
        (return
         (local.get $0)
        )
       )
      )
      (if
       (i32.eq
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 24)
         )
        )
        (i32.const 2)
       )
       (block
        (local.set $1
         (i32.and
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 48)
           )
          )
          (i32.const 255)
         )
        )
        (local.set $9
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $0
         (i32.load
          (local.tee $3
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (local.get $9)
         )
         (local.get $1)
        )
        (local.set $1
         (i32.and
          (i32.shr_u
           (i32.load
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 48)
            )
           )
           (i32.const 8)
          )
          (i32.const 255)
         )
        )
        (local.set $9
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $0
         (i32.load
          (local.tee $3
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (local.get $9)
         )
         (local.get $1)
        )
        (local.set $1
         (i32.and
          (i32.shr_u
           (i32.load
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 48)
            )
           )
           (i32.const 16)
          )
          (i32.const 255)
         )
        )
        (local.set $9
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $0
         (i32.load
          (local.tee $3
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (local.get $9)
         )
         (local.get $1)
        )
        (local.set $1
         (i32.shr_u
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 48)
           )
          )
          (i32.const 24)
         )
        )
        (local.set $9
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $0
         (i32.load
          (local.tee $3
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (local.get $9)
         )
         (local.get $1)
        )
        (local.set $1
         (i32.and
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 8)
           )
          )
          (i32.const 255)
         )
        )
        (local.set $9
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $0
         (i32.load
          (local.tee $3
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (local.get $9)
         )
         (local.get $1)
        )
        (local.set $1
         (i32.and
          (i32.shr_u
           (i32.load
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 8)
            )
           )
           (i32.const 8)
          )
          (i32.const 255)
         )
        )
        (local.set $9
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $0
         (i32.load
          (local.tee $3
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (local.get $9)
         )
         (local.get $1)
        )
        (local.set $1
         (i32.and
          (i32.shr_u
           (i32.load
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 8)
            )
           )
           (i32.const 16)
          )
          (i32.const 255)
         )
        )
        (local.set $9
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $0
         (i32.load
          (local.tee $3
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (local.get $9)
         )
         (local.get $1)
        )
        (local.set $1
         (i32.shr_u
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 8)
           )
          )
          (i32.const 24)
         )
        )
        (local.set $9
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $0
         (i32.load
          (local.tee $3
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $0)
          (local.get $9)
         )
         (local.get $1)
        )
       )
       (block
        (call $_putShortMSB
         (i32.load
          (local.get $2)
         )
         (i32.shr_u
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 48)
           )
          )
          (i32.const 16)
         )
        )
        (call $_putShortMSB
         (i32.load
          (local.get $2)
         )
         (i32.and
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 48)
           )
          )
          (i32.const 65535)
         )
        )
       )
      )
      (call $_flush_pending
       (i32.load
        (local.get $4)
       )
      )
      (if
       (i32.gt_s
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 24)
         )
        )
        (i32.const 0)
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 24)
        )
        (i32.sub
         (i32.const 0)
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 24)
          )
         )
        )
       )
      )
      (i32.store
       (local.get $6)
       (select
        (i32.const 0)
        (i32.const 1)
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 20)
         )
        )
       )
      )
      (local.set $0
       (i32.load
        (local.get $6)
       )
      )
      (global.set $STACKTOP
       (local.get $7)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $4)
    )
    (i32.const 24)
   )
   (i32.load
    (i32.const 15856)
   )
  )
  (i32.store
   (local.get $6)
   (i32.const -2)
  )
  (local.set $0
   (i32.load
    (local.get $6)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $_putShortMSB (; 248 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.get $3)
   (local.get $1)
  )
  (local.set $1
   (i32.and
    (i32.shr_u
     (i32.load
      (local.get $3)
     )
     (i32.const 8)
    )
    (i32.const 255)
   )
  )
  (local.set $4
   (i32.load
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 8)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.tee $5
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 20)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $4)
   )
   (local.get $1)
  )
  (local.set $1
   (i32.and
    (i32.load
     (local.get $3)
    )
    (i32.const 255)
   )
  )
  (local.set $4
   (i32.load
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 8)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.tee $2
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 20)
     )
    )
   )
  )
  (i32.store
   (local.get $2)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $4)
   )
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_deflate_huff (; 249 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $3
   (i32.add
    (local.get $4)
    (i32.const 12)
   )
  )
  (local.set $6
   (local.get $4)
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $4)
     (i32.const 8)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $4)
     (i32.const 4)
    )
   )
   (local.get $1)
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in
     (block $while-out
      (if
       (i32.eqz
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 116)
         )
        )
       )
       (block
        (call $_fill_window
         (i32.load
          (local.get $2)
         )
        )
        (br_if $while-out
         (i32.eqz
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 116)
           )
          )
         )
        )
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 96)
       )
       (i32.const 0)
      )
      (i32.store8
       (local.get $5)
       (i32.load8_s
        (i32.add
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 56)
          )
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
        )
       )
      )
      (i32.store16
       (i32.add
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 5796)
         )
        )
        (i32.shl
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 5792)
          )
         )
         (i32.const 1)
        )
       )
       (i32.const 0)
      )
      (local.set $7
       (i32.load8_s
        (local.get $5)
       )
      )
      (local.set $8
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 5784)
        )
       )
      )
      (local.set $1
       (i32.load
        (local.tee $9
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 5792)
         )
        )
       )
      )
      (i32.store
       (local.get $9)
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.store8
       (i32.add
        (local.get $1)
        (local.get $8)
       )
       (local.get $7)
      )
      (i32.store16
       (local.tee $1
        (i32.add
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 148)
         )
         (i32.shl
          (i32.load8_u
           (local.get $5)
          )
          (i32.const 2)
         )
        )
       )
       (i32.add
        (i32.load16_s
         (local.get $1)
        )
        (i32.const 1)
       )
      )
      (i32.store
       (local.get $6)
       (i32.eq
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 5792)
         )
        )
        (i32.sub
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 5788)
          )
         )
         (i32.const 1)
        )
       )
      )
      (i32.store
       (local.tee $1
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 116)
        )
       )
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const -1)
       )
      )
      (i32.store
       (local.tee $1
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 108)
        )
       )
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 1)
       )
      )
      (if
       (i32.load
        (local.get $6)
       )
       (block
        (call $__tr_flush_block
         (i32.load
          (local.get $2)
         )
         (if (result i32)
          (i32.ge_s
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 92)
            )
           )
           (i32.const 0)
          )
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 56)
            )
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 92)
            )
           )
          )
          (i32.const 0)
         )
         (i32.sub
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 108)
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 92)
           )
          )
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 92)
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
        )
        (call $_flush_pending
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
        )
        (br_if $__rjti$0
         (i32.eqz
          (i32.load
           (i32.add
            (i32.load
             (i32.load
              (local.get $2)
             )
            )
            (i32.const 16)
           )
          )
         )
        )
       )
      )
      (br $while-in)
     )
    )
    (br $__rjto$0)
   )
   (i32.store
    (local.get $3)
    (i32.const 0)
   )
   (local.set $0
    (i32.load
     (local.get $3)
    )
   )
   (global.set $STACKTOP
    (local.get $4)
   )
   (return
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $0)
    )
   )
   (block
    (i32.store
     (local.get $3)
     (i32.const 0)
    )
    (local.set $0
     (i32.load
      (local.get $3)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return
     (local.get $0)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 5812)
   )
   (i32.const 0)
  )
  (local.set $1
   (i32.load
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (i32.load
     (local.get $0)
    )
    (i32.const 4)
   )
   (block
    (call $__tr_flush_block
     (local.get $1)
     (if (result i32)
      (i32.ge_s
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
       (i32.const 0)
      )
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
      )
      (i32.const 0)
     )
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
     )
     (i32.const 1)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
    )
    (call $_flush_pending
     (i32.load
      (i32.load
       (local.get $2)
      )
     )
    )
    (if
     (i32.load
      (i32.add
       (i32.load
        (i32.load
         (local.get $2)
        )
       )
       (i32.const 16)
      )
     )
     (block
      (i32.store
       (local.get $3)
       (i32.const 3)
      )
      (local.set $0
       (i32.load
        (local.get $3)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return
       (local.get $0)
      )
     )
     (block
      (i32.store
       (local.get $3)
       (i32.const 2)
      )
      (local.set $0
       (i32.load
        (local.get $3)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (if
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 5792)
    )
   )
   (block
    (call $__tr_flush_block
     (i32.load
      (local.get $2)
     )
     (if (result i32)
      (i32.ge_s
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
       (i32.const 0)
      )
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
      )
      (i32.const 0)
     )
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
    )
    (call $_flush_pending
     (i32.load
      (i32.load
       (local.get $2)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (i32.add
        (i32.load
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 16)
       )
      )
     )
     (block
      (i32.store
       (local.get $3)
       (i32.const 0)
      )
      (local.set $0
       (i32.load
        (local.get $3)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.const 1)
  )
  (local.set $0
   (i32.load
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $_deflate_rle (; 250 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 24)
   )
  )
  (local.set $9
   (i32.add
    (local.get $5)
    (i32.const 12)
   )
  )
  (local.set $7
   (i32.add
    (local.get $5)
    (i32.const 8)
   )
  )
  (local.set $4
   (i32.add
    (local.get $5)
    (i32.const 4)
   )
  )
  (local.set $10
   (local.get $5)
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 31)
   )
  )
  (local.set $8
   (i32.add
    (local.get $5)
    (i32.const 28)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 30)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 20)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $5)
     (i32.const 16)
    )
   )
   (local.get $1)
  )
  (block $__rjti$2
   (block $__rjti$1
    (loop $while-in
     (block $__rjti$0
      (if
       (i32.le_u
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 116)
         )
        )
        (i32.const 258)
       )
       (block
        (call $_fill_window
         (i32.load
          (local.get $2)
         )
        )
        (br_if $__rjti$0
         (i32.and
          (i32.eqz
           (i32.load
            (local.get $0)
           )
          )
          (i32.le_u
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 116)
            )
           )
           (i32.const 258)
          )
         )
        )
        (br_if $__rjti$2
         (i32.eqz
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 116)
           )
          )
         )
        )
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 96)
       )
       (i32.const 0)
      )
      (if
       (i32.ge_u
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 116)
         )
        )
        (i32.const 3)
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
         (i32.const 0)
        )
        (block
         (i32.store
          (local.get $4)
          (i32.add
           (i32.add
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 56)
             )
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 108)
             )
            )
           )
           (i32.const -1)
          )
         )
         (i32.store
          (local.get $7)
          (i32.load8_u
           (i32.load
            (local.get $4)
           )
          )
         )
         (local.set $1
          (i32.load
           (local.get $7)
          )
         )
         (i32.store
          (local.get $4)
          (local.tee $3
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 1)
           )
          )
         )
         (if
          (i32.eq
           (local.get $1)
           (i32.load8_u
            (local.get $3)
           )
          )
          (block
           (local.set $1
            (i32.load
             (local.get $7)
            )
           )
           (i32.store
            (local.get $4)
            (local.tee $3
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.const 1)
             )
            )
           )
           (if
            (i32.eq
             (local.get $1)
             (i32.load8_u
              (local.get $3)
             )
            )
            (block
             (local.set $1
              (i32.load
               (local.get $7)
              )
             )
             (i32.store
              (local.get $4)
              (local.tee $3
               (i32.add
                (i32.load
                 (local.get $4)
                )
                (i32.const 1)
               )
              )
             )
             (if
              (i32.eq
               (local.get $1)
               (i32.load8_u
                (local.get $3)
               )
              )
              (block
               (i32.store
                (local.get $10)
                (i32.add
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 56)
                   )
                  )
                  (i32.load
                   (i32.add
                    (i32.load
                     (local.get $2)
                    )
                    (i32.const 108)
                   )
                  )
                 )
                 (i32.const 258)
                )
               )
               (loop $while-in1
                (block $while-out0
                 (local.set $1
                  (i32.load
                   (local.get $7)
                  )
                 )
                 (i32.store
                  (local.get $4)
                  (local.tee $3
                   (i32.add
                    (i32.load
                     (local.get $4)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (br_if $while-out0
                  (i32.ne
                   (i32.load8_u
                    (local.get $3)
                   )
                   (local.get $1)
                  )
                 )
                 (local.set $1
                  (i32.load
                   (local.get $7)
                  )
                 )
                 (i32.store
                  (local.get $4)
                  (local.tee $3
                   (i32.add
                    (i32.load
                     (local.get $4)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (br_if $while-out0
                  (i32.ne
                   (i32.load8_u
                    (local.get $3)
                   )
                   (local.get $1)
                  )
                 )
                 (local.set $1
                  (i32.load
                   (local.get $7)
                  )
                 )
                 (i32.store
                  (local.get $4)
                  (local.tee $3
                   (i32.add
                    (i32.load
                     (local.get $4)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (br_if $while-out0
                  (i32.ne
                   (i32.load8_u
                    (local.get $3)
                   )
                   (local.get $1)
                  )
                 )
                 (local.set $1
                  (i32.load
                   (local.get $7)
                  )
                 )
                 (i32.store
                  (local.get $4)
                  (local.tee $3
                   (i32.add
                    (i32.load
                     (local.get $4)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (br_if $while-out0
                  (i32.ne
                   (i32.load8_u
                    (local.get $3)
                   )
                   (local.get $1)
                  )
                 )
                 (local.set $1
                  (i32.load
                   (local.get $7)
                  )
                 )
                 (i32.store
                  (local.get $4)
                  (local.tee $3
                   (i32.add
                    (i32.load
                     (local.get $4)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (br_if $while-out0
                  (i32.ne
                   (local.get $1)
                   (i32.load8_u
                    (local.get $3)
                   )
                  )
                 )
                 (local.set $1
                  (i32.load
                   (local.get $7)
                  )
                 )
                 (i32.store
                  (local.get $4)
                  (local.tee $3
                   (i32.add
                    (i32.load
                     (local.get $4)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (br_if $while-out0
                  (i32.ne
                   (i32.load8_u
                    (local.get $3)
                   )
                   (local.get $1)
                  )
                 )
                 (local.set $1
                  (i32.load
                   (local.get $7)
                  )
                 )
                 (i32.store
                  (local.get $4)
                  (local.tee $3
                   (i32.add
                    (i32.load
                     (local.get $4)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (br_if $while-out0
                  (i32.ne
                   (i32.load8_u
                    (local.get $3)
                   )
                   (local.get $1)
                  )
                 )
                 (local.set $1
                  (i32.load
                   (local.get $7)
                  )
                 )
                 (i32.store
                  (local.get $4)
                  (local.tee $3
                   (i32.add
                    (i32.load
                     (local.get $4)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (br_if $while-out0
                  (i32.ne
                   (i32.load8_u
                    (local.get $3)
                   )
                   (local.get $1)
                  )
                 )
                 (br_if $while-in1
                  (i32.lt_u
                   (i32.load
                    (local.get $4)
                   )
                   (i32.load
                    (local.get $10)
                   )
                  )
                 )
                )
               )
               (i32.store
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 96)
                )
                (i32.sub
                 (i32.const 258)
                 (i32.sub
                  (i32.load
                   (local.get $10)
                  )
                  (i32.load
                   (local.get $4)
                  )
                 )
                )
               )
               (if
                (i32.gt_u
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 96)
                  )
                 )
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 116)
                  )
                 )
                )
                (i32.store
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 96)
                 )
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $2)
                   )
                   (i32.const 116)
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
        )
       )
      )
      (local.set $1
       (i32.load
        (local.get $2)
       )
      )
      (if
       (i32.ge_u
        (i32.load
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 96)
         )
        )
        (i32.const 3)
       )
       (block
        (i32.store8
         (local.get $11)
         (i32.sub
          (i32.load
           (i32.add
            (local.get $1)
            (i32.const 96)
           )
          )
          (i32.const 3)
         )
        )
        (i32.store16
         (local.get $8)
         (i32.const 1)
        )
        (i32.store16
         (i32.add
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5796)
           )
          )
          (i32.shl
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5792)
            )
           )
           (i32.const 1)
          )
         )
         (i32.load16_s
          (local.get $8)
         )
        )
        (local.set $3
         (i32.load8_s
          (local.get $11)
         )
        )
        (local.set $13
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 5784)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $14
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5792)
           )
          )
         )
        )
        (i32.store
         (local.get $14)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $13)
         )
         (local.get $3)
        )
        (i32.store16
         (local.get $8)
         (i32.add
          (i32.load16_s
           (local.get $8)
          )
          (i32.const -1)
         )
        )
        (i32.store16
         (local.tee $1
          (i32.add
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.shl
             (i32.load8_u
              (i32.add
               (i32.load8_u
                (local.get $11)
               )
               (i32.const 13680)
              )
             )
             (i32.const 2)
            )
           )
           (i32.const 1176)
          )
         )
         (i32.add
          (i32.load16_s
           (local.get $1)
          )
          (i32.const 1)
         )
        )
        (local.set $3
         (i32.load
          (local.get $2)
         )
        )
        (local.set $1
         (i32.load16_u
          (local.get $8)
         )
        )
        (i32.store16
         (local.tee $1
          (i32.add
           (i32.add
            (local.get $3)
            (i32.const 2440)
           )
           (i32.shl
            (if (result i32)
             (i32.lt_s
              (i32.load16_u
               (local.get $8)
              )
              (i32.const 256)
             )
             (i32.load8_u
              (i32.add
               (local.get $1)
               (i32.const 13168)
              )
             )
             (i32.load8_u
              (i32.add
               (i32.shr_s
                (local.get $1)
                (i32.const 7)
               )
               (i32.const 13424)
              )
             )
            )
            (i32.const 2)
           )
          )
         )
         (i32.add
          (i32.load16_s
           (local.get $1)
          )
          (i32.const 1)
         )
        )
        (i32.store
         (local.get $9)
         (i32.eq
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5792)
           )
          )
          (i32.sub
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5788)
            )
           )
           (i32.const 1)
          )
         )
        )
        (i32.store
         (local.tee $1
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 116)
          )
         )
         (i32.sub
          (i32.load
           (local.get $1)
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 96)
           )
          )
         )
        )
        (i32.store
         (local.tee $1
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
         (i32.add
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 96)
           )
          )
          (i32.load
           (local.get $1)
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 96)
         )
         (i32.const 0)
        )
       )
       (block
        (i32.store8
         (local.get $12)
         (i32.load8_s
          (i32.add
           (i32.load
            (i32.add
             (local.get $1)
             (i32.const 56)
            )
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 108)
            )
           )
          )
         )
        )
        (i32.store16
         (i32.add
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5796)
           )
          )
          (i32.shl
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5792)
            )
           )
           (i32.const 1)
          )
         )
         (i32.const 0)
        )
        (local.set $3
         (i32.load8_s
          (local.get $12)
         )
        )
        (local.set $13
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 5784)
          )
         )
        )
        (local.set $1
         (i32.load
          (local.tee $14
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5792)
           )
          )
         )
        )
        (i32.store
         (local.get $14)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $1)
          (local.get $13)
         )
         (local.get $3)
        )
        (i32.store16
         (local.tee $1
          (i32.add
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 148)
           )
           (i32.shl
            (i32.load8_u
             (local.get $12)
            )
            (i32.const 2)
           )
          )
         )
         (i32.add
          (i32.load16_s
           (local.get $1)
          )
          (i32.const 1)
         )
        )
        (i32.store
         (local.get $9)
         (i32.eq
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5792)
           )
          )
          (i32.sub
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 5788)
            )
           )
           (i32.const 1)
          )
         )
        )
        (i32.store
         (local.tee $1
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 116)
          )
         )
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const -1)
         )
        )
        (i32.store
         (local.tee $1
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 1)
         )
        )
       )
      )
      (if
       (i32.load
        (local.get $9)
       )
       (block
        (call $__tr_flush_block
         (i32.load
          (local.get $2)
         )
         (if (result i32)
          (i32.ge_s
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 92)
            )
           )
           (i32.const 0)
          )
          (i32.add
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 56)
            )
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 92)
            )
           )
          )
          (i32.const 0)
         )
         (i32.sub
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 108)
           )
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 92)
           )
          )
         )
         (i32.const 0)
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 92)
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 108)
          )
         )
        )
        (call $_flush_pending
         (i32.load
          (i32.load
           (local.get $2)
          )
         )
        )
        (br_if $__rjti$1
         (i32.eqz
          (i32.load
           (i32.add
            (i32.load
             (i32.load
              (local.get $2)
             )
            )
            (i32.const 16)
           )
          )
         )
        )
       )
      )
      (br $while-in)
     )
    )
    (i32.store
     (local.get $6)
     (i32.const 0)
    )
    (local.set $0
     (i32.load
      (local.get $6)
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (local.get $0)
    )
   )
   (i32.store
    (local.get $6)
    (i32.const 0)
   )
   (local.set $0
    (i32.load
     (local.get $6)
    )
   )
   (global.set $STACKTOP
    (local.get $5)
   )
   (return
    (local.get $0)
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 5812)
   )
   (i32.const 0)
  )
  (local.set $1
   (i32.load
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (i32.load
     (local.get $0)
    )
    (i32.const 4)
   )
   (block
    (call $__tr_flush_block
     (local.get $1)
     (if (result i32)
      (i32.ge_s
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
       (i32.const 0)
      )
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
      )
      (i32.const 0)
     )
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
     )
     (i32.const 1)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
    )
    (call $_flush_pending
     (i32.load
      (i32.load
       (local.get $2)
      )
     )
    )
    (if
     (i32.load
      (i32.add
       (i32.load
        (i32.load
         (local.get $2)
        )
       )
       (i32.const 16)
      )
     )
     (block
      (i32.store
       (local.get $6)
       (i32.const 3)
      )
      (local.set $0
       (i32.load
        (local.get $6)
       )
      )
      (global.set $STACKTOP
       (local.get $5)
      )
      (return
       (local.get $0)
      )
     )
     (block
      (i32.store
       (local.get $6)
       (i32.const 2)
      )
      (local.set $0
       (i32.load
        (local.get $6)
       )
      )
      (global.set $STACKTOP
       (local.get $5)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (if
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 5792)
    )
   )
   (block
    (call $__tr_flush_block
     (i32.load
      (local.get $2)
     )
     (if (result i32)
      (i32.ge_s
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
       (i32.const 0)
      )
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 92)
        )
       )
      )
      (i32.const 0)
     )
     (i32.sub
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 108)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 92)
       )
      )
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 92)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 108)
      )
     )
    )
    (call $_flush_pending
     (i32.load
      (i32.load
       (local.get $2)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (i32.add
        (i32.load
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 16)
       )
      )
     )
     (block
      (i32.store
       (local.get $6)
       (i32.const 0)
      )
      (local.set $0
       (i32.load
        (local.get $6)
       )
      )
      (global.set $STACKTOP
       (local.get $5)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.const 1)
  )
  (local.set $0
   (i32.load
    (local.get $6)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_inflateResetKeep (; 251 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.tee $1
      (local.get $3)
     )
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (if
   (call $_inflateStateCheck
    (i32.load
     (local.get $2)
    )
   )
   (block
    (i32.store
     (local.get $4)
     (i32.const -2)
    )
    (local.set $0
     (i32.load
      (local.get $4)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (local.get $0)
    )
   )
  )
  (i32.store
   (local.get $1)
   (i32.load
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 28)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 32)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 20)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 8)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 24)
   )
   (i32.const 0)
  )
  (if
   (i32.load
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 12)
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 48)
    )
    (i32.and
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 12)
      )
     )
     (i32.const 1)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 4)
   )
   (i32.const 16180)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 8)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 16)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 24)
   )
   (i32.const 32768)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 36)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 60)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.sub
    (i32.load
     (local.get $1)
    )
    (i32.const -64)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 112)
   )
   (local.tee $0
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 1332)
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 84)
   )
   (local.get $0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 80)
   )
   (local.get $0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 7108)
   )
   (i32.const 1)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 7112)
   )
   (i32.const -1)
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (local.set $0
   (i32.load
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_inflateStateCheck (; 252 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (local.set $3
   (local.get $1)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (if
   (i32.load
    (local.get $4)
   )
   (if
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 32)
     )
    )
    (if
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 36)
      )
     )
     (block
      (i32.store
       (local.get $3)
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 28)
        )
       )
      )
      (if
       (i32.load
        (local.get $3)
       )
       (if
        (i32.eq
         (i32.load
          (i32.load
           (local.get $3)
          )
         )
         (i32.load
          (local.get $4)
         )
        )
        (if
         (i32.ge_u
          (i32.load
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 4)
           )
          )
          (i32.const 16180)
         )
         (if
          (i32.le_u
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 4)
            )
           )
           (i32.const 16211)
          )
          (block
           (i32.store
            (local.get $2)
            (i32.const 0)
           )
           (local.set $0
            (i32.load
             (local.get $2)
            )
           )
           (global.set $STACKTOP
            (local.get $1)
           )
           (return
            (local.get $0)
           )
          )
         )
        )
       )
      )
      (i32.store
       (local.get $2)
       (i32.const 1)
      )
      (local.set $0
       (i32.load
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $1)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $2)
   (i32.const 1)
  )
  (local.set $0
   (i32.load
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $_inflateReset (; 253 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (local.set $3
   (local.get $1)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (if (result i32)
   (call $_inflateStateCheck
    (i32.load
     (local.get $4)
    )
   )
   (block (result i32)
    (i32.store
     (local.get $2)
     (i32.const -2)
    )
    (local.set $0
     (i32.load
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $1)
    )
    (local.get $0)
   )
   (block (result i32)
    (i32.store
     (local.get $3)
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 28)
      )
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 44)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 48)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 52)
     )
     (i32.const 0)
    )
    (i32.store
     (local.get $2)
     (call $_inflateResetKeep
      (i32.load
       (local.get $4)
      )
     )
    )
    (local.set $0
     (i32.load
      (local.get $2)
     )
    )
    (global.set $STACKTOP
     (local.get $1)
    )
    (local.get $0)
   )
  )
 )
 (func $_inflateReset2 (; 254 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 4)
   )
  )
  (local.set $3
   (local.get $2)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $2)
     (i32.const 12)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
   (local.get $1)
  )
  (if
   (call $_inflateStateCheck
    (i32.load
     (local.get $5)
    )
   )
   (block
    (i32.store
     (local.get $4)
     (i32.const -2)
    )
    (local.set $0
     (i32.load
      (local.get $4)
     )
    )
    (global.set $STACKTOP
     (local.get $2)
    )
    (return
     (local.get $0)
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.load
    (i32.add
     (i32.load
      (local.get $5)
     )
     (i32.const 28)
    )
   )
  )
  (if
   (i32.lt_s
    (i32.load
     (local.get $0)
    )
    (i32.const 0)
   )
   (block
    (i32.store
     (local.get $6)
     (i32.const 0)
    )
    (i32.store
     (local.get $0)
     (i32.sub
      (i32.const 0)
      (i32.load
       (local.get $0)
      )
     )
    )
   )
   (block
    (i32.store
     (local.get $6)
     (i32.add
      (i32.shr_s
       (i32.load
        (local.get $0)
       )
       (i32.const 4)
      )
      (i32.const 5)
     )
    )
    (if
     (i32.lt_s
      (i32.load
       (local.get $0)
      )
      (i32.const 48)
     )
     (i32.store
      (local.get $0)
      (i32.and
       (i32.load
        (local.get $0)
       )
       (i32.const 15)
      )
     )
    )
   )
  )
  (if
   (i32.load
    (local.get $0)
   )
   (if
    (i32.or
     (i32.lt_s
      (i32.load
       (local.get $0)
      )
      (i32.const 8)
     )
     (i32.gt_s
      (i32.load
       (local.get $0)
      )
      (i32.const 15)
     )
    )
    (block
     (i32.store
      (local.get $4)
      (i32.const -2)
     )
     (local.set $0
      (i32.load
       (local.get $4)
      )
     )
     (global.set $STACKTOP
      (local.get $2)
     )
     (return
      (local.get $0)
     )
    )
   )
  )
  (if
   (i32.load
    (i32.add
     (i32.load
      (local.get $3)
     )
     (i32.const 56)
    )
   )
   (if
    (i32.ne
     (i32.load
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 40)
      )
     )
     (i32.load
      (local.get $0)
     )
    )
    (block
     (local.set $1
      (i32.load
       (i32.add
        (i32.load
         (local.get $5)
        )
        (i32.const 36)
       )
      )
     )
     (call_indirect (type $FUNCSIG$vii)
      (i32.load
       (i32.add
        (i32.load
         (local.get $5)
        )
        (i32.const 40)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 56)
       )
      )
      (i32.add
       (i32.and
        (local.get $1)
        (i32.const 15)
       )
       (i32.const 42)
      )
     )
     (i32.store
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 56)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $3)
    )
    (i32.const 12)
   )
   (i32.load
    (local.get $6)
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $3)
    )
    (i32.const 40)
   )
   (i32.load
    (local.get $0)
   )
  )
  (i32.store
   (local.get $4)
   (call $_inflateReset
    (i32.load
     (local.get $5)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $0)
 )
 (func $_inflateInit2_ (; 255 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 24)
   )
  )
  (local.set $7
   (i32.add
    (local.get $4)
    (i32.const 4)
   )
  )
  (local.set $6
   (local.get $4)
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $4)
     (i32.const 20)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $4)
     (i32.const 16)
    )
   )
   (i32.const 15)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $4)
     (i32.const 12)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $4)
     (i32.const 8)
    )
   )
   (local.get $2)
  )
  (if
   (i32.load
    (local.get $0)
   )
   (if
    (i32.eqz
     (i32.or
      (i32.ne
       (i32.load8_s
        (i32.load
         (local.get $0)
        )
       )
       (i32.load8_s
        (i32.const 23921)
       )
      )
      (i32.ne
       (i32.load
        (local.get $1)
       )
       (i32.const 56)
      )
     )
    )
    (block
     (if
      (i32.eqz
       (i32.load
        (local.get $3)
       )
      )
      (block
       (i32.store
        (local.get $5)
        (i32.const -2)
       )
       (local.set $0
        (i32.load
         (local.get $5)
        )
       )
       (global.set $STACKTOP
        (local.get $4)
       )
       (return
        (local.get $0)
       )
      )
     )
     (i32.store offset=24
      (i32.load
       (local.get $3)
      )
      (i32.const 0)
     )
     (if
      (i32.eqz
       (i32.load offset=32
        (i32.load
         (local.get $3)
        )
       )
      )
      (block
       (i32.store offset=32
        (i32.load
         (local.get $3)
        )
        (i32.const 9)
       )
       (i32.store offset=40
        (i32.load
         (local.get $3)
        )
        (i32.const 0)
       )
      )
     )
     (if
      (i32.eqz
       (i32.load offset=36
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store offset=36
       (i32.load
        (local.get $3)
       )
       (i32.const 8)
      )
     )
     (i32.store
      (local.get $6)
      (call_indirect (type $FUNCSIG$iiii)
       (i32.load offset=40
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 1)
       (i32.const 7120)
       (i32.add
        (i32.and
         (i32.load offset=32
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 15)
        )
        (i32.const 12)
       )
      )
     )
     (if
      (i32.eqz
       (i32.load
        (local.get $6)
       )
      )
      (block
       (i32.store
        (local.get $5)
        (i32.const -4)
       )
       (local.set $0
        (i32.load
         (local.get $5)
        )
       )
       (global.set $STACKTOP
        (local.get $4)
       )
       (return
        (local.get $0)
       )
      )
     )
     (i32.store offset=28
      (i32.load
       (local.get $3)
      )
      (i32.load
       (local.get $6)
      )
     )
     (i32.store
      (i32.load
       (local.get $6)
      )
      (i32.load
       (local.get $3)
      )
     )
     (i32.store offset=56
      (i32.load
       (local.get $6)
      )
      (i32.const 0)
     )
     (i32.store offset=4
      (i32.load
       (local.get $6)
      )
      (i32.const 16180)
     )
     (i32.store
      (local.get $7)
      (call $_inflateReset2
       (i32.load
        (local.get $3)
       )
       (i32.load
        (local.get $8)
       )
      )
     )
     (if
      (i32.load
       (local.get $7)
      )
      (block
       (call_indirect (type $FUNCSIG$vii)
        (i32.load offset=40
         (i32.load
          (local.get $3)
         )
        )
        (i32.load
         (local.get $6)
        )
        (i32.add
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $3)
           )
          )
          (i32.const 15)
         )
         (i32.const 42)
        )
       )
       (i32.store offset=28
        (i32.load
         (local.get $3)
        )
        (i32.const 0)
       )
      )
     )
     (i32.store
      (local.get $5)
      (i32.load
       (local.get $7)
      )
     )
     (local.set $0
      (i32.load
       (local.get $5)
      )
     )
     (global.set $STACKTOP
      (local.get $4)
     )
     (return
      (local.get $0)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.const -6)
  )
  (local.set $0
   (i32.load
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $_inflateInit_ (; 256 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 8)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.get $3)
   (local.get $2)
  )
  (local.set $0
   (call $_inflateInit2_
    (i32.load
     (local.get $4)
    )
    (i32.load
     (local.get $0)
    )
    (i32.load
     (local.get $3)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_inflate (; 257 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (local.set $18
   (i32.add
    (local.get $10)
    (i32.const 60)
   )
  )
  (local.set $1
   (i32.add
    (local.get $10)
    (i32.const 48)
   )
  )
  (local.set $5
   (i32.add
    (local.get $10)
    (i32.const 44)
   )
  )
  (local.set $16
   (i32.add
    (local.get $10)
    (i32.const 40)
   )
  )
  (local.set $4
   (i32.add
    (local.get $10)
    (i32.const 36)
   )
  )
  (local.set $11
   (i32.add
    (local.get $10)
    (i32.const 32)
   )
  )
  (local.set $2
   (i32.add
    (local.get $10)
    (i32.const 28)
   )
  )
  (local.set $3
   (i32.add
    (local.get $10)
    (i32.const 24)
   )
  )
  (local.set $22
   (i32.add
    (local.get $10)
    (i32.const 20)
   )
  )
  (local.set $12
   (i32.add
    (local.get $10)
    (i32.const 16)
   )
  )
  (local.set $7
   (i32.add
    (local.get $10)
    (i32.const 12)
   )
  )
  (local.set $23
   (i32.add
    (local.get $10)
    (i32.const 8)
   )
  )
  (local.set $8
   (i32.add
    (local.get $10)
    (i32.const 68)
   )
  )
  (local.set $14
   (i32.sub
    (local.get $10)
    (i32.const -64)
   )
  )
  (local.set $13
   (i32.add
    (local.get $10)
    (i32.const 4)
   )
  )
  (local.set $19
   (local.get $10)
  )
  (local.set $15
   (i32.add
    (local.get $10)
    (i32.const 72)
   )
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $10)
     (i32.const 56)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $21
    (i32.add
     (local.get $10)
     (i32.const 52)
    )
   )
   (i32.const 1)
  )
  (if
   (i32.eqz
    (call $_inflateStateCheck
     (i32.load
      (local.get $6)
     )
    )
   )
   (if
    (i32.load offset=12
     (i32.load
      (local.get $6)
     )
    )
    (block $do-once
     (if
      (i32.eqz
       (i32.load
        (i32.load
         (local.get $6)
        )
       )
      )
      (br_if $do-once
       (i32.load offset=4
        (i32.load
         (local.get $6)
        )
       )
      )
     )
     (i32.store
      (local.get $1)
      (i32.load offset=28
       (i32.load
        (local.get $6)
       )
      )
     )
     (if
      (i32.eq
       (i32.load offset=4
        (i32.load
         (local.get $1)
        )
       )
       (i32.const 16191)
      )
      (i32.store offset=4
       (i32.load
        (local.get $1)
       )
       (i32.const 16192)
      )
     )
     (i32.store
      (local.get $16)
      (i32.load offset=12
       (i32.load
        (local.get $6)
       )
      )
     )
     (i32.store
      (local.get $11)
      (i32.load offset=16
       (i32.load
        (local.get $6)
       )
      )
     )
     (i32.store
      (local.get $5)
      (i32.load
       (i32.load
        (local.get $6)
       )
      )
     )
     (i32.store
      (local.get $4)
      (i32.load offset=4
       (i32.load
        (local.get $6)
       )
      )
     )
     (i32.store
      (local.get $2)
      (i32.load offset=60
       (i32.load
        (local.get $1)
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.load
       (i32.sub
        (i32.load
         (local.get $1)
        )
        (i32.const -64)
       )
      )
     )
     (i32.store
      (local.get $22)
      (i32.load
       (local.get $4)
      )
     )
     (i32.store
      (local.get $12)
      (i32.load
       (local.get $11)
      )
     )
     (i32.store
      (local.get $19)
      (i32.const 0)
     )
     (block $__rjto$31
      (block $__rjti$31
       (block $__rjti$30
        (block $__rjti$29
         (block $__rjti$28
          (block $__rjti$27
           (block $__rjti$26
            (block $__rjti$24
             (block $__rjti$23
              (loop $label$continue$L10
               (block $label$break$L10
                (block $__rjti$22
                 (block $__rjti$21
                  (block $__rjti$20
                   (block $__rjti$19
                    (block $__rjti$18
                     (block $__rjti$17
                      (block $__rjti$16
                       (block $__rjti$15
                        (block $__rjti$14
                         (block $__rjti$13
                          (block $__rjti$12
                           (block $__rjti$11
                            (block $__rjti$10
                             (block $__rjti$9
                              (block $__rjti$8
                               (block $__rjti$7
                                (block $__rjti$6
                                 (block $__rjti$5
                                  (block $__rjti$4
                                   (block $__rjti$3
                                    (block $__rjti$2
                                     (block $switch-case39
                                      (block $switch-case36
                                       (block $switch-case27
                                        (block $switch-case22
                                         (block $switch-case16
                                          (block $switch-case6
                                           (block $switch-case3
                                            (br_table $switch-case3 $switch-case6 $__rjti$2 $__rjti$7 $__rjti$11 $__rjti$14 $__rjti$16 $__rjti$18 $__rjti$20 $switch-case16 $__rjti$3 $__rjti$8 $__rjti$12 $switch-case22 $__rjti$4 $__rjti$9 $switch-case27 $__rjti$5 $__rjti$10 $__rjti$13 $__rjti$15 $__rjti$17 $__rjti$19 $__rjti$21 $__rjti$22 $switch-case36 $switch-case39 $__rjti$6 $__rjti$31 $__rjti$27 $__rjti$28 $__rjti$29
                                             (i32.sub
                                              (i32.load offset=4
                                               (i32.load
                                                (local.get $1)
                                               )
                                              )
                                              (i32.const 16180)
                                             )
                                            )
                                           )
                                           (if
                                            (i32.eqz
                                             (i32.load offset=12
                                              (i32.load
                                               (local.get $1)
                                              )
                                             )
                                            )
                                            (block
                                             (i32.store offset=4
                                              (i32.load
                                               (local.get $1)
                                              )
                                              (i32.const 16192)
                                             )
                                             (br $label$continue$L10)
                                            )
                                           )
                                           (loop $while-in
                                            (if
                                             (i32.lt_u
                                              (i32.load
                                               (local.get $3)
                                              )
                                              (i32.const 16)
                                             )
                                             (block
                                              (br_if $label$break$L10
                                               (i32.eqz
                                                (i32.load
                                                 (local.get $4)
                                                )
                                               )
                                              )
                                              (i32.store
                                               (local.get $4)
                                               (i32.add
                                                (i32.load
                                                 (local.get $4)
                                                )
                                                (i32.const -1)
                                               )
                                              )
                                              (i32.store
                                               (local.get $5)
                                               (i32.add
                                                (local.tee $0
                                                 (i32.load
                                                  (local.get $5)
                                                 )
                                                )
                                                (i32.const 1)
                                               )
                                              )
                                              (i32.store
                                               (local.get $2)
                                               (i32.add
                                                (i32.load
                                                 (local.get $2)
                                                )
                                                (i32.shl
                                                 (i32.load8_u
                                                  (local.get $0)
                                                 )
                                                 (i32.load
                                                  (local.get $3)
                                                 )
                                                )
                                               )
                                              )
                                              (i32.store
                                               (local.get $3)
                                               (i32.add
                                                (i32.load
                                                 (local.get $3)
                                                )
                                                (i32.const 8)
                                               )
                                              )
                                              (br $while-in)
                                             )
                                            )
                                           )
                                           (local.set $0
                                            (i32.load
                                             (local.get $1)
                                            )
                                           )
                                           (if
                                            (i32.and
                                             (i32.eq
                                              (i32.load
                                               (local.get $2)
                                              )
                                              (i32.const 35615)
                                             )
                                             (i32.ne
                                              (i32.and
                                               (i32.load offset=12
                                                (i32.load
                                                 (local.get $1)
                                                )
                                               )
                                               (i32.const 2)
                                              )
                                              (i32.const 0)
                                             )
                                            )
                                            (block
                                             (if
                                              (i32.eqz
                                               (i32.load offset=40
                                                (local.get $0)
                                               )
                                              )
                                              (i32.store offset=40
                                               (i32.load
                                                (local.get $1)
                                               )
                                               (i32.const 15)
                                              )
                                             )
                                             (local.set $0
                                              (call $_crc32
                                               (i32.const 0)
                                               (i32.const 0)
                                               (i32.const 0)
                                              )
                                             )
                                             (i32.store offset=28
                                              (i32.load
                                               (local.get $1)
                                              )
                                              (local.get $0)
                                             )
                                             (i32.store8
                                              (local.get $15)
                                              (i32.load
                                               (local.get $2)
                                              )
                                             )
                                             (i32.store8 offset=1
                                              (local.get $15)
                                              (i32.shr_u
                                               (i32.load
                                                (local.get $2)
                                               )
                                               (i32.const 8)
                                              )
                                             )
                                             (local.set $0
                                              (call $_crc32
                                               (i32.load offset=28
                                                (i32.load
                                                 (local.get $1)
                                                )
                                               )
                                               (local.get $15)
                                               (i32.const 2)
                                              )
                                             )
                                             (i32.store offset=28
                                              (i32.load
                                               (local.get $1)
                                              )
                                              (local.get $0)
                                             )
                                             (i32.store
                                              (local.get $2)
                                              (i32.const 0)
                                             )
                                             (i32.store
                                              (local.get $3)
                                              (i32.const 0)
                                             )
                                             (i32.store offset=4
                                              (i32.load
                                               (local.get $1)
                                              )
                                              (i32.const 16181)
                                             )
                                             (br $label$continue$L10)
                                            )
                                           )
                                           (i32.store offset=20
                                            (local.get $0)
                                            (i32.const 0)
                                           )
                                           (if
                                            (i32.load offset=36
                                             (i32.load
                                              (local.get $1)
                                             )
                                            )
                                            (i32.store offset=48
                                             (i32.load offset=36
                                              (i32.load
                                               (local.get $1)
                                              )
                                             )
                                             (i32.const -1)
                                            )
                                           )
                                           (if
                                            (i32.and
                                             (i32.load offset=12
                                              (i32.load
                                               (local.get $1)
                                              )
                                             )
                                             (i32.const 1)
                                            )
                                            (if
                                             (i32.eqz
                                              (i32.rem_u
                                               (i32.add
                                                (i32.shl
                                                 (i32.and
                                                  (i32.load
                                                   (local.get $2)
                                                  )
                                                  (i32.const 255)
                                                 )
                                                 (i32.const 8)
                                                )
                                                (i32.shr_u
                                                 (i32.load
                                                  (local.get $2)
                                                 )
                                                 (i32.const 8)
                                                )
                                               )
                                               (i32.const 31)
                                              )
                                             )
                                             (block
                                              (if
                                               (i32.ne
                                                (i32.and
                                                 (i32.load
                                                  (local.get $2)
                                                 )
                                                 (i32.const 15)
                                                )
                                                (i32.const 8)
                                               )
                                               (block
                                                (i32.store offset=24
                                                 (i32.load
                                                  (local.get $6)
                                                 )
                                                 (i32.const 23951)
                                                )
                                                (i32.store offset=4
                                                 (i32.load
                                                  (local.get $1)
                                                 )
                                                 (i32.const 16209)
                                                )
                                                (br $label$continue$L10)
                                               )
                                              )
                                              (i32.store
                                               (local.get $2)
                                               (i32.shr_u
                                                (i32.load
                                                 (local.get $2)
                                                )
                                                (i32.const 4)
                                               )
                                              )
                                              (i32.store
                                               (local.get $3)
                                               (i32.sub
                                                (i32.load
                                                 (local.get $3)
                                                )
                                                (i32.const 4)
                                               )
                                              )
                                              (i32.store
                                               (local.get $13)
                                               (i32.add
                                                (i32.and
                                                 (i32.load
                                                  (local.get $2)
                                                 )
                                                 (i32.const 15)
                                                )
                                                (i32.const 8)
                                               )
                                              )
                                              (if
                                               (i32.eqz
                                                (i32.load offset=40
                                                 (i32.load
                                                  (local.get $1)
                                                 )
                                                )
                                               )
                                               (i32.store offset=40
                                                (i32.load
                                                 (local.get $1)
                                                )
                                                (i32.load
                                                 (local.get $13)
                                                )
                                               )
                                              )
                                              (if
                                               (i32.le_u
                                                (i32.load
                                                 (local.get $13)
                                                )
                                                (i32.const 15)
                                               )
                                               (if
                                                (i32.le_u
                                                 (i32.load
                                                  (local.get $13)
                                                 )
                                                 (i32.load offset=40
                                                  (i32.load
                                                   (local.get $1)
                                                  )
                                                 )
                                                )
                                                (block
                                                 (i32.store offset=24
                                                  (i32.load
                                                   (local.get $1)
                                                  )
                                                  (i32.shl
                                                   (i32.const 1)
                                                   (i32.load
                                                    (local.get $13)
                                                   )
                                                  )
                                                 )
                                                 (local.set $0
                                                  (call $_adler32
                                                   (i32.const 0)
                                                   (i32.const 0)
                                                   (i32.const 0)
                                                  )
                                                 )
                                                 (i32.store offset=28
                                                  (i32.load
                                                   (local.get $1)
                                                  )
                                                  (local.get $0)
                                                 )
                                                 (i32.store offset=48
                                                  (i32.load
                                                   (local.get $6)
                                                  )
                                                  (local.get $0)
                                                 )
                                                 (i32.store offset=4
                                                  (i32.load
                                                   (local.get $1)
                                                  )
                                                  (select
                                                   (i32.const 16189)
                                                   (i32.const 16191)
                                                   (i32.and
                                                    (i32.load
                                                     (local.get $2)
                                                    )
                                                    (i32.const 512)
                                                   )
                                                  )
                                                 )
                                                 (i32.store
                                                  (local.get $2)
                                                  (i32.const 0)
                                                 )
                                                 (i32.store
                                                  (local.get $3)
                                                  (i32.const 0)
                                                 )
                                                 (br $label$continue$L10)
                                                )
                                               )
                                              )
                                              (i32.store offset=24
                                               (i32.load
                                                (local.get $6)
                                               )
                                               (i32.const 23978)
                                              )
                                              (i32.store offset=4
                                               (i32.load
                                                (local.get $1)
                                               )
                                               (i32.const 16209)
                                              )
                                              (br $label$continue$L10)
                                             )
                                            )
                                           )
                                           (i32.store offset=24
                                            (i32.load
                                             (local.get $6)
                                            )
                                            (i32.const 23928)
                                           )
                                           (i32.store offset=4
                                            (i32.load
                                             (local.get $1)
                                            )
                                            (i32.const 16209)
                                           )
                                           (br $label$continue$L10)
                                          )
                                          (loop $while-in5
                                           (if
                                            (i32.lt_u
                                             (i32.load
                                              (local.get $3)
                                             )
                                             (i32.const 16)
                                            )
                                            (block
                                             (br_if $label$break$L10
                                              (i32.eqz
                                               (i32.load
                                                (local.get $4)
                                               )
                                              )
                                             )
                                             (i32.store
                                              (local.get $4)
                                              (i32.add
                                               (i32.load
                                                (local.get $4)
                                               )
                                               (i32.const -1)
                                              )
                                             )
                                             (i32.store
                                              (local.get $5)
                                              (i32.add
                                               (local.tee $0
                                                (i32.load
                                                 (local.get $5)
                                                )
                                               )
                                               (i32.const 1)
                                              )
                                             )
                                             (i32.store
                                              (local.get $2)
                                              (i32.add
                                               (i32.load
                                                (local.get $2)
                                               )
                                               (i32.shl
                                                (i32.load8_u
                                                 (local.get $0)
                                                )
                                                (i32.load
                                                 (local.get $3)
                                                )
                                               )
                                              )
                                             )
                                             (i32.store
                                              (local.get $3)
                                              (i32.add
                                               (i32.load
                                                (local.get $3)
                                               )
                                               (i32.const 8)
                                              )
                                             )
                                             (br $while-in5)
                                            )
                                           )
                                          )
                                          (i32.store offset=20
                                           (i32.load
                                            (local.get $1)
                                           )
                                           (i32.load
                                            (local.get $2)
                                           )
                                          )
                                          (if
                                           (i32.ne
                                            (i32.and
                                             (i32.load offset=20
                                              (i32.load
                                               (local.get $1)
                                              )
                                             )
                                             (i32.const 255)
                                            )
                                            (i32.const 8)
                                           )
                                           (block
                                            (i32.store offset=24
                                             (i32.load
                                              (local.get $6)
                                             )
                                             (i32.const 23951)
                                            )
                                            (i32.store offset=4
                                             (i32.load
                                              (local.get $1)
                                             )
                                             (i32.const 16209)
                                            )
                                            (br $label$continue$L10)
                                           )
                                          )
                                          (if
                                           (i32.and
                                            (i32.load offset=20
                                             (i32.load
                                              (local.get $1)
                                             )
                                            )
                                            (i32.const 57344)
                                           )
                                           (block
                                            (i32.store offset=24
                                             (i32.load
                                              (local.get $6)
                                             )
                                             (i32.const 23998)
                                            )
                                            (i32.store offset=4
                                             (i32.load
                                              (local.get $1)
                                             )
                                             (i32.const 16209)
                                            )
                                            (br $label$continue$L10)
                                           )
                                          )
                                          (if
                                           (i32.load offset=36
                                            (i32.load
                                             (local.get $1)
                                            )
                                           )
                                           (i32.store
                                            (i32.load offset=36
                                             (i32.load
                                              (local.get $1)
                                             )
                                            )
                                            (i32.and
                                             (i32.shr_u
                                              (i32.load
                                               (local.get $2)
                                              )
                                              (i32.const 8)
                                             )
                                             (i32.const 1)
                                            )
                                           )
                                          )
                                          (if
                                           (i32.and
                                            (i32.load offset=20
                                             (i32.load
                                              (local.get $1)
                                             )
                                            )
                                            (i32.const 512)
                                           )
                                           (if
                                            (i32.and
                                             (i32.load offset=12
                                              (i32.load
                                               (local.get $1)
                                              )
                                             )
                                             (i32.const 4)
                                            )
                                            (block
                                             (i32.store8
                                              (local.get $15)
                                              (i32.load
                                               (local.get $2)
                                              )
                                             )
                                             (i32.store8 offset=1
                                              (local.get $15)
                                              (i32.shr_u
                                               (i32.load
                                                (local.get $2)
                                               )
                                               (i32.const 8)
                                              )
                                             )
                                             (local.set $0
                                              (call $_crc32
                                               (i32.load offset=28
                                                (i32.load
                                                 (local.get $1)
                                                )
                                               )
                                               (local.get $15)
                                               (i32.const 2)
                                              )
                                             )
                                             (i32.store offset=28
                                              (i32.load
                                               (local.get $1)
                                              )
                                              (local.get $0)
                                             )
                                            )
                                           )
                                          )
                                          (i32.store
                                           (local.get $2)
                                           (i32.const 0)
                                          )
                                          (i32.store
                                           (local.get $3)
                                           (i32.const 0)
                                          )
                                          (i32.store offset=4
                                           (i32.load
                                            (local.get $1)
                                           )
                                           (i32.const 16182)
                                          )
                                          (br $__rjti$2)
                                         )
                                         (loop $while-in15
                                          (if
                                           (i32.lt_u
                                            (i32.load
                                             (local.get $3)
                                            )
                                            (i32.const 32)
                                           )
                                           (block
                                            (br_if $label$break$L10
                                             (i32.eqz
                                              (i32.load
                                               (local.get $4)
                                              )
                                             )
                                            )
                                            (i32.store
                                             (local.get $4)
                                             (i32.add
                                              (i32.load
                                               (local.get $4)
                                              )
                                              (i32.const -1)
                                             )
                                            )
                                            (i32.store
                                             (local.get $5)
                                             (i32.add
                                              (local.tee $0
                                               (i32.load
                                                (local.get $5)
                                               )
                                              )
                                              (i32.const 1)
                                             )
                                            )
                                            (i32.store
                                             (local.get $2)
                                             (i32.add
                                              (i32.load
                                               (local.get $2)
                                              )
                                              (i32.shl
                                               (i32.load8_u
                                                (local.get $0)
                                               )
                                               (i32.load
                                                (local.get $3)
                                               )
                                              )
                                             )
                                            )
                                            (i32.store
                                             (local.get $3)
                                             (i32.add
                                              (i32.load
                                               (local.get $3)
                                              )
                                              (i32.const 8)
                                             )
                                            )
                                            (br $while-in15)
                                           )
                                          )
                                         )
                                         (i32.store offset=28
                                          (i32.load
                                           (local.get $1)
                                          )
                                          (local.tee $0
                                           (i32.add
                                            (i32.add
                                             (i32.add
                                              (i32.and
                                               (i32.shr_u
                                                (i32.load
                                                 (local.get $2)
                                                )
                                                (i32.const 8)
                                               )
                                               (i32.const 65280)
                                              )
                                              (i32.shr_u
                                               (i32.load
                                                (local.get $2)
                                               )
                                               (i32.const 24)
                                              )
                                             )
                                             (i32.shl
                                              (i32.and
                                               (i32.load
                                                (local.get $2)
                                               )
                                               (i32.const 65280)
                                              )
                                              (i32.const 8)
                                             )
                                            )
                                            (i32.shl
                                             (i32.and
                                              (i32.load
                                               (local.get $2)
                                              )
                                              (i32.const 255)
                                             )
                                             (i32.const 24)
                                            )
                                           )
                                          )
                                         )
                                         (i32.store offset=48
                                          (i32.load
                                           (local.get $6)
                                          )
                                          (local.get $0)
                                         )
                                         (i32.store
                                          (local.get $2)
                                          (i32.const 0)
                                         )
                                         (i32.store
                                          (local.get $3)
                                          (i32.const 0)
                                         )
                                         (i32.store offset=4
                                          (i32.load
                                           (local.get $1)
                                          )
                                          (i32.const 16190)
                                         )
                                         (br $__rjti$3)
                                        )
                                        (i32.store
                                         (local.get $2)
                                         (i32.shr_u
                                          (i32.load
                                           (local.get $2)
                                          )
                                          (i32.and
                                           (i32.load
                                            (local.get $3)
                                           )
                                           (i32.const 7)
                                          )
                                         )
                                        )
                                        (i32.store
                                         (local.get $3)
                                         (i32.sub
                                          (i32.load
                                           (local.get $3)
                                          )
                                          (i32.and
                                           (i32.load
                                            (local.get $3)
                                           )
                                           (i32.const 7)
                                          )
                                         )
                                        )
                                        (loop $while-in21
                                         (if
                                          (i32.lt_u
                                           (i32.load
                                            (local.get $3)
                                           )
                                           (i32.const 32)
                                          )
                                          (block
                                           (br_if $label$break$L10
                                            (i32.eqz
                                             (i32.load
                                              (local.get $4)
                                             )
                                            )
                                           )
                                           (i32.store
                                            (local.get $4)
                                            (i32.add
                                             (i32.load
                                              (local.get $4)
                                             )
                                             (i32.const -1)
                                            )
                                           )
                                           (i32.store
                                            (local.get $5)
                                            (i32.add
                                             (local.tee $0
                                              (i32.load
                                               (local.get $5)
                                              )
                                             )
                                             (i32.const 1)
                                            )
                                           )
                                           (i32.store
                                            (local.get $2)
                                            (i32.add
                                             (i32.load
                                              (local.get $2)
                                             )
                                             (i32.shl
                                              (i32.load8_u
                                               (local.get $0)
                                              )
                                              (i32.load
                                               (local.get $3)
                                              )
                                             )
                                            )
                                           )
                                           (i32.store
                                            (local.get $3)
                                            (i32.add
                                             (i32.load
                                              (local.get $3)
                                             )
                                             (i32.const 8)
                                            )
                                           )
                                           (br $while-in21)
                                          )
                                         )
                                        )
                                        (if
                                         (i32.ne
                                          (i32.and
                                           (i32.load
                                            (local.get $2)
                                           )
                                           (i32.const 65535)
                                          )
                                          (i32.xor
                                           (i32.shr_u
                                            (i32.load
                                             (local.get $2)
                                            )
                                            (i32.const 16)
                                           )
                                           (i32.const 65535)
                                          )
                                         )
                                         (block
                                          (i32.store offset=24
                                           (i32.load
                                            (local.get $6)
                                           )
                                           (i32.const 24062)
                                          )
                                          (i32.store offset=4
                                           (i32.load
                                            (local.get $1)
                                           )
                                           (i32.const 16209)
                                          )
                                          (br $label$continue$L10)
                                         )
                                         (block
                                          (i32.store offset=68
                                           (i32.load
                                            (local.get $1)
                                           )
                                           (i32.and
                                            (i32.load
                                             (local.get $2)
                                            )
                                            (i32.const 65535)
                                           )
                                          )
                                          (i32.store
                                           (local.get $2)
                                           (i32.const 0)
                                          )
                                          (i32.store
                                           (local.get $3)
                                           (i32.const 0)
                                          )
                                          (i32.store offset=4
                                           (i32.load
                                            (local.get $1)
                                           )
                                           (i32.const 16194)
                                          )
                                          (br_if $label$break$L10
                                           (i32.eq
                                            (i32.load
                                             (local.get $21)
                                            )
                                            (i32.const 6)
                                           )
                                          )
                                          (br $__rjti$4)
                                         )
                                        )
                                       )
                                       (loop $while-in26
                                        (if
                                         (i32.lt_u
                                          (i32.load
                                           (local.get $3)
                                          )
                                          (i32.const 14)
                                         )
                                         (block
                                          (br_if $label$break$L10
                                           (i32.eqz
                                            (i32.load
                                             (local.get $4)
                                            )
                                           )
                                          )
                                          (i32.store
                                           (local.get $4)
                                           (i32.add
                                            (i32.load
                                             (local.get $4)
                                            )
                                            (i32.const -1)
                                           )
                                          )
                                          (i32.store
                                           (local.get $5)
                                           (i32.add
                                            (local.tee $0
                                             (i32.load
                                              (local.get $5)
                                             )
                                            )
                                            (i32.const 1)
                                           )
                                          )
                                          (i32.store
                                           (local.get $2)
                                           (i32.add
                                            (i32.load
                                             (local.get $2)
                                            )
                                            (i32.shl
                                             (i32.load8_u
                                              (local.get $0)
                                             )
                                             (i32.load
                                              (local.get $3)
                                             )
                                            )
                                           )
                                          )
                                          (i32.store
                                           (local.get $3)
                                           (i32.add
                                            (i32.load
                                             (local.get $3)
                                            )
                                            (i32.const 8)
                                           )
                                          )
                                          (br $while-in26)
                                         )
                                        )
                                       )
                                       (i32.store offset=100
                                        (i32.load
                                         (local.get $1)
                                        )
                                        (i32.add
                                         (i32.and
                                          (i32.load
                                           (local.get $2)
                                          )
                                          (i32.const 31)
                                         )
                                         (i32.const 257)
                                        )
                                       )
                                       (i32.store
                                        (local.get $2)
                                        (i32.shr_u
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.const 5)
                                        )
                                       )
                                       (i32.store
                                        (local.get $3)
                                        (i32.sub
                                         (i32.load
                                          (local.get $3)
                                         )
                                         (i32.const 5)
                                        )
                                       )
                                       (i32.store offset=104
                                        (i32.load
                                         (local.get $1)
                                        )
                                        (i32.add
                                         (i32.and
                                          (i32.load
                                           (local.get $2)
                                          )
                                          (i32.const 31)
                                         )
                                         (i32.const 1)
                                        )
                                       )
                                       (i32.store
                                        (local.get $2)
                                        (i32.shr_u
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.const 5)
                                        )
                                       )
                                       (i32.store
                                        (local.get $3)
                                        (i32.sub
                                         (i32.load
                                          (local.get $3)
                                         )
                                         (i32.const 5)
                                        )
                                       )
                                       (i32.store offset=96
                                        (i32.load
                                         (local.get $1)
                                        )
                                        (i32.add
                                         (i32.and
                                          (i32.load
                                           (local.get $2)
                                          )
                                          (i32.const 15)
                                         )
                                         (i32.const 4)
                                        )
                                       )
                                       (i32.store
                                        (local.get $2)
                                        (i32.shr_u
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.const 4)
                                        )
                                       )
                                       (i32.store
                                        (local.get $3)
                                        (i32.sub
                                         (i32.load
                                          (local.get $3)
                                         )
                                         (i32.const 4)
                                        )
                                       )
                                       (if
                                        (i32.le_u
                                         (i32.load offset=100
                                          (i32.load
                                           (local.get $1)
                                          )
                                         )
                                         (i32.const 286)
                                        )
                                        (if
                                         (i32.le_u
                                          (i32.load offset=104
                                           (i32.load
                                            (local.get $1)
                                           )
                                          )
                                          (i32.const 30)
                                         )
                                         (block
                                          (i32.store offset=108
                                           (i32.load
                                            (local.get $1)
                                           )
                                           (i32.const 0)
                                          )
                                          (i32.store offset=4
                                           (i32.load
                                            (local.get $1)
                                           )
                                           (i32.const 16197)
                                          )
                                          (br $__rjti$5)
                                         )
                                        )
                                       )
                                       (i32.store offset=24
                                        (i32.load
                                         (local.get $6)
                                        )
                                        (i32.const 24091)
                                       )
                                       (i32.store offset=4
                                        (i32.load
                                         (local.get $1)
                                        )
                                        (i32.const 16209)
                                       )
                                       (br $label$continue$L10)
                                      )
                                      (br_if $label$break$L10
                                       (i32.eqz
                                        (i32.load
                                         (local.get $11)
                                        )
                                       )
                                      )
                                      (local.set $0
                                       (i32.and
                                        (i32.load offset=68
                                         (i32.load
                                          (local.get $1)
                                         )
                                        )
                                        (i32.const 255)
                                       )
                                      )
                                      (i32.store
                                       (local.get $16)
                                       (i32.add
                                        (local.tee $9
                                         (i32.load
                                          (local.get $16)
                                         )
                                        )
                                        (i32.const 1)
                                       )
                                      )
                                      (i32.store8
                                       (local.get $9)
                                       (local.get $0)
                                      )
                                      (i32.store
                                       (local.get $11)
                                       (i32.add
                                        (i32.load
                                         (local.get $11)
                                        )
                                        (i32.const -1)
                                       )
                                      )
                                      (i32.store offset=4
                                       (i32.load
                                        (local.get $1)
                                       )
                                       (i32.const 16200)
                                      )
                                      (br $label$continue$L10)
                                     )
                                     (if
                                      (i32.load offset=12
                                       (i32.load
                                        (local.get $1)
                                       )
                                      )
                                      (block
                                       (loop $while-in38
                                        (if
                                         (i32.lt_u
                                          (i32.load
                                           (local.get $3)
                                          )
                                          (i32.const 32)
                                         )
                                         (block
                                          (br_if $label$break$L10
                                           (i32.eqz
                                            (i32.load
                                             (local.get $4)
                                            )
                                           )
                                          )
                                          (i32.store
                                           (local.get $4)
                                           (i32.add
                                            (i32.load
                                             (local.get $4)
                                            )
                                            (i32.const -1)
                                           )
                                          )
                                          (i32.store
                                           (local.get $5)
                                           (i32.add
                                            (local.tee $0
                                             (i32.load
                                              (local.get $5)
                                             )
                                            )
                                            (i32.const 1)
                                           )
                                          )
                                          (i32.store
                                           (local.get $2)
                                           (i32.add
                                            (i32.load
                                             (local.get $2)
                                            )
                                            (i32.shl
                                             (i32.load8_u
                                              (local.get $0)
                                             )
                                             (i32.load
                                              (local.get $3)
                                             )
                                            )
                                           )
                                          )
                                          (i32.store
                                           (local.get $3)
                                           (i32.add
                                            (i32.load
                                             (local.get $3)
                                            )
                                            (i32.const 8)
                                           )
                                          )
                                          (br $while-in38)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $12)
                                        (i32.sub
                                         (i32.load
                                          (local.get $12)
                                         )
                                         (i32.load
                                          (local.get $11)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.tee $0
                                         (i32.add
                                          (i32.load
                                           (local.get $6)
                                          )
                                          (i32.const 20)
                                         )
                                        )
                                        (i32.add
                                         (i32.load
                                          (local.get $12)
                                         )
                                         (i32.load
                                          (local.get $0)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.tee $0
                                         (i32.add
                                          (i32.load
                                           (local.get $1)
                                          )
                                          (i32.const 32)
                                         )
                                        )
                                        (i32.add
                                         (i32.load
                                          (local.get $12)
                                         )
                                         (i32.load
                                          (local.get $0)
                                         )
                                        )
                                       )
                                       (if
                                        (i32.and
                                         (i32.ne
                                          (i32.and
                                           (i32.load offset=12
                                            (i32.load
                                             (local.get $1)
                                            )
                                           )
                                           (i32.const 4)
                                          )
                                          (i32.const 0)
                                         )
                                         (i32.ne
                                          (i32.load
                                           (local.get $12)
                                          )
                                          (i32.const 0)
                                         )
                                        )
                                        (block
                                         (local.set $0
                                          (i32.load offset=28
                                           (i32.load
                                            (local.get $1)
                                           )
                                          )
                                         )
                                         (local.set $9
                                          (i32.sub
                                           (i32.load
                                            (local.get $16)
                                           )
                                           (i32.load
                                            (local.get $12)
                                           )
                                          )
                                         )
                                         (local.set $17
                                          (i32.load
                                           (local.get $12)
                                          )
                                         )
                                         (local.set $0
                                          (if (result i32)
                                           (i32.load offset=20
                                            (i32.load
                                             (local.get $1)
                                            )
                                           )
                                           (call $_crc32
                                            (local.get $0)
                                            (local.get $9)
                                            (local.get $17)
                                           )
                                           (call $_adler32
                                            (local.get $0)
                                            (local.get $9)
                                            (local.get $17)
                                           )
                                          )
                                         )
                                         (i32.store offset=28
                                          (i32.load
                                           (local.get $1)
                                          )
                                          (local.get $0)
                                         )
                                         (i32.store offset=48
                                          (i32.load
                                           (local.get $6)
                                          )
                                          (local.get $0)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $12)
                                        (i32.load
                                         (local.get $11)
                                        )
                                       )
                                       (if
                                        (i32.and
                                         (i32.load offset=12
                                          (i32.load
                                           (local.get $1)
                                          )
                                         )
                                         (i32.const 4)
                                        )
                                        (block
                                         (local.set $0
                                          (i32.load
                                           (local.get $2)
                                          )
                                         )
                                         (if
                                          (i32.ne
                                           (if (result i32)
                                            (i32.load offset=20
                                             (i32.load
                                              (local.get $1)
                                             )
                                            )
                                            (local.get $0)
                                            (i32.add
                                             (i32.add
                                              (i32.add
                                               (i32.and
                                                (i32.shr_u
                                                 (i32.load
                                                  (local.get $2)
                                                 )
                                                 (i32.const 8)
                                                )
                                                (i32.const 65280)
                                               )
                                               (i32.shr_u
                                                (local.get $0)
                                                (i32.const 24)
                                               )
                                              )
                                              (i32.shl
                                               (i32.and
                                                (i32.load
                                                 (local.get $2)
                                                )
                                                (i32.const 65280)
                                               )
                                               (i32.const 8)
                                              )
                                             )
                                             (i32.shl
                                              (i32.and
                                               (i32.load
                                                (local.get $2)
                                               )
                                               (i32.const 255)
                                              )
                                              (i32.const 24)
                                             )
                                            )
                                           )
                                           (i32.load offset=28
                                            (i32.load
                                             (local.get $1)
                                            )
                                           )
                                          )
                                          (block
                                           (i32.store offset=24
                                            (i32.load
                                             (local.get $6)
                                            )
                                            (i32.const 24265)
                                           )
                                           (i32.store offset=4
                                            (i32.load
                                             (local.get $1)
                                            )
                                            (i32.const 16209)
                                           )
                                           (br $label$continue$L10)
                                          )
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $2)
                                        (i32.const 0)
                                       )
                                       (i32.store
                                        (local.get $3)
                                        (i32.const 0)
                                       )
                                      )
                                     )
                                     (i32.store offset=4
                                      (i32.load
                                       (local.get $1)
                                      )
                                      (i32.const 16207)
                                     )
                                     (br $__rjti$6)
                                    )
                                    (loop $while-in44
                                     (if
                                      (i32.lt_u
                                       (i32.load
                                        (local.get $3)
                                       )
                                       (i32.const 32)
                                      )
                                      (block
                                       (br_if $label$break$L10
                                        (i32.eqz
                                         (i32.load
                                          (local.get $4)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $4)
                                        (i32.add
                                         (i32.load
                                          (local.get $4)
                                         )
                                         (i32.const -1)
                                        )
                                       )
                                       (i32.store
                                        (local.get $5)
                                        (i32.add
                                         (local.tee $0
                                          (i32.load
                                           (local.get $5)
                                          )
                                         )
                                         (i32.const 1)
                                        )
                                       )
                                       (i32.store
                                        (local.get $2)
                                        (i32.add
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.shl
                                          (i32.load8_u
                                           (local.get $0)
                                          )
                                          (i32.load
                                           (local.get $3)
                                          )
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $3)
                                        (i32.add
                                         (i32.load
                                          (local.get $3)
                                         )
                                         (i32.const 8)
                                        )
                                       )
                                       (br $while-in44)
                                      )
                                     )
                                    )
                                    (if
                                     (i32.load offset=36
                                      (i32.load
                                       (local.get $1)
                                      )
                                     )
                                     (i32.store offset=4
                                      (i32.load offset=36
                                       (i32.load
                                        (local.get $1)
                                       )
                                      )
                                      (i32.load
                                       (local.get $2)
                                      )
                                     )
                                    )
                                    (if
                                     (i32.and
                                      (i32.load offset=20
                                       (i32.load
                                        (local.get $1)
                                       )
                                      )
                                      (i32.const 512)
                                     )
                                     (if
                                      (i32.and
                                       (i32.load offset=12
                                        (i32.load
                                         (local.get $1)
                                        )
                                       )
                                       (i32.const 4)
                                      )
                                      (block
                                       (i32.store8
                                        (local.get $15)
                                        (i32.load
                                         (local.get $2)
                                        )
                                       )
                                       (i32.store8 offset=1
                                        (local.get $15)
                                        (i32.shr_u
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.const 8)
                                        )
                                       )
                                       (i32.store8 offset=2
                                        (local.get $15)
                                        (i32.shr_u
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.const 16)
                                        )
                                       )
                                       (i32.store8 offset=3
                                        (local.get $15)
                                        (i32.shr_u
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.const 24)
                                        )
                                       )
                                       (local.set $0
                                        (call $_crc32
                                         (i32.load offset=28
                                          (i32.load
                                           (local.get $1)
                                          )
                                         )
                                         (local.get $15)
                                         (i32.const 4)
                                        )
                                       )
                                       (i32.store offset=28
                                        (i32.load
                                         (local.get $1)
                                        )
                                        (local.get $0)
                                       )
                                      )
                                     )
                                    )
                                    (i32.store
                                     (local.get $2)
                                     (i32.const 0)
                                    )
                                    (i32.store
                                     (local.get $3)
                                     (i32.const 0)
                                    )
                                    (i32.store offset=4
                                     (i32.load
                                      (local.get $1)
                                     )
                                     (i32.const 16183)
                                    )
                                    (br $__rjti$7)
                                   )
                                   (br_if $__rjti$23
                                    (i32.eqz
                                     (i32.load offset=16
                                      (i32.load
                                       (local.get $1)
                                      )
                                     )
                                    )
                                   )
                                   (local.set $0
                                    (call $_adler32
                                     (i32.const 0)
                                     (i32.const 0)
                                     (i32.const 0)
                                    )
                                   )
                                   (i32.store offset=28
                                    (i32.load
                                     (local.get $1)
                                    )
                                    (local.get $0)
                                   )
                                   (i32.store offset=48
                                    (i32.load
                                     (local.get $6)
                                    )
                                    (local.get $0)
                                   )
                                   (i32.store offset=4
                                    (i32.load
                                     (local.get $1)
                                    )
                                    (i32.const 16191)
                                   )
                                   (br $__rjti$8)
                                  )
                                  (i32.store offset=4
                                   (i32.load
                                    (local.get $1)
                                   )
                                   (i32.const 16195)
                                  )
                                  (br $__rjti$9)
                                 )
                                 (loop $while-in46
                                  (if
                                   (i32.lt_u
                                    (i32.load offset=108
                                     (i32.load
                                      (local.get $1)
                                     )
                                    )
                                    (i32.load offset=96
                                     (i32.load
                                      (local.get $1)
                                     )
                                    )
                                   )
                                   (block
                                    (loop $while-in48
                                     (if
                                      (i32.lt_u
                                       (i32.load
                                        (local.get $3)
                                       )
                                       (i32.const 3)
                                      )
                                      (block
                                       (br_if $label$break$L10
                                        (i32.eqz
                                         (i32.load
                                          (local.get $4)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $4)
                                        (i32.add
                                         (i32.load
                                          (local.get $4)
                                         )
                                         (i32.const -1)
                                        )
                                       )
                                       (i32.store
                                        (local.get $5)
                                        (i32.add
                                         (local.tee $0
                                          (i32.load
                                           (local.get $5)
                                          )
                                         )
                                         (i32.const 1)
                                        )
                                       )
                                       (i32.store
                                        (local.get $2)
                                        (i32.add
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.shl
                                          (i32.load8_u
                                           (local.get $0)
                                          )
                                          (i32.load
                                           (local.get $3)
                                          )
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $3)
                                        (i32.add
                                         (i32.load
                                          (local.get $3)
                                         )
                                         (i32.const 8)
                                        )
                                       )
                                       (br $while-in48)
                                      )
                                     )
                                    )
                                    (local.set $9
                                     (i32.and
                                      (i32.load
                                       (local.get $2)
                                      )
                                      (i32.const 7)
                                     )
                                    )
                                    (local.set $17
                                     (i32.add
                                      (i32.load
                                       (local.get $1)
                                      )
                                      (i32.const 116)
                                     )
                                    )
                                    (local.set $0
                                     (i32.load
                                      (local.tee $20
                                       (i32.add
                                        (i32.load
                                         (local.get $1)
                                        )
                                        (i32.const 108)
                                       )
                                      )
                                     )
                                    )
                                    (i32.store
                                     (local.get $20)
                                     (i32.add
                                      (local.get $0)
                                      (i32.const 1)
                                     )
                                    )
                                    (i32.store16
                                     (i32.add
                                      (i32.shl
                                       (i32.load16_u
                                        (i32.add
                                         (i32.shl
                                          (local.get $0)
                                          (i32.const 1)
                                         )
                                         (i32.const 10688)
                                        )
                                       )
                                       (i32.const 1)
                                      )
                                      (local.get $17)
                                     )
                                     (local.get $9)
                                    )
                                    (i32.store
                                     (local.get $2)
                                     (i32.shr_u
                                      (i32.load
                                       (local.get $2)
                                      )
                                      (i32.const 3)
                                     )
                                    )
                                    (i32.store
                                     (local.get $3)
                                     (i32.sub
                                      (i32.load
                                       (local.get $3)
                                      )
                                      (i32.const 3)
                                     )
                                    )
                                    (br $while-in46)
                                   )
                                  )
                                 )
                                 (loop $while-in50
                                  (local.set $0
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                  (if
                                   (i32.lt_u
                                    (i32.load offset=108
                                     (i32.load
                                      (local.get $1)
                                     )
                                    )
                                    (i32.const 19)
                                   )
                                   (block
                                    (local.set $9
                                     (i32.load
                                      (local.tee $17
                                       (i32.add
                                        (i32.load
                                         (local.get $1)
                                        )
                                        (i32.const 108)
                                       )
                                      )
                                     )
                                    )
                                    (i32.store
                                     (local.get $17)
                                     (i32.add
                                      (local.get $9)
                                      (i32.const 1)
                                     )
                                    )
                                    (i32.store16
                                     (i32.add
                                      (i32.add
                                       (local.get $0)
                                       (i32.const 116)
                                      )
                                      (i32.shl
                                       (i32.load16_u
                                        (i32.add
                                         (i32.shl
                                          (local.get $9)
                                          (i32.const 1)
                                         )
                                         (i32.const 10688)
                                        )
                                       )
                                       (i32.const 1)
                                      )
                                     )
                                     (i32.const 0)
                                    )
                                    (br $while-in50)
                                   )
                                  )
                                 )
                                 (i32.store offset=112
                                  (i32.load
                                   (local.get $1)
                                  )
                                  (i32.add
                                   (local.get $0)
                                   (i32.const 1332)
                                  )
                                 )
                                 (i32.store offset=80
                                  (i32.load
                                   (local.get $1)
                                  )
                                  (i32.load offset=112
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                 )
                                 (i32.store offset=88
                                  (i32.load
                                   (local.get $1)
                                  )
                                  (i32.const 7)
                                 )
                                 (i32.store
                                  (local.get $19)
                                  (call $_inflate_table
                                   (i32.const 0)
                                   (i32.add
                                    (i32.load
                                     (local.get $1)
                                    )
                                    (i32.const 116)
                                   )
                                   (i32.const 19)
                                   (i32.add
                                    (i32.load
                                     (local.get $1)
                                    )
                                    (i32.const 112)
                                   )
                                   (i32.add
                                    (i32.load
                                     (local.get $1)
                                    )
                                    (i32.const 88)
                                   )
                                   (i32.add
                                    (i32.load
                                     (local.get $1)
                                    )
                                    (i32.const 756)
                                   )
                                  )
                                 )
                                 (if
                                  (i32.load
                                   (local.get $19)
                                  )
                                  (block
                                   (i32.store offset=24
                                    (i32.load
                                     (local.get $6)
                                    )
                                    (i32.const 24127)
                                   )
                                   (i32.store offset=4
                                    (i32.load
                                     (local.get $1)
                                    )
                                    (i32.const 16209)
                                   )
                                   (br $label$continue$L10)
                                  )
                                  (block
                                   (i32.store offset=108
                                    (i32.load
                                     (local.get $1)
                                    )
                                    (i32.const 0)
                                   )
                                   (i32.store offset=4
                                    (i32.load
                                     (local.get $1)
                                    )
                                    (i32.const 16198)
                                   )
                                   (br $__rjti$10)
                                  )
                                 )
                                )
                                (br_if $__rjti$30
                                 (i32.eqz
                                  (i32.load offset=12
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                 )
                                )
                                (br_if $__rjti$30
                                 (i32.eqz
                                  (i32.load offset=20
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                 )
                                )
                                (loop $while-in52
                                 (if
                                  (i32.lt_u
                                   (i32.load
                                    (local.get $3)
                                   )
                                   (i32.const 32)
                                  )
                                  (block
                                   (br_if $label$break$L10
                                    (i32.eqz
                                     (i32.load
                                      (local.get $4)
                                     )
                                    )
                                   )
                                   (i32.store
                                    (local.get $4)
                                    (i32.add
                                     (i32.load
                                      (local.get $4)
                                     )
                                     (i32.const -1)
                                    )
                                   )
                                   (i32.store
                                    (local.get $5)
                                    (i32.add
                                     (local.tee $0
                                      (i32.load
                                       (local.get $5)
                                      )
                                     )
                                     (i32.const 1)
                                    )
                                   )
                                   (i32.store
                                    (local.get $2)
                                    (i32.add
                                     (i32.load
                                      (local.get $2)
                                     )
                                     (i32.shl
                                      (i32.load8_u
                                       (local.get $0)
                                      )
                                      (i32.load
                                       (local.get $3)
                                      )
                                     )
                                    )
                                   )
                                   (i32.store
                                    (local.get $3)
                                    (i32.add
                                     (i32.load
                                      (local.get $3)
                                     )
                                     (i32.const 8)
                                    )
                                   )
                                   (br $while-in52)
                                  )
                                 )
                                )
                                (br_if $__rjti$26
                                 (i32.eq
                                  (i32.load
                                   (local.get $2)
                                  )
                                  (i32.load offset=32
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                 )
                                )
                                (i32.store offset=24
                                 (i32.load
                                  (local.get $6)
                                 )
                                 (i32.const 24286)
                                )
                                (i32.store offset=4
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 16209)
                                )
                                (br $label$continue$L10)
                               )
                               (loop $while-in56
                                (if
                                 (i32.lt_u
                                  (i32.load
                                   (local.get $3)
                                  )
                                  (i32.const 16)
                                 )
                                 (block
                                  (br_if $label$break$L10
                                   (i32.eqz
                                    (i32.load
                                     (local.get $4)
                                    )
                                   )
                                  )
                                  (i32.store
                                   (local.get $4)
                                   (i32.add
                                    (i32.load
                                     (local.get $4)
                                    )
                                    (i32.const -1)
                                   )
                                  )
                                  (i32.store
                                   (local.get $5)
                                   (i32.add
                                    (local.tee $0
                                     (i32.load
                                      (local.get $5)
                                     )
                                    )
                                    (i32.const 1)
                                   )
                                  )
                                  (i32.store
                                   (local.get $2)
                                   (i32.add
                                    (i32.load
                                     (local.get $2)
                                    )
                                    (i32.shl
                                     (i32.load8_u
                                      (local.get $0)
                                     )
                                     (i32.load
                                      (local.get $3)
                                     )
                                    )
                                   )
                                  )
                                  (i32.store
                                   (local.get $3)
                                   (i32.add
                                    (i32.load
                                     (local.get $3)
                                    )
                                    (i32.const 8)
                                   )
                                  )
                                  (br $while-in56)
                                 )
                                )
                               )
                               (if
                                (i32.load offset=36
                                 (i32.load
                                  (local.get $1)
                                 )
                                )
                                (block
                                 (i32.store offset=8
                                  (i32.load offset=36
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                  (i32.and
                                   (i32.load
                                    (local.get $2)
                                   )
                                   (i32.const 255)
                                  )
                                 )
                                 (i32.store offset=12
                                  (i32.load offset=36
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                  (i32.shr_u
                                   (i32.load
                                    (local.get $2)
                                   )
                                   (i32.const 8)
                                  )
                                 )
                                )
                               )
                               (if
                                (i32.and
                                 (i32.load offset=20
                                  (i32.load
                                   (local.get $1)
                                  )
                                 )
                                 (i32.const 512)
                                )
                                (if
                                 (i32.and
                                  (i32.load offset=12
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                  (i32.const 4)
                                 )
                                 (block
                                  (i32.store8
                                   (local.get $15)
                                   (i32.load
                                    (local.get $2)
                                   )
                                  )
                                  (i32.store8 offset=1
                                   (local.get $15)
                                   (i32.shr_u
                                    (i32.load
                                     (local.get $2)
                                    )
                                    (i32.const 8)
                                   )
                                  )
                                  (local.set $0
                                   (call $_crc32
                                    (i32.load offset=28
                                     (i32.load
                                      (local.get $1)
                                     )
                                    )
                                    (local.get $15)
                                    (i32.const 2)
                                   )
                                  )
                                  (i32.store offset=28
                                   (i32.load
                                    (local.get $1)
                                   )
                                   (local.get $0)
                                  )
                                 )
                                )
                               )
                               (i32.store
                                (local.get $2)
                                (i32.const 0)
                               )
                               (i32.store
                                (local.get $3)
                                (i32.const 0)
                               )
                               (i32.store offset=4
                                (i32.load
                                 (local.get $1)
                                )
                                (i32.const 16184)
                               )
                               (br $__rjti$11)
                              )
                              (br_if $label$break$L10
                               (i32.or
                                (i32.eq
                                 (i32.load
                                  (local.get $21)
                                 )
                                 (i32.const 5)
                                )
                                (i32.eq
                                 (i32.load
                                  (local.get $21)
                                 )
                                 (i32.const 6)
                                )
                               )
                              )
                              (br $__rjti$12)
                             )
                             (i32.store
                              (local.get $7)
                              (i32.load offset=68
                               (i32.load
                                (local.get $1)
                               )
                              )
                             )
                             (if
                              (i32.eqz
                               (i32.load
                                (local.get $7)
                               )
                              )
                              (block
                               (i32.store offset=4
                                (i32.load
                                 (local.get $1)
                                )
                                (i32.const 16191)
                               )
                               (br $label$continue$L10)
                              )
                             )
                             (if
                              (i32.gt_u
                               (i32.load
                                (local.get $7)
                               )
                               (i32.load
                                (local.get $4)
                               )
                              )
                              (i32.store
                               (local.get $7)
                               (i32.load
                                (local.get $4)
                               )
                              )
                             )
                             (if
                              (i32.gt_u
                               (i32.load
                                (local.get $7)
                               )
                               (i32.load
                                (local.get $11)
                               )
                              )
                              (i32.store
                               (local.get $7)
                               (i32.load
                                (local.get $11)
                               )
                              )
                             )
                             (br_if $label$break$L10
                              (i32.eqz
                               (i32.load
                                (local.get $7)
                               )
                              )
                             )
                             (drop
                              (call $_memcpy
                               (i32.load
                                (local.get $16)
                               )
                               (i32.load
                                (local.get $5)
                               )
                               (i32.load
                                (local.get $7)
                               )
                              )
                             )
                             (i32.store
                              (local.get $4)
                              (i32.sub
                               (i32.load
                                (local.get $4)
                               )
                               (i32.load
                                (local.get $7)
                               )
                              )
                             )
                             (i32.store
                              (local.get $5)
                              (i32.add
                               (i32.load
                                (local.get $7)
                               )
                               (i32.load
                                (local.get $5)
                               )
                              )
                             )
                             (i32.store
                              (local.get $11)
                              (i32.sub
                               (i32.load
                                (local.get $11)
                               )
                               (i32.load
                                (local.get $7)
                               )
                              )
                             )
                             (i32.store
                              (local.get $16)
                              (i32.add
                               (i32.load
                                (local.get $7)
                               )
                               (i32.load
                                (local.get $16)
                               )
                              )
                             )
                             (i32.store
                              (local.tee $0
                               (i32.add
                                (i32.load
                                 (local.get $1)
                                )
                                (i32.const 68)
                               )
                              )
                              (i32.sub
                               (i32.load
                                (local.get $0)
                               )
                               (i32.load
                                (local.get $7)
                               )
                              )
                             )
                             (br $label$continue$L10)
                            )
                            (block $__rjto$1
                             (block $__rjti$1
                              (block $__rjti$0
                               (loop $label$continue$L184
                                (if
                                 (i32.lt_u
                                  (i32.load offset=108
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                  (i32.add
                                   (i32.load offset=100
                                    (i32.load
                                     (local.get $1)
                                    )
                                   )
                                   (i32.load offset=104
                                    (i32.load
                                     (local.get $1)
                                    )
                                   )
                                  )
                                 )
                                 (block
                                  (loop $while-in58
                                   (block $while-out57
                                    (i32.store align=2
                                     (local.get $8)
                                     (i32.load align=2
                                      (i32.add
                                       (i32.load offset=80
                                        (i32.load
                                         (local.get $1)
                                        )
                                       )
                                       (i32.shl
                                        (i32.and
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.sub
                                          (i32.shl
                                           (i32.const 1)
                                           (i32.load offset=88
                                            (i32.load
                                             (local.get $1)
                                            )
                                           )
                                          )
                                          (i32.const 1)
                                         )
                                        )
                                        (i32.const 2)
                                       )
                                      )
                                     )
                                    )
                                    (br_if $while-out57
                                     (i32.le_u
                                      (i32.load8_u offset=1
                                       (local.get $8)
                                      )
                                      (i32.load
                                       (local.get $3)
                                      )
                                     )
                                    )
                                    (br_if $label$break$L10
                                     (i32.eqz
                                      (i32.load
                                       (local.get $4)
                                      )
                                     )
                                    )
                                    (i32.store
                                     (local.get $4)
                                     (i32.add
                                      (i32.load
                                       (local.get $4)
                                      )
                                      (i32.const -1)
                                     )
                                    )
                                    (i32.store
                                     (local.get $5)
                                     (i32.add
                                      (local.tee $0
                                       (i32.load
                                        (local.get $5)
                                       )
                                      )
                                      (i32.const 1)
                                     )
                                    )
                                    (i32.store
                                     (local.get $2)
                                     (i32.add
                                      (i32.load
                                       (local.get $2)
                                      )
                                      (i32.shl
                                       (i32.load8_u
                                        (local.get $0)
                                       )
                                       (i32.load
                                        (local.get $3)
                                       )
                                      )
                                     )
                                    )
                                    (i32.store
                                     (local.get $3)
                                     (i32.add
                                      (i32.load
                                       (local.get $3)
                                      )
                                      (i32.const 8)
                                     )
                                    )
                                    (br $while-in58)
                                   )
                                  )
                                  (if
                                   (i32.lt_s
                                    (i32.load16_u offset=2
                                     (local.get $8)
                                    )
                                    (i32.const 16)
                                   )
                                   (block
                                    (i32.store
                                     (local.get $2)
                                     (i32.shr_u
                                      (i32.load
                                       (local.get $2)
                                      )
                                      (i32.load8_u offset=1
                                       (local.get $8)
                                      )
                                     )
                                    )
                                    (i32.store
                                     (local.get $3)
                                     (i32.sub
                                      (i32.load
                                       (local.get $3)
                                      )
                                      (i32.load8_u offset=1
                                       (local.get $8)
                                      )
                                     )
                                    )
                                    (local.set $9
                                     (i32.load16_s offset=2
                                      (local.get $8)
                                     )
                                    )
                                    (local.set $17
                                     (i32.add
                                      (i32.load
                                       (local.get $1)
                                      )
                                      (i32.const 116)
                                     )
                                    )
                                    (local.set $0
                                     (i32.load
                                      (local.tee $20
                                       (i32.add
                                        (i32.load
                                         (local.get $1)
                                        )
                                        (i32.const 108)
                                       )
                                      )
                                     )
                                    )
                                    (i32.store
                                     (local.get $20)
                                     (i32.add
                                      (local.get $0)
                                      (i32.const 1)
                                     )
                                    )
                                    (i32.store16
                                     (i32.add
                                      (i32.shl
                                       (local.get $0)
                                       (i32.const 1)
                                      )
                                      (local.get $17)
                                     )
                                     (local.get $9)
                                    )
                                   )
                                   (block $label$break$L192
                                    (if
                                     (i32.eq
                                      (i32.load16_u offset=2
                                       (local.get $8)
                                      )
                                      (i32.const 16)
                                     )
                                     (block
                                      (loop $while-in63
                                       (if
                                        (i32.lt_u
                                         (i32.load
                                          (local.get $3)
                                         )
                                         (i32.add
                                          (i32.load8_u offset=1
                                           (local.get $8)
                                          )
                                          (i32.const 2)
                                         )
                                        )
                                        (block
                                         (br_if $label$break$L10
                                          (i32.eqz
                                           (i32.load
                                            (local.get $4)
                                           )
                                          )
                                         )
                                         (i32.store
                                          (local.get $4)
                                          (i32.add
                                           (i32.load
                                            (local.get $4)
                                           )
                                           (i32.const -1)
                                          )
                                         )
                                         (i32.store
                                          (local.get $5)
                                          (i32.add
                                           (local.tee $0
                                            (i32.load
                                             (local.get $5)
                                            )
                                           )
                                           (i32.const 1)
                                          )
                                         )
                                         (i32.store
                                          (local.get $2)
                                          (i32.add
                                           (i32.load
                                            (local.get $2)
                                           )
                                           (i32.shl
                                            (i32.load8_u
                                             (local.get $0)
                                            )
                                            (i32.load
                                             (local.get $3)
                                            )
                                           )
                                          )
                                         )
                                         (i32.store
                                          (local.get $3)
                                          (i32.add
                                           (i32.load
                                            (local.get $3)
                                           )
                                           (i32.const 8)
                                          )
                                         )
                                         (br $while-in63)
                                        )
                                       )
                                      )
                                      (i32.store
                                       (local.get $2)
                                       (i32.shr_u
                                        (i32.load
                                         (local.get $2)
                                        )
                                        (i32.load8_u offset=1
                                         (local.get $8)
                                        )
                                       )
                                      )
                                      (i32.store
                                       (local.get $3)
                                       (i32.sub
                                        (i32.load
                                         (local.get $3)
                                        )
                                        (i32.load8_u offset=1
                                         (local.get $8)
                                        )
                                       )
                                      )
                                      (br_if $__rjti$0
                                       (i32.eqz
                                        (i32.load offset=108
                                         (i32.load
                                          (local.get $1)
                                         )
                                        )
                                       )
                                      )
                                      (i32.store
                                       (local.get $13)
                                       (i32.load16_u offset=114
                                        (i32.add
                                         (i32.load
                                          (local.get $1)
                                         )
                                         (i32.shl
                                          (i32.load offset=108
                                           (i32.load
                                            (local.get $1)
                                           )
                                          )
                                          (i32.const 1)
                                         )
                                        )
                                       )
                                      )
                                      (i32.store
                                       (local.get $7)
                                       (i32.add
                                        (i32.and
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.const 3)
                                        )
                                        (i32.const 3)
                                       )
                                      )
                                      (i32.store
                                       (local.get $2)
                                       (i32.shr_u
                                        (i32.load
                                         (local.get $2)
                                        )
                                        (i32.const 2)
                                       )
                                      )
                                      (i32.store
                                       (local.get $3)
                                       (i32.sub
                                        (i32.load
                                         (local.get $3)
                                        )
                                        (i32.const 2)
                                       )
                                      )
                                     )
                                     (if
                                      (i32.eq
                                       (i32.load16_u offset=2
                                        (local.get $8)
                                       )
                                       (i32.const 17)
                                      )
                                      (block
                                       (loop $while-in65
                                        (if
                                         (i32.lt_u
                                          (i32.load
                                           (local.get $3)
                                          )
                                          (i32.add
                                           (i32.load8_u offset=1
                                            (local.get $8)
                                           )
                                           (i32.const 3)
                                          )
                                         )
                                         (block
                                          (br_if $label$break$L10
                                           (i32.eqz
                                            (i32.load
                                             (local.get $4)
                                            )
                                           )
                                          )
                                          (i32.store
                                           (local.get $4)
                                           (i32.add
                                            (i32.load
                                             (local.get $4)
                                            )
                                            (i32.const -1)
                                           )
                                          )
                                          (i32.store
                                           (local.get $5)
                                           (i32.add
                                            (local.tee $0
                                             (i32.load
                                              (local.get $5)
                                             )
                                            )
                                            (i32.const 1)
                                           )
                                          )
                                          (i32.store
                                           (local.get $2)
                                           (i32.add
                                            (i32.load
                                             (local.get $2)
                                            )
                                            (i32.shl
                                             (i32.load8_u
                                              (local.get $0)
                                             )
                                             (i32.load
                                              (local.get $3)
                                             )
                                            )
                                           )
                                          )
                                          (i32.store
                                           (local.get $3)
                                           (i32.add
                                            (i32.load
                                             (local.get $3)
                                            )
                                            (i32.const 8)
                                           )
                                          )
                                          (br $while-in65)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $2)
                                        (i32.shr_u
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.load8_u offset=1
                                          (local.get $8)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $3)
                                        (i32.sub
                                         (i32.load
                                          (local.get $3)
                                         )
                                         (i32.load8_u offset=1
                                          (local.get $8)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $13)
                                        (i32.const 0)
                                       )
                                       (i32.store
                                        (local.get $7)
                                        (i32.add
                                         (i32.and
                                          (i32.load
                                           (local.get $2)
                                          )
                                          (i32.const 7)
                                         )
                                         (i32.const 3)
                                        )
                                       )
                                       (i32.store
                                        (local.get $2)
                                        (i32.shr_u
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.const 3)
                                        )
                                       )
                                       (i32.store
                                        (local.get $3)
                                        (i32.sub
                                         (i32.load
                                          (local.get $3)
                                         )
                                         (i32.const 3)
                                        )
                                       )
                                      )
                                      (block
                                       (loop $while-in67
                                        (if
                                         (i32.lt_u
                                          (i32.load
                                           (local.get $3)
                                          )
                                          (i32.add
                                           (i32.load8_u offset=1
                                            (local.get $8)
                                           )
                                           (i32.const 7)
                                          )
                                         )
                                         (block
                                          (br_if $label$break$L10
                                           (i32.eqz
                                            (i32.load
                                             (local.get $4)
                                            )
                                           )
                                          )
                                          (i32.store
                                           (local.get $4)
                                           (i32.add
                                            (i32.load
                                             (local.get $4)
                                            )
                                            (i32.const -1)
                                           )
                                          )
                                          (i32.store
                                           (local.get $5)
                                           (i32.add
                                            (local.tee $0
                                             (i32.load
                                              (local.get $5)
                                             )
                                            )
                                            (i32.const 1)
                                           )
                                          )
                                          (i32.store
                                           (local.get $2)
                                           (i32.add
                                            (i32.load
                                             (local.get $2)
                                            )
                                            (i32.shl
                                             (i32.load8_u
                                              (local.get $0)
                                             )
                                             (i32.load
                                              (local.get $3)
                                             )
                                            )
                                           )
                                          )
                                          (i32.store
                                           (local.get $3)
                                           (i32.add
                                            (i32.load
                                             (local.get $3)
                                            )
                                            (i32.const 8)
                                           )
                                          )
                                          (br $while-in67)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $2)
                                        (i32.shr_u
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.load8_u offset=1
                                          (local.get $8)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $3)
                                        (i32.sub
                                         (i32.load
                                          (local.get $3)
                                         )
                                         (i32.load8_u offset=1
                                          (local.get $8)
                                         )
                                        )
                                       )
                                       (i32.store
                                        (local.get $13)
                                        (i32.const 0)
                                       )
                                       (i32.store
                                        (local.get $7)
                                        (i32.add
                                         (i32.and
                                          (i32.load
                                           (local.get $2)
                                          )
                                          (i32.const 127)
                                         )
                                         (i32.const 11)
                                        )
                                       )
                                       (i32.store
                                        (local.get $2)
                                        (i32.shr_u
                                         (i32.load
                                          (local.get $2)
                                         )
                                         (i32.const 7)
                                        )
                                       )
                                       (i32.store
                                        (local.get $3)
                                        (i32.sub
                                         (i32.load
                                          (local.get $3)
                                         )
                                         (i32.const 7)
                                        )
                                       )
                                      )
                                     )
                                    )
                                    (br_if $__rjti$1
                                     (i32.gt_u
                                      (i32.add
                                       (i32.load offset=108
                                        (i32.load
                                         (local.get $1)
                                        )
                                       )
                                       (i32.load
                                        (local.get $7)
                                       )
                                      )
                                      (i32.add
                                       (i32.load offset=100
                                        (i32.load
                                         (local.get $1)
                                        )
                                       )
                                       (i32.load offset=104
                                        (i32.load
                                         (local.get $1)
                                        )
                                       )
                                      )
                                     )
                                    )
                                    (loop $while-in69
                                     (i32.store
                                      (local.get $7)
                                      (i32.add
                                       (local.tee $0
                                        (i32.load
                                         (local.get $7)
                                        )
                                       )
                                       (i32.const -1)
                                      )
                                     )
                                     (br_if $label$break$L192
                                      (i32.eqz
                                       (local.get $0)
                                      )
                                     )
                                     (local.set $9
                                      (i32.and
                                       (i32.load
                                        (local.get $13)
                                       )
                                       (i32.const 65535)
                                      )
                                     )
                                     (local.set $17
                                      (i32.add
                                       (i32.load
                                        (local.get $1)
                                       )
                                       (i32.const 116)
                                      )
                                     )
                                     (local.set $0
                                      (i32.load
                                       (local.tee $20
                                        (i32.add
                                         (i32.load
                                          (local.get $1)
                                         )
                                         (i32.const 108)
                                        )
                                       )
                                      )
                                     )
                                     (i32.store
                                      (local.get $20)
                                      (i32.add
                                       (local.get $0)
                                       (i32.const 1)
                                      )
                                     )
                                     (i32.store16
                                      (i32.add
                                       (i32.shl
                                        (local.get $0)
                                        (i32.const 1)
                                       )
                                       (local.get $17)
                                      )
                                      (local.get $9)
                                     )
                                     (br $while-in69)
                                    )
                                   )
                                  )
                                  (br $label$continue$L184)
                                 )
                                )
                               )
                               (br $__rjto$1)
                              )
                              (i32.store offset=24
                               (i32.load
                                (local.get $6)
                               )
                               (i32.const 24152)
                              )
                              (i32.store offset=4
                               (i32.load
                                (local.get $1)
                               )
                               (i32.const 16209)
                              )
                              (br $__rjto$1)
                             )
                             (i32.store offset=24
                              (i32.load
                               (local.get $6)
                              )
                              (i32.const 24152)
                             )
                             (i32.store offset=4
                              (i32.load
                               (local.get $1)
                              )
                              (i32.const 16209)
                             )
                            )
                            (if
                             (i32.ne
                              (i32.load offset=4
                               (i32.load
                                (local.get $1)
                               )
                              )
                              (i32.const 16209)
                             )
                             (block
                              (if
                               (i32.eqz
                                (i32.load16_u offset=628
                                 (i32.load
                                  (local.get $1)
                                 )
                                )
                               )
                               (block
                                (i32.store offset=24
                                 (i32.load
                                  (local.get $6)
                                 )
                                 (i32.const 24178)
                                )
                                (i32.store offset=4
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 16209)
                                )
                                (br $label$continue$L10)
                               )
                              )
                              (i32.store offset=112
                               (i32.load
                                (local.get $1)
                               )
                               (i32.add
                                (i32.load
                                 (local.get $1)
                                )
                                (i32.const 1332)
                               )
                              )
                              (i32.store offset=80
                               (i32.load
                                (local.get $1)
                               )
                               (i32.load offset=112
                                (i32.load
                                 (local.get $1)
                                )
                               )
                              )
                              (i32.store offset=88
                               (i32.load
                                (local.get $1)
                               )
                               (i32.const 9)
                              )
                              (i32.store
                               (local.get $19)
                               (call $_inflate_table
                                (i32.const 1)
                                (i32.add
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 116)
                                )
                                (i32.load offset=100
                                 (i32.load
                                  (local.get $1)
                                 )
                                )
                                (i32.add
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 112)
                                )
                                (i32.add
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 88)
                                )
                                (i32.add
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 756)
                                )
                               )
                              )
                              (if
                               (i32.load
                                (local.get $19)
                               )
                               (block
                                (i32.store offset=24
                                 (i32.load
                                  (local.get $6)
                                 )
                                 (i32.const 24215)
                                )
                                (i32.store offset=4
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 16209)
                                )
                                (br $label$continue$L10)
                               )
                              )
                              (i32.store offset=84
                               (i32.load
                                (local.get $1)
                               )
                               (i32.load offset=112
                                (i32.load
                                 (local.get $1)
                                )
                               )
                              )
                              (i32.store offset=92
                               (i32.load
                                (local.get $1)
                               )
                               (i32.const 6)
                              )
                              (i32.store
                               (local.get $19)
                               (call $_inflate_table
                                (i32.const 2)
                                (i32.add
                                 (i32.add
                                  (i32.load
                                   (local.get $1)
                                  )
                                  (i32.const 116)
                                 )
                                 (i32.shl
                                  (i32.load offset=100
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                  (i32.const 1)
                                 )
                                )
                                (i32.load offset=104
                                 (i32.load
                                  (local.get $1)
                                 )
                                )
                                (i32.add
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 112)
                                )
                                (i32.add
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 92)
                                )
                                (i32.add
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 756)
                                )
                               )
                              )
                              (if
                               (i32.load
                                (local.get $19)
                               )
                               (block
                                (i32.store offset=24
                                 (i32.load
                                  (local.get $6)
                                 )
                                 (i32.const 24243)
                                )
                                (i32.store offset=4
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 16209)
                                )
                               )
                               (block
                                (i32.store offset=4
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (i32.const 16199)
                                )
                                (br_if $label$break$L10
                                 (i32.eq
                                  (i32.load
                                   (local.get $21)
                                  )
                                  (i32.const 6)
                                 )
                                )
                                (br $__rjti$13)
                               )
                              )
                             )
                            )
                            (br $label$continue$L10)
                           )
                           (if
                            (i32.and
                             (i32.load offset=20
                              (i32.load
                               (local.get $1)
                              )
                             )
                             (i32.const 1024)
                            )
                            (block
                             (loop $while-in73
                              (if
                               (i32.lt_u
                                (i32.load
                                 (local.get $3)
                                )
                                (i32.const 16)
                               )
                               (block
                                (br_if $label$break$L10
                                 (i32.eqz
                                  (i32.load
                                   (local.get $4)
                                  )
                                 )
                                )
                                (i32.store
                                 (local.get $4)
                                 (i32.add
                                  (i32.load
                                   (local.get $4)
                                  )
                                  (i32.const -1)
                                 )
                                )
                                (i32.store
                                 (local.get $5)
                                 (i32.add
                                  (local.tee $0
                                   (i32.load
                                    (local.get $5)
                                   )
                                  )
                                  (i32.const 1)
                                 )
                                )
                                (i32.store
                                 (local.get $2)
                                 (i32.add
                                  (i32.load
                                   (local.get $2)
                                  )
                                  (i32.shl
                                   (i32.load8_u
                                    (local.get $0)
                                   )
                                   (i32.load
                                    (local.get $3)
                                   )
                                  )
                                 )
                                )
                                (i32.store
                                 (local.get $3)
                                 (i32.add
                                  (i32.load
                                   (local.get $3)
                                  )
                                  (i32.const 8)
                                 )
                                )
                                (br $while-in73)
                               )
                              )
                             )
                             (i32.store offset=68
                              (i32.load
                               (local.get $1)
                              )
                              (i32.load
                               (local.get $2)
                              )
                             )
                             (if
                              (i32.load offset=36
                               (i32.load
                                (local.get $1)
                               )
                              )
                              (i32.store offset=20
                               (i32.load offset=36
                                (i32.load
                                 (local.get $1)
                                )
                               )
                               (i32.load
                                (local.get $2)
                               )
                              )
                             )
                             (if
                              (i32.and
                               (i32.load offset=20
                                (i32.load
                                 (local.get $1)
                                )
                               )
                               (i32.const 512)
                              )
                              (if
                               (i32.and
                                (i32.load offset=12
                                 (i32.load
                                  (local.get $1)
                                 )
                                )
                                (i32.const 4)
                               )
                               (block
                                (i32.store8
                                 (local.get $15)
                                 (i32.load
                                  (local.get $2)
                                 )
                                )
                                (i32.store8 offset=1
                                 (local.get $15)
                                 (i32.shr_u
                                  (i32.load
                                   (local.get $2)
                                  )
                                  (i32.const 8)
                                 )
                                )
                                (local.set $0
                                 (call $_crc32
                                  (i32.load offset=28
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                  (local.get $15)
                                  (i32.const 2)
                                 )
                                )
                                (i32.store offset=28
                                 (i32.load
                                  (local.get $1)
                                 )
                                 (local.get $0)
                                )
                               )
                              )
                             )
                             (i32.store
                              (local.get $2)
                              (i32.const 0)
                             )
                             (i32.store
                              (local.get $3)
                              (i32.const 0)
                             )
                            )
                            (if
                             (i32.load offset=36
                              (i32.load
                               (local.get $1)
                              )
                             )
                             (i32.store offset=16
                              (i32.load offset=36
                               (i32.load
                                (local.get $1)
                               )
                              )
                              (i32.const 0)
                             )
                            )
                           )
                           (i32.store offset=4
                            (i32.load
                             (local.get $1)
                            )
                            (i32.const 16185)
                           )
                           (br $__rjti$14)
                          )
                          (if
                           (i32.load offset=8
                            (i32.load
                             (local.get $1)
                            )
                           )
                           (block
                            (i32.store
                             (local.get $2)
                             (i32.shr_u
                              (i32.load
                               (local.get $2)
                              )
                              (i32.and
                               (i32.load
                                (local.get $3)
                               )
                               (i32.const 7)
                              )
                             )
                            )
                            (i32.store
                             (local.get $3)
                             (i32.sub
                              (i32.load
                               (local.get $3)
                              )
                              (i32.and
                               (i32.load
                                (local.get $3)
                               )
                               (i32.const 7)
                              )
                             )
                            )
                            (i32.store offset=4
                             (i32.load
                              (local.get $1)
                             )
                             (i32.const 16206)
                            )
                            (br $label$continue$L10)
                           )
                          )
                          (loop $while-in75
                           (if
                            (i32.lt_u
                             (i32.load
                              (local.get $3)
                             )
                             (i32.const 3)
                            )
                            (block
                             (br_if $label$break$L10
                              (i32.eqz
                               (i32.load
                                (local.get $4)
                               )
                              )
                             )
                             (i32.store
                              (local.get $4)
                              (i32.add
                               (i32.load
                                (local.get $4)
                               )
                               (i32.const -1)
                              )
                             )
                             (i32.store
                              (local.get $5)
                              (i32.add
                               (local.tee $0
                                (i32.load
                                 (local.get $5)
                                )
                               )
                               (i32.const 1)
                              )
                             )
                             (i32.store
                              (local.get $2)
                              (i32.add
                               (i32.load
                                (local.get $2)
                               )
                               (i32.shl
                                (i32.load8_u
                                 (local.get $0)
                                )
                                (i32.load
                                 (local.get $3)
                                )
                               )
                              )
                             )
                             (i32.store
                              (local.get $3)
                              (i32.add
                               (i32.load
                                (local.get $3)
                               )
                               (i32.const 8)
                              )
                             )
                             (br $while-in75)
                            )
                           )
                          )
                          (i32.store offset=8
                           (i32.load
                            (local.get $1)
                           )
                           (i32.and
                            (i32.load
                             (local.get $2)
                            )
                            (i32.const 1)
                           )
                          )
                          (i32.store
                           (local.get $2)
                           (i32.shr_u
                            (i32.load
                             (local.get $2)
                            )
                            (i32.const 1)
                           )
                          )
                          (i32.store
                           (local.get $3)
                           (i32.sub
                            (i32.load
                             (local.get $3)
                            )
                            (i32.const 1)
                           )
                          )
                          (block $switch76
                           (block $switch-case80
                            (block $switch-case79
                             (block $switch-case78
                              (block $switch-case77
                               (br_table $switch-case77 $switch-case78 $switch-case79 $switch-case80 $__rjto$31
                                (i32.and
                                 (i32.load
                                  (local.get $2)
                                 )
                                 (i32.const 3)
                                )
                               )
                              )
                              (i32.store offset=4
                               (i32.load
                                (local.get $1)
                               )
                               (i32.const 16193)
                              )
                              (br $switch76)
                             )
                             (call $_fixedtables
                              (i32.load
                               (local.get $1)
                              )
                             )
                             (i32.store offset=4
                              (i32.load
                               (local.get $1)
                              )
                              (i32.const 16199)
                             )
                             (br_if $__rjti$24
                              (i32.eq
                               (i32.load
                                (local.get $21)
                               )
                               (i32.const 6)
                              )
                             )
                             (br $switch76)
                            )
                            (i32.store offset=4
                             (i32.load
                              (local.get $1)
                             )
                             (i32.const 16196)
                            )
                            (br $switch76)
                           )
                           (i32.store offset=24
                            (i32.load
                             (local.get $6)
                            )
                            (i32.const 24043)
                           )
                           (i32.store offset=4
                            (i32.load
                             (local.get $1)
                            )
                            (i32.const 16209)
                           )
                          )
                          (i32.store
                           (local.get $2)
                           (i32.shr_u
                            (i32.load
                             (local.get $2)
                            )
                            (i32.const 2)
                           )
                          )
                          (i32.store
                           (local.get $3)
                           (i32.sub
                            (i32.load
                             (local.get $3)
                            )
                            (i32.const 2)
                           )
                          )
                          (br $label$continue$L10)
                         )
                         (i32.store offset=4
                          (i32.load
                           (local.get $1)
                          )
                          (i32.const 16200)
                         )
                         (br $__rjti$15)
                        )
                        (if
                         (i32.and
                          (i32.load offset=20
                           (i32.load
                            (local.get $1)
                           )
                          )
                          (i32.const 1024)
                         )
                         (block
                          (i32.store
                           (local.get $7)
                           (i32.load offset=68
                            (i32.load
                             (local.get $1)
                            )
                           )
                          )
                          (if
                           (i32.gt_u
                            (i32.load
                             (local.get $7)
                            )
                            (i32.load
                             (local.get $4)
                            )
                           )
                           (i32.store
                            (local.get $7)
                            (i32.load
                             (local.get $4)
                            )
                           )
                          )
                          (if
                           (i32.load
                            (local.get $7)
                           )
                           (block
                            (if
                             (i32.load offset=36
                              (i32.load
                               (local.get $1)
                              )
                             )
                             (if
                              (i32.load offset=16
                               (i32.load offset=36
                                (i32.load
                                 (local.get $1)
                                )
                               )
                              )
                              (block
                               (i32.store
                                (local.get $13)
                                (i32.sub
                                 (i32.load offset=20
                                  (i32.load offset=36
                                   (i32.load
                                    (local.get $1)
                                   )
                                  )
                                 )
                                 (i32.load offset=68
                                  (i32.load
                                   (local.get $1)
                                  )
                                 )
                                )
                               )
                               (drop
                                (call $_memcpy
                                 (i32.add
                                  (i32.load offset=16
                                   (i32.load offset=36
                                    (i32.load
                                     (local.get $1)
                                    )
                                   )
                                  )
                                  (i32.load
                                   (local.get $13)
                                  )
                                 )
                                 (i32.load
                                  (local.get $5)
                                 )
                                 (if (result i32)
                                  (i32.gt_u
                                   (i32.add
                                    (i32.load
                                     (local.get $13)
                                    )
                                    (i32.load
                                     (local.get $7)
                                    )
                                   )
                                   (i32.load offset=24
                                    (i32.load offset=36
                                     (i32.load
                                      (local.get $1)
                                     )
                                    )
                                   )
                                  )
                                  (i32.sub
                                   (i32.load offset=24
                                    (i32.load offset=36
                                     (i32.load
                                      (local.get $1)
                                     )
                                    )
                                   )
                                   (i32.load
                                    (local.get $13)
                                   )
                                  )
                                  (i32.load
                                   (local.get $7)
                                  )
                                 )
                                )
                               )
                              )
                             )
                            )
                            (if
                             (i32.and
                              (i32.load offset=20
                               (i32.load
                                (local.get $1)
                               )
                              )
                              (i32.const 512)
                             )
                             (if
                              (i32.and
                               (i32.load offset=12
                                (i32.load
                                 (local.get $1)
                                )
                               )
                               (i32.const 4)
                              )
                              (block
                               (local.set $0
                                (call $_crc32
                                 (i32.load offset=28
                                  (i32.load
                                   (local.get $1)
                                  )
                                 )
                                 (i32.load
                                  (local.get $5)
                                 )
                                 (i32.load
                                  (local.get $7)
                                 )
                                )
                               )
                               (i32.store offset=28
                                (i32.load
                                 (local.get $1)
                                )
                                (local.get $0)
                               )
                              )
                             )
                            )
                            (i32.store
                             (local.get $4)
                             (i32.sub
                              (i32.load
                               (local.get $4)
                              )
                              (i32.load
                               (local.get $7)
                              )
                             )
                            )
                            (i32.store
                             (local.get $5)
                             (i32.add
                              (i32.load
                               (local.get $7)
                              )
                              (i32.load
                               (local.get $5)
                              )
                             )
                            )
                            (i32.store
                             (local.tee $0
                              (i32.add
                               (i32.load
                                (local.get $1)
                               )
                               (i32.const 68)
                              )
                             )
                             (i32.sub
                              (i32.load
                               (local.get $0)
                              )
                              (i32.load
                               (local.get $7)
                              )
                             )
                            )
                           )
                          )
                          (br_if $label$break$L10
                           (i32.load offset=68
                            (i32.load
                             (local.get $1)
                            )
                           )
                          )
                         )
                        )
                        (i32.store offset=68
                         (i32.load
                          (local.get $1)
                         )
                         (i32.const 0)
                        )
                        (i32.store offset=4
                         (i32.load
                          (local.get $1)
                         )
                         (i32.const 16186)
                        )
                        (br $__rjti$16)
                       )
                       (if
                        (i32.and
                         (i32.ge_u
                          (i32.load
                           (local.get $4)
                          )
                          (i32.const 6)
                         )
                         (i32.ge_u
                          (i32.load
                           (local.get $11)
                          )
                          (i32.const 258)
                         )
                        )
                        (block
                         (i32.store offset=12
                          (i32.load
                           (local.get $6)
                          )
                          (i32.load
                           (local.get $16)
                          )
                         )
                         (i32.store offset=16
                          (i32.load
                           (local.get $6)
                          )
                          (i32.load
                           (local.get $11)
                          )
                         )
                         (i32.store
                          (i32.load
                           (local.get $6)
                          )
                          (i32.load
                           (local.get $5)
                          )
                         )
                         (i32.store offset=4
                          (i32.load
                           (local.get $6)
                          )
                          (i32.load
                           (local.get $4)
                          )
                         )
                         (i32.store offset=60
                          (i32.load
                           (local.get $1)
                          )
                          (i32.load
                           (local.get $2)
                          )
                         )
                         (i32.store
                          (i32.sub
                           (i32.load
                            (local.get $1)
                           )
                           (i32.const -64)
                          )
                          (i32.load
                           (local.get $3)
                          )
                         )
                         (call $_inflate_fast
                          (i32.load
                           (local.get $6)
                          )
                          (i32.load
                           (local.get $12)
                          )
                         )
                         (i32.store
                          (local.get $16)
                          (i32.load offset=12
                           (i32.load
                            (local.get $6)
                           )
                          )
                         )
                         (i32.store
                          (local.get $11)
                          (i32.load offset=16
                           (i32.load
                            (local.get $6)
                           )
                          )
                         )
                         (i32.store
                          (local.get $5)
                          (i32.load
                           (i32.load
                            (local.get $6)
                           )
                          )
                         )
                         (i32.store
                          (local.get $4)
                          (i32.load offset=4
                           (i32.load
                            (local.get $6)
                           )
                          )
                         )
                         (i32.store
                          (local.get $2)
                          (i32.load offset=60
                           (i32.load
                            (local.get $1)
                           )
                          )
                         )
                         (i32.store
                          (local.get $3)
                          (i32.load
                           (i32.sub
                            (i32.load
                             (local.get $1)
                            )
                            (i32.const -64)
                           )
                          )
                         )
                         (br_if $label$continue$L10
                          (i32.ne
                           (i32.load offset=4
                            (i32.load
                             (local.get $1)
                            )
                           )
                           (i32.const 16191)
                          )
                         )
                         (i32.store
                          (i32.add
                           (i32.load
                            (local.get $1)
                           )
                           (i32.const 7112)
                          )
                          (i32.const -1)
                         )
                         (br $label$continue$L10)
                        )
                       )
                       (i32.store
                        (i32.add
                         (i32.load
                          (local.get $1)
                         )
                         (i32.const 7112)
                        )
                        (i32.const 0)
                       )
                       (loop $while-in85
                        (block $while-out84
                         (i32.store align=2
                          (local.get $8)
                          (i32.load align=2
                           (i32.add
                            (i32.load offset=80
                             (i32.load
                              (local.get $1)
                             )
                            )
                            (i32.shl
                             (i32.and
                              (i32.load
                               (local.get $2)
                              )
                              (i32.sub
                               (i32.shl
                                (i32.const 1)
                                (i32.load offset=88
                                 (i32.load
                                  (local.get $1)
                                 )
                                )
                               )
                               (i32.const 1)
                              )
                             )
                             (i32.const 2)
                            )
                           )
                          )
                         )
                         (br_if $while-out84
                          (i32.le_u
                           (i32.load8_u offset=1
                            (local.get $8)
                           )
                           (i32.load
                            (local.get $3)
                           )
                          )
                         )
                         (br_if $label$break$L10
                          (i32.eqz
                           (i32.load
                            (local.get $4)
                           )
                          )
                         )
                         (i32.store
                          (local.get $4)
                          (i32.add
                           (i32.load
                            (local.get $4)
                           )
                           (i32.const -1)
                          )
                         )
                         (i32.store
                          (local.get $5)
                          (i32.add
                           (local.tee $0
                            (i32.load
                             (local.get $5)
                            )
                           )
                           (i32.const 1)
                          )
                         )
                         (i32.store
                          (local.get $2)
                          (i32.add
                           (i32.load
                            (local.get $2)
                           )
                           (i32.shl
                            (i32.load8_u
                             (local.get $0)
                            )
                            (i32.load
                             (local.get $3)
                            )
                           )
                          )
                         )
                         (i32.store
                          (local.get $3)
                          (i32.add
                           (i32.load
                            (local.get $3)
                           )
                           (i32.const 8)
                          )
                         )
                         (br $while-in85)
                        )
                       )
                       (if
                        (i32.load8_u
                         (local.get $8)
                        )
                        (if
                         (i32.eqz
                          (i32.and
                           (i32.load8_u
                            (local.get $8)
                           )
                           (i32.const 240)
                          )
                         )
                         (block
                          (i32.store align=2
                           (local.get $14)
                           (i32.load align=2
                            (local.get $8)
                           )
                          )
                          (loop $while-in87
                           (block $while-out86
                            (i32.store align=2
                             (local.get $8)
                             (i32.load align=2
                              (i32.add
                               (i32.load offset=80
                                (i32.load
                                 (local.get $1)
                                )
                               )
                               (i32.shl
                                (i32.add
                                 (i32.load16_u offset=2
                                  (local.get $14)
                                 )
                                 (i32.shr_u
                                  (i32.and
                                   (i32.load
                                    (local.get $2)
                                   )
                                   (i32.sub
                                    (i32.shl
                                     (i32.const 1)
                                     (i32.add
                                      (i32.load8_u offset=1
                                       (local.get $14)
                                      )
                                      (i32.load8_u
                                       (local.get $14)
                                      )
                                     )
                                    )
                                    (i32.const 1)
                                   )
                                  )
                                  (i32.load8_u offset=1
                                   (local.get $14)
                                  )
                                 )
                                )
                                (i32.const 2)
                               )
                              )
                             )
                            )
                            (br_if $while-out86
                             (i32.le_u
                              (i32.add
                               (i32.load8_u offset=1
                                (local.get $14)
                               )
                               (i32.load8_u offset=1
                                (local.get $8)
                               )
                              )
                              (i32.load
                               (local.get $3)
                              )
                             )
                            )
                            (br_if $label$break$L10
                             (i32.eqz
                              (i32.load
                               (local.get $4)
                              )
                             )
                            )
                            (i32.store
                             (local.get $4)
                             (i32.add
                              (i32.load
                               (local.get $4)
                              )
                              (i32.const -1)
                             )
                            )
                            (i32.store
                             (local.get $5)
                             (i32.add
                              (local.tee $0
                               (i32.load
                                (local.get $5)
                               )
                              )
                              (i32.const 1)
                             )
                            )
                            (i32.store
                             (local.get $2)
                             (i32.add
                              (i32.load
                               (local.get $2)
                              )
                              (i32.shl
                               (i32.load8_u
                                (local.get $0)
                               )
                               (i32.load
                                (local.get $3)
                               )
                              )
                             )
                            )
                            (i32.store
                             (local.get $3)
                             (i32.add
                              (i32.load
                               (local.get $3)
                              )
                              (i32.const 8)
                             )
                            )
                            (br $while-in87)
                           )
                          )
                          (i32.store
                           (local.get $2)
                           (i32.shr_u
                            (i32.load
                             (local.get $2)
                            )
                            (i32.load8_u offset=1
                             (local.get $14)
                            )
                           )
                          )
                          (i32.store
                           (local.get $3)
                           (i32.sub
                            (i32.load
                             (local.get $3)
                            )
                            (i32.load8_u offset=1
                             (local.get $14)
                            )
                           )
                          )
                          (i32.store
                           (local.tee $0
                            (i32.add
                             (i32.load
                              (local.get $1)
                             )
                             (i32.const 7112)
                            )
                           )
                           (i32.add
                            (i32.load8_u offset=1
                             (local.get $14)
                            )
                            (i32.load
                             (local.get $0)
                            )
                           )
                          )
                         )
                        )
                       )
                       (i32.store
                        (local.get $2)
                        (i32.shr_u
                         (i32.load
                          (local.get $2)
                         )
                         (i32.load8_u offset=1
                          (local.get $8)
                         )
                        )
                       )
                       (i32.store
                        (local.get $3)
                        (i32.sub
                         (i32.load
                          (local.get $3)
                         )
                         (i32.load8_u offset=1
                          (local.get $8)
                         )
                        )
                       )
                       (i32.store
                        (local.tee $0
                         (i32.add
                          (i32.load
                           (local.get $1)
                          )
                          (i32.const 7112)
                         )
                        )
                        (i32.add
                         (i32.load8_u offset=1
                          (local.get $8)
                         )
                         (i32.load
                          (local.get $0)
                         )
                        )
                       )
                       (i32.store offset=68
                        (i32.load
                         (local.get $1)
                        )
                        (i32.load16_u offset=2
                         (local.get $8)
                        )
                       )
                       (if
                        (i32.eqz
                         (i32.load8_u
                          (local.get $8)
                         )
                        )
                        (block
                         (i32.store offset=4
                          (i32.load
                           (local.get $1)
                          )
                          (i32.const 16205)
                         )
                         (br $label$continue$L10)
                        )
                       )
                       (if
                        (i32.and
                         (i32.load8_u
                          (local.get $8)
                         )
                         (i32.const 32)
                        )
                        (block
                         (i32.store
                          (i32.add
                           (i32.load
                            (local.get $1)
                           )
                           (i32.const 7112)
                          )
                          (i32.const -1)
                         )
                         (i32.store offset=4
                          (i32.load
                           (local.get $1)
                          )
                          (i32.const 16191)
                         )
                         (br $label$continue$L10)
                        )
                       )
                       (if
                        (i32.and
                         (i32.load8_u
                          (local.get $8)
                         )
                         (i32.const 64)
                        )
                        (block
                         (i32.store offset=24
                          (i32.load
                           (local.get $6)
                          )
                          (i32.const 24477)
                         )
                         (i32.store offset=4
                          (i32.load
                           (local.get $1)
                          )
                          (i32.const 16209)
                         )
                        )
                        (block
                         (i32.store offset=76
                          (i32.load
                           (local.get $1)
                          )
                          (i32.and
                           (i32.load8_u
                            (local.get $8)
                           )
                           (i32.const 15)
                          )
                         )
                         (i32.store offset=4
                          (i32.load
                           (local.get $1)
                          )
                          (i32.const 16201)
                         )
                         (br $__rjti$17)
                        )
                       )
                       (br $label$continue$L10)
                      )
                      (if
                       (i32.and
                        (i32.load offset=20
                         (i32.load
                          (local.get $1)
                         )
                        )
                        (i32.const 2048)
                       )
                       (block
                        (br_if $label$break$L10
                         (i32.eqz
                          (i32.load
                           (local.get $4)
                          )
                         )
                        )
                        (i32.store
                         (local.get $7)
                         (i32.const 0)
                        )
                        (loop $while-in89
                         (block $while-out88
                          (local.set $0
                           (i32.load
                            (local.get $5)
                           )
                          )
                          (i32.store
                           (local.get $7)
                           (i32.add
                            (local.tee $9
                             (i32.load
                              (local.get $7)
                             )
                            )
                            (i32.const 1)
                           )
                          )
                          (i32.store
                           (local.get $13)
                           (i32.load8_u
                            (i32.add
                             (local.get $0)
                             (local.get $9)
                            )
                           )
                          )
                          (if
                           (i32.load offset=36
                            (i32.load
                             (local.get $1)
                            )
                           )
                           (if
                            (i32.load offset=28
                             (i32.load offset=36
                              (i32.load
                               (local.get $1)
                              )
                             )
                            )
                            (if
                             (i32.lt_u
                              (i32.load offset=68
                               (i32.load
                                (local.get $1)
                               )
                              )
                              (i32.load offset=32
                               (i32.load offset=36
                                (i32.load
                                 (local.get $1)
                                )
                               )
                              )
                             )
                             (block
                              (local.set $9
                               (i32.and
                                (i32.load
                                 (local.get $13)
                                )
                                (i32.const 255)
                               )
                              )
                              (local.set $17
                               (i32.load offset=28
                                (i32.load offset=36
                                 (i32.load
                                  (local.get $1)
                                 )
                                )
                               )
                              )
                              (local.set $0
                               (i32.load
                                (local.tee $20
                                 (i32.add
                                  (i32.load
                                   (local.get $1)
                                  )
                                  (i32.const 68)
                                 )
                                )
                               )
                              )
                              (i32.store
                               (local.get $20)
                               (i32.add
                                (local.get $0)
                                (i32.const 1)
                               )
                              )
                              (i32.store8
                               (i32.add
                                (local.get $0)
                                (local.get $17)
                               )
                               (local.get $9)
                              )
                             )
                            )
                           )
                          )
                          (br_if $while-out88
                           (i32.eqz
                            (i32.load
                             (local.get $13)
                            )
                           )
                          )
                          (br_if $while-in89
                           (i32.lt_u
                            (i32.load
                             (local.get $7)
                            )
                            (i32.load
                             (local.get $4)
                            )
                           )
                          )
                         )
                        )
                        (if
                         (i32.and
                          (i32.load offset=20
                           (i32.load
                            (local.get $1)
                           )
                          )
                          (i32.const 512)
                         )
                         (if
                          (i32.and
                           (i32.load offset=12
                            (i32.load
                             (local.get $1)
                            )
                           )
                           (i32.const 4)
                          )
                          (block
                           (local.set $0
                            (call $_crc32
                             (i32.load offset=28
                              (i32.load
                               (local.get $1)
                              )
                             )
                             (i32.load
                              (local.get $5)
                             )
                             (i32.load
                              (local.get $7)
                             )
                            )
                           )
                           (i32.store offset=28
                            (i32.load
                             (local.get $1)
                            )
                            (local.get $0)
                           )
                          )
                         )
                        )
                        (i32.store
                         (local.get $4)
                         (i32.sub
                          (i32.load
                           (local.get $4)
                          )
                          (i32.load
                           (local.get $7)
                          )
                         )
                        )
                        (i32.store
                         (local.get $5)
                         (i32.add
                          (i32.load
                           (local.get $7)
                          )
                          (i32.load
                           (local.get $5)
                          )
                         )
                        )
                        (br_if $label$break$L10
                         (i32.load
                          (local.get $13)
                         )
                        )
                       )
                       (if
                        (i32.load offset=36
                         (i32.load
                          (local.get $1)
                         )
                        )
                        (i32.store offset=28
                         (i32.load offset=36
                          (i32.load
                           (local.get $1)
                          )
                         )
                         (i32.const 0)
                        )
                       )
                      )
                      (i32.store offset=68
                       (i32.load
                        (local.get $1)
                       )
                       (i32.const 0)
                      )
                      (i32.store offset=4
                       (i32.load
                        (local.get $1)
                       )
                       (i32.const 16187)
                      )
                      (br $__rjti$18)
                     )
                     (if
                      (i32.load offset=76
                       (i32.load
                        (local.get $1)
                       )
                      )
                      (block
                       (loop $while-in91
                        (if
                         (i32.lt_u
                          (i32.load
                           (local.get $3)
                          )
                          (i32.load offset=76
                           (i32.load
                            (local.get $1)
                           )
                          )
                         )
                         (block
                          (br_if $label$break$L10
                           (i32.eqz
                            (i32.load
                             (local.get $4)
                            )
                           )
                          )
                          (i32.store
                           (local.get $4)
                           (i32.add
                            (i32.load
                             (local.get $4)
                            )
                            (i32.const -1)
                           )
                          )
                          (i32.store
                           (local.get $5)
                           (i32.add
                            (local.tee $0
                             (i32.load
                              (local.get $5)
                             )
                            )
                            (i32.const 1)
                           )
                          )
                          (i32.store
                           (local.get $2)
                           (i32.add
                            (i32.load
                             (local.get $2)
                            )
                            (i32.shl
                             (i32.load8_u
                              (local.get $0)
                             )
                             (i32.load
                              (local.get $3)
                             )
                            )
                           )
                          )
                          (i32.store
                           (local.get $3)
                           (i32.add
                            (i32.load
                             (local.get $3)
                            )
                            (i32.const 8)
                           )
                          )
                          (br $while-in91)
                         )
                        )
                       )
                       (i32.store
                        (local.tee $0
                         (i32.add
                          (i32.load
                           (local.get $1)
                          )
                          (i32.const 68)
                         )
                        )
                        (i32.add
                         (i32.load
                          (local.get $0)
                         )
                         (i32.and
                          (i32.load
                           (local.get $2)
                          )
                          (i32.sub
                           (i32.shl
                            (i32.const 1)
                            (i32.load offset=76
                             (i32.load
                              (local.get $1)
                             )
                            )
                           )
                           (i32.const 1)
                          )
                         )
                        )
                       )
                       (i32.store
                        (local.get $2)
                        (i32.shr_u
                         (i32.load
                          (local.get $2)
                         )
                         (i32.load offset=76
                          (i32.load
                           (local.get $1)
                          )
                         )
                        )
                       )
                       (i32.store
                        (local.get $3)
                        (i32.sub
                         (i32.load
                          (local.get $3)
                         )
                         (i32.load offset=76
                          (i32.load
                           (local.get $1)
                          )
                         )
                        )
                       )
                       (i32.store
                        (local.tee $0
                         (i32.add
                          (i32.load
                           (local.get $1)
                          )
                          (i32.const 7112)
                         )
                        )
                        (i32.add
                         (i32.load offset=76
                          (i32.load
                           (local.get $1)
                          )
                         )
                         (i32.load
                          (local.get $0)
                         )
                        )
                       )
                      )
                     )
                     (i32.store
                      (i32.add
                       (i32.load
                        (local.get $1)
                       )
                       (i32.const 7116)
                      )
                      (i32.load offset=68
                       (i32.load
                        (local.get $1)
                       )
                      )
                     )
                     (i32.store offset=4
                      (i32.load
                       (local.get $1)
                      )
                      (i32.const 16202)
                     )
                     (br $__rjti$19)
                    )
                    (if
                     (i32.and
                      (i32.load offset=20
                       (i32.load
                        (local.get $1)
                       )
                      )
                      (i32.const 4096)
                     )
                     (block
                      (br_if $label$break$L10
                       (i32.eqz
                        (i32.load
                         (local.get $4)
                        )
                       )
                      )
                      (i32.store
                       (local.get $7)
                       (i32.const 0)
                      )
                      (loop $while-in95
                       (block $while-out94
                        (local.set $0
                         (i32.load
                          (local.get $5)
                         )
                        )
                        (i32.store
                         (local.get $7)
                         (i32.add
                          (local.tee $9
                           (i32.load
                            (local.get $7)
                           )
                          )
                          (i32.const 1)
                         )
                        )
                        (i32.store
                         (local.get $13)
                         (i32.load8_u
                          (i32.add
                           (local.get $0)
                           (local.get $9)
                          )
                         )
                        )
                        (if
                         (i32.load offset=36
                          (i32.load
                           (local.get $1)
                          )
                         )
                         (if
                          (i32.load offset=36
                           (i32.load offset=36
                            (i32.load
                             (local.get $1)
                            )
                           )
                          )
                          (if
                           (i32.lt_u
                            (i32.load offset=68
                             (i32.load
                              (local.get $1)
                             )
                            )
                            (i32.load offset=40
                             (i32.load offset=36
                              (i32.load
                               (local.get $1)
                              )
                             )
                            )
                           )
                           (block
                            (local.set $9
                             (i32.and
                              (i32.load
                               (local.get $13)
                              )
                              (i32.const 255)
                             )
                            )
                            (local.set $17
                             (i32.load offset=36
                              (i32.load offset=36
                               (i32.load
                                (local.get $1)
                               )
                              )
                             )
                            )
                            (local.set $0
                             (i32.load
                              (local.tee $20
                               (i32.add
                                (i32.load
                                 (local.get $1)
                                )
                                (i32.const 68)
                               )
                              )
                             )
                            )
                            (i32.store
                             (local.get $20)
                             (i32.add
                              (local.get $0)
                              (i32.const 1)
                             )
                            )
                            (i32.store8
                             (i32.add
                              (local.get $0)
                              (local.get $17)
                             )
                             (local.get $9)
                            )
                           )
                          )
                         )
                        )
                        (br_if $while-out94
                         (i32.eqz
                          (i32.load
                           (local.get $13)
                          )
                         )
                        )
                        (br_if $while-in95
                         (i32.lt_u
                          (i32.load
                           (local.get $7)
                          )
                          (i32.load
                           (local.get $4)
                          )
                         )
                        )
                       )
                      )
                      (if
                       (i32.and
                        (i32.load offset=20
                         (i32.load
                          (local.get $1)
                         )
                        )
                        (i32.const 512)
                       )
                       (if
                        (i32.and
                         (i32.load offset=12
                          (i32.load
                           (local.get $1)
                          )
                         )
                         (i32.const 4)
                        )
                        (block
                         (local.set $0
                          (call $_crc32
                           (i32.load offset=28
                            (i32.load
                             (local.get $1)
                            )
                           )
                           (i32.load
                            (local.get $5)
                           )
                           (i32.load
                            (local.get $7)
                           )
                          )
                         )
                         (i32.store offset=28
                          (i32.load
                           (local.get $1)
                          )
                          (local.get $0)
                         )
                        )
                       )
                      )
                      (i32.store
                       (local.get $4)
                       (i32.sub
                        (i32.load
                         (local.get $4)
                        )
                        (i32.load
                         (local.get $7)
                        )
                       )
                      )
                      (i32.store
                       (local.get $5)
                       (i32.add
                        (i32.load
                         (local.get $7)
                        )
                        (i32.load
                         (local.get $5)
                        )
                       )
                      )
                      (br_if $label$break$L10
                       (i32.load
                        (local.get $13)
                       )
                      )
                     )
                     (if
                      (i32.load offset=36
                       (i32.load
                        (local.get $1)
                       )
                      )
                      (i32.store offset=36
                       (i32.load offset=36
                        (i32.load
                         (local.get $1)
                        )
                       )
                       (i32.const 0)
                      )
                     )
                    )
                    (i32.store offset=4
                     (i32.load
                      (local.get $1)
                     )
                     (i32.const 16188)
                    )
                    (br $__rjti$20)
                   )
                   (loop $while-in97
                    (block $while-out96
                     (i32.store align=2
                      (local.get $8)
                      (i32.load align=2
                       (i32.add
                        (i32.load offset=84
                         (i32.load
                          (local.get $1)
                         )
                        )
                        (i32.shl
                         (i32.and
                          (i32.load
                           (local.get $2)
                          )
                          (i32.sub
                           (i32.shl
                            (i32.const 1)
                            (i32.load offset=92
                             (i32.load
                              (local.get $1)
                             )
                            )
                           )
                           (i32.const 1)
                          )
                         )
                         (i32.const 2)
                        )
                       )
                      )
                     )
                     (br_if $while-out96
                      (i32.le_u
                       (i32.load8_u offset=1
                        (local.get $8)
                       )
                       (i32.load
                        (local.get $3)
                       )
                      )
                     )
                     (br_if $label$break$L10
                      (i32.eqz
                       (i32.load
                        (local.get $4)
                       )
                      )
                     )
                     (i32.store
                      (local.get $4)
                      (i32.add
                       (i32.load
                        (local.get $4)
                       )
                       (i32.const -1)
                      )
                     )
                     (i32.store
                      (local.get $5)
                      (i32.add
                       (local.tee $0
                        (i32.load
                         (local.get $5)
                        )
                       )
                       (i32.const 1)
                      )
                     )
                     (i32.store
                      (local.get $2)
                      (i32.add
                       (i32.load
                        (local.get $2)
                       )
                       (i32.shl
                        (i32.load8_u
                         (local.get $0)
                        )
                        (i32.load
                         (local.get $3)
                        )
                       )
                      )
                     )
                     (i32.store
                      (local.get $3)
                      (i32.add
                       (i32.load
                        (local.get $3)
                       )
                       (i32.const 8)
                      )
                     )
                     (br $while-in97)
                    )
                   )
                   (if
                    (i32.eqz
                     (i32.and
                      (i32.load8_u
                       (local.get $8)
                      )
                      (i32.const 240)
                     )
                    )
                    (block
                     (i32.store align=2
                      (local.get $14)
                      (i32.load align=2
                       (local.get $8)
                      )
                     )
                     (loop $while-in99
                      (block $while-out98
                       (i32.store align=2
                        (local.get $8)
                        (i32.load align=2
                         (i32.add
                          (i32.load offset=84
                           (i32.load
                            (local.get $1)
                           )
                          )
                          (i32.shl
                           (i32.add
                            (i32.load16_u offset=2
                             (local.get $14)
                            )
                            (i32.shr_u
                             (i32.and
                              (i32.load
                               (local.get $2)
                              )
                              (i32.sub
                               (i32.shl
                                (i32.const 1)
                                (i32.add
                                 (i32.load8_u offset=1
                                  (local.get $14)
                                 )
                                 (i32.load8_u
                                  (local.get $14)
                                 )
                                )
                               )
                               (i32.const 1)
                              )
                             )
                             (i32.load8_u offset=1
                              (local.get $14)
                             )
                            )
                           )
                           (i32.const 2)
                          )
                         )
                        )
                       )
                       (br_if $while-out98
                        (i32.le_u
                         (i32.add
                          (i32.load8_u offset=1
                           (local.get $14)
                          )
                          (i32.load8_u offset=1
                           (local.get $8)
                          )
                         )
                         (i32.load
                          (local.get $3)
                         )
                        )
                       )
                       (br_if $label$break$L10
                        (i32.eqz
                         (i32.load
                          (local.get $4)
                         )
                        )
                       )
                       (i32.store
                        (local.get $4)
                        (i32.add
                         (i32.load
                          (local.get $4)
                         )
                         (i32.const -1)
                        )
                       )
                       (i32.store
                        (local.get $5)
                        (i32.add
                         (local.tee $0
                          (i32.load
                           (local.get $5)
                          )
                         )
                         (i32.const 1)
                        )
                       )
                       (i32.store
                        (local.get $2)
                        (i32.add
                         (i32.load
                          (local.get $2)
                         )
                         (i32.shl
                          (i32.load8_u
                           (local.get $0)
                          )
                          (i32.load
                           (local.get $3)
                          )
                         )
                        )
                       )
                       (i32.store
                        (local.get $3)
                        (i32.add
                         (i32.load
                          (local.get $3)
                         )
                         (i32.const 8)
                        )
                       )
                       (br $while-in99)
                      )
                     )
                     (i32.store
                      (local.get $2)
                      (i32.shr_u
                       (i32.load
                        (local.get $2)
                       )
                       (i32.load8_u offset=1
                        (local.get $14)
                       )
                      )
                     )
                     (i32.store
                      (local.get $3)
                      (i32.sub
                       (i32.load
                        (local.get $3)
                       )
                       (i32.load8_u offset=1
                        (local.get $14)
                       )
                      )
                     )
                     (i32.store
                      (local.tee $0
                       (i32.add
                        (i32.load
                         (local.get $1)
                        )
                        (i32.const 7112)
                       )
                      )
                      (i32.add
                       (i32.load8_u offset=1
                        (local.get $14)
                       )
                       (i32.load
                        (local.get $0)
                       )
                      )
                     )
                    )
                   )
                   (i32.store
                    (local.get $2)
                    (i32.shr_u
                     (i32.load
                      (local.get $2)
                     )
                     (i32.load8_u offset=1
                      (local.get $8)
                     )
                    )
                   )
                   (i32.store
                    (local.get $3)
                    (i32.sub
                     (i32.load
                      (local.get $3)
                     )
                     (i32.load8_u offset=1
                      (local.get $8)
                     )
                    )
                   )
                   (i32.store
                    (local.tee $0
                     (i32.add
                      (i32.load
                       (local.get $1)
                      )
                      (i32.const 7112)
                     )
                    )
                    (i32.add
                     (i32.load8_u offset=1
                      (local.get $8)
                     )
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                   (if
                    (i32.and
                     (i32.load8_u
                      (local.get $8)
                     )
                     (i32.const 64)
                    )
                    (block
                     (i32.store offset=24
                      (i32.load
                       (local.get $6)
                      )
                      (i32.const 24455)
                     )
                     (i32.store offset=4
                      (i32.load
                       (local.get $1)
                      )
                      (i32.const 16209)
                     )
                    )
                    (block
                     (i32.store offset=72
                      (i32.load
                       (local.get $1)
                      )
                      (i32.load16_u offset=2
                       (local.get $8)
                      )
                     )
                     (i32.store offset=76
                      (i32.load
                       (local.get $1)
                      )
                      (i32.and
                       (i32.load8_u
                        (local.get $8)
                       )
                       (i32.const 15)
                      )
                     )
                     (i32.store offset=4
                      (i32.load
                       (local.get $1)
                      )
                      (i32.const 16203)
                     )
                     (br $__rjti$21)
                    )
                   )
                   (br $label$continue$L10)
                  )
                  (if
                   (i32.and
                    (i32.load offset=20
                     (i32.load
                      (local.get $1)
                     )
                    )
                    (i32.const 512)
                   )
                   (block
                    (loop $while-in103
                     (if
                      (i32.lt_u
                       (i32.load
                        (local.get $3)
                       )
                       (i32.const 16)
                      )
                      (block
                       (br_if $label$break$L10
                        (i32.eqz
                         (i32.load
                          (local.get $4)
                         )
                        )
                       )
                       (i32.store
                        (local.get $4)
                        (i32.add
                         (i32.load
                          (local.get $4)
                         )
                         (i32.const -1)
                        )
                       )
                       (i32.store
                        (local.get $5)
                        (i32.add
                         (local.tee $0
                          (i32.load
                           (local.get $5)
                          )
                         )
                         (i32.const 1)
                        )
                       )
                       (i32.store
                        (local.get $2)
                        (i32.add
                         (i32.load
                          (local.get $2)
                         )
                         (i32.shl
                          (i32.load8_u
                           (local.get $0)
                          )
                          (i32.load
                           (local.get $3)
                          )
                         )
                        )
                       )
                       (i32.store
                        (local.get $3)
                        (i32.add
                         (i32.load
                          (local.get $3)
                         )
                         (i32.const 8)
                        )
                       )
                       (br $while-in103)
                      )
                     )
                    )
                    (if
                     (i32.and
                      (i32.load offset=12
                       (i32.load
                        (local.get $1)
                       )
                      )
                      (i32.const 4)
                     )
                     (if
                      (i32.ne
                       (i32.load
                        (local.get $2)
                       )
                       (i32.and
                        (i32.load offset=28
                         (i32.load
                          (local.get $1)
                         )
                        )
                        (i32.const 65535)
                       )
                      )
                      (block
                       (i32.store offset=24
                        (i32.load
                         (local.get $6)
                        )
                        (i32.const 24023)
                       )
                       (i32.store offset=4
                        (i32.load
                         (local.get $1)
                        )
                        (i32.const 16209)
                       )
                       (br $label$continue$L10)
                      )
                     )
                    )
                    (i32.store
                     (local.get $2)
                     (i32.const 0)
                    )
                    (i32.store
                     (local.get $3)
                     (i32.const 0)
                    )
                   )
                  )
                  (if
                   (i32.load offset=36
                    (i32.load
                     (local.get $1)
                    )
                   )
                   (block
                    (i32.store offset=44
                     (i32.load offset=36
                      (i32.load
                       (local.get $1)
                      )
                     )
                     (i32.and
                      (i32.shr_s
                       (i32.load offset=20
                        (i32.load
                         (local.get $1)
                        )
                       )
                       (i32.const 9)
                      )
                      (i32.const 1)
                     )
                    )
                    (i32.store offset=48
                     (i32.load offset=36
                      (i32.load
                       (local.get $1)
                      )
                     )
                     (i32.const 1)
                    )
                   )
                  )
                  (local.set $0
                   (call $_crc32
                    (i32.const 0)
                    (i32.const 0)
                    (i32.const 0)
                   )
                  )
                  (i32.store offset=28
                   (i32.load
                    (local.get $1)
                   )
                   (local.get $0)
                  )
                  (i32.store offset=48
                   (i32.load
                    (local.get $6)
                   )
                   (local.get $0)
                  )
                  (i32.store offset=4
                   (i32.load
                    (local.get $1)
                   )
                   (i32.const 16191)
                  )
                  (br $label$continue$L10)
                 )
                 (if
                  (i32.load offset=76
                   (i32.load
                    (local.get $1)
                   )
                  )
                  (block
                   (loop $while-in105
                    (if
                     (i32.lt_u
                      (i32.load
                       (local.get $3)
                      )
                      (i32.load offset=76
                       (i32.load
                        (local.get $1)
                       )
                      )
                     )
                     (block
                      (br_if $label$break$L10
                       (i32.eqz
                        (i32.load
                         (local.get $4)
                        )
                       )
                      )
                      (i32.store
                       (local.get $4)
                       (i32.add
                        (i32.load
                         (local.get $4)
                        )
                        (i32.const -1)
                       )
                      )
                      (i32.store
                       (local.get $5)
                       (i32.add
                        (local.tee $0
                         (i32.load
                          (local.get $5)
                         )
                        )
                        (i32.const 1)
                       )
                      )
                      (i32.store
                       (local.get $2)
                       (i32.add
                        (i32.load
                         (local.get $2)
                        )
                        (i32.shl
                         (i32.load8_u
                          (local.get $0)
                         )
                         (i32.load
                          (local.get $3)
                         )
                        )
                       )
                      )
                      (i32.store
                       (local.get $3)
                       (i32.add
                        (i32.load
                         (local.get $3)
                        )
                        (i32.const 8)
                       )
                      )
                      (br $while-in105)
                     )
                    )
                   )
                   (i32.store
                    (local.tee $0
                     (i32.add
                      (i32.load
                       (local.get $1)
                      )
                      (i32.const 72)
                     )
                    )
                    (i32.add
                     (i32.load
                      (local.get $0)
                     )
                     (i32.and
                      (i32.load
                       (local.get $2)
                      )
                      (i32.sub
                       (i32.shl
                        (i32.const 1)
                        (i32.load offset=76
                         (i32.load
                          (local.get $1)
                         )
                        )
                       )
                       (i32.const 1)
                      )
                     )
                    )
                   )
                   (i32.store
                    (local.get $2)
                    (i32.shr_u
                     (i32.load
                      (local.get $2)
                     )
                     (i32.load offset=76
                      (i32.load
                       (local.get $1)
                      )
                     )
                    )
                   )
                   (i32.store
                    (local.get $3)
                    (i32.sub
                     (i32.load
                      (local.get $3)
                     )
                     (i32.load offset=76
                      (i32.load
                       (local.get $1)
                      )
                     )
                    )
                   )
                   (i32.store
                    (local.tee $0
                     (i32.add
                      (i32.load
                       (local.get $1)
                      )
                      (i32.const 7112)
                     )
                    )
                    (i32.add
                     (i32.load offset=76
                      (i32.load
                       (local.get $1)
                      )
                     )
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                  )
                 )
                 (i32.store offset=4
                  (i32.load
                   (local.get $1)
                  )
                  (i32.const 16204)
                 )
                )
                (br_if $label$break$L10
                 (i32.eqz
                  (i32.load
                   (local.get $11)
                  )
                 )
                )
                (i32.store
                 (local.get $7)
                 (i32.sub
                  (i32.load
                   (local.get $12)
                  )
                  (i32.load
                   (local.get $11)
                  )
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load offset=72
                   (i32.load
                    (local.get $1)
                   )
                  )
                  (i32.load
                   (local.get $7)
                  )
                 )
                 (block
                  (i32.store
                   (local.get $7)
                   (i32.sub
                    (i32.load offset=72
                     (i32.load
                      (local.get $1)
                     )
                    )
                    (i32.load
                     (local.get $7)
                    )
                   )
                  )
                  (if
                   (i32.gt_u
                    (i32.load
                     (local.get $7)
                    )
                    (i32.load offset=48
                     (i32.load
                      (local.get $1)
                     )
                    )
                   )
                   (if
                    (i32.load
                     (i32.add
                      (i32.load
                       (local.get $1)
                      )
                      (i32.const 7108)
                     )
                    )
                    (block
                     (i32.store offset=24
                      (i32.load
                       (local.get $6)
                      )
                      (i32.const 24425)
                     )
                     (i32.store offset=4
                      (i32.load
                       (local.get $1)
                      )
                      (i32.const 16209)
                     )
                     (br $label$continue$L10)
                    )
                   )
                  )
                  (local.set $0
                   (i32.load
                    (local.get $1)
                   )
                  )
                  (if
                   (i32.gt_u
                    (i32.load
                     (local.get $7)
                    )
                    (i32.load offset=52
                     (i32.load
                      (local.get $1)
                     )
                    )
                   )
                   (block
                    (i32.store
                     (local.get $7)
                     (i32.sub
                      (i32.load
                       (local.get $7)
                      )
                      (i32.load offset=52
                       (local.get $0)
                      )
                     )
                    )
                    (i32.store
                     (local.get $23)
                     (i32.add
                      (i32.load offset=56
                       (i32.load
                        (local.get $1)
                       )
                      )
                      (i32.sub
                       (i32.load offset=44
                        (i32.load
                         (local.get $1)
                        )
                       )
                       (i32.load
                        (local.get $7)
                       )
                      )
                     )
                    )
                   )
                   (i32.store
                    (local.get $23)
                    (i32.add
                     (i32.load offset=56
                      (local.get $0)
                     )
                     (i32.sub
                      (i32.load offset=52
                       (i32.load
                        (local.get $1)
                       )
                      )
                      (i32.load
                       (local.get $7)
                      )
                     )
                    )
                   )
                  )
                  (if
                   (i32.gt_u
                    (i32.load
                     (local.get $7)
                    )
                    (i32.load offset=68
                     (i32.load
                      (local.get $1)
                     )
                    )
                   )
                   (i32.store
                    (local.get $7)
                    (i32.load offset=68
                     (i32.load
                      (local.get $1)
                     )
                    )
                   )
                  )
                 )
                 (block
                  (i32.store
                   (local.get $23)
                   (i32.sub
                    (i32.load
                     (local.get $16)
                    )
                    (i32.load offset=72
                     (i32.load
                      (local.get $1)
                     )
                    )
                   )
                  )
                  (i32.store
                   (local.get $7)
                   (i32.load offset=68
                    (i32.load
                     (local.get $1)
                    )
                   )
                  )
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (local.get $7)
                  )
                  (i32.load
                   (local.get $11)
                  )
                 )
                 (i32.store
                  (local.get $7)
                  (i32.load
                   (local.get $11)
                  )
                 )
                )
                (i32.store
                 (local.get $11)
                 (i32.sub
                  (i32.load
                   (local.get $11)
                  )
                  (i32.load
                   (local.get $7)
                  )
                 )
                )
                (i32.store
                 (local.tee $0
                  (i32.add
                   (i32.load
                    (local.get $1)
                   )
                   (i32.const 68)
                  )
                 )
                 (i32.sub
                  (i32.load
                   (local.get $0)
                  )
                  (i32.load
                   (local.get $7)
                  )
                 )
                )
                (loop $while-in109
                 (i32.store
                  (local.get $23)
                  (i32.add
                   (local.tee $0
                    (i32.load
                     (local.get $23)
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (local.set $0
                  (i32.load8_s
                   (local.get $0)
                  )
                 )
                 (i32.store
                  (local.get $16)
                  (i32.add
                   (local.tee $9
                    (i32.load
                     (local.get $16)
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (i32.store8
                  (local.get $9)
                  (local.get $0)
                 )
                 (i32.store
                  (local.get $7)
                  (local.tee $0
                   (i32.add
                    (i32.load
                     (local.get $7)
                    )
                    (i32.const -1)
                   )
                  )
                 )
                 (br_if $while-in109
                  (local.get $0)
                 )
                )
                (if
                 (i32.eqz
                  (i32.load offset=68
                   (i32.load
                    (local.get $1)
                   )
                  )
                 )
                 (i32.store offset=4
                  (i32.load
                   (local.get $1)
                  )
                  (i32.const 16200)
                 )
                )
                (br $label$continue$L10)
               )
              )
              (br $__rjto$31)
             )
             (i32.store offset=12
              (i32.load
               (local.get $6)
              )
              (i32.load
               (local.get $16)
              )
             )
             (i32.store offset=16
              (i32.load
               (local.get $6)
              )
              (i32.load
               (local.get $11)
              )
             )
             (i32.store
              (i32.load
               (local.get $6)
              )
              (i32.load
               (local.get $5)
              )
             )
             (i32.store offset=4
              (i32.load
               (local.get $6)
              )
              (i32.load
               (local.get $4)
              )
             )
             (i32.store offset=60
              (i32.load
               (local.get $1)
              )
              (i32.load
               (local.get $2)
              )
             )
             (i32.store
              (i32.sub
               (i32.load
                (local.get $1)
               )
               (i32.const -64)
              )
              (i32.load
               (local.get $3)
              )
             )
             (i32.store
              (local.get $18)
              (i32.const 2)
             )
             (local.set $0
              (i32.load
               (local.get $18)
              )
             )
             (global.set $STACKTOP
              (local.get $10)
             )
             (return
              (local.get $0)
             )
            )
            (i32.store
             (local.get $2)
             (i32.shr_u
              (i32.load
               (local.get $2)
              )
              (i32.const 2)
             )
            )
            (i32.store
             (local.get $3)
             (i32.sub
              (i32.load
               (local.get $3)
              )
              (i32.const 2)
             )
            )
            (br $__rjto$31)
           )
           (i32.store
            (local.get $2)
            (i32.const 0)
           )
           (i32.store
            (local.get $3)
            (i32.const 0)
           )
           (br $__rjti$30)
          )
          (i32.store
           (local.get $19)
           (i32.const -3)
          )
          (br $__rjto$31)
         )
         (i32.store
          (local.get $18)
          (i32.const -4)
         )
         (local.set $0
          (i32.load
           (local.get $18)
          )
         )
         (global.set $STACKTOP
          (local.get $10)
         )
         (return
          (local.get $0)
         )
        )
        (i32.store
         (local.get $18)
         (i32.const -2)
        )
        (local.set $0
         (i32.load
          (local.get $18)
         )
        )
        (global.set $STACKTOP
         (local.get $10)
        )
        (return
         (local.get $0)
        )
       )
       (i32.store offset=4
        (i32.load
         (local.get $1)
        )
        (i32.const 16208)
       )
      )
      (i32.store
       (local.get $19)
       (i32.const 1)
      )
     )
     (i32.store offset=12
      (i32.load
       (local.get $6)
      )
      (i32.load
       (local.get $16)
      )
     )
     (i32.store offset=16
      (i32.load
       (local.get $6)
      )
      (i32.load
       (local.get $11)
      )
     )
     (i32.store
      (i32.load
       (local.get $6)
      )
      (i32.load
       (local.get $5)
      )
     )
     (i32.store offset=4
      (i32.load
       (local.get $6)
      )
      (i32.load
       (local.get $4)
      )
     )
     (i32.store offset=60
      (i32.load
       (local.get $1)
      )
      (i32.load
       (local.get $2)
      )
     )
     (i32.store
      (i32.sub
       (i32.load
        (local.get $1)
       )
       (i32.const -64)
      )
      (i32.load
       (local.get $3)
      )
     )
     (block $__rjto$32
      (block $__rjti$32
       (br_if $__rjti$32
        (i32.load offset=44
         (i32.load
          (local.get $1)
         )
        )
       )
       (if
        (i32.ne
         (i32.load
          (local.get $12)
         )
         (i32.load offset=16
          (i32.load
           (local.get $6)
          )
         )
        )
        (if
         (i32.lt_u
          (i32.load offset=4
           (i32.load
            (local.get $1)
           )
          )
          (i32.const 16209)
         )
         (br_if $__rjti$32
          (i32.or
           (i32.ne
            (i32.load
             (local.get $21)
            )
            (i32.const 4)
           )
           (i32.lt_u
            (i32.load offset=4
             (i32.load
              (local.get $1)
             )
            )
            (i32.const 16206)
           )
          )
         )
        )
       )
       (br $__rjto$32)
      )
      (if
       (call $_updatewindow
        (i32.load
         (local.get $6)
        )
        (i32.load offset=12
         (i32.load
          (local.get $6)
         )
        )
        (i32.sub
         (i32.load
          (local.get $12)
         )
         (i32.load offset=16
          (i32.load
           (local.get $6)
          )
         )
        )
       )
       (block
        (i32.store offset=4
         (i32.load
          (local.get $1)
         )
         (i32.const 16210)
        )
        (i32.store
         (local.get $18)
         (i32.const -4)
        )
        (local.set $0
         (i32.load
          (local.get $18)
         )
        )
        (global.set $STACKTOP
         (local.get $10)
        )
        (return
         (local.get $0)
        )
       )
      )
     )
     (i32.store
      (local.get $22)
      (i32.sub
       (i32.load
        (local.get $22)
       )
       (i32.load offset=4
        (i32.load
         (local.get $6)
        )
       )
      )
     )
     (i32.store
      (local.get $12)
      (i32.sub
       (i32.load
        (local.get $12)
       )
       (i32.load offset=16
        (i32.load
         (local.get $6)
        )
       )
      )
     )
     (i32.store
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $6)
        )
        (i32.const 8)
       )
      )
      (i32.add
       (i32.load
        (local.get $22)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $6)
        )
        (i32.const 20)
       )
      )
      (i32.add
       (i32.load
        (local.get $12)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 32)
       )
      )
      (i32.add
       (i32.load
        (local.get $12)
       )
       (i32.load
        (local.get $0)
       )
      )
     )
     (if
      (i32.and
       (i32.ne
        (i32.and
         (i32.load offset=12
          (i32.load
           (local.get $1)
          )
         )
         (i32.const 4)
        )
        (i32.const 0)
       )
       (i32.ne
        (i32.load
         (local.get $12)
        )
        (i32.const 0)
       )
      )
      (block
       (local.set $0
        (i32.load offset=28
         (i32.load
          (local.get $1)
         )
        )
       )
       (local.set $9
        (i32.sub
         (i32.load offset=12
          (i32.load
           (local.get $6)
          )
         )
         (i32.load
          (local.get $12)
         )
        )
       )
       (local.set $2
        (i32.load
         (local.get $12)
        )
       )
       (local.set $0
        (if (result i32)
         (i32.load offset=20
          (i32.load
           (local.get $1)
          )
         )
         (call $_crc32
          (local.get $0)
          (local.get $9)
          (local.get $2)
         )
         (call $_adler32
          (local.get $0)
          (local.get $9)
          (local.get $2)
         )
        )
       )
       (i32.store offset=28
        (i32.load
         (local.get $1)
        )
        (local.get $0)
       )
       (i32.store offset=48
        (i32.load
         (local.get $6)
        )
        (local.get $0)
       )
      )
     )
     (i32.store offset=44
      (i32.load
       (local.get $6)
      )
      (i32.add
       (i32.add
        (i32.add
         (i32.load
          (i32.sub
           (i32.load
            (local.get $1)
           )
           (i32.const -64)
          )
         )
         (select
          (i32.const 64)
          (i32.const 0)
          (i32.load offset=8
           (i32.load
            (local.get $1)
           )
          )
         )
        )
        (select
         (i32.const 128)
         (i32.const 0)
         (i32.eq
          (i32.load offset=4
           (i32.load
            (local.get $1)
           )
          )
          (i32.const 16191)
         )
        )
       )
       (select
        (i32.const 256)
        (i32.const 0)
        (if (result i32)
         (i32.eq
          (i32.load offset=4
           (i32.load
            (local.get $1)
           )
          )
          (i32.const 16199)
         )
         (i32.const 1)
         (i32.eq
          (i32.load offset=4
           (i32.load
            (local.get $1)
           )
          )
          (i32.const 16194)
         )
        )
       )
      )
     )
     (if
      (i32.and
       (i32.eqz
        (i32.load
         (local.get $19)
        )
       )
       (i32.or
        (i32.eqz
         (i32.or
          (i32.load
           (local.get $22)
          )
          (i32.load
           (local.get $12)
          )
         )
        )
        (i32.eq
         (i32.load
          (local.get $21)
         )
         (i32.const 4)
        )
       )
      )
      (i32.store
       (local.get $19)
       (i32.const -5)
      )
     )
     (i32.store
      (local.get $18)
      (i32.load
       (local.get $19)
      )
     )
     (local.set $0
      (i32.load
       (local.get $18)
      )
     )
     (global.set $STACKTOP
      (local.get $10)
     )
     (return
      (local.get $0)
     )
    )
   )
  )
  (i32.store
   (local.get $18)
   (i32.const -2)
  )
  (local.set $0
   (i32.load
    (local.get $18)
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
  (local.get $0)
 )
 (func $_fixedtables (; 258 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 80)
   )
   (i32.const 10736)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 88)
   )
   (i32.const 9)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 84)
   )
   (i32.const 12784)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 92)
   )
   (i32.const 5)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_updatewindow (; 259 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 20)
   )
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $4)
     (i32.const 16)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $4)
     (i32.const 12)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $4)
     (i32.const 8)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $4)
     (i32.const 4)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $6)
     )
     (i32.const 28)
    )
   )
  )
  (if
   (i32.eqz
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 56)
     )
    )
   )
   (block
    (local.set $0
     (i32.load
      (i32.add
       (i32.load
        (local.get $6)
       )
       (i32.const 32)
      )
     )
    )
    (local.set $0
     (call_indirect (type $FUNCSIG$iiii)
      (i32.load
       (i32.add
        (i32.load
         (local.get $6)
        )
        (i32.const 40)
       )
      )
      (i32.shl
       (i32.const 1)
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 40)
        )
       )
      )
      (i32.const 1)
      (i32.add
       (i32.and
        (local.get $0)
        (i32.const 15)
       )
       (i32.const 12)
      )
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 56)
     )
     (local.get $0)
    )
    (if
     (i32.eqz
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 56)
       )
      )
     )
     (block
      (i32.store
       (local.get $5)
       (i32.const 1)
      )
      (local.set $0
       (i32.load
        (local.get $5)
       )
      )
      (global.set $STACKTOP
       (local.get $4)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 44)
     )
    )
   )
   (block
    (i32.store
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 44)
     )
     (i32.shl
      (i32.const 1)
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 40)
       )
      )
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 52)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 48)
     )
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (local.get $4)
  )
  (local.set $2
   (i32.load
    (local.get $1)
   )
  )
  (if
   (i32.ge_u
    (i32.load
     (local.get $3)
    )
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 44)
     )
    )
   )
   (block
    (drop
     (call $_memcpy
      (i32.load
       (i32.add
        (local.get $2)
        (i32.const 56)
       )
      )
      (i32.sub
       (i32.load
        (local.get $7)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 44)
        )
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 44)
       )
      )
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 52)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 48)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 44)
      )
     )
    )
   )
   (block $do-once
    (i32.store
     (local.get $0)
     (i32.sub
      (i32.load
       (i32.add
        (local.get $2)
        (i32.const 44)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 52)
       )
      )
     )
    )
    (if
     (i32.gt_u
      (i32.load
       (local.get $0)
      )
      (i32.load
       (local.get $3)
      )
     )
     (i32.store
      (local.get $0)
      (i32.load
       (local.get $3)
      )
     )
    )
    (drop
     (call $_memcpy
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 56)
        )
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 52)
        )
       )
      )
      (i32.sub
       (i32.load
        (local.get $7)
       )
       (i32.load
        (local.get $3)
       )
      )
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.store
     (local.get $3)
     (i32.sub
      (i32.load
       (local.get $3)
      )
      (i32.load
       (local.get $0)
      )
     )
    )
    (if
     (i32.load
      (local.get $3)
     )
     (block
      (drop
       (call $_memcpy
        (i32.load
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.const 56)
         )
        )
        (i32.sub
         (i32.load
          (local.get $7)
         )
         (i32.load
          (local.get $3)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 52)
       )
       (i32.load
        (local.get $3)
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 48)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 44)
        )
       )
      )
      (br $do-once)
     )
    )
    (i32.store
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 52)
      )
     )
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.load
       (local.get $2)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 52)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 44)
       )
      )
     )
     (i32.store
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 52)
      )
      (i32.const 0)
     )
    )
    (if
     (i32.lt_u
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 48)
       )
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 44)
       )
      )
     )
     (i32.store
      (local.tee $1
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 48)
       )
      )
      (i32.add
       (i32.load
        (local.get $0)
       )
       (i32.load
        (local.get $1)
       )
      )
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.const 0)
  )
  (local.set $0
   (i32.load
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $_inflateEnd (; 260 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $2)
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (if
   (call $_inflateStateCheck
    (i32.load
     (local.get $1)
    )
   )
   (block
    (i32.store
     (local.get $3)
     (i32.const -2)
    )
    (drop
     (i32.load
      (local.get $3)
     )
    )
    (global.set $STACKTOP
     (local.get $2)
    )
    (return)
   )
  )
  (i32.store
   (local.tee $0
    (local.get $2)
   )
   (i32.load offset=28
    (i32.load
     (local.get $1)
    )
   )
  )
  (if
   (i32.load offset=56
    (i32.load
     (local.get $2)
    )
   )
   (call_indirect (type $FUNCSIG$vii)
    (i32.load offset=40
     (i32.load
      (local.get $1)
     )
    )
    (i32.load offset=56
     (i32.load
      (local.get $0)
     )
    )
    (i32.add
     (i32.and
      (i32.load offset=36
       (i32.load
        (local.get $1)
       )
      )
      (i32.const 15)
     )
     (i32.const 42)
    )
   )
  )
  (call_indirect (type $FUNCSIG$vii)
   (i32.load offset=40
    (i32.load
     (local.get $1)
    )
   )
   (i32.load offset=28
    (i32.load
     (local.get $1)
    )
   )
   (i32.add
    (i32.and
     (i32.load offset=36
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 15)
    )
    (i32.const 42)
   )
  )
  (i32.store offset=28
   (i32.load
    (local.get $1)
   )
   (i32.const 0)
  )
  (i32.store
   (local.get $3)
   (i32.const 0)
  )
  (drop
   (i32.load
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_inflate_table (; 261 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 176)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 128)
   )
  )
  (local.set $8
   (i32.add
    (local.get $6)
    (i32.const 120)
   )
  )
  (local.set $9
   (i32.add
    (local.get $6)
    (i32.const 116)
   )
  )
  (local.set $14
   (i32.add
    (local.get $6)
    (i32.const 32)
   )
  )
  (i32.store
   (local.tee $19
    (i32.add
     (local.get $6)
     (i32.const 156)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $24
    (i32.add
     (local.get $6)
     (i32.const 152)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $25
    (i32.add
     (local.get $6)
     (i32.const 148)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $15
    (i32.add
     (local.get $6)
     (i32.const 144)
    )
   )
   (local.get $3)
  )
  (i32.store
   (local.tee $28
    (i32.add
     (local.get $6)
     (i32.const 140)
    )
   )
   (local.get $4)
  )
  (i32.store
   (local.tee $16
    (i32.add
     (local.get $6)
     (i32.const 136)
    )
   )
   (local.get $5)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 132)
    )
   )
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.le_u
     (i32.load
      (local.get $1)
     )
     (i32.const 15)
    )
    (block
     (i32.store16
      (i32.add
       (i32.shl
        (i32.load
         (local.get $1)
        )
        (i32.const 1)
       )
       (local.get $14)
      )
      (i32.const 0)
     )
     (i32.store
      (local.get $1)
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_u
     (i32.load
      (local.get $7)
     )
     (i32.load
      (local.get $25)
     )
    )
    (block
     (i32.store16
      (local.tee $0
       (i32.add
        (i32.shl
         (i32.load16_u
          (i32.add
           (i32.load
            (local.get $24)
           )
           (i32.shl
            (i32.load
             (local.get $7)
            )
            (i32.const 1)
           )
          )
         )
         (i32.const 1)
        )
        (local.get $14)
       )
      )
      (i32.add
       (i32.load16_s
        (local.get $0)
       )
       (i32.const 1)
      )
     )
     (i32.store
      (local.get $7)
      (i32.add
       (i32.load
        (local.get $7)
       )
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (i32.store
   (local.get $9)
   (i32.load
    (i32.load
     (local.get $28)
    )
   )
  )
  (i32.store
   (local.get $8)
   (i32.const 15)
  )
  (loop $while-in3
   (block $while-out2
    (br_if $while-out2
     (i32.lt_u
      (i32.load
       (local.get $8)
      )
      (i32.const 1)
     )
    )
    (br_if $while-out2
     (i32.load16_u
      (i32.add
       (i32.shl
        (i32.load
         (local.get $8)
        )
        (i32.const 1)
       )
       (local.get $14)
      )
     )
    )
    (i32.store
     (local.get $8)
     (i32.add
      (i32.load
       (local.get $8)
      )
      (i32.const -1)
     )
    )
    (br $while-in3)
   )
  )
  (if
   (i32.gt_u
    (i32.load
     (local.get $9)
    )
    (i32.load
     (local.get $8)
    )
   )
   (i32.store
    (local.get $9)
    (i32.load
     (local.get $8)
    )
   )
  )
  (local.set $3
   (i32.add
    (local.get $6)
    (i32.const 160)
   )
  )
  (local.set $2
   (i32.add
    (local.get $6)
    (i32.const 164)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $8)
    )
   )
   (block
    (i32.store8
     (local.get $2)
     (i32.const 64)
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
     (i32.const 1)
    )
    (i32.store16
     (i32.add
      (local.get $2)
      (i32.const 2)
     )
     (i32.const 0)
    )
    (local.set $0
     (i32.load
      (local.tee $1
       (i32.load
        (local.get $15)
       )
      )
     )
    )
    (i32.store
     (local.get $1)
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
    (i32.store align=2
     (local.get $0)
     (i32.load align=2
      (local.get $2)
     )
    )
    (local.set $0
     (i32.load
      (local.tee $1
       (i32.load
        (local.get $15)
       )
      )
     )
    )
    (i32.store
     (local.get $1)
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
    (i32.store align=2
     (local.get $0)
     (i32.load align=2
      (local.get $2)
     )
    )
    (i32.store
     (i32.load
      (local.get $28)
     )
     (i32.const 1)
    )
    (i32.store
     (local.get $3)
     (i32.const 0)
    )
    (local.set $0
     (i32.load
      (local.get $3)
     )
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (local.get $0)
    )
   )
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $6)
     (i32.const 124)
    )
   )
   (i32.const 1)
  )
  (loop $while-in5
   (block $while-out4
    (br_if $while-out4
     (i32.ge_u
      (i32.load
       (local.get $12)
      )
      (i32.load
       (local.get $8)
      )
     )
    )
    (br_if $while-out4
     (i32.load16_u
      (i32.add
       (i32.shl
        (i32.load
         (local.get $12)
        )
        (i32.const 1)
       )
       (local.get $14)
      )
     )
    )
    (i32.store
     (local.get $12)
     (i32.add
      (i32.load
       (local.get $12)
      )
      (i32.const 1)
     )
    )
    (br $while-in5)
   )
  )
  (if
   (i32.lt_u
    (i32.load
     (local.get $9)
    )
    (i32.load
     (local.get $12)
    )
   )
   (i32.store
    (local.get $9)
    (i32.load
     (local.get $12)
    )
   )
  )
  (local.set $10
   (i32.add
    (local.get $6)
    (i32.const 112)
   )
  )
  (local.set $11
   (i32.add
    (local.get $6)
    (i32.const 108)
   )
  )
  (local.set $13
   (i32.add
    (local.get $6)
    (i32.const 100)
   )
  )
  (local.set $4
   (i32.add
    (local.get $6)
    (i32.const 96)
   )
  )
  (local.set $17
   (i32.add
    (local.get $6)
    (i32.const 92)
   )
  )
  (local.set $20
   (i32.add
    (local.get $6)
    (i32.const 88)
   )
  )
  (local.set $21
   (i32.add
    (local.get $6)
    (i32.const 84)
   )
  )
  (local.set $29
   (i32.add
    (local.get $6)
    (i32.const 80)
   )
  )
  (local.set $22
   (i32.add
    (local.get $6)
    (i32.const 76)
   )
  )
  (local.set $26
   (i32.add
    (local.get $6)
    (i32.const 72)
   )
  )
  (local.set $27
   (i32.add
    (local.get $6)
    (i32.const 68)
   )
  )
  (local.set $18
   (i32.sub
    (local.get $6)
    (i32.const -64)
   )
  )
  (local.set $0
   (local.get $6)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $6)
     (i32.const 104)
    )
   )
   (i32.const 1)
  )
  (i32.store
   (local.get $1)
   (i32.const 1)
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $while-in7
     (block $while-out6
      (local.set $23
       (i32.load
        (local.get $5)
       )
      )
      (br_if $while-out6
       (i32.gt_u
        (i32.load
         (local.get $1)
        )
        (i32.const 15)
       )
      )
      (i32.store
       (local.get $5)
       (i32.shl
        (local.get $23)
        (i32.const 1)
       )
      )
      (i32.store
       (local.get $5)
       (i32.sub
        (i32.load
         (local.get $5)
        )
        (i32.load16_u
         (i32.add
          (i32.shl
           (i32.load
            (local.get $1)
           )
           (i32.const 1)
          )
          (local.get $14)
         )
        )
       )
      )
      (br_if $__rjti$1
       (i32.lt_s
        (i32.load
         (local.get $5)
        )
        (i32.const 0)
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 1)
       )
      )
      (br $while-in7)
     )
    )
    (br $__rjto$1)
   )
   (i32.store
    (local.get $3)
    (i32.const -1)
   )
   (local.set $0
    (i32.load
     (local.get $3)
    )
   )
   (global.set $STACKTOP
    (local.get $6)
   )
   (return
    (local.get $0)
   )
  )
  (if
   (i32.gt_s
    (local.get $23)
    (i32.const 0)
   )
   (if
    (i32.or
     (i32.eqz
      (i32.load
       (local.get $19)
      )
     )
     (i32.ne
      (i32.load
       (local.get $8)
      )
      (i32.const 1)
     )
    )
    (block
     (i32.store
      (local.get $3)
      (i32.const -1)
     )
     (local.set $0
      (i32.load
       (local.get $3)
      )
     )
     (global.set $STACKTOP
      (local.get $6)
     )
     (return
      (local.get $0)
     )
    )
   )
  )
  (i32.store16
   (i32.add
    (local.get $0)
    (i32.const 2)
   )
   (i32.const 0)
  )
  (i32.store
   (local.get $1)
   (i32.const 1)
  )
  (loop $while-in9
   (if
    (i32.lt_u
     (i32.load
      (local.get $1)
     )
     (i32.const 15)
    )
    (block
     (i32.store16
      (i32.add
       (i32.shl
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
       (local.get $0)
      )
      (i32.add
       (i32.load16_u
        (i32.add
         (i32.shl
          (i32.load
           (local.get $1)
          )
          (i32.const 1)
         )
         (local.get $0)
        )
       )
       (i32.load16_u
        (i32.add
         (i32.shl
          (i32.load
           (local.get $1)
          )
          (i32.const 1)
         )
         (local.get $14)
        )
       )
      )
     )
     (i32.store
      (local.get $1)
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 1)
      )
     )
     (br $while-in9)
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.const 0)
  )
  (loop $while-in11
   (if
    (i32.lt_u
     (i32.load
      (local.get $7)
     )
     (i32.load
      (local.get $25)
     )
    )
    (block
     (if
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $24)
        )
        (i32.shl
         (i32.load
          (local.get $7)
         )
         (i32.const 1)
        )
       )
      )
      (block
       (local.set $30
        (i32.and
         (i32.load
          (local.get $7)
         )
         (i32.const 65535)
        )
       )
       (local.set $31
        (i32.load
         (local.get $16)
        )
       )
       (local.set $23
        (i32.load16_s
         (local.tee $32
          (i32.add
           (i32.shl
            (i32.load16_u
             (i32.add
              (i32.load
               (local.get $24)
              )
              (i32.shl
               (i32.load
                (local.get $7)
               )
               (i32.const 1)
              )
             )
            )
            (i32.const 1)
           )
           (local.get $0)
          )
         )
        )
       )
       (i32.store16
        (local.get $32)
        (i32.add
         (local.get $23)
         (i32.const 1)
        )
       )
       (i32.store16
        (i32.add
         (i32.shl
          (i32.and
           (local.get $23)
           (i32.const 65535)
          )
          (i32.const 1)
         )
         (local.get $31)
        )
        (local.get $30)
       )
      )
     )
     (i32.store
      (local.get $7)
      (i32.add
       (i32.load
        (local.get $7)
       )
       (i32.const 1)
      )
     )
     (br $while-in11)
    )
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case12
     (block $switch-case
      (br_table $switch-case $switch-case12 $switch-default
       (i32.load
        (local.get $19)
       )
      )
     )
     (i32.store
      (local.get $27)
      (local.tee $0
       (i32.load
        (local.get $16)
       )
      )
     )
     (i32.store
      (local.get $26)
      (local.get $0)
     )
     (i32.store
      (local.get $18)
      (i32.const 20)
     )
     (br $switch)
    )
    (i32.store
     (local.get $26)
     (i32.const 12912)
    )
    (i32.store
     (local.get $27)
     (i32.const 12976)
    )
    (i32.store
     (local.get $18)
     (i32.const 257)
    )
    (br $switch)
   )
   (i32.store
    (local.get $26)
    (i32.const 13040)
   )
   (i32.store
    (local.get $27)
    (i32.const 13104)
   )
   (i32.store
    (local.get $18)
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (i32.store
   (local.get $7)
   (i32.const 0)
  )
  (i32.store
   (local.get $1)
   (i32.load
    (local.get $12)
   )
  )
  (i32.store
   (local.get $22)
   (i32.load
    (i32.load
     (local.get $15)
    )
   )
  )
  (i32.store
   (local.get $10)
   (i32.load
    (local.get $9)
   )
  )
  (i32.store
   (local.get $11)
   (i32.const 0)
  )
  (i32.store
   (local.get $21)
   (i32.const -1)
  )
  (i32.store
   (local.get $13)
   (i32.shl
    (i32.const 1)
    (i32.load
     (local.get $9)
    )
   )
  )
  (i32.store
   (local.get $29)
   (i32.sub
    (i32.load
     (local.get $13)
    )
    (i32.const 1)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.eq
      (i32.load
       (local.get $19)
      )
      (i32.const 1)
     )
     (i32.gt_u
      (i32.load
       (local.get $13)
      )
      (i32.const 852)
     )
    )
   )
   (if
    (i32.eqz
     (i32.and
      (i32.eq
       (i32.load
        (local.get $19)
       )
       (i32.const 2)
      )
      (i32.gt_u
       (i32.load
        (local.get $13)
       )
       (i32.const 592)
      )
     )
    )
    (block
     (block $__rjto$0
      (block $__rjti$0
       (loop $while-in14
        (block $while-out13
         (i32.store8
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
          (i32.sub
           (i32.load
            (local.get $1)
           )
           (i32.load
            (local.get $11)
           )
          )
         )
         (if
          (i32.lt_u
           (i32.add
            (i32.load16_u
             (i32.add
              (i32.load
               (local.get $16)
              )
              (i32.shl
               (i32.load
                (local.get $7)
               )
               (i32.const 1)
              )
             )
            )
            (i32.const 1)
           )
           (i32.load
            (local.get $18)
           )
          )
          (block
           (i32.store8
            (local.get $2)
            (i32.const 0)
           )
           (i32.store16
            (i32.add
             (local.get $2)
             (i32.const 2)
            )
            (i32.load16_s
             (i32.add
              (i32.load
               (local.get $16)
              )
              (i32.shl
               (i32.load
                (local.get $7)
               )
               (i32.const 1)
              )
             )
            )
           )
          )
          (if
           (i32.ge_u
            (i32.load16_u
             (i32.add
              (i32.load
               (local.get $16)
              )
              (i32.shl
               (i32.load
                (local.get $7)
               )
               (i32.const 1)
              )
             )
            )
            (i32.load
             (local.get $18)
            )
           )
           (block
            (i32.store8
             (local.get $2)
             (i32.load16_s
              (i32.add
               (i32.load
                (local.get $27)
               )
               (i32.shl
                (i32.sub
                 (i32.load16_u
                  (i32.add
                   (i32.load
                    (local.get $16)
                   )
                   (i32.shl
                    (i32.load
                     (local.get $7)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (i32.load
                  (local.get $18)
                 )
                )
                (i32.const 1)
               )
              )
             )
            )
            (i32.store16
             (i32.add
              (local.get $2)
              (i32.const 2)
             )
             (i32.load16_s
              (i32.add
               (i32.load
                (local.get $26)
               )
               (i32.shl
                (i32.sub
                 (i32.load16_u
                  (i32.add
                   (i32.load
                    (local.get $16)
                   )
                   (i32.shl
                    (i32.load
                     (local.get $7)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (i32.load
                  (local.get $18)
                 )
                )
                (i32.const 1)
               )
              )
             )
            )
           )
           (block
            (i32.store8
             (local.get $2)
             (i32.const 96)
            )
            (i32.store16
             (i32.add
              (local.get $2)
              (i32.const 2)
             )
             (i32.const 0)
            )
           )
          )
         )
         (i32.store
          (local.get $17)
          (i32.shl
           (i32.const 1)
           (i32.sub
            (i32.load
             (local.get $1)
            )
            (i32.load
             (local.get $11)
            )
           )
          )
         )
         (i32.store
          (local.get $20)
          (i32.shl
           (i32.const 1)
           (i32.load
            (local.get $10)
           )
          )
         )
         (i32.store
          (local.get $12)
          (i32.load
           (local.get $20)
          )
         )
         (loop $while-in16
          (i32.store
           (local.get $20)
           (i32.sub
            (i32.load
             (local.get $20)
            )
            (i32.load
             (local.get $17)
            )
           )
          )
          (i32.store align=2
           (i32.add
            (i32.load
             (local.get $22)
            )
            (i32.shl
             (i32.add
              (i32.load
               (local.get $20)
              )
              (i32.shr_u
               (i32.load
                (local.get $4)
               )
               (i32.load
                (local.get $11)
               )
              )
             )
             (i32.const 2)
            )
           )
           (i32.load align=2
            (local.get $2)
           )
          )
          (br_if $while-in16
           (i32.load
            (local.get $20)
           )
          )
         )
         (i32.store
          (local.get $17)
          (i32.shl
           (i32.const 1)
           (i32.sub
            (i32.load
             (local.get $1)
            )
            (i32.const 1)
           )
          )
         )
         (loop $while-in18
          (local.set $0
           (i32.load
            (local.get $17)
           )
          )
          (if
           (i32.and
            (i32.load
             (local.get $4)
            )
            (i32.load
             (local.get $17)
            )
           )
           (block
            (i32.store
             (local.get $17)
             (i32.shr_u
              (local.get $0)
              (i32.const 1)
             )
            )
            (br $while-in18)
           )
          )
         )
         (if
          (local.get $0)
          (block
           (i32.store
            (local.get $4)
            (i32.and
             (i32.load
              (local.get $4)
             )
             (i32.sub
              (i32.load
               (local.get $17)
              )
              (i32.const 1)
             )
            )
           )
           (i32.store
            (local.get $4)
            (i32.add
             (i32.load
              (local.get $17)
             )
             (i32.load
              (local.get $4)
             )
            )
           )
          )
          (i32.store
           (local.get $4)
           (i32.const 0)
          )
         )
         (i32.store
          (local.get $7)
          (i32.add
           (i32.load
            (local.get $7)
           )
           (i32.const 1)
          )
         )
         (local.set $0
          (i32.shr_s
           (i32.shl
            (i32.add
             (i32.load16_s
              (local.tee $25
               (i32.add
                (i32.shl
                 (i32.load
                  (local.get $1)
                 )
                 (i32.const 1)
                )
                (local.get $14)
               )
              )
             )
             (i32.const -1)
            )
            (i32.const 16)
           )
           (i32.const 16)
          )
         )
         (i32.store16
          (local.get $25)
          (local.get $0)
         )
         (if
          (i32.eqz
           (i32.and
            (local.get $0)
            (i32.const 65535)
           )
          )
          (block
           (br_if $while-out13
            (i32.eq
             (i32.load
              (local.get $1)
             )
             (i32.load
              (local.get $8)
             )
            )
           )
           (i32.store
            (local.get $1)
            (i32.load16_u
             (i32.add
              (i32.load
               (local.get $24)
              )
              (i32.shl
               (i32.load16_u
                (i32.add
                 (i32.load
                  (local.get $16)
                 )
                 (i32.shl
                  (i32.load
                   (local.get $7)
                  )
                  (i32.const 1)
                 )
                )
               )
               (i32.const 1)
              )
             )
            )
           )
          )
         )
         (if
          (i32.gt_u
           (i32.load
            (local.get $1)
           )
           (i32.load
            (local.get $9)
           )
          )
          (if
           (i32.ne
            (i32.load
             (local.get $21)
            )
            (i32.and
             (i32.load
              (local.get $4)
             )
             (i32.load
              (local.get $29)
             )
            )
           )
           (block
            (if
             (i32.eqz
              (i32.load
               (local.get $11)
              )
             )
             (i32.store
              (local.get $11)
              (i32.load
               (local.get $9)
              )
             )
            )
            (i32.store
             (local.get $22)
             (i32.add
              (i32.load
               (local.get $22)
              )
              (i32.shl
               (i32.load
                (local.get $12)
               )
               (i32.const 2)
              )
             )
            )
            (i32.store
             (local.get $10)
             (i32.sub
              (i32.load
               (local.get $1)
              )
              (i32.load
               (local.get $11)
              )
             )
            )
            (i32.store
             (local.get $5)
             (i32.shl
              (i32.const 1)
              (i32.load
               (local.get $10)
              )
             )
            )
            (loop $while-in20
             (block $while-out19
              (br_if $while-out19
               (i32.ge_u
                (i32.add
                 (i32.load
                  (local.get $10)
                 )
                 (i32.load
                  (local.get $11)
                 )
                )
                (i32.load
                 (local.get $8)
                )
               )
              )
              (i32.store
               (local.get $5)
               (i32.sub
                (i32.load
                 (local.get $5)
                )
                (i32.load16_u
                 (i32.add
                  (i32.shl
                   (i32.add
                    (i32.load
                     (local.get $10)
                    )
                    (i32.load
                     (local.get $11)
                    )
                   )
                   (i32.const 1)
                  )
                  (local.get $14)
                 )
                )
               )
              )
              (br_if $while-out19
               (i32.le_s
                (i32.load
                 (local.get $5)
                )
                (i32.const 0)
               )
              )
              (i32.store
               (local.get $10)
               (i32.add
                (i32.load
                 (local.get $10)
                )
                (i32.const 1)
               )
              )
              (i32.store
               (local.get $5)
               (i32.shl
                (i32.load
                 (local.get $5)
                )
                (i32.const 1)
               )
              )
              (br $while-in20)
             )
            )
            (i32.store
             (local.get $13)
             (i32.add
              (i32.load
               (local.get $13)
              )
              (i32.shl
               (i32.const 1)
               (i32.load
                (local.get $10)
               )
              )
             )
            )
            (br_if $__rjti$0
             (i32.and
              (i32.eq
               (i32.load
                (local.get $19)
               )
               (i32.const 1)
              )
              (i32.gt_u
               (i32.load
                (local.get $13)
               )
               (i32.const 852)
              )
             )
            )
            (br_if $__rjti$0
             (i32.and
              (i32.eq
               (i32.load
                (local.get $19)
               )
               (i32.const 2)
              )
              (i32.gt_u
               (i32.load
                (local.get $13)
               )
               (i32.const 592)
              )
             )
            )
            (i32.store
             (local.get $21)
             (i32.and
              (i32.load
               (local.get $4)
              )
              (i32.load
               (local.get $29)
              )
             )
            )
            (i32.store8
             (i32.add
              (i32.load
               (i32.load
                (local.get $15)
               )
              )
              (i32.shl
               (i32.load
                (local.get $21)
               )
               (i32.const 2)
              )
             )
             (i32.load
              (local.get $10)
             )
            )
            (i32.store8
             (i32.add
              (i32.add
               (i32.load
                (i32.load
                 (local.get $15)
                )
               )
               (i32.shl
                (i32.load
                 (local.get $21)
                )
                (i32.const 2)
               )
              )
              (i32.const 1)
             )
             (i32.load
              (local.get $9)
             )
            )
            (i32.store16
             (i32.add
              (i32.add
               (i32.load
                (i32.load
                 (local.get $15)
                )
               )
               (i32.shl
                (i32.load
                 (local.get $21)
                )
                (i32.const 2)
               )
              )
              (i32.const 2)
             )
             (i32.div_s
              (i32.sub
               (i32.load
                (local.get $22)
               )
               (i32.load
                (i32.load
                 (local.get $15)
                )
               )
              )
              (i32.const 4)
             )
            )
           )
          )
         )
         (br $while-in14)
        )
       )
       (br $__rjto$0)
      )
      (i32.store
       (local.get $3)
       (i32.const 1)
      )
      (local.set $0
       (i32.load
        (local.get $3)
       )
      )
      (global.set $STACKTOP
       (local.get $6)
      )
      (return
       (local.get $0)
      )
     )
     (if
      (i32.load
       (local.get $4)
      )
      (block
       (i32.store8
        (local.get $2)
        (i32.const 64)
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
        (i32.sub
         (i32.load
          (local.get $1)
         )
         (i32.load
          (local.get $11)
         )
        )
       )
       (i32.store16
        (i32.add
         (local.get $2)
         (i32.const 2)
        )
        (i32.const 0)
       )
       (i32.store align=2
        (i32.add
         (i32.load
          (local.get $22)
         )
         (i32.shl
          (i32.load
           (local.get $4)
          )
          (i32.const 2)
         )
        )
        (i32.load align=2
         (local.get $2)
        )
       )
      )
     )
     (i32.store
      (local.tee $0
       (i32.load
        (local.get $15)
       )
      )
      (i32.add
       (i32.load
        (local.get $0)
       )
       (i32.shl
        (i32.load
         (local.get $13)
        )
        (i32.const 2)
       )
      )
     )
     (i32.store
      (i32.load
       (local.get $28)
      )
      (i32.load
       (local.get $9)
      )
     )
     (i32.store
      (local.get $3)
      (i32.const 0)
     )
     (local.set $0
      (i32.load
       (local.get $3)
      )
     )
     (global.set $STACKTOP
      (local.get $6)
     )
     (return
      (local.get $0)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.const 1)
  )
  (local.set $0
   (i32.load
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__tr_init (; 262 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 2840)
   )
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 148)
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 2848)
   )
   (i32.const 16448)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 2852)
   )
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 2440)
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 2860)
   )
   (i32.const 16468)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 2864)
   )
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 2684)
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 2872)
   )
   (i32.const 16488)
  )
  (i32.store16
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 5816)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 5820)
   )
   (i32.const 0)
  )
  (call $_init_block
   (i32.load
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_init_block (; 263 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $2)
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (local.get $2)
   )
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (i32.load
      (local.get $0)
     )
     (i32.const 286)
    )
    (block
     (i32.store16
      (i32.add
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 148)
       )
       (i32.shl
        (i32.load
         (local.get $0)
        )
        (i32.const 2)
       )
      )
      (i32.const 0)
     )
     (i32.store
      (local.get $0)
      (i32.add
       (i32.load
        (local.get $0)
       )
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (local.get $0)
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (i32.load
      (local.get $0)
     )
     (i32.const 30)
    )
    (block
     (i32.store16
      (i32.add
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 2440)
       )
       (i32.shl
        (i32.load
         (local.get $0)
        )
        (i32.const 2)
       )
      )
      (i32.const 0)
     )
     (i32.store
      (local.get $0)
      (i32.add
       (i32.load
        (local.get $0)
       )
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (i32.store
   (local.get $0)
   (i32.const 0)
  )
  (loop $while-in3
   (local.set $3
    (i32.load
     (local.get $1)
    )
   )
   (if
    (i32.lt_s
     (i32.load
      (local.get $0)
     )
     (i32.const 19)
    )
    (block
     (i32.store16
      (i32.add
       (i32.add
        (local.get $3)
        (i32.const 2684)
       )
       (i32.shl
        (i32.load
         (local.get $0)
        )
        (i32.const 2)
       )
      )
      (i32.const 0)
     )
     (i32.store
      (local.get $0)
      (i32.add
       (i32.load
        (local.get $0)
       )
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (i32.store16
   (i32.add
    (local.get $3)
    (i32.const 1172)
   )
   (i32.const 1)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 5804)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 5800)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 5808)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 5792)
   )
   (i32.const 0)
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $__tr_stored_block (; 264 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.tee $5
      (local.get $8)
     )
     (i32.const 20)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $5)
     (i32.const 16)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $5)
     (i32.const 12)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 8)
    )
   )
   (local.get $3)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.const 3)
  )
  (local.set $2
   (i32.load
    (local.get $2)
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 5820)
     )
    )
    (i32.sub
     (i32.const 16)
     (i32.load
      (local.get $1)
     )
    )
   )
   (block
    (i32.store
     (local.get $5)
     (local.get $2)
    )
    (i32.store16
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $2)
      )
      (i32.shl
       (i32.and
        (i32.load
         (local.get $5)
        )
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (local.set $3
     (i32.and
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 5816)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $6
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $7
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $7)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $6)
     )
     (local.get $3)
    )
    (local.set $3
     (i32.shr_s
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 5816)
       )
      )
      (i32.const 8)
     )
    )
    (local.set $6
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $7
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $7)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $6)
     )
     (local.get $3)
    )
    (i32.store16
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 5816)
     )
     (i32.shr_s
      (i32.and
       (i32.load
        (local.get $5)
       )
       (i32.const 65535)
      )
      (i32.sub
       (i32.const 16)
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.sub
       (i32.load
        (local.get $1)
       )
       (i32.const 16)
      )
     )
    )
   )
   (block
    (i32.store16
     (local.tee $3
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $3)
      )
      (i32.shl
       (i32.and
        (local.get $2)
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.load
       (local.get $2)
      )
     )
    )
   )
  )
  (call $_bi_windup
   (i32.load
    (local.get $4)
   )
  )
  (local.set $2
   (i32.and
    (i32.load
     (local.get $0)
    )
    (i32.const 255)
   )
  )
  (local.set $3
   (i32.load
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 8)
    )
   )
  )
  (local.set $1
   (i32.load
    (local.tee $5
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 20)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (local.get $3)
   )
   (local.get $2)
  )
  (local.set $2
   (i32.shr_s
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 65535)
    )
    (i32.const 8)
   )
  )
  (local.set $3
   (i32.load
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 8)
    )
   )
  )
  (local.set $1
   (i32.load
    (local.tee $5
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 20)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (local.get $3)
   )
   (local.get $2)
  )
  (local.set $2
   (i32.and
    (i32.xor
     (i32.load
      (local.get $0)
     )
     (i32.const -1)
    )
    (i32.const 255)
   )
  )
  (local.set $3
   (i32.load
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 8)
    )
   )
  )
  (local.set $1
   (i32.load
    (local.tee $5
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 20)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (local.get $3)
   )
   (local.get $2)
  )
  (local.set $2
   (i32.shr_s
    (i32.and
     (i32.xor
      (i32.load
       (local.get $0)
      )
      (i32.const -1)
     )
     (i32.const 65535)
    )
    (i32.const 8)
   )
  )
  (local.set $3
   (i32.load
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 8)
    )
   )
  )
  (local.set $1
   (i32.load
    (local.tee $5
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 20)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (local.get $3)
   )
   (local.get $2)
  )
  (drop
   (call $_memcpy
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 8)
      )
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 20)
      )
     )
    )
    (i32.load
     (local.get $9)
    )
    (i32.load
     (local.get $0)
    )
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.const 20)
    )
   )
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.load
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $_bi_windup (; 265 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $1
    (local.get $5)
   )
   (local.get $0)
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5820)
     )
    )
    (i32.const 8)
   )
   (block
    (local.set $3
     (i32.and
      (i32.load16_u
       (i32.add
        (local.get $0)
        (i32.const 5816)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $4
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $4)
     )
     (local.get $3)
    )
    (local.set $3
     (i32.shr_s
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 5816)
       )
      )
      (i32.const 8)
     )
    )
    (local.set $4
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $4)
     )
     (local.get $3)
    )
   )
   (if
    (i32.gt_s
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 5820)
      )
     )
     (i32.const 0)
    )
    (block
     (local.set $3
      (i32.and
       (i32.load16_s
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 5816)
        )
       )
       (i32.const 255)
      )
     )
     (local.set $4
      (i32.load
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 8)
       )
      )
     )
     (local.set $2
      (i32.load
       (local.tee $0
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 20)
        )
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (i32.store8
      (i32.add
       (local.get $2)
       (local.get $4)
      )
      (local.get $3)
     )
    )
   )
  )
  (i32.store16
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 5816)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 5820)
   )
   (i32.const 0)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_bi_flush (; 266 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $1
    (local.get $5)
   )
   (local.get $0)
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (if
   (i32.eq
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5820)
     )
    )
    (i32.const 16)
   )
   (block
    (local.set $3
     (i32.and
      (i32.load16_u
       (i32.add
        (local.get $0)
        (i32.const 5816)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $4
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $4)
     )
     (local.get $3)
    )
    (local.set $3
     (i32.shr_s
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 5816)
       )
      )
      (i32.const 8)
     )
    )
    (local.set $4
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $4)
     )
     (local.get $3)
    )
    (i32.store16
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5816)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5820)
     )
     (i32.const 0)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (if
   (i32.lt_s
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 5820)
     )
    )
    (i32.const 8)
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (local.set $3
   (i32.and
    (i32.load16_s
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5816)
     )
    )
    (i32.const 255)
   )
  )
  (local.set $4
   (i32.load
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 8)
    )
   )
  )
  (local.set $2
   (i32.load
    (local.tee $0
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 20)
     )
    )
   )
  )
  (i32.store
   (local.get $0)
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (local.get $4)
   )
   (local.get $3)
  )
  (i32.store16
   (local.tee $0
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 5816)
    )
   )
   (i32.shr_s
    (i32.load16_u
     (local.get $0)
    )
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 5820)
    )
   )
   (i32.sub
    (i32.load
     (local.get $0)
    )
    (i32.const 8)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__tr_align (; 267 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $3
   (i32.add
    (local.get $7)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $7)
     (i32.const 16)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $7)
     (i32.const 12)
    )
   )
   (i32.const 3)
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5820)
     )
    )
    (i32.sub
     (i32.const 16)
     (i32.load
      (local.get $0)
     )
    )
   )
   (block
    (i32.store
     (local.get $3)
     (i32.const 2)
    )
    (i32.store16
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $2)
      )
      (i32.shl
       (i32.and
        (i32.load
         (local.get $3)
        )
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (local.set $4
     (i32.and
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 5816)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $5
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $6
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $5)
     )
     (local.get $4)
    )
    (local.set $4
     (i32.shr_s
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 5816)
       )
      )
      (i32.const 8)
     )
    )
    (local.set $5
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $6
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $5)
     )
     (local.get $4)
    )
    (i32.store16
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5816)
     )
     (i32.shr_s
      (i32.and
       (i32.load
        (local.get $3)
       )
       (i32.const 65535)
      )
      (i32.sub
       (i32.const 16)
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $3
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.sub
       (i32.load
        (local.get $0)
       )
       (i32.const 16)
      )
     )
    )
   )
   (block
    (i32.store16
     (local.tee $3
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $3)
      )
      (i32.shl
       (i32.const 2)
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $3
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.load
       (local.get $3)
      )
     )
    )
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.tee $0
      (local.get $7)
     )
     (i32.const 4)
    )
   )
   (i32.load16_u
    (i32.const 15298)
   )
  )
  (local.set $2
   (i32.load16_u
    (i32.const 15296)
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5820)
     )
    )
    (i32.sub
     (i32.const 16)
     (i32.load
      (local.get $3)
     )
    )
   )
   (block
    (i32.store
     (local.get $0)
     (local.get $2)
    )
    (i32.store16
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $2)
      )
      (i32.shl
       (i32.and
        (i32.load
         (local.get $0)
        )
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (local.set $4
     (i32.and
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 5816)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $5
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $6
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $5)
     )
     (local.get $4)
    )
    (local.set $4
     (i32.shr_s
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 5816)
       )
      )
      (i32.const 8)
     )
    )
    (local.set $5
     (i32.load
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $6
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $5)
     )
     (local.get $4)
    )
    (i32.store16
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 5816)
     )
     (i32.shr_s
      (i32.and
       (i32.load
        (local.get $0)
       )
       (i32.const 65535)
      )
      (i32.sub
       (i32.const 16)
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.sub
       (i32.load
        (local.get $3)
       )
       (i32.const 16)
      )
     )
    )
    (call $_bi_flush
     (i32.load
      (local.get $1)
     )
    )
    (global.set $STACKTOP
     (local.get $7)
    )
   )
   (block
    (i32.store16
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $0)
      )
      (i32.shl
       (local.get $2)
       (i32.load
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.load
       (local.get $0)
      )
     )
    )
    (call $_bi_flush
     (i32.load
      (local.get $1)
     )
    )
    (global.set $STACKTOP
     (local.get $7)
    )
   )
  )
 )
 (func $__tr_flush_block (; 268 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $5
   (i32.add
    (local.get $6)
    (i32.const 24)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 20)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $6)
     (i32.const 40)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.get $6)
     (i32.const 36)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $6)
     (i32.const 32)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 28)
    )
   )
   (local.get $3)
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $6)
     (i32.const 16)
    )
   )
   (i32.const 0)
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 132)
     )
    )
    (i32.const 0)
   )
   (block
    (if
     (i32.eq
      (i32.load
       (i32.add
        (i32.load
         (i32.load
          (local.get $4)
         )
        )
        (i32.const 44)
       )
      )
      (i32.const 2)
     )
     (block
      (local.set $0
       (call $_detect_data_type
        (i32.load
         (local.get $4)
        )
       )
      )
      (i32.store
       (i32.add
        (i32.load
         (i32.load
          (local.get $4)
         )
        )
        (i32.const 44)
       )
       (local.get $0)
      )
     )
    )
    (call $_build_tree
     (i32.load
      (local.get $4)
     )
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 2840)
     )
    )
    (call $_build_tree
     (i32.load
      (local.get $4)
     )
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 2852)
     )
    )
    (i32.store
     (local.get $11)
     (call $_build_bl_tree
      (i32.load
       (local.get $4)
      )
     )
    )
    (i32.store
     (local.get $5)
     (i32.shr_u
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5800)
        )
       )
       (i32.const 10)
      )
      (i32.const 3)
     )
    )
    (i32.store
     (local.get $7)
     (i32.shr_u
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5804)
        )
       )
       (i32.const 10)
      )
      (i32.const 3)
     )
    )
    (if
     (i32.le_u
      (i32.load
       (local.get $7)
      )
      (i32.load
       (local.get $5)
      )
     )
     (i32.store
      (local.get $5)
      (i32.load
       (local.get $7)
      )
     )
    )
   )
   (block
    (i32.store
     (local.get $7)
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $8)
       )
       (i32.const 5)
      )
     )
    )
    (i32.store
     (local.get $5)
     (local.get $0)
    )
   )
  )
  (local.set $2
   (i32.add
    (local.get $6)
    (i32.const 12)
   )
  )
  (local.set $9
   (i32.add
    (local.get $6)
    (i32.const 8)
   )
  )
  (local.set $3
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  (local.set $0
   (local.get $6)
  )
  (local.set $12
   (i32.load
    (local.get $4)
   )
  )
  (if
   (i32.and
    (i32.ne
     (i32.load
      (local.get $10)
     )
     (i32.const 0)
    )
    (i32.le_u
     (i32.add
      (i32.load
       (local.get $8)
      )
      (i32.const 4)
     )
     (i32.load
      (local.get $5)
     )
    )
   )
   (call $__tr_stored_block
    (local.get $12)
    (i32.load
     (local.get $10)
    )
    (i32.load
     (local.get $8)
    )
    (i32.load
     (local.get $1)
    )
   )
   (block $do-once
    (if
     (i32.ne
      (i32.load
       (i32.add
        (local.get $12)
        (i32.const 136)
       )
      )
      (i32.const 4)
     )
     (if
      (i32.ne
       (i32.load
        (local.get $7)
       )
       (i32.load
        (local.get $5)
       )
      )
      (block
       (i32.store
        (local.get $3)
        (i32.const 3)
       )
       (local.set $2
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.const 4)
        )
       )
       (if
        (i32.gt_s
         (i32.load
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 5820)
          )
         )
         (i32.sub
          (i32.const 16)
          (i32.load
           (local.get $3)
          )
         )
        )
        (block
         (i32.store
          (local.get $0)
          (local.get $2)
         )
         (i32.store16
          (local.tee $2
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 5816)
           )
          )
          (i32.or
           (i32.load16_u
            (local.get $2)
           )
           (i32.shl
            (i32.and
             (i32.load
              (local.get $0)
             )
             (i32.const 65535)
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.const 5820)
             )
            )
           )
          )
         )
         (local.set $5
          (i32.and
           (i32.load16_u
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 5816)
            )
           )
           (i32.const 255)
          )
         )
         (local.set $7
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 8)
           )
          )
         )
         (local.set $2
          (i32.load
           (local.tee $8
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 20)
            )
           )
          )
         )
         (i32.store
          (local.get $8)
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (i32.store8
          (i32.add
           (local.get $2)
           (local.get $7)
          )
          (local.get $5)
         )
         (local.set $5
          (i32.shr_s
           (i32.load16_u
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 5816)
            )
           )
           (i32.const 8)
          )
         )
         (local.set $7
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 8)
           )
          )
         )
         (local.set $2
          (i32.load
           (local.tee $8
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 20)
            )
           )
          )
         )
         (i32.store
          (local.get $8)
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (i32.store8
          (i32.add
           (local.get $2)
           (local.get $7)
          )
          (local.get $5)
         )
         (i32.store16
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 5816)
          )
          (i32.shr_s
           (i32.and
            (i32.load
             (local.get $0)
            )
            (i32.const 65535)
           )
           (i32.sub
            (i32.const 16)
            (i32.load
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.const 5820)
             )
            )
           )
          )
         )
         (i32.store
          (local.tee $0
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 5820)
           )
          )
          (i32.add
           (i32.load
            (local.get $0)
           )
           (i32.sub
            (i32.load
             (local.get $3)
            )
            (i32.const 16)
           )
          )
         )
        )
        (block
         (i32.store16
          (local.tee $0
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 5816)
           )
          )
          (i32.or
           (i32.load16_u
            (local.get $0)
           )
           (i32.shl
            (i32.and
             (local.get $2)
             (i32.const 65535)
            )
            (i32.load
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.const 5820)
             )
            )
           )
          )
         )
         (i32.store
          (local.tee $0
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 5820)
           )
          )
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $0)
           )
          )
         )
        )
       )
       (call $_send_all_trees
        (i32.load
         (local.get $4)
        )
        (i32.add
         (i32.load
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 2844)
          )
         )
         (i32.const 1)
        )
        (i32.add
         (i32.load
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 2856)
          )
         )
         (i32.const 1)
        )
        (i32.add
         (i32.load
          (local.get $11)
         )
         (i32.const 1)
        )
       )
       (call $_compress_block
        (i32.load
         (local.get $4)
        )
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 148)
        )
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 2440)
        )
       )
       (br $do-once)
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.const 3)
    )
    (local.set $0
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.const 2)
     )
    )
    (if
     (i32.gt_s
      (i32.load
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 5820)
       )
      )
      (i32.sub
       (i32.const 16)
       (i32.load
        (local.get $2)
       )
      )
     )
     (block
      (i32.store
       (local.get $9)
       (local.get $0)
      )
      (i32.store16
       (local.tee $0
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5816)
        )
       )
       (i32.or
        (i32.load16_u
         (local.get $0)
        )
        (i32.shl
         (i32.and
          (i32.load
           (local.get $9)
          )
          (i32.const 65535)
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 5820)
          )
         )
        )
       )
      )
      (local.set $3
       (i32.and
        (i32.load16_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 5816)
         )
        )
        (i32.const 255)
       )
      )
      (local.set $5
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 8)
        )
       )
      )
      (local.set $0
       (i32.load
        (local.tee $7
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 20)
         )
        )
       )
      )
      (i32.store
       (local.get $7)
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.store8
       (i32.add
        (local.get $0)
        (local.get $5)
       )
       (local.get $3)
      )
      (local.set $3
       (i32.shr_s
        (i32.load16_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 5816)
         )
        )
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 8)
        )
       )
      )
      (local.set $0
       (i32.load
        (local.tee $7
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 20)
         )
        )
       )
      )
      (i32.store
       (local.get $7)
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.store8
       (i32.add
        (local.get $0)
        (local.get $5)
       )
       (local.get $3)
      )
      (i32.store16
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 5816)
       )
       (i32.shr_s
        (i32.and
         (i32.load
          (local.get $9)
         )
         (i32.const 65535)
        )
        (i32.sub
         (i32.const 16)
         (i32.load
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 5820)
          )
         )
        )
       )
      )
      (i32.store
       (local.tee $0
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
       (i32.add
        (i32.load
         (local.get $0)
        )
        (i32.sub
         (i32.load
          (local.get $2)
         )
         (i32.const 16)
        )
       )
      )
     )
     (block
      (i32.store16
       (local.tee $3
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5816)
        )
       )
       (i32.or
        (i32.load16_u
         (local.get $3)
        )
        (i32.shl
         (i32.and
          (local.get $0)
          (i32.const 65535)
         )
         (i32.load
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 5820)
          )
         )
        )
       )
      )
      (i32.store
       (local.tee $0
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.load
         (local.get $0)
        )
       )
      )
     )
    )
    (call $_compress_block
     (i32.load
      (local.get $4)
     )
     (i32.const 14272)
     (i32.const 14016)
    )
   )
  )
  (call $_init_block
   (i32.load
    (local.get $4)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $1)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (call $_bi_windup
   (i32.load
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_detect_data_type (; 269 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 12)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
   (i32.const -201342849)
  )
  (i32.store
   (local.tee $0
    (local.get $1)
   )
   (i32.const 0)
  )
  (block $__rjto$2
   (block $__rjti$2
    (loop $while-in
     (if
      (i32.le_s
       (i32.load
        (local.get $0)
       )
       (i32.const 31)
      )
      (block
       (if
        (i32.and
         (i32.load
          (local.get $4)
         )
         (i32.const 1)
        )
        (br_if $__rjti$2
         (i32.load16_u
          (i32.add
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 148)
           )
           (i32.shl
            (i32.load
             (local.get $0)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (i32.store
        (local.get $0)
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.const 1)
        )
       )
       (i32.store
        (local.get $4)
        (i32.shr_u
         (i32.load
          (local.get $4)
         )
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $2)
    (i32.const 0)
   )
   (local.set $0
    (i32.load
     (local.get $2)
    )
   )
   (global.set $STACKTOP
    (local.get $1)
   )
   (return
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (i32.load16_u
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 184)
     )
    )
   )
   (if
    (i32.eqz
     (i32.load16_u
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 188)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 200)
       )
      )
     )
     (block
      (i32.store
       (local.get $0)
       (i32.const 32)
      )
      (block $__rjti$1
       (loop $while-in1
        (br_if $__rjti$1
         (i32.ge_s
          (i32.load
           (local.get $0)
          )
          (i32.const 256)
         )
        )
        (if
         (i32.eqz
          (i32.load16_u
           (i32.add
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 148)
            )
            (i32.shl
             (i32.load
              (local.get $0)
             )
             (i32.const 2)
            )
           )
          )
         )
         (block
          (i32.store
           (local.get $0)
           (i32.add
            (i32.load
             (local.get $0)
            )
            (i32.const 1)
           )
          )
          (br $while-in1)
         )
        )
       )
       (i32.store
        (local.get $2)
        (i32.const 1)
       )
       (local.set $0
        (i32.load
         (local.get $2)
        )
       )
       (global.set $STACKTOP
        (local.get $1)
       )
       (return
        (local.get $0)
       )
      )
      (i32.store
       (local.get $2)
       (i32.const 0)
      )
      (local.set $0
       (i32.load
        (local.get $2)
       )
      )
      (global.set $STACKTOP
       (local.get $1)
      )
      (return
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $2)
   (i32.const 1)
  )
  (local.set $0
   (i32.load
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $_build_tree (; 270 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $5
   (i32.add
    (local.get $11)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.tee $3
      (local.get $11)
     )
     (i32.const 32)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $3)
     (i32.const 28)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 24)
    )
   )
   (i32.load
    (i32.load
     (local.get $9)
    )
   )
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $3)
     (i32.const 20)
    )
   )
   (i32.load
    (i32.load
     (i32.add
      (i32.load
       (local.get $9)
      )
      (i32.const 8)
     )
    )
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $3)
     (i32.const 16)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (local.get $9)
       )
       (i32.const 8)
      )
     )
     (i32.const 12)
    )
   )
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (i32.const -1)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 5200)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 5204)
   )
   (i32.const 573)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $3)
     (i32.const 12)
    )
   )
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (i32.load
      (local.get $1)
     )
     (i32.load
      (local.get $7)
     )
    )
    (block
     (if
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.shl
         (i32.load
          (local.get $1)
         )
         (i32.const 2)
        )
       )
      )
      (block
       (i32.store
        (local.get $10)
        (local.tee $8
         (i32.load
          (local.get $1)
         )
        )
       )
       (local.set $12
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 2908)
        )
       )
       (local.set $0
        (i32.add
         (i32.load
          (local.tee $13
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 5200)
           )
          )
         )
         (i32.const 1)
        )
       )
       (i32.store
        (local.get $13)
        (local.get $0)
       )
       (i32.store
        (i32.add
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
         (local.get $12)
        )
        (local.get $8)
       )
       (i32.store8
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 5208)
         )
        )
        (i32.const 0)
       )
      )
      (i32.store16
       (i32.add
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.shl
          (i32.load
           (local.get $1)
          )
          (i32.const 2)
         )
        )
        (i32.const 2)
       )
       (i32.const 0)
      )
     )
     (i32.store
      (local.get $1)
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (loop $while-in1
   (block $while-out0
    (local.set $0
     (i32.load
      (local.get $10)
     )
    )
    (br_if $while-out0
     (i32.ge_s
      (i32.load
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 5200)
       )
      )
      (i32.const 2)
     )
    )
    (if
     (i32.lt_s
      (local.get $0)
      (i32.const 2)
     )
     (i32.store
      (local.get $10)
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $10)
        )
        (i32.const 1)
       )
      )
     )
     (local.set $0
      (i32.const 0)
     )
    )
    (local.set $12
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 2908)
     )
    )
    (local.set $8
     (i32.add
      (i32.load
       (local.tee $13
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 5200)
        )
       )
      )
      (i32.const 1)
     )
    )
    (i32.store
     (local.get $13)
     (local.get $8)
    )
    (i32.store
     (i32.add
      (i32.shl
       (local.get $8)
       (i32.const 2)
      )
      (local.get $12)
     )
     (local.get $0)
    )
    (i32.store
     (local.get $3)
     (local.get $0)
    )
    (i32.store16
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.shl
       (i32.load
        (local.get $3)
       )
       (i32.const 2)
      )
     )
     (i32.const 1)
    )
    (i32.store8
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 5208)
      )
     )
     (i32.const 0)
    )
    (i32.store
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 5800)
      )
     )
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.const -1)
     )
    )
    (if
     (i32.load
      (local.get $6)
     )
     (i32.store
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 5804)
       )
      )
      (i32.sub
       (i32.load
        (local.get $0)
       )
       (i32.load16_u
        (i32.add
         (i32.add
          (i32.load
           (local.get $6)
          )
          (i32.shl
           (i32.load
            (local.get $3)
           )
           (i32.const 2)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
    )
    (br $while-in1)
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $9)
    )
    (i32.const 4)
   )
   (local.get $0)
  )
  (i32.store
   (local.get $1)
   (i32.div_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 5200)
     )
    )
    (i32.const 2)
   )
  )
  (loop $while-in3
   (if
    (i32.ge_s
     (i32.load
      (local.get $1)
     )
     (i32.const 1)
    )
    (block
     (call $_pqdownheap
      (i32.load
       (local.get $2)
      )
      (i32.load
       (local.get $4)
      )
      (i32.load
       (local.get $1)
      )
     )
     (i32.store
      (local.get $1)
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const -1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.load
    (local.get $7)
   )
  )
  (loop $while-in5
   (i32.store
    (local.get $1)
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 2912)
     )
    )
   )
   (local.set $6
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 2908)
    )
   )
   (local.set $0
    (i32.load
     (local.tee $7
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 5200)
      )
     )
    )
   )
   (i32.store
    (local.get $7)
    (i32.add
     (local.get $0)
     (i32.const -1)
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 2912)
    )
    (i32.load
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 2)
      )
      (local.get $6)
     )
    )
   )
   (call $_pqdownheap
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $4)
    )
    (i32.const 1)
   )
   (i32.store
    (local.get $5)
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 2912)
     )
    )
   )
   (local.set $6
    (i32.load
     (local.get $1)
    )
   )
   (local.set $7
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 2908)
    )
   )
   (local.set $0
    (i32.add
     (i32.load
      (local.tee $8
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 5204)
       )
      )
     )
     (i32.const -1)
    )
   )
   (i32.store
    (local.get $8)
    (local.get $0)
   )
   (i32.store
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 2)
     )
     (local.get $7)
    )
    (local.get $6)
   )
   (local.set $6
    (i32.load
     (local.get $5)
    )
   )
   (local.set $7
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 2908)
    )
   )
   (local.set $0
    (i32.add
     (i32.load
      (local.tee $8
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 5204)
       )
      )
     )
     (i32.const -1)
    )
   )
   (i32.store
    (local.get $8)
    (local.get $0)
   )
   (i32.store
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 2)
     )
     (local.get $7)
    )
    (local.get $6)
   )
   (i32.store16
    (i32.add
     (i32.load
      (local.get $4)
     )
     (i32.shl
      (i32.load
       (local.get $3)
      )
      (i32.const 2)
     )
    )
    (i32.add
     (i32.load16_u
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.shl
        (i32.load
         (local.get $1)
        )
        (i32.const 2)
       )
      )
     )
     (i32.load16_u
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.shl
        (i32.load
         (local.get $5)
        )
        (i32.const 2)
       )
      )
     )
    )
   )
   (local.set $0
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 5208)
    )
   )
   (i32.store8
    (i32.add
     (i32.load
      (local.get $3)
     )
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const 5208)
     )
    )
    (i32.add
     (if (result i32)
      (i32.ge_s
       (i32.load8_u
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 5208)
         )
        )
       )
       (i32.load8_u
        (i32.add
         (i32.load
          (local.get $5)
         )
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 5208)
         )
        )
       )
      )
      (i32.load8_u
       (i32.add
        (local.get $0)
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.load8_u
       (i32.add
        (local.get $0)
        (i32.load
         (local.get $5)
        )
       )
      )
     )
     (i32.const 1)
    )
   )
   (i32.store16
    (i32.add
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.shl
       (i32.load
        (local.get $5)
       )
       (i32.const 2)
      )
     )
     (i32.const 2)
    )
    (local.tee $0
     (i32.and
      (i32.load
       (local.get $3)
      )
      (i32.const 65535)
     )
    )
   )
   (i32.store16
    (i32.add
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.shl
       (i32.load
        (local.get $1)
       )
       (i32.const 2)
      )
     )
     (i32.const 2)
    )
    (local.get $0)
   )
   (i32.store
    (local.get $3)
    (i32.add
     (local.tee $0
      (i32.load
       (local.get $3)
      )
     )
     (i32.const 1)
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 2912)
    )
    (local.get $0)
   )
   (call $_pqdownheap
    (i32.load
     (local.get $2)
    )
    (i32.load
     (local.get $4)
    )
    (i32.const 1)
   )
   (br_if $while-in5
    (i32.ge_s
     (i32.load
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 5200)
      )
     )
     (i32.const 2)
    )
   )
  )
  (local.set $1
   (i32.load
    (i32.add
     (i32.load
      (local.get $2)
     )
     (i32.const 2912)
    )
   )
  )
  (local.set $3
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 2908)
   )
  )
  (local.set $0
   (i32.add
    (i32.load
     (local.tee $5
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 5204)
      )
     )
    )
    (i32.const -1)
   )
  )
  (i32.store
   (local.get $5)
   (local.get $0)
  )
  (i32.store
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 2)
    )
    (local.get $3)
   )
   (local.get $1)
  )
  (call $_gen_bitlen
   (i32.load
    (local.get $2)
   )
   (i32.load
    (local.get $9)
   )
  )
  (call $_gen_codes
   (i32.load
    (local.get $4)
   )
   (i32.load
    (local.get $10)
   )
   (i32.add
    (i32.load
     (local.get $2)
    )
    (i32.const 2876)
   )
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $_build_bl_tree (; 271 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.tee $2
      (local.get $3)
     )
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (call $_scan_tree
   (i32.load
    (local.get $1)
   )
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 148)
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 2844)
    )
   )
  )
  (call $_scan_tree
   (i32.load
    (local.get $1)
   )
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 2440)
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 2856)
    )
   )
  )
  (call $_build_tree
   (i32.load
    (local.get $1)
   )
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 2864)
   )
  )
  (i32.store
   (local.get $2)
   (i32.const 18)
  )
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.lt_s
      (i32.load
       (local.get $2)
      )
      (i32.const 3)
     )
    )
    (br_if $while-out
     (i32.load16_u
      (i32.add
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.shl
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 15552)
          )
         )
         (i32.const 2)
        )
       )
       (i32.const 2686)
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.add
      (i32.load
       (local.get $2)
      )
      (i32.const -1)
     )
    )
    (br $while-in)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (i32.load
      (local.get $1)
     )
     (i32.const 5800)
    )
   )
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.add
     (i32.mul
      (i32.load
       (local.get $2)
      )
      (i32.const 3)
     )
     (i32.const 17)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_compress_block (; 272 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (local.set $9
   (i32.sub
    (local.get $5)
    (i32.const -64)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 60)
   )
  )
  (local.set $8
   (i32.add
    (local.get $5)
    (i32.const 52)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 48)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 44)
   )
  )
  (local.set $18
   (i32.add
    (local.get $5)
    (i32.const 40)
   )
  )
  (local.set $14
   (i32.add
    (local.get $5)
    (i32.const 36)
   )
  )
  (local.set $19
   (i32.add
    (local.get $5)
    (i32.const 32)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 28)
   )
  )
  (local.set $20
   (i32.add
    (local.get $5)
    (i32.const 24)
   )
  )
  (local.set $16
   (i32.add
    (local.get $5)
    (i32.const 20)
   )
  )
  (local.set $21
   (i32.add
    (local.get $5)
    (i32.const 16)
   )
  )
  (local.set $17
   (i32.add
    (local.get $5)
    (i32.const 12)
   )
  )
  (local.set $22
   (i32.add
    (local.get $5)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $5)
     (i32.const 76)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $5)
     (i32.const 72)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $5)
     (i32.const 68)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $5)
     (i32.const 56)
    )
   )
   (i32.const 0)
  )
  (if
   (i32.load
    (i32.add
     (i32.load
      (local.get $3)
     )
     (i32.const 5792)
    )
   )
   (loop $while-in
    (i32.store
     (local.get $9)
     (i32.load16_u
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.const 5796)
        )
       )
       (i32.shl
        (i32.load
         (local.get $0)
        )
        (i32.const 1)
       )
      )
     )
    )
    (local.set $2
     (i32.load
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 5784)
      )
     )
    )
    (i32.store
     (local.get $0)
     (i32.add
      (local.tee $4
       (i32.load
        (local.get $0)
       )
      )
      (i32.const 1)
     )
    )
    (i32.store
     (local.get $10)
     (i32.load8_u
      (i32.add
       (local.get $2)
       (local.get $4)
      )
     )
    )
    (if
     (i32.load
      (local.get $9)
     )
     (block
      (i32.store
       (local.get $8)
       (i32.load8_u
        (i32.add
         (i32.load
          (local.get $10)
         )
         (i32.const 13680)
        )
       )
      )
      (i32.store
       (local.get $14)
       (i32.load16_u
        (i32.add
         (i32.add
          (i32.load
           (local.get $12)
          )
          (i32.shl
           (i32.load
            (local.get $8)
           )
           (i32.const 2)
          )
         )
         (i32.const 1030)
        )
       )
      )
      (local.set $2
       (i32.load16_u
        (i32.add
         (i32.load
          (local.get $12)
         )
         (i32.shl
          (i32.add
           (i32.load
            (local.get $8)
           )
           (i32.const 257)
          )
          (i32.const 2)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (i32.load
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 5820)
         )
        )
        (i32.sub
         (i32.const 16)
         (i32.load
          (local.get $14)
         )
        )
       )
       (block
        (i32.store
         (local.get $19)
         (local.get $2)
        )
        (i32.store16
         (local.tee $2
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5816)
          )
         )
         (i32.or
          (i32.load16_u
           (local.get $2)
          )
          (i32.shl
           (i32.and
            (i32.load
             (local.get $19)
            )
            (i32.const 65535)
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
          )
         )
        )
        (local.set $4
         (i32.and
          (i32.load16_u
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5816)
           )
          )
          (i32.const 255)
         )
        )
        (local.set $6
         (i32.load
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $2
         (i32.load
          (local.tee $7
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $7)
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $2)
          (local.get $6)
         )
         (local.get $4)
        )
        (local.set $4
         (i32.shr_s
          (i32.load16_u
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5816)
           )
          )
          (i32.const 8)
         )
        )
        (local.set $6
         (i32.load
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $2
         (i32.load
          (local.tee $7
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $7)
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $2)
          (local.get $6)
         )
         (local.get $4)
        )
        (i32.store16
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 5816)
         )
         (i32.shr_s
          (i32.and
           (i32.load
            (local.get $19)
           )
           (i32.const 65535)
          )
          (i32.sub
           (i32.const 16)
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
          )
         )
        )
        (i32.store
         (local.tee $2
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5820)
          )
         )
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.sub
           (i32.load
            (local.get $14)
           )
           (i32.const 16)
          )
         )
        )
       )
       (block
        (i32.store16
         (local.tee $4
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5816)
          )
         )
         (i32.or
          (i32.load16_u
           (local.get $4)
          )
          (i32.shl
           (local.get $2)
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
          )
         )
        )
        (i32.store
         (local.tee $2
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5820)
          )
         )
         (i32.add
          (i32.load
           (local.get $14)
          )
          (i32.load
           (local.get $2)
          )
         )
        )
       )
      )
      (i32.store
       (local.get $11)
       (i32.load
        (i32.add
         (i32.shl
          (i32.load
           (local.get $8)
          )
          (i32.const 2)
         )
         (i32.const 15424)
        )
       )
      )
      (if
       (i32.load
        (local.get $11)
       )
       (block
        (i32.store
         (local.get $10)
         (i32.sub
          (i32.load
           (local.get $10)
          )
          (i32.load
           (i32.add
            (i32.shl
             (i32.load
              (local.get $8)
             )
             (i32.const 2)
            )
            (i32.const 15584)
           )
          )
         )
        )
        (i32.store
         (local.get $15)
         (i32.load
          (local.get $11)
         )
        )
        (local.set $2
         (i32.load
          (local.get $10)
         )
        )
        (if
         (i32.gt_s
          (i32.load
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5820)
           )
          )
          (i32.sub
           (i32.const 16)
           (i32.load
            (local.get $15)
           )
          )
         )
         (block
          (i32.store
           (local.get $20)
           (local.get $2)
          )
          (i32.store16
           (local.tee $2
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5816)
            )
           )
           (i32.or
            (i32.load16_u
             (local.get $2)
            )
            (i32.shl
             (i32.and
              (i32.load
               (local.get $20)
              )
              (i32.const 65535)
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
            )
           )
          )
          (local.set $4
           (i32.and
            (i32.load16_u
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
            )
            (i32.const 255)
           )
          )
          (local.set $6
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $2
           (i32.load
            (local.tee $7
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $2)
            (local.get $6)
           )
           (local.get $4)
          )
          (local.set $4
           (i32.shr_s
            (i32.load16_u
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
            )
            (i32.const 8)
           )
          )
          (local.set $6
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $2
           (i32.load
            (local.tee $7
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $2)
            (local.get $6)
           )
           (local.get $4)
          )
          (i32.store16
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5816)
           )
           (i32.shr_s
            (i32.and
             (i32.load
              (local.get $20)
             )
             (i32.const 65535)
            )
            (i32.sub
             (i32.const 16)
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
            )
           )
          )
          (i32.store
           (local.tee $2
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.sub
             (i32.load
              (local.get $15)
             )
             (i32.const 16)
            )
           )
          )
         )
         (block
          (i32.store16
           (local.tee $4
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5816)
            )
           )
           (i32.or
            (i32.load16_u
             (local.get $4)
            )
            (i32.shl
             (i32.and
              (local.get $2)
              (i32.const 65535)
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
            )
           )
          )
          (i32.store
           (local.tee $2
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
           (i32.add
            (i32.load
             (local.get $15)
            )
            (i32.load
             (local.get $2)
            )
           )
          )
         )
        )
       )
      )
      (i32.store
       (local.get $9)
       (i32.add
        (i32.load
         (local.get $9)
        )
        (i32.const -1)
       )
      )
      (local.set $2
       (i32.load
        (local.get $9)
       )
      )
      (i32.store
       (local.get $8)
       (if (result i32)
        (i32.lt_u
         (i32.load
          (local.get $9)
         )
         (i32.const 256)
        )
        (i32.load8_u
         (i32.add
          (local.get $2)
          (i32.const 13168)
         )
        )
        (i32.load8_u
         (i32.add
          (i32.shr_u
           (local.get $2)
           (i32.const 7)
          )
          (i32.const 13424)
         )
        )
       )
      )
      (i32.store
       (local.get $16)
       (i32.load16_u
        (i32.add
         (i32.add
          (i32.load
           (local.get $1)
          )
          (i32.shl
           (i32.load
            (local.get $8)
           )
           (i32.const 2)
          )
         )
         (i32.const 2)
        )
       )
      )
      (local.set $2
       (i32.load16_u
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.shl
          (i32.load
           (local.get $8)
          )
          (i32.const 2)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (i32.load
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 5820)
         )
        )
        (i32.sub
         (i32.const 16)
         (i32.load
          (local.get $16)
         )
        )
       )
       (block
        (i32.store
         (local.get $21)
         (local.get $2)
        )
        (i32.store16
         (local.tee $2
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5816)
          )
         )
         (i32.or
          (i32.load16_u
           (local.get $2)
          )
          (i32.shl
           (i32.and
            (i32.load
             (local.get $21)
            )
            (i32.const 65535)
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
          )
         )
        )
        (local.set $4
         (i32.and
          (i32.load16_u
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5816)
           )
          )
          (i32.const 255)
         )
        )
        (local.set $6
         (i32.load
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $2
         (i32.load
          (local.tee $7
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $7)
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $2)
          (local.get $6)
         )
         (local.get $4)
        )
        (local.set $4
         (i32.shr_s
          (i32.load16_u
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5816)
           )
          )
          (i32.const 8)
         )
        )
        (local.set $6
         (i32.load
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $2
         (i32.load
          (local.tee $7
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $7)
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $2)
          (local.get $6)
         )
         (local.get $4)
        )
        (i32.store16
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 5816)
         )
         (i32.shr_s
          (i32.and
           (i32.load
            (local.get $21)
           )
           (i32.const 65535)
          )
          (i32.sub
           (i32.const 16)
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
          )
         )
        )
        (i32.store
         (local.tee $2
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5820)
          )
         )
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.sub
           (i32.load
            (local.get $16)
           )
           (i32.const 16)
          )
         )
        )
       )
       (block
        (i32.store16
         (local.tee $4
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5816)
          )
         )
         (i32.or
          (i32.load16_u
           (local.get $4)
          )
          (i32.shl
           (local.get $2)
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
          )
         )
        )
        (i32.store
         (local.tee $2
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5820)
          )
         )
         (i32.add
          (i32.load
           (local.get $16)
          )
          (i32.load
           (local.get $2)
          )
         )
        )
       )
      )
      (i32.store
       (local.get $11)
       (i32.load
        (i32.add
         (i32.shl
          (i32.load
           (local.get $8)
          )
          (i32.const 2)
         )
         (i32.const 14144)
        )
       )
      )
      (if
       (i32.load
        (local.get $11)
       )
       (block
        (i32.store
         (local.get $9)
         (i32.sub
          (i32.load
           (local.get $9)
          )
          (i32.load
           (i32.add
            (i32.shl
             (i32.load
              (local.get $8)
             )
             (i32.const 2)
            )
            (i32.const 15712)
           )
          )
         )
        )
        (i32.store
         (local.get $17)
         (i32.load
          (local.get $11)
         )
        )
        (local.set $2
         (i32.load
          (local.get $9)
         )
        )
        (if
         (i32.gt_s
          (i32.load
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5820)
           )
          )
          (i32.sub
           (i32.const 16)
           (i32.load
            (local.get $17)
           )
          )
         )
         (block
          (i32.store
           (local.get $22)
           (local.get $2)
          )
          (i32.store16
           (local.tee $2
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5816)
            )
           )
           (i32.or
            (i32.load16_u
             (local.get $2)
            )
            (i32.shl
             (i32.and
              (i32.load
               (local.get $22)
              )
              (i32.const 65535)
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
            )
           )
          )
          (local.set $4
           (i32.and
            (i32.load16_u
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
            )
            (i32.const 255)
           )
          )
          (local.set $6
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $2
           (i32.load
            (local.tee $7
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $2)
            (local.get $6)
           )
           (local.get $4)
          )
          (local.set $4
           (i32.shr_s
            (i32.load16_u
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
            )
            (i32.const 8)
           )
          )
          (local.set $6
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $2
           (i32.load
            (local.tee $7
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $2)
            (local.get $6)
           )
           (local.get $4)
          )
          (i32.store16
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5816)
           )
           (i32.shr_s
            (i32.and
             (i32.load
              (local.get $22)
             )
             (i32.const 65535)
            )
            (i32.sub
             (i32.const 16)
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
            )
           )
          )
          (i32.store
           (local.tee $2
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.sub
             (i32.load
              (local.get $17)
             )
             (i32.const 16)
            )
           )
          )
         )
         (block
          (i32.store16
           (local.tee $4
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5816)
            )
           )
           (i32.or
            (i32.load16_u
             (local.get $4)
            )
            (i32.shl
             (i32.and
              (local.get $2)
              (i32.const 65535)
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
            )
           )
          )
          (i32.store
           (local.tee $2
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
           (i32.add
            (i32.load
             (local.get $17)
            )
            (i32.load
             (local.get $2)
            )
           )
          )
         )
        )
       )
      )
     )
     (block
      (i32.store
       (local.get $13)
       (i32.load16_u
        (i32.add
         (i32.add
          (i32.load
           (local.get $12)
          )
          (i32.shl
           (i32.load
            (local.get $10)
           )
           (i32.const 2)
          )
         )
         (i32.const 2)
        )
       )
      )
      (local.set $2
       (i32.load16_u
        (i32.add
         (i32.load
          (local.get $12)
         )
         (i32.shl
          (i32.load
           (local.get $10)
          )
          (i32.const 2)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (i32.load
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 5820)
         )
        )
        (i32.sub
         (i32.const 16)
         (i32.load
          (local.get $13)
         )
        )
       )
       (block
        (i32.store
         (local.get $18)
         (local.get $2)
        )
        (i32.store16
         (local.tee $2
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5816)
          )
         )
         (i32.or
          (i32.load16_u
           (local.get $2)
          )
          (i32.shl
           (i32.and
            (i32.load
             (local.get $18)
            )
            (i32.const 65535)
           )
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
          )
         )
        )
        (local.set $4
         (i32.and
          (i32.load16_u
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5816)
           )
          )
          (i32.const 255)
         )
        )
        (local.set $6
         (i32.load
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $2
         (i32.load
          (local.tee $7
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $7)
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $2)
          (local.get $6)
         )
         (local.get $4)
        )
        (local.set $4
         (i32.shr_s
          (i32.load16_u
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5816)
           )
          )
          (i32.const 8)
         )
        )
        (local.set $6
         (i32.load
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 8)
          )
         )
        )
        (local.set $2
         (i32.load
          (local.tee $7
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 20)
           )
          )
         )
        )
        (i32.store
         (local.get $7)
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store8
         (i32.add
          (local.get $2)
          (local.get $6)
         )
         (local.get $4)
        )
        (i32.store16
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 5816)
         )
         (i32.shr_s
          (i32.and
           (i32.load
            (local.get $18)
           )
           (i32.const 65535)
          )
          (i32.sub
           (i32.const 16)
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
          )
         )
        )
        (i32.store
         (local.tee $2
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5820)
          )
         )
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.sub
           (i32.load
            (local.get $13)
           )
           (i32.const 16)
          )
         )
        )
       )
       (block
        (i32.store16
         (local.tee $4
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5816)
          )
         )
         (i32.or
          (i32.load16_u
           (local.get $4)
          )
          (i32.shl
           (local.get $2)
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
          )
         )
        )
        (i32.store
         (local.tee $2
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5820)
          )
         )
         (i32.add
          (i32.load
           (local.get $13)
          )
          (i32.load
           (local.get $2)
          )
         )
        )
       )
      )
     )
    )
    (br_if $while-in
     (i32.lt_u
      (i32.load
       (local.get $0)
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 5792)
       )
      )
     )
    )
   )
  )
  (local.set $0
   (local.get $5)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load16_u
    (i32.add
     (i32.load
      (local.get $12)
     )
     (i32.const 1026)
    )
   )
  )
  (local.set $2
   (i32.load16_u
    (i32.add
     (i32.load
      (local.get $12)
     )
     (i32.const 1024)
    )
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 5820)
     )
    )
    (i32.sub
     (i32.const 16)
     (i32.load
      (local.get $1)
     )
    )
   )
   (block
    (i32.store
     (local.get $0)
     (local.get $2)
    )
    (i32.store16
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $2)
      )
      (i32.shl
       (i32.and
        (i32.load
         (local.get $0)
        )
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (local.set $8
     (i32.and
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 5816)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $9
     (i32.load
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $10
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $10)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $9)
     )
     (local.get $8)
    )
    (local.set $8
     (i32.shr_s
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 5816)
       )
      )
      (i32.const 8)
     )
    )
    (local.set $9
     (i32.load
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $10
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $10)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $9)
     )
     (local.get $8)
    )
    (i32.store16
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 5816)
     )
     (i32.shr_s
      (i32.and
       (i32.load
        (local.get $0)
       )
       (i32.const 65535)
      )
      (i32.sub
       (i32.const 16)
       (i32.load
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.sub
       (i32.load
        (local.get $1)
       )
       (i32.const 16)
      )
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
   )
   (block
    (i32.store16
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $0)
      )
      (i32.shl
       (local.get $2)
       (i32.load
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.load
       (local.get $0)
      )
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
   )
  )
 )
 (func $_send_all_trees (; 273 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 24)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $7)
     (i32.const 48)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $7)
     (i32.const 44)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.get $7)
     (i32.const 40)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $7)
     (i32.const 36)
    )
   )
   (local.get $3)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $7)
     (i32.const 28)
    )
   )
   (i32.const 5)
  )
  (local.set $1
   (i32.sub
    (i32.load
     (local.get $9)
    )
    (i32.const 257)
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 5820)
     )
    )
    (i32.sub
     (i32.const 16)
     (i32.load
      (local.get $0)
     )
    )
   )
   (block
    (i32.store
     (local.get $5)
     (local.get $1)
    )
    (i32.store16
     (local.tee $1
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $1)
      )
      (i32.shl
       (i32.and
        (i32.load
         (local.get $5)
        )
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (local.set $2
     (i32.and
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 5816)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $3
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $1
     (i32.load
      (local.tee $6
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (local.get $3)
     )
     (local.get $2)
    )
    (local.set $2
     (i32.shr_s
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 5816)
       )
      )
      (i32.const 8)
     )
    )
    (local.set $3
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $1
     (i32.load
      (local.tee $6
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (local.get $3)
     )
     (local.get $2)
    )
    (i32.store16
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 5816)
     )
     (i32.shr_s
      (i32.and
       (i32.load
        (local.get $5)
       )
       (i32.const 65535)
      )
      (i32.sub
       (i32.const 16)
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $1
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.sub
       (i32.load
        (local.get $0)
       )
       (i32.const 16)
      )
     )
    )
   )
   (block
    (i32.store16
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $2)
      )
      (i32.shl
       (i32.and
        (local.get $1)
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $1
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.load
       (local.get $1)
      )
     )
    )
   )
  )
  (local.set $0
   (i32.add
    (local.get $7)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $7)
     (i32.const 20)
    )
   )
   (i32.const 5)
  )
  (local.set $2
   (i32.sub
    (i32.load
     (local.get $10)
    )
    (i32.const 1)
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 5820)
     )
    )
    (i32.sub
     (i32.const 16)
     (i32.load
      (local.get $1)
     )
    )
   )
   (block
    (i32.store
     (local.get $0)
     (local.get $2)
    )
    (i32.store16
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $2)
      )
      (i32.shl
       (i32.and
        (i32.load
         (local.get $0)
        )
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (local.set $3
     (i32.and
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 5816)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $5
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $6
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $5)
     )
     (local.get $3)
    )
    (local.set $3
     (i32.shr_s
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 5816)
       )
      )
      (i32.const 8)
     )
    )
    (local.set $5
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $6
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $5)
     )
     (local.get $3)
    )
    (i32.store16
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 5816)
     )
     (i32.shr_s
      (i32.and
       (i32.load
        (local.get $0)
       )
       (i32.const 65535)
      )
      (i32.sub
       (i32.const 16)
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.sub
       (i32.load
        (local.get $1)
       )
       (i32.const 16)
      )
     )
    )
   )
   (block
    (i32.store16
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $0)
      )
      (i32.shl
       (i32.and
        (local.get $2)
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.load
       (local.get $0)
      )
     )
    )
   )
  )
  (local.set $0
   (i32.add
    (local.get $7)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $7)
     (i32.const 12)
    )
   )
   (i32.const 4)
  )
  (local.set $2
   (i32.sub
    (i32.load
     (local.get $11)
    )
    (i32.const 4)
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 5820)
     )
    )
    (i32.sub
     (i32.const 16)
     (i32.load
      (local.get $1)
     )
    )
   )
   (block
    (i32.store
     (local.get $0)
     (local.get $2)
    )
    (i32.store16
     (local.tee $2
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $2)
      )
      (i32.shl
       (i32.and
        (i32.load
         (local.get $0)
        )
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (local.set $3
     (i32.and
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 5816)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $5
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $6
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $5)
     )
     (local.get $3)
    )
    (local.set $3
     (i32.shr_s
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 5816)
       )
      )
      (i32.const 8)
     )
    )
    (local.set $5
     (i32.load
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 8)
      )
     )
    )
    (local.set $2
     (i32.load
      (local.tee $6
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 20)
       )
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $5)
     )
     (local.get $3)
    )
    (i32.store16
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const 5816)
     )
     (i32.shr_s
      (i32.and
       (i32.load
        (local.get $0)
       )
       (i32.const 65535)
      )
      (i32.sub
       (i32.const 16)
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.sub
       (i32.load
        (local.get $1)
       )
       (i32.const 16)
      )
     )
    )
   )
   (block
    (i32.store16
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5816)
      )
     )
     (i32.or
      (i32.load16_u
       (local.get $0)
      )
      (i32.shl
       (i32.and
        (local.get $2)
        (i32.const 65535)
       )
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
      )
     )
    )
    (i32.store
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 5820)
      )
     )
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.load
       (local.get $0)
      )
     )
    )
   )
  )
  (local.set $1
   (i32.add
    (local.get $7)
    (i32.const 4)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.tee $0
      (local.get $7)
     )
     (i32.const 32)
    )
   )
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (i32.load
      (local.get $2)
     )
     (i32.load
      (local.get $11)
     )
    )
    (block
     (i32.store
      (local.get $1)
      (i32.const 3)
     )
     (local.set $3
      (i32.load16_u
       (i32.add
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.shl
          (i32.load8_u
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 15552)
           )
          )
          (i32.const 2)
         )
        )
        (i32.const 2686)
       )
      )
     )
     (if
      (i32.gt_s
       (i32.load
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5820)
        )
       )
       (i32.sub
        (i32.const 16)
        (i32.load
         (local.get $1)
        )
       )
      )
      (block
       (i32.store
        (local.get $0)
        (local.get $3)
       )
       (i32.store16
        (local.tee $3
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 5816)
         )
        )
        (i32.or
         (i32.load16_u
          (local.get $3)
         )
         (i32.shl
          (i32.and
           (i32.load
            (local.get $0)
           )
           (i32.const 65535)
          )
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 5820)
           )
          )
         )
        )
       )
       (local.set $5
        (i32.and
         (i32.load16_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 5816)
          )
         )
         (i32.const 255)
        )
       )
       (local.set $6
        (i32.load
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 8)
         )
        )
       )
       (local.set $3
        (i32.load
         (local.tee $8
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 20)
          )
         )
        )
       )
       (i32.store
        (local.get $8)
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.store8
        (i32.add
         (local.get $3)
         (local.get $6)
        )
        (local.get $5)
       )
       (local.set $5
        (i32.shr_s
         (i32.load16_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 5816)
          )
         )
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.load
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 8)
         )
        )
       )
       (local.set $3
        (i32.load
         (local.tee $8
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 20)
          )
         )
        )
       )
       (i32.store
        (local.get $8)
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.store8
        (i32.add
         (local.get $3)
         (local.get $6)
        )
        (local.get $5)
       )
       (i32.store16
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 5816)
        )
        (i32.shr_s
         (i32.and
          (i32.load
           (local.get $0)
          )
          (i32.const 65535)
         )
         (i32.sub
          (i32.const 16)
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 5820)
           )
          )
         )
        )
       )
       (i32.store
        (local.tee $3
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 5820)
         )
        )
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.sub
          (i32.load
           (local.get $1)
          )
          (i32.const 16)
         )
        )
       )
      )
      (block
       (i32.store16
        (local.tee $5
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 5816)
         )
        )
        (i32.or
         (i32.load16_u
          (local.get $5)
         )
         (i32.shl
          (local.get $3)
          (i32.load
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const 5820)
           )
          )
         )
        )
       )
       (i32.store
        (local.tee $3
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 5820)
         )
        )
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.load
          (local.get $3)
         )
        )
       )
      )
     )
     (i32.store
      (local.get $2)
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $_send_tree
   (i32.load
    (local.get $4)
   )
   (i32.add
    (i32.load
     (local.get $4)
    )
    (i32.const 148)
   )
   (i32.sub
    (i32.load
     (local.get $9)
    )
    (i32.const 1)
   )
  )
  (call $_send_tree
   (i32.load
    (local.get $4)
   )
   (i32.add
    (i32.load
     (local.get $4)
    )
    (i32.const 2440)
   )
   (i32.sub
    (i32.load
     (local.get $10)
    )
    (i32.const 1)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_send_tree (; 274 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $8)
     (i32.const 100)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $28
    (i32.add
     (local.get $8)
     (i32.const 96)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $30
    (i32.add
     (local.get $8)
     (i32.const 92)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $29
    (i32.add
     (local.get $8)
     (i32.const 84)
    )
   )
   (i32.const -1)
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $8)
     (i32.const 76)
    )
   )
   (i32.load16_u
    (i32.add
     (i32.load
      (local.get $28)
     )
     (i32.const 2)
    )
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $8)
     (i32.const 72)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.get $8)
     (i32.const 68)
    )
   )
   (i32.const 7)
  )
  (i32.store
   (local.tee $11
    (i32.sub
     (local.get $8)
     (i32.const -64)
    )
   )
   (i32.const 4)
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $9)
    )
   )
   (block
    (i32.store
     (local.get $10)
     (i32.const 138)
    )
    (i32.store
     (local.get $11)
     (i32.const 3)
    )
   )
  )
  (local.set $2
   (i32.add
    (local.get $8)
    (i32.const 80)
   )
  )
  (local.set $12
   (i32.add
    (local.get $8)
    (i32.const 60)
   )
  )
  (local.set $21
   (i32.add
    (local.get $8)
    (i32.const 56)
   )
  )
  (local.set $13
   (i32.add
    (local.get $8)
    (i32.const 52)
   )
  )
  (local.set $22
   (i32.add
    (local.get $8)
    (i32.const 48)
   )
  )
  (local.set $14
   (i32.add
    (local.get $8)
    (i32.const 44)
   )
  )
  (local.set $23
   (i32.add
    (local.get $8)
    (i32.const 40)
   )
  )
  (local.set $15
   (i32.add
    (local.get $8)
    (i32.const 36)
   )
  )
  (local.set $24
   (i32.add
    (local.get $8)
    (i32.const 32)
   )
  )
  (local.set $16
   (i32.add
    (local.get $8)
    (i32.const 28)
   )
  )
  (local.set $25
   (i32.add
    (local.get $8)
    (i32.const 24)
   )
  )
  (local.set $17
   (i32.add
    (local.get $8)
    (i32.const 20)
   )
  )
  (local.set $26
   (i32.add
    (local.get $8)
    (i32.const 16)
   )
  )
  (local.set $18
   (i32.add
    (local.get $8)
    (i32.const 12)
   )
  )
  (local.set $27
   (i32.add
    (local.get $8)
    (i32.const 8)
   )
  )
  (local.set $19
   (i32.add
    (local.get $8)
    (i32.const 4)
   )
  )
  (local.set $0
   (local.get $8)
  )
  (i32.store
   (local.tee $20
    (i32.add
     (local.get $8)
     (i32.const 88)
    )
   )
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.le_s
     (i32.load
      (local.get $20)
     )
     (i32.load
      (local.get $30)
     )
    )
    (block
     (i32.store
      (local.get $2)
      (i32.load
       (local.get $9)
      )
     )
     (i32.store
      (local.get $9)
      (i32.load16_u
       (i32.add
        (i32.add
         (i32.load
          (local.get $28)
         )
         (i32.shl
          (i32.load
           (local.get $20)
          )
          (i32.const 2)
         )
        )
        (i32.const 6)
       )
      )
     )
     (i32.store
      (local.get $1)
      (local.tee $4
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const 1)
       )
      )
     )
     (block $do-once
      (block $__rjti$0
       (br_if $__rjti$0
        (i32.ge_s
         (local.get $4)
         (i32.load
          (local.get $10)
         )
        )
       )
       (br_if $__rjti$0
        (i32.ne
         (i32.load
          (local.get $2)
         )
         (i32.load
          (local.get $9)
         )
        )
       )
       (br $do-once)
      )
      (if
       (i32.lt_s
        (i32.load
         (local.get $1)
        )
        (i32.load
         (local.get $11)
        )
       )
       (loop $while-in3
        (i32.store
         (local.get $12)
         (i32.load16_u
          (i32.add
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.shl
             (i32.load
              (local.get $2)
             )
             (i32.const 2)
            )
           )
           (i32.const 2686)
          )
         )
        )
        (local.set $4
         (i32.load16_u
          (i32.add
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 2684)
           )
           (i32.shl
            (i32.load
             (local.get $2)
            )
            (i32.const 2)
           )
          )
         )
        )
        (if
         (i32.gt_s
          (i32.load
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5820)
           )
          )
          (i32.sub
           (i32.const 16)
           (i32.load
            (local.get $12)
           )
          )
         )
         (block
          (i32.store
           (local.get $21)
           (local.get $4)
          )
          (i32.store16
           (local.tee $4
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5816)
            )
           )
           (i32.or
            (i32.load16_u
             (local.get $4)
            )
            (i32.shl
             (i32.and
              (i32.load
               (local.get $21)
              )
              (i32.const 65535)
             )
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
            )
           )
          )
          (local.set $5
           (i32.and
            (i32.load16_u
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
            )
            (i32.const 255)
           )
          )
          (local.set $6
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $4
           (i32.load
            (local.tee $7
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $4)
            (local.get $6)
           )
           (local.get $5)
          )
          (local.set $5
           (i32.shr_s
            (i32.load16_u
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
            )
            (i32.const 8)
           )
          )
          (local.set $6
           (i32.load
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 8)
            )
           )
          )
          (local.set $4
           (i32.load
            (local.tee $7
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 20)
             )
            )
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $4)
            (local.get $6)
           )
           (local.get $5)
          )
          (i32.store16
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 5816)
           )
           (i32.shr_s
            (i32.and
             (i32.load
              (local.get $21)
             )
             (i32.const 65535)
            )
            (i32.sub
             (i32.const 16)
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
            )
           )
          )
          (i32.store
           (local.tee $4
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.sub
             (i32.load
              (local.get $12)
             )
             (i32.const 16)
            )
           )
          )
         )
         (block
          (i32.store16
           (local.tee $5
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5816)
            )
           )
           (i32.or
            (i32.load16_u
             (local.get $5)
            )
            (i32.shl
             (local.get $4)
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
            )
           )
          )
          (i32.store
           (local.tee $4
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5820)
            )
           )
           (i32.add
            (i32.load
             (local.get $12)
            )
            (i32.load
             (local.get $4)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $1)
         (local.tee $4
          (i32.add
           (i32.load
            (local.get $1)
           )
           (i32.const -1)
          )
         )
        )
        (br_if $while-in3
         (local.get $4)
        )
       )
       (block $do-once0
        (if
         (i32.load
          (local.get $2)
         )
         (block
          (if
           (i32.ne
            (i32.load
             (local.get $2)
            )
            (i32.load
             (local.get $29)
            )
           )
           (block
            (i32.store
             (local.get $13)
             (i32.load16_u
              (i32.add
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.shl
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 2)
                )
               )
               (i32.const 2686)
              )
             )
            )
            (local.set $4
             (i32.load16_u
              (i32.add
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 2684)
               )
               (i32.shl
                (i32.load
                 (local.get $2)
                )
                (i32.const 2)
               )
              )
             )
            )
            (if
             (i32.gt_s
              (i32.load
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5820)
               )
              )
              (i32.sub
               (i32.const 16)
               (i32.load
                (local.get $13)
               )
              )
             )
             (block
              (i32.store
               (local.get $22)
               (local.get $4)
              )
              (i32.store16
               (local.tee $4
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5816)
                )
               )
               (i32.or
                (i32.load16_u
                 (local.get $4)
                )
                (i32.shl
                 (i32.and
                  (i32.load
                   (local.get $22)
                  )
                  (i32.const 65535)
                 )
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $3)
                   )
                   (i32.const 5820)
                  )
                 )
                )
               )
              )
              (local.set $5
               (i32.and
                (i32.load16_u
                 (i32.add
                  (i32.load
                   (local.get $3)
                  )
                  (i32.const 5816)
                 )
                )
                (i32.const 255)
               )
              )
              (local.set $6
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 8)
                )
               )
              )
              (local.set $4
               (i32.load
                (local.tee $7
                 (i32.add
                  (i32.load
                   (local.get $3)
                  )
                  (i32.const 20)
                 )
                )
               )
              )
              (i32.store
               (local.get $7)
               (i32.add
                (local.get $4)
                (i32.const 1)
               )
              )
              (i32.store8
               (i32.add
                (local.get $4)
                (local.get $6)
               )
               (local.get $5)
              )
              (local.set $5
               (i32.shr_s
                (i32.load16_u
                 (i32.add
                  (i32.load
                   (local.get $3)
                  )
                  (i32.const 5816)
                 )
                )
                (i32.const 8)
               )
              )
              (local.set $6
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 8)
                )
               )
              )
              (local.set $4
               (i32.load
                (local.tee $7
                 (i32.add
                  (i32.load
                   (local.get $3)
                  )
                  (i32.const 20)
                 )
                )
               )
              )
              (i32.store
               (local.get $7)
               (i32.add
                (local.get $4)
                (i32.const 1)
               )
              )
              (i32.store8
               (i32.add
                (local.get $4)
                (local.get $6)
               )
               (local.get $5)
              )
              (i32.store16
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
               (i32.shr_s
                (i32.and
                 (i32.load
                  (local.get $22)
                 )
                 (i32.const 65535)
                )
                (i32.sub
                 (i32.const 16)
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $3)
                   )
                   (i32.const 5820)
                  )
                 )
                )
               )
              )
              (i32.store
               (local.tee $4
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
               (i32.add
                (i32.load
                 (local.get $4)
                )
                (i32.sub
                 (i32.load
                  (local.get $13)
                 )
                 (i32.const 16)
                )
               )
              )
             )
             (block
              (i32.store16
               (local.tee $5
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5816)
                )
               )
               (i32.or
                (i32.load16_u
                 (local.get $5)
                )
                (i32.shl
                 (local.get $4)
                 (i32.load
                  (i32.add
                   (i32.load
                    (local.get $3)
                   )
                   (i32.const 5820)
                  )
                 )
                )
               )
              )
              (i32.store
               (local.tee $4
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
               (i32.add
                (i32.load
                 (local.get $13)
                )
                (i32.load
                 (local.get $4)
                )
               )
              )
             )
            )
            (i32.store
             (local.get $1)
             (i32.add
              (i32.load
               (local.get $1)
              )
              (i32.const -1)
             )
            )
           )
          )
          (i32.store
           (local.get $14)
           (i32.load16_u
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 2750)
            )
           )
          )
          (local.set $4
           (i32.load16_u
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 2748)
            )
           )
          )
          (if
           (i32.gt_s
            (i32.load
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5820)
             )
            )
            (i32.sub
             (i32.const 16)
             (i32.load
              (local.get $14)
             )
            )
           )
           (block
            (i32.store
             (local.get $23)
             (local.get $4)
            )
            (i32.store16
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $4)
              )
              (i32.shl
               (i32.and
                (i32.load
                 (local.get $23)
                )
                (i32.const 65535)
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (local.set $5
             (i32.and
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 255)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (local.set $5
             (i32.shr_s
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 8)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (i32.store16
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
             (i32.shr_s
              (i32.and
               (i32.load
                (local.get $23)
               )
               (i32.const 65535)
              )
              (i32.sub
               (i32.const 16)
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.sub
               (i32.load
                (local.get $14)
               )
               (i32.const 16)
              )
             )
            )
           )
           (block
            (i32.store16
             (local.tee $5
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $5)
              )
              (i32.shl
               (local.get $4)
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $14)
              )
              (i32.load
               (local.get $4)
              )
             )
            )
           )
          )
          (i32.store
           (local.get $15)
           (i32.const 2)
          )
          (local.set $4
           (i32.sub
            (i32.load
             (local.get $1)
            )
            (i32.const 3)
           )
          )
          (if
           (i32.gt_s
            (i32.load
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5820)
             )
            )
            (i32.sub
             (i32.const 16)
             (i32.load
              (local.get $15)
             )
            )
           )
           (block
            (i32.store
             (local.get $24)
             (local.get $4)
            )
            (i32.store16
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $4)
              )
              (i32.shl
               (i32.and
                (i32.load
                 (local.get $24)
                )
                (i32.const 65535)
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (local.set $5
             (i32.and
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 255)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (local.set $5
             (i32.shr_s
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 8)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (i32.store16
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
             (i32.shr_s
              (i32.and
               (i32.load
                (local.get $24)
               )
               (i32.const 65535)
              )
              (i32.sub
               (i32.const 16)
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.sub
               (i32.load
                (local.get $15)
               )
               (i32.const 16)
              )
             )
            )
            (br $do-once0)
           )
           (block
            (i32.store16
             (local.tee $5
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $5)
              )
              (i32.shl
               (i32.and
                (local.get $4)
                (i32.const 65535)
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $15)
              )
              (i32.load
               (local.get $4)
              )
             )
            )
            (br $do-once0)
           )
          )
         )
        )
        (local.set $4
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 2684)
         )
        )
        (if
         (i32.le_s
          (i32.load
           (local.get $1)
          )
          (i32.const 10)
         )
         (block
          (i32.store
           (local.get $16)
           (i32.load16_u
            (i32.add
             (local.get $4)
             (i32.const 70)
            )
           )
          )
          (local.set $4
           (i32.load16_u
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 2752)
            )
           )
          )
          (if
           (i32.gt_s
            (i32.load
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5820)
             )
            )
            (i32.sub
             (i32.const 16)
             (i32.load
              (local.get $16)
             )
            )
           )
           (block
            (i32.store
             (local.get $25)
             (local.get $4)
            )
            (i32.store16
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $4)
              )
              (i32.shl
               (i32.and
                (i32.load
                 (local.get $25)
                )
                (i32.const 65535)
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (local.set $5
             (i32.and
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 255)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (local.set $5
             (i32.shr_s
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 8)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (i32.store16
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
             (i32.shr_s
              (i32.and
               (i32.load
                (local.get $25)
               )
               (i32.const 65535)
              )
              (i32.sub
               (i32.const 16)
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.sub
               (i32.load
                (local.get $16)
               )
               (i32.const 16)
              )
             )
            )
           )
           (block
            (i32.store16
             (local.tee $5
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $5)
              )
              (i32.shl
               (local.get $4)
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $16)
              )
              (i32.load
               (local.get $4)
              )
             )
            )
           )
          )
          (i32.store
           (local.get $17)
           (i32.const 3)
          )
          (local.set $4
           (i32.sub
            (i32.load
             (local.get $1)
            )
            (i32.const 3)
           )
          )
          (if
           (i32.gt_s
            (i32.load
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5820)
             )
            )
            (i32.sub
             (i32.const 16)
             (i32.load
              (local.get $17)
             )
            )
           )
           (block
            (i32.store
             (local.get $26)
             (local.get $4)
            )
            (i32.store16
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $4)
              )
              (i32.shl
               (i32.and
                (i32.load
                 (local.get $26)
                )
                (i32.const 65535)
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (local.set $5
             (i32.and
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 255)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (local.set $5
             (i32.shr_s
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 8)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (i32.store16
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
             (i32.shr_s
              (i32.and
               (i32.load
                (local.get $26)
               )
               (i32.const 65535)
              )
              (i32.sub
               (i32.const 16)
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.sub
               (i32.load
                (local.get $17)
               )
               (i32.const 16)
              )
             )
            )
           )
           (block
            (i32.store16
             (local.tee $5
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $5)
              )
              (i32.shl
               (i32.and
                (local.get $4)
                (i32.const 65535)
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $17)
              )
              (i32.load
               (local.get $4)
              )
             )
            )
           )
          )
         )
         (block
          (i32.store
           (local.get $18)
           (i32.load16_u
            (i32.add
             (local.get $4)
             (i32.const 74)
            )
           )
          )
          (local.set $4
           (i32.load16_u
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 2756)
            )
           )
          )
          (if
           (i32.gt_s
            (i32.load
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5820)
             )
            )
            (i32.sub
             (i32.const 16)
             (i32.load
              (local.get $18)
             )
            )
           )
           (block
            (i32.store
             (local.get $27)
             (local.get $4)
            )
            (i32.store16
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $4)
              )
              (i32.shl
               (i32.and
                (i32.load
                 (local.get $27)
                )
                (i32.const 65535)
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (local.set $5
             (i32.and
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 255)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (local.set $5
             (i32.shr_s
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 8)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (i32.store16
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
             (i32.shr_s
              (i32.and
               (i32.load
                (local.get $27)
               )
               (i32.const 65535)
              )
              (i32.sub
               (i32.const 16)
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.sub
               (i32.load
                (local.get $18)
               )
               (i32.const 16)
              )
             )
            )
           )
           (block
            (i32.store16
             (local.tee $5
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $5)
              )
              (i32.shl
               (local.get $4)
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $18)
              )
              (i32.load
               (local.get $4)
              )
             )
            )
           )
          )
          (i32.store
           (local.get $19)
           (i32.const 7)
          )
          (local.set $4
           (i32.sub
            (i32.load
             (local.get $1)
            )
            (i32.const 11)
           )
          )
          (if
           (i32.gt_s
            (i32.load
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5820)
             )
            )
            (i32.sub
             (i32.const 16)
             (i32.load
              (local.get $19)
             )
            )
           )
           (block
            (i32.store
             (local.get $0)
             (local.get $4)
            )
            (i32.store16
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $4)
              )
              (i32.shl
               (i32.and
                (i32.load
                 (local.get $0)
                )
                (i32.const 65535)
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (local.set $5
             (i32.and
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 255)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (local.set $5
             (i32.shr_s
              (i32.load16_u
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 5816)
               )
              )
              (i32.const 8)
             )
            )
            (local.set $6
             (i32.load
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 8)
              )
             )
            )
            (local.set $4
             (i32.load
              (local.tee $7
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 20)
               )
              )
             )
            )
            (i32.store
             (local.get $7)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $4)
              (local.get $6)
             )
             (local.get $5)
            )
            (i32.store16
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 5816)
             )
             (i32.shr_s
              (i32.and
               (i32.load
                (local.get $0)
               )
               (i32.const 65535)
              )
              (i32.sub
               (i32.const 16)
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $4)
              )
              (i32.sub
               (i32.load
                (local.get $19)
               )
               (i32.const 16)
              )
             )
            )
           )
           (block
            (i32.store16
             (local.tee $5
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5816)
              )
             )
             (i32.or
              (i32.load16_u
               (local.get $5)
              )
              (i32.shl
               (i32.and
                (local.get $4)
                (i32.const 65535)
               )
               (i32.load
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const 5820)
                )
               )
              )
             )
            )
            (i32.store
             (local.tee $4
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 5820)
              )
             )
             (i32.add
              (i32.load
               (local.get $19)
              )
              (i32.load
               (local.get $4)
              )
             )
            )
           )
          )
         )
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (i32.store
       (local.get $29)
       (i32.load
        (local.get $2)
       )
      )
      (if
       (i32.eqz
        (i32.load
         (local.get $9)
        )
       )
       (block
        (i32.store
         (local.get $10)
         (i32.const 138)
        )
        (i32.store
         (local.get $11)
         (i32.const 3)
        )
        (br $do-once)
       )
      )
      (if
       (i32.eq
        (i32.load
         (local.get $2)
        )
        (i32.load
         (local.get $9)
        )
       )
       (block
        (i32.store
         (local.get $10)
         (i32.const 6)
        )
        (i32.store
         (local.get $11)
         (i32.const 3)
        )
       )
       (block
        (i32.store
         (local.get $10)
         (i32.const 7)
        )
        (i32.store
         (local.get $11)
         (i32.const 4)
        )
       )
      )
     )
     (i32.store
      (local.get $20)
      (i32.add
       (i32.load
        (local.get $20)
       )
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $_scan_tree (; 275 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $4)
     (i32.const 36)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $4)
     (i32.const 32)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.get $4)
     (i32.const 28)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $4)
     (i32.const 20)
    )
   )
   (i32.const -1)
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $4)
     (i32.const 12)
    )
   )
   (i32.load16_u
    (i32.add
     (i32.load
      (local.get $9)
     )
     (i32.const 2)
    )
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $4)
     (i32.const 8)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $4)
     (i32.const 4)
    )
   )
   (i32.const 7)
  )
  (i32.store
   (local.tee $0
    (local.get $4)
   )
   (i32.const 4)
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $2)
    )
   )
   (block
    (i32.store
     (local.get $6)
     (i32.const 138)
    )
    (i32.store
     (local.get $0)
     (i32.const 3)
    )
   )
  )
  (local.set $1
   (i32.add
    (local.get $4)
    (i32.const 16)
   )
  )
  (i32.store16
   (i32.add
    (i32.add
     (i32.load
      (local.get $9)
     )
     (i32.shl
      (i32.load
       (local.get $10)
      )
      (i32.const 2)
     )
    )
    (i32.const 6)
   )
   (i32.const -1)
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $4)
     (i32.const 24)
    )
   )
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.le_s
     (i32.load
      (local.get $8)
     )
     (i32.load
      (local.get $10)
     )
    )
    (block
     (i32.store
      (local.get $1)
      (i32.load
       (local.get $2)
      )
     )
     (i32.store
      (local.get $2)
      (i32.load16_u
       (i32.add
        (i32.add
         (i32.load
          (local.get $9)
         )
         (i32.shl
          (i32.load
           (local.get $8)
          )
          (i32.const 2)
         )
        )
        (i32.const 6)
       )
      )
     )
     (i32.store
      (local.get $5)
      (local.tee $3
       (i32.add
        (i32.load
         (local.get $5)
        )
        (i32.const 1)
       )
      )
     )
     (block $do-once
      (block $__rjti$0
       (br_if $__rjti$0
        (i32.ge_s
         (local.get $3)
         (i32.load
          (local.get $6)
         )
        )
       )
       (br_if $__rjti$0
        (i32.ne
         (i32.load
          (local.get $1)
         )
         (i32.load
          (local.get $2)
         )
        )
       )
       (br $do-once)
      )
      (if
       (i32.lt_s
        (i32.load
         (local.get $5)
        )
        (i32.load
         (local.get $0)
        )
       )
       (i32.store16
        (local.tee $3
         (i32.add
          (i32.add
           (i32.load
            (local.get $7)
           )
           (i32.const 2684)
          )
          (i32.shl
           (i32.load
            (local.get $1)
           )
           (i32.const 2)
          )
         )
        )
        (i32.add
         (i32.load
          (local.get $5)
         )
         (i32.load16_u
          (local.get $3)
         )
        )
       )
       (if
        (i32.load
         (local.get $1)
        )
        (block
         (if
          (i32.ne
           (i32.load
            (local.get $1)
           )
           (i32.load
            (local.get $11)
           )
          )
          (i32.store16
           (local.tee $3
            (i32.add
             (i32.add
              (i32.load
               (local.get $7)
              )
              (i32.const 2684)
             )
             (i32.shl
              (i32.load
               (local.get $1)
              )
              (i32.const 2)
             )
            )
           )
           (i32.add
            (i32.load16_s
             (local.get $3)
            )
            (i32.const 1)
           )
          )
         )
         (i32.store16
          (local.tee $3
           (i32.add
            (i32.load
             (local.get $7)
            )
            (i32.const 2748)
           )
          )
          (i32.add
           (i32.load16_s
            (local.get $3)
           )
           (i32.const 1)
          )
         )
        )
        (block
         (local.set $3
          (i32.add
           (i32.load
            (local.get $7)
           )
           (i32.const 2684)
          )
         )
         (if
          (i32.le_s
           (i32.load
            (local.get $5)
           )
           (i32.const 10)
          )
          (i32.store16
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 68)
            )
           )
           (i32.add
            (i32.load16_s
             (local.get $3)
            )
            (i32.const 1)
           )
          )
          (i32.store16
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 72)
            )
           )
           (i32.add
            (i32.load16_s
             (local.get $3)
            )
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (i32.store
       (local.get $5)
       (i32.const 0)
      )
      (i32.store
       (local.get $11)
       (i32.load
        (local.get $1)
       )
      )
      (if
       (i32.eqz
        (i32.load
         (local.get $2)
        )
       )
       (block
        (i32.store
         (local.get $6)
         (i32.const 138)
        )
        (i32.store
         (local.get $0)
         (i32.const 3)
        )
        (br $do-once)
       )
      )
      (if
       (i32.eq
        (i32.load
         (local.get $1)
        )
        (i32.load
         (local.get $2)
        )
       )
       (block
        (i32.store
         (local.get $6)
         (i32.const 6)
        )
        (i32.store
         (local.get $0)
         (i32.const 3)
        )
       )
       (block
        (i32.store
         (local.get $6)
         (i32.const 7)
        )
        (i32.store
         (local.get $0)
         (i32.const 4)
        )
       )
      )
     )
     (i32.store
      (local.get $8)
      (i32.add
       (i32.load
        (local.get $8)
       )
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_pqdownheap (; 276 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $5)
     (i32.const 16)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $5)
     (i32.const 12)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $5)
     (i32.const 8)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (i32.add
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 2908)
     )
     (i32.shl
      (i32.load
       (local.get $1)
      )
      (i32.const 2)
     )
    )
   )
  )
  (i32.store
   (local.tee $0
    (local.get $5)
   )
   (i32.shl
    (i32.load
     (local.get $1)
    )
    (i32.const 1)
   )
  )
  (loop $while-in
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.gt_s
      (i32.load
       (local.get $0)
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 5200)
       )
      )
     )
    )
    (if
     (i32.lt_s
      (i32.load
       (local.get $0)
      )
      (i32.load
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 5200)
       )
      )
     )
     (block $do-once
      (if
       (i32.ge_s
        (i32.load16_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.shl
           (i32.load
            (i32.add
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.shl
               (i32.load
                (local.get $0)
               )
               (i32.const 2)
              )
             )
             (i32.const 2912)
            )
           )
           (i32.const 2)
          )
         )
        )
        (i32.load16_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.shl
           (i32.load
            (i32.add
             (i32.add
              (i32.load
               (local.get $3)
              )
              (i32.const 2908)
             )
             (i32.shl
              (i32.load
               (local.get $0)
              )
              (i32.const 2)
             )
            )
           )
           (i32.const 2)
          )
         )
        )
       )
       (block
        (br_if $do-once
         (i32.ne
          (i32.load16_u
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.shl
             (i32.load
              (i32.add
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.shl
                 (i32.load
                  (local.get $0)
                 )
                 (i32.const 2)
                )
               )
               (i32.const 2912)
              )
             )
             (i32.const 2)
            )
           )
          )
          (i32.load16_u
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.shl
             (i32.load
              (i32.add
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.const 2908)
               )
               (i32.shl
                (i32.load
                 (local.get $0)
                )
                (i32.const 2)
               )
              )
             )
             (i32.const 2)
            )
           )
          )
         )
        )
        (br_if $do-once
         (i32.gt_s
          (i32.load8_u
           (i32.add
            (i32.load
             (i32.add
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.shl
                (i32.load
                 (local.get $0)
                )
                (i32.const 2)
               )
              )
              (i32.const 2912)
             )
            )
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5208)
            )
           )
          )
          (i32.load8_u
           (i32.add
            (i32.load
             (i32.add
              (i32.add
               (i32.load
                (local.get $3)
               )
               (i32.const 2908)
              )
              (i32.shl
               (i32.load
                (local.get $0)
               )
               (i32.const 2)
              )
             )
            )
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5208)
            )
           )
          )
         )
        )
       )
      )
      (i32.store
       (local.get $0)
       (i32.add
        (i32.load
         (local.get $0)
        )
        (i32.const 1)
       )
      )
     )
    )
    (br_if $__rjti$0
     (i32.lt_s
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.shl
         (i32.load
          (local.get $2)
         )
         (i32.const 2)
        )
       )
      )
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.shl
         (i32.load
          (i32.add
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 2908)
           )
           (i32.shl
            (i32.load
             (local.get $0)
            )
            (i32.const 2)
           )
          )
         )
         (i32.const 2)
        )
       )
      )
     )
    )
    (if
     (i32.eq
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.shl
         (i32.load
          (local.get $2)
         )
         (i32.const 2)
        )
       )
      )
      (i32.load16_u
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.shl
         (i32.load
          (i32.add
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 2908)
           )
           (i32.shl
            (i32.load
             (local.get $0)
            )
            (i32.const 2)
           )
          )
         )
         (i32.const 2)
        )
       )
      )
     )
     (br_if $__rjti$0
      (i32.le_s
       (i32.load8_u
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 5208)
         )
        )
       )
       (i32.load8_u
        (i32.add
         (i32.load
          (i32.add
           (i32.add
            (i32.load
             (local.get $3)
            )
            (i32.const 2908)
           )
           (i32.shl
            (i32.load
             (local.get $0)
            )
            (i32.const 2)
           )
          )
         )
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 5208)
         )
        )
       )
      )
     )
    )
    (i32.store
     (i32.add
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 2908)
      )
      (i32.shl
       (i32.load
        (local.get $1)
       )
       (i32.const 2)
      )
     )
     (i32.load
      (i32.add
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 2908)
       )
       (i32.shl
        (i32.load
         (local.get $0)
        )
        (i32.const 2)
       )
      )
     )
    )
    (i32.store
     (local.get $1)
     (i32.load
      (local.get $0)
     )
    )
    (i32.store
     (local.get $0)
     (i32.shl
      (i32.load
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (br $while-in)
   )
  )
  (i32.store
   (i32.add
    (i32.add
     (i32.load
      (local.get $3)
     )
     (i32.const 2908)
    )
    (i32.shl
     (i32.load
      (local.get $1)
     )
     (i32.const 2)
    )
   )
   (i32.load
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_gen_bitlen (; 277 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $8
   (i32.add
    (local.get $2)
    (i32.const 20)
   )
  )
  (local.set $4
   (i32.add
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (i32.const 4)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 56)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $2)
     (i32.const 52)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $2)
     (i32.const 48)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $2)
     (i32.const 44)
    )
   )
   (i32.load
    (i32.load
     (local.get $0)
    )
   )
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $2)
     (i32.const 40)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $0)
     )
     (i32.const 4)
    )
   )
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $2)
     (i32.const 36)
    )
   )
   (i32.load
    (i32.load
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.const 8)
     )
    )
   )
  )
  (i32.store
   (local.tee $14
    (i32.add
     (local.get $2)
     (i32.const 32)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (local.get $0)
       )
       (i32.const 8)
      )
     )
     (i32.const 4)
    )
   )
  )
  (i32.store
   (local.tee $13
    (i32.add
     (local.get $2)
     (i32.const 28)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (local.get $0)
       )
       (i32.const 8)
      )
     )
     (i32.const 8)
    )
   )
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $2)
     (i32.const 24)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (local.get $0)
       )
       (i32.const 8)
      )
     )
     (i32.const 16)
    )
   )
  )
  (i32.store
   (local.tee $0
    (local.get $2)
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.le_s
     (i32.load
      (local.get $1)
     )
     (i32.const 15)
    )
    (block
     (i32.store16
      (i32.add
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.const 2876)
       )
       (i32.shl
        (i32.load
         (local.get $1)
        )
        (i32.const 1)
       )
      )
      (i32.const 0)
     )
     (i32.store
      (local.get $1)
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store16
   (i32.add
    (i32.add
     (i32.load
      (local.get $7)
     )
     (i32.shl
      (i32.load
       (i32.add
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.const 2908)
        )
        (i32.shl
         (i32.load
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5204)
          )
         )
         (i32.const 2)
        )
       )
      )
      (i32.const 2)
     )
    )
    (i32.const 2)
   )
   (i32.const 0)
  )
  (i32.store
   (local.get $8)
   (i32.add
    (i32.load
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.const 5204)
     )
    )
    (i32.const 1)
   )
  )
  (loop $while-in1
   (if
    (i32.lt_s
     (i32.load
      (local.get $8)
     )
     (i32.const 573)
    )
    (block
     (i32.store
      (local.get $4)
      (i32.load
       (i32.add
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.const 2908)
        )
        (i32.shl
         (i32.load
          (local.get $8)
         )
         (i32.const 2)
        )
       )
      )
     )
     (i32.store
      (local.get $1)
      (i32.add
       (i32.load16_u
        (i32.add
         (i32.add
          (i32.load
           (local.get $7)
          )
          (i32.shl
           (i32.load16_u
            (i32.add
             (i32.add
              (i32.load
               (local.get $7)
              )
              (i32.shl
               (i32.load
                (local.get $4)
               )
               (i32.const 2)
              )
             )
             (i32.const 2)
            )
           )
           (i32.const 2)
          )
         )
         (i32.const 2)
        )
       )
       (i32.const 1)
      )
     )
     (if
      (i32.gt_s
       (i32.load
        (local.get $1)
       )
       (i32.load
        (local.get $9)
       )
      )
      (block
       (i32.store
        (local.get $1)
        (i32.load
         (local.get $9)
        )
       )
       (i32.store
        (local.get $0)
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.const 1)
        )
       )
      )
     )
     (i32.store16
      (i32.add
       (i32.add
        (i32.load
         (local.get $7)
        )
        (i32.shl
         (i32.load
          (local.get $4)
         )
         (i32.const 2)
        )
       )
       (i32.const 2)
      )
      (i32.load
       (local.get $1)
      )
     )
     (if
      (i32.le_s
       (i32.load
        (local.get $4)
       )
       (i32.load
        (local.get $11)
       )
      )
      (block
       (i32.store16
        (local.tee $10
         (i32.add
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 2876)
          )
          (i32.shl
           (i32.load
            (local.get $1)
           )
           (i32.const 1)
          )
         )
        )
        (i32.add
         (i32.load16_s
          (local.get $10)
         )
         (i32.const 1)
        )
       )
       (i32.store
        (local.get $5)
        (i32.const 0)
       )
       (if
        (i32.ge_s
         (i32.load
          (local.get $4)
         )
         (i32.load
          (local.get $13)
         )
        )
        (i32.store
         (local.get $5)
         (i32.load
          (i32.add
           (i32.load
            (local.get $14)
           )
           (i32.shl
            (i32.sub
             (i32.load
              (local.get $4)
             )
             (i32.load
              (local.get $13)
             )
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (i32.store16
        (local.get $6)
        (i32.load16_s
         (i32.add
          (i32.load
           (local.get $7)
          )
          (i32.shl
           (i32.load
            (local.get $4)
           )
           (i32.const 2)
          )
         )
        )
       )
       (i32.store
        (local.tee $10
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 5800)
         )
        )
        (i32.add
         (i32.load
          (local.get $10)
         )
         (i32.mul
          (i32.load16_u
           (local.get $6)
          )
          (i32.add
           (i32.load
            (local.get $1)
           )
           (i32.load
            (local.get $5)
           )
          )
         )
        )
       )
       (if
        (i32.load
         (local.get $12)
        )
        (i32.store
         (local.tee $10
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.const 5804)
          )
         )
         (i32.add
          (i32.load
           (local.get $10)
          )
          (i32.mul
           (i32.load16_u
            (local.get $6)
           )
           (i32.add
            (i32.load16_u
             (i32.add
              (i32.add
               (i32.load
                (local.get $12)
               )
               (i32.shl
                (i32.load
                 (local.get $4)
                )
                (i32.const 2)
               )
              )
              (i32.const 2)
             )
            )
            (i32.load
             (local.get $5)
            )
           )
          )
         )
        )
       )
      )
     )
     (i32.store
      (local.get $8)
      (i32.add
       (i32.load
        (local.get $8)
       )
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $0)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $2)
    )
    (return)
   )
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (i32.const 12)
   )
  )
  (loop $while-in3
   (i32.store
    (local.get $1)
    (i32.sub
     (i32.load
      (local.get $9)
     )
     (i32.const 1)
    )
   )
   (loop $while-in5
    (if
     (i32.eqz
      (i32.load16_u
       (i32.add
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.const 2876)
        )
        (i32.shl
         (i32.load
          (local.get $1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (block
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const -1)
       )
      )
      (br $while-in5)
     )
    )
   )
   (i32.store16
    (local.tee $6
     (i32.add
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 2876)
      )
      (i32.shl
       (i32.load
        (local.get $1)
       )
       (i32.const 1)
      )
     )
    )
    (i32.add
     (i32.load16_s
      (local.get $6)
     )
     (i32.const -1)
    )
   )
   (i32.store16
    (local.tee $6
     (i32.add
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.shl
        (i32.load
         (local.get $1)
        )
        (i32.const 1)
       )
      )
      (i32.const 2878)
     )
    )
    (i32.add
     (i32.load16_u
      (local.get $6)
     )
     (i32.const 2)
    )
   )
   (i32.store16
    (local.tee $6
     (i32.add
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.const 2876)
      )
      (i32.shl
       (i32.load
        (local.get $9)
       )
       (i32.const 1)
      )
     )
    )
    (i32.add
     (i32.load16_s
      (local.get $6)
     )
     (i32.const -1)
    )
   )
   (i32.store
    (local.get $0)
    (i32.sub
     (i32.load
      (local.get $0)
     )
     (i32.const 2)
    )
   )
   (br_if $while-in3
    (i32.gt_s
     (i32.load
      (local.get $0)
     )
     (i32.const 0)
    )
   )
  )
  (i32.store
   (local.get $1)
   (i32.load
    (local.get $9)
   )
  )
  (loop $while-in7
   (if
    (i32.load
     (local.get $1)
    )
    (block
     (i32.store
      (local.get $4)
      (i32.load16_u
       (i32.add
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.const 2876)
        )
        (i32.shl
         (i32.load
          (local.get $1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (loop $while-in9
      (if
       (i32.load
        (local.get $4)
       )
       (block
        (local.set $0
         (i32.add
          (i32.load
           (local.get $3)
          )
          (i32.const 2908)
         )
        )
        (i32.store
         (local.get $8)
         (local.tee $9
          (i32.add
           (i32.load
            (local.get $8)
           )
           (i32.const -1)
          )
         )
        )
        (i32.store
         (local.get $5)
         (i32.load
          (i32.add
           (i32.shl
            (local.get $9)
            (i32.const 2)
           )
           (local.get $0)
          )
         )
        )
        (br_if $while-in9
         (i32.gt_s
          (i32.load
           (local.get $5)
          )
          (i32.load
           (local.get $11)
          )
         )
        )
        (if
         (i32.ne
          (i32.load16_u
           (i32.add
            (i32.add
             (i32.load
              (local.get $7)
             )
             (i32.shl
              (i32.load
               (local.get $5)
              )
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
          )
          (i32.load
           (local.get $1)
          )
         )
         (block
          (i32.store
           (local.tee $0
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 5800)
            )
           )
           (i32.add
            (i32.load
             (local.get $0)
            )
            (i32.mul
             (i32.load16_u
              (i32.add
               (i32.load
                (local.get $7)
               )
               (i32.shl
                (i32.load
                 (local.get $5)
                )
                (i32.const 2)
               )
              )
             )
             (i32.sub
              (i32.load
               (local.get $1)
              )
              (i32.load16_u
               (i32.add
                (i32.add
                 (i32.load
                  (local.get $7)
                 )
                 (i32.shl
                  (i32.load
                   (local.get $5)
                  )
                  (i32.const 2)
                 )
                )
                (i32.const 2)
               )
              )
             )
            )
           )
          )
          (i32.store16
           (i32.add
            (i32.add
             (i32.load
              (local.get $7)
             )
             (i32.shl
              (i32.load
               (local.get $5)
              )
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
           (i32.load
            (local.get $1)
           )
          )
         )
        )
        (i32.store
         (local.get $4)
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const -1)
         )
        )
        (br $while-in9)
       )
      )
     )
     (i32.store
      (local.get $1)
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const -1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_gen_codes (; 278 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $6
   (local.get $3)
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 36)
   )
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 32)
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $3)
     (i32.const 56)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $3)
     (i32.const 52)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 48)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $3)
     (i32.const 44)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $3)
     (i32.const 40)
    )
   )
   (i32.const 1)
  )
  (loop $while-in
   (if
    (i32.le_s
     (i32.load
      (local.get $2)
     )
     (i32.const 15)
    )
    (block
     (i32.store
      (local.get $1)
      (i32.shl
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.load16_u
         (i32.add
          (i32.load
           (local.get $0)
          )
          (i32.shl
           (i32.sub
            (i32.load
             (local.get $2)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 1)
      )
     )
     (i32.store16
      (i32.add
       (i32.shl
        (i32.load
         (local.get $2)
        )
        (i32.const 1)
       )
       (local.get $6)
      )
      (i32.load
       (local.get $1)
      )
     )
     (i32.store
      (local.get $2)
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.le_s
     (i32.load
      (local.get $4)
     )
     (i32.load
      (local.get $8)
     )
    )
    (block
     (i32.store
      (local.get $5)
      (i32.load16_u
       (i32.add
        (i32.add
         (i32.load
          (local.get $7)
         )
         (i32.shl
          (i32.load
           (local.get $4)
          )
          (i32.const 2)
         )
        )
        (i32.const 2)
       )
      )
     )
     (if
      (i32.load
       (local.get $5)
      )
      (block
       (local.set $1
        (i32.load16_s
         (local.tee $0
          (i32.add
           (i32.shl
            (i32.load
             (local.get $5)
            )
            (i32.const 1)
           )
           (local.get $6)
          )
         )
        )
       )
       (i32.store16
        (local.get $0)
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $0
        (i32.and
         (call $_bi_reverse
          (i32.and
           (local.get $1)
           (i32.const 65535)
          )
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 65535)
        )
       )
       (i32.store16
        (i32.add
         (i32.load
          (local.get $7)
         )
         (i32.shl
          (i32.load
           (local.get $4)
          )
          (i32.const 2)
         )
        )
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $4)
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_bi_reverse (; 279 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $2)
     (i32.const 4)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $0
    (local.get $2)
   )
   (i32.const 0)
  )
  (loop $while-in
   (i32.store
    (local.get $0)
    (i32.or
     (i32.load
      (local.get $0)
     )
     (i32.and
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
   )
   (i32.store
    (local.get $3)
    (i32.shr_u
     (i32.load
      (local.get $3)
     )
     (i32.const 1)
    )
   )
   (i32.store
    (local.get $0)
    (i32.shl
     (i32.load
      (local.get $0)
     )
     (i32.const 1)
    )
   )
   (i32.store
    (local.get $4)
    (local.tee $1
     (i32.add
      (i32.load
       (local.get $4)
      )
      (i32.const -1)
     )
    )
   )
   (br_if $while-in
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.shr_u
    (i32.load
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $0)
 )
 (func $_zcalloc (; 280 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.get $3)
   (local.get $2)
  )
  (local.set $0
   (call $_malloc
    (i32.mul
     (i32.load
      (local.get $0)
     )
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_zcfree (; 281 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (i32.add
    (local.get $2)
    (i32.const 4)
   )
   (local.get $0)
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  (call $_free
   (i32.load
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_adler32_z (; 282 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 20)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $6)
     (i32.const 16)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 4)
    )
   )
   (i32.shr_u
    (i32.load
     (local.get $3)
    )
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (i32.and
    (i32.load
     (local.get $3)
    )
    (i32.const 65535)
   )
  )
  (local.set $0
   (i32.load
    (local.get $4)
   )
  )
  (if
   (i32.eq
    (i32.load
     (local.get $5)
    )
    (i32.const 1)
   )
   (block
    (i32.store
     (local.get $3)
     (i32.add
      (i32.load8_u
       (local.get $0)
      )
      (i32.load
       (local.get $3)
      )
     )
    )
    (if
     (i32.ge_u
      (i32.load
       (local.get $3)
      )
      (i32.const 65521)
     )
     (i32.store
      (local.get $3)
      (i32.sub
       (i32.load
        (local.get $3)
       )
       (i32.const 65521)
      )
     )
    )
    (i32.store
     (local.get $1)
     (i32.add
      (i32.load
       (local.get $3)
      )
      (i32.load
       (local.get $1)
      )
     )
    )
    (if
     (i32.ge_u
      (i32.load
       (local.get $1)
      )
      (i32.const 65521)
     )
     (i32.store
      (local.get $1)
      (i32.sub
       (i32.load
        (local.get $1)
       )
       (i32.const 65521)
      )
     )
    )
    (i32.store
     (local.get $7)
     (i32.or
      (i32.load
       (local.get $3)
      )
      (i32.shl
       (i32.load
        (local.get $1)
       )
       (i32.const 16)
      )
     )
    )
    (local.set $0
     (i32.load
      (local.get $7)
     )
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (local.get $0)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $0)
   )
   (block
    (i32.store
     (local.get $7)
     (i32.const 1)
    )
    (local.set $0
     (i32.load
      (local.get $7)
     )
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (local.get $0)
    )
   )
  )
  (if
   (i32.lt_u
    (i32.load
     (local.get $5)
    )
    (i32.const 16)
   )
   (block
    (loop $while-in
     (i32.store
      (local.get $5)
      (i32.add
       (local.tee $0
        (i32.load
         (local.get $5)
        )
       )
       (i32.const -1)
      )
     )
     (if
      (local.get $0)
      (block
       (i32.store
        (local.get $4)
        (i32.add
         (local.tee $0
          (i32.load
           (local.get $4)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (local.get $0)
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (if
     (i32.ge_u
      (i32.load
       (local.get $3)
      )
      (i32.const 65521)
     )
     (i32.store
      (local.get $3)
      (i32.sub
       (i32.load
        (local.get $3)
       )
       (i32.const 65521)
      )
     )
    )
    (i32.store
     (local.get $1)
     (i32.rem_u
      (i32.load
       (local.get $1)
      )
      (i32.const 65521)
     )
    )
    (i32.store
     (local.get $7)
     (i32.or
      (i32.load
       (local.get $3)
      )
      (i32.shl
       (i32.load
        (local.get $1)
       )
       (i32.const 16)
      )
     )
    )
    (local.set $0
     (i32.load
      (local.get $7)
     )
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (local.get $0)
    )
   )
  )
  (local.set $0
   (local.get $6)
  )
  (loop $while-in1
   (local.set $2
    (i32.load
     (local.get $5)
    )
   )
   (if
    (i32.ge_u
     (i32.load
      (local.get $5)
     )
     (i32.const 5552)
    )
    (block
     (i32.store
      (local.get $5)
      (i32.sub
       (local.get $2)
       (i32.const 5552)
      )
     )
     (i32.store
      (local.get $0)
      (i32.const 347)
     )
     (loop $while-in3
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.load
          (local.get $4)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 1)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 2)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 3)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 4)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 5)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 6)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 7)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 8)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 9)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 10)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 11)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 12)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 13)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 14)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $3)
       (i32.add
        (i32.load8_u
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const 15)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $1)
       (i32.add
        (i32.load
         (local.get $3)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.store
       (local.get $4)
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 16)
       )
      )
      (i32.store
       (local.get $0)
       (local.tee $2
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.const -1)
        )
       )
      )
      (br_if $while-in3
       (local.get $2)
      )
     )
     (i32.store
      (local.get $3)
      (i32.rem_u
       (i32.load
        (local.get $3)
       )
       (i32.const 65521)
      )
     )
     (i32.store
      (local.get $1)
      (i32.rem_u
       (i32.load
        (local.get $1)
       )
       (i32.const 65521)
      )
     )
     (br $while-in1)
    )
   )
  )
  (if
   (local.get $2)
   (block
    (loop $while-in5
     (if
      (i32.ge_u
       (i32.load
        (local.get $5)
       )
       (i32.const 16)
      )
      (block
       (i32.store
        (local.get $5)
        (i32.sub
         (i32.load
          (local.get $5)
         )
         (i32.const 16)
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.load
           (local.get $4)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 1)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 2)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 3)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 4)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 5)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 6)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 7)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 8)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 9)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 10)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 11)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 12)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 13)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 14)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const 15)
          )
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.get $4)
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const 16)
        )
       )
       (br $while-in5)
      )
     )
    )
    (loop $while-in7
     (i32.store
      (local.get $5)
      (i32.add
       (local.tee $0
        (i32.load
         (local.get $5)
        )
       )
       (i32.const -1)
      )
     )
     (if
      (local.get $0)
      (block
       (i32.store
        (local.get $4)
        (i32.add
         (local.tee $0
          (i32.load
           (local.get $4)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store
        (local.get $3)
        (i32.add
         (i32.load8_u
          (local.get $0)
         )
         (i32.load
          (local.get $3)
         )
        )
       )
       (i32.store
        (local.get $1)
        (i32.add
         (i32.load
          (local.get $3)
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (br $while-in7)
      )
     )
    )
    (i32.store
     (local.get $3)
     (i32.rem_u
      (i32.load
       (local.get $3)
      )
      (i32.const 65521)
     )
    )
    (i32.store
     (local.get $1)
     (i32.rem_u
      (i32.load
       (local.get $1)
      )
      (i32.const 65521)
     )
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.or
    (i32.load
     (local.get $3)
    )
    (i32.shl
     (i32.load
      (local.get $1)
     )
     (i32.const 16)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $7)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $_adler32 (; 283 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 8)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.get $3)
   (local.get $2)
  )
  (local.set $0
   (call $_adler32_z
    (i32.load
     (local.get $4)
    )
    (i32.load
     (local.get $0)
    )
    (i32.load
     (local.get $3)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_inflate_fast (; 284 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (local.set $11
   (i32.add
    (local.get $13)
    (i32.const 88)
   )
  )
  (local.set $3
   (i32.add
    (local.get $13)
    (i32.const 12)
   )
  )
  (local.set $7
   (i32.add
    (local.get $13)
    (i32.const 8)
   )
  )
  (local.set $12
   (i32.add
    (local.get $13)
    (i32.const 4)
   )
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.tee $4
      (local.get $13)
     )
     (i32.const 84)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $4)
     (i32.const 80)
    )
   )
   (local.get $1)
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $4)
     (i32.const 76)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $10)
     )
     (i32.const 28)
    )
   )
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $4)
     (i32.const 72)
    )
   )
   (i32.load
    (i32.load
     (local.get $10)
    )
   )
  )
  (i32.store
   (local.tee $15
    (i32.add
     (local.get $4)
     (i32.const 68)
    )
   )
   (i32.add
    (i32.load
     (local.get $8)
    )
    (i32.sub
     (i32.load
      (i32.add
       (i32.load
        (local.get $10)
       )
       (i32.const 4)
      )
     )
     (i32.const 5)
    )
   )
  )
  (i32.store
   (local.tee $0
    (i32.sub
     (local.get $4)
     (i32.const -64)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $10)
     )
     (i32.const 12)
    )
   )
  )
  (i32.store
   (local.tee $21
    (i32.add
     (local.get $4)
     (i32.const 60)
    )
   )
   (i32.sub
    (i32.load
     (local.get $0)
    )
    (i32.sub
     (i32.load
      (local.get $5)
     )
     (i32.load
      (i32.add
       (i32.load
        (local.get $10)
       )
       (i32.const 16)
      )
     )
    )
   )
  )
  (i32.store
   (local.tee $16
    (i32.add
     (local.get $4)
     (i32.const 56)
    )
   )
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.sub
     (i32.load
      (i32.add
       (i32.load
        (local.get $10)
       )
       (i32.const 16)
      )
     )
     (i32.const 257)
    )
   )
  )
  (i32.store
   (local.tee $17
    (i32.add
     (local.get $4)
     (i32.const 52)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $9)
     )
     (i32.const 44)
    )
   )
  )
  (i32.store
   (local.tee $22
    (i32.add
     (local.get $4)
     (i32.const 48)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $9)
     )
     (i32.const 48)
    )
   )
  )
  (i32.store
   (local.tee $14
    (i32.add
     (local.get $4)
     (i32.const 44)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $9)
     )
     (i32.const 52)
    )
   )
  )
  (i32.store
   (local.tee $18
    (i32.add
     (local.get $4)
     (i32.const 40)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $9)
     )
     (i32.const 56)
    )
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $4)
     (i32.const 36)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $9)
     )
     (i32.const 60)
    )
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $4)
     (i32.const 32)
    )
   )
   (i32.load
    (i32.sub
     (i32.load
      (local.get $9)
     )
     (i32.const -64)
    )
   )
  )
  (i32.store
   (local.tee $19
    (i32.add
     (local.get $4)
     (i32.const 28)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $9)
     )
     (i32.const 80)
    )
   )
  )
  (i32.store
   (local.tee $20
    (i32.add
     (local.get $4)
     (i32.const 24)
    )
   )
   (i32.load
    (i32.add
     (i32.load
      (local.get $9)
     )
     (i32.const 84)
    )
   )
  )
  (i32.store
   (local.tee $23
    (i32.add
     (local.get $4)
     (i32.const 20)
    )
   )
   (i32.sub
    (i32.shl
     (i32.const 1)
     (i32.load
      (i32.add
       (i32.load
        (local.get $9)
       )
       (i32.const 88)
      )
     )
    )
    (i32.const 1)
   )
  )
  (i32.store
   (local.tee $24
    (i32.add
     (local.get $4)
     (i32.const 16)
    )
   )
   (i32.sub
    (i32.shl
     (i32.const 1)
     (i32.load
      (i32.add
       (i32.load
        (local.get $9)
       )
       (i32.const 92)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $do-once16
   (block $__rjti$4
    (block $__rjti$3
     (block $__rjti$2
      (loop $label$continue$L1
       (block $label$break$L1
        (if
         (i32.lt_u
          (i32.load
           (local.get $1)
          )
          (i32.const 15)
         )
         (block
          (i32.store
           (local.get $8)
           (i32.add
            (local.tee $2
             (i32.load
              (local.get $8)
             )
            )
            (i32.const 1)
           )
          )
          (i32.store
           (local.get $5)
           (i32.add
            (i32.load
             (local.get $5)
            )
            (i32.shl
             (i32.load8_u
              (local.get $2)
             )
             (i32.load
              (local.get $1)
             )
            )
           )
          )
          (i32.store
           (local.get $1)
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 8)
           )
          )
          (i32.store
           (local.get $8)
           (i32.add
            (local.tee $2
             (i32.load
              (local.get $8)
             )
            )
            (i32.const 1)
           )
          )
          (i32.store
           (local.get $5)
           (i32.add
            (i32.load
             (local.get $5)
            )
            (i32.shl
             (i32.load8_u
              (local.get $2)
             )
             (i32.load
              (local.get $1)
             )
            )
           )
          )
          (i32.store
           (local.get $1)
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const 8)
           )
          )
         )
        )
        (i32.store align=2
         (local.get $11)
         (i32.load align=2
          (i32.add
           (i32.load
            (local.get $19)
           )
           (i32.shl
            (i32.and
             (i32.load
              (local.get $5)
             )
             (i32.load
              (local.get $23)
             )
            )
            (i32.const 2)
           )
          )
         )
        )
        (block $do-once
         (block $__rjti$1
          (loop $while-in
           (block $__rjti$0
            (i32.store
             (local.get $3)
             (i32.load8_u
              (i32.add
               (local.get $11)
               (i32.const 1)
              )
             )
            )
            (i32.store
             (local.get $5)
             (i32.shr_u
              (i32.load
               (local.get $5)
              )
              (i32.load
               (local.get $3)
              )
             )
            )
            (i32.store
             (local.get $1)
             (i32.sub
              (i32.load
               (local.get $1)
              )
              (i32.load
               (local.get $3)
              )
             )
            )
            (i32.store
             (local.get $3)
             (i32.load8_u
              (local.get $11)
             )
            )
            (br_if $__rjti$0
             (i32.eqz
              (i32.load
               (local.get $3)
              )
             )
            )
            (br_if $__rjti$1
             (i32.and
              (i32.load
               (local.get $3)
              )
              (i32.const 16)
             )
            )
            (br_if $__rjti$4
             (i32.and
              (i32.load
               (local.get $3)
              )
              (i32.const 64)
             )
            )
            (i32.store align=2
             (local.get $11)
             (i32.load align=2
              (i32.add
               (i32.load
                (local.get $19)
               )
               (i32.shl
                (i32.add
                 (i32.load16_u
                  (i32.add
                   (local.get $11)
                   (i32.const 2)
                  )
                 )
                 (i32.and
                  (i32.load
                   (local.get $5)
                  )
                  (i32.sub
                   (i32.shl
                    (i32.const 1)
                    (i32.load
                     (local.get $3)
                    )
                   )
                   (i32.const 1)
                  )
                 )
                )
                (i32.const 2)
               )
              )
             )
            )
            (br $while-in)
           )
          )
          (local.set $2
           (i32.and
            (i32.load16_s
             (i32.add
              (local.get $11)
              (i32.const 2)
             )
            )
            (i32.const 255)
           )
          )
          (i32.store
           (local.get $0)
           (i32.add
            (local.tee $6
             (i32.load
              (local.get $0)
             )
            )
            (i32.const 1)
           )
          )
          (i32.store8
           (local.get $6)
           (local.get $2)
          )
          (br $do-once)
         )
         (i32.store
          (local.get $7)
          (i32.load16_u
           (i32.add
            (local.get $11)
            (i32.const 2)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.and
           (i32.load
            (local.get $3)
           )
           (i32.const 15)
          )
         )
         (if
          (i32.load
           (local.get $3)
          )
          (block
           (if
            (i32.lt_u
             (i32.load
              (local.get $1)
             )
             (i32.load
              (local.get $3)
             )
            )
            (block
             (i32.store
              (local.get $8)
              (i32.add
               (local.tee $2
                (i32.load
                 (local.get $8)
                )
               )
               (i32.const 1)
              )
             )
             (i32.store
              (local.get $5)
              (i32.add
               (i32.load
                (local.get $5)
               )
               (i32.shl
                (i32.load8_u
                 (local.get $2)
                )
                (i32.load
                 (local.get $1)
                )
               )
              )
             )
             (i32.store
              (local.get $1)
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 8)
              )
             )
            )
           )
           (i32.store
            (local.get $7)
            (i32.add
             (i32.load
              (local.get $7)
             )
             (i32.and
              (i32.load
               (local.get $5)
              )
              (i32.sub
               (i32.shl
                (i32.const 1)
                (i32.load
                 (local.get $3)
                )
               )
               (i32.const 1)
              )
             )
            )
           )
           (i32.store
            (local.get $5)
            (i32.shr_u
             (i32.load
              (local.get $5)
             )
             (i32.load
              (local.get $3)
             )
            )
           )
           (i32.store
            (local.get $1)
            (i32.sub
             (i32.load
              (local.get $1)
             )
             (i32.load
              (local.get $3)
             )
            )
           )
          )
         )
         (if
          (i32.lt_u
           (i32.load
            (local.get $1)
           )
           (i32.const 15)
          )
          (block
           (i32.store
            (local.get $8)
            (i32.add
             (local.tee $2
              (i32.load
               (local.get $8)
              )
             )
             (i32.const 1)
            )
           )
           (i32.store
            (local.get $5)
            (i32.add
             (i32.load
              (local.get $5)
             )
             (i32.shl
              (i32.load8_u
               (local.get $2)
              )
              (i32.load
               (local.get $1)
              )
             )
            )
           )
           (i32.store
            (local.get $1)
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const 8)
            )
           )
           (i32.store
            (local.get $8)
            (i32.add
             (local.tee $2
              (i32.load
               (local.get $8)
              )
             )
             (i32.const 1)
            )
           )
           (i32.store
            (local.get $5)
            (i32.add
             (i32.load
              (local.get $5)
             )
             (i32.shl
              (i32.load8_u
               (local.get $2)
              )
              (i32.load
               (local.get $1)
              )
             )
            )
           )
           (i32.store
            (local.get $1)
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const 8)
            )
           )
          )
         )
         (i32.store align=2
          (local.get $11)
          (i32.load align=2
           (i32.add
            (i32.load
             (local.get $20)
            )
            (i32.shl
             (i32.and
              (i32.load
               (local.get $5)
              )
              (i32.load
               (local.get $24)
              )
             )
             (i32.const 2)
            )
           )
          )
         )
         (loop $while-in1
          (block $while-out0
           (i32.store
            (local.get $3)
            (i32.load8_u
             (i32.add
              (local.get $11)
              (i32.const 1)
             )
            )
           )
           (i32.store
            (local.get $5)
            (i32.shr_u
             (i32.load
              (local.get $5)
             )
             (i32.load
              (local.get $3)
             )
            )
           )
           (i32.store
            (local.get $1)
            (i32.sub
             (i32.load
              (local.get $1)
             )
             (i32.load
              (local.get $3)
             )
            )
           )
           (i32.store
            (local.get $3)
            (i32.load8_u
             (local.get $11)
            )
           )
           (br_if $while-out0
            (i32.and
             (i32.load
              (local.get $3)
             )
             (i32.const 16)
            )
           )
           (br_if $__rjti$3
            (i32.and
             (i32.load
              (local.get $3)
             )
             (i32.const 64)
            )
           )
           (i32.store align=2
            (local.get $11)
            (i32.load align=2
             (i32.add
              (i32.load
               (local.get $20)
              )
              (i32.shl
               (i32.add
                (i32.load16_u
                 (i32.add
                  (local.get $11)
                  (i32.const 2)
                 )
                )
                (i32.and
                 (i32.load
                  (local.get $5)
                 )
                 (i32.sub
                  (i32.shl
                   (i32.const 1)
                   (i32.load
                    (local.get $3)
                   )
                  )
                  (i32.const 1)
                 )
                )
               )
               (i32.const 2)
              )
             )
            )
           )
           (br $while-in1)
          )
         )
         (i32.store
          (local.get $12)
          (i32.load16_u
           (i32.add
            (local.get $11)
            (i32.const 2)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.and
           (i32.load
            (local.get $3)
           )
           (i32.const 15)
          )
         )
         (if
          (i32.lt_u
           (i32.load
            (local.get $1)
           )
           (i32.load
            (local.get $3)
           )
          )
          (block
           (i32.store
            (local.get $8)
            (i32.add
             (local.tee $2
              (i32.load
               (local.get $8)
              )
             )
             (i32.const 1)
            )
           )
           (i32.store
            (local.get $5)
            (i32.add
             (i32.load
              (local.get $5)
             )
             (i32.shl
              (i32.load8_u
               (local.get $2)
              )
              (i32.load
               (local.get $1)
              )
             )
            )
           )
           (i32.store
            (local.get $1)
            (i32.add
             (i32.load
              (local.get $1)
             )
             (i32.const 8)
            )
           )
           (if
            (i32.lt_u
             (i32.load
              (local.get $1)
             )
             (i32.load
              (local.get $3)
             )
            )
            (block
             (i32.store
              (local.get $8)
              (i32.add
               (local.tee $2
                (i32.load
                 (local.get $8)
                )
               )
               (i32.const 1)
              )
             )
             (i32.store
              (local.get $5)
              (i32.add
               (i32.load
                (local.get $5)
               )
               (i32.shl
                (i32.load8_u
                 (local.get $2)
                )
                (i32.load
                 (local.get $1)
                )
               )
              )
             )
             (i32.store
              (local.get $1)
              (i32.add
               (i32.load
                (local.get $1)
               )
               (i32.const 8)
              )
             )
            )
           )
          )
         )
         (i32.store
          (local.get $12)
          (i32.add
           (i32.load
            (local.get $12)
           )
           (i32.and
            (i32.load
             (local.get $5)
            )
            (i32.sub
             (i32.shl
              (i32.const 1)
              (i32.load
               (local.get $3)
              )
             )
             (i32.const 1)
            )
           )
          )
         )
         (i32.store
          (local.get $5)
          (i32.shr_u
           (i32.load
            (local.get $5)
           )
           (i32.load
            (local.get $3)
           )
          )
         )
         (i32.store
          (local.get $1)
          (i32.sub
           (i32.load
            (local.get $1)
           )
           (i32.load
            (local.get $3)
           )
          )
         )
         (i32.store
          (local.get $3)
          (i32.sub
           (i32.load
            (local.get $0)
           )
           (i32.load
            (local.get $21)
           )
          )
         )
         (if
          (i32.le_u
           (i32.load
            (local.get $12)
           )
           (i32.load
            (local.get $3)
           )
          )
          (block
           (i32.store
            (local.get $4)
            (i32.sub
             (i32.load
              (local.get $0)
             )
             (i32.load
              (local.get $12)
             )
            )
           )
           (loop $while-in3
            (i32.store
             (local.get $4)
             (i32.add
              (local.tee $2
               (i32.load
                (local.get $4)
               )
              )
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.load8_s
              (local.get $2)
             )
            )
            (i32.store
             (local.get $0)
             (i32.add
              (local.tee $6
               (i32.load
                (local.get $0)
               )
              )
              (i32.const 1)
             )
            )
            (i32.store8
             (local.get $6)
             (local.get $2)
            )
            (i32.store
             (local.get $4)
             (i32.add
              (local.tee $2
               (i32.load
                (local.get $4)
               )
              )
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.load8_s
              (local.get $2)
             )
            )
            (i32.store
             (local.get $0)
             (i32.add
              (local.tee $6
               (i32.load
                (local.get $0)
               )
              )
              (i32.const 1)
             )
            )
            (i32.store8
             (local.get $6)
             (local.get $2)
            )
            (i32.store
             (local.get $4)
             (i32.add
              (local.tee $2
               (i32.load
                (local.get $4)
               )
              )
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.load8_s
              (local.get $2)
             )
            )
            (i32.store
             (local.get $0)
             (i32.add
              (local.tee $6
               (i32.load
                (local.get $0)
               )
              )
              (i32.const 1)
             )
            )
            (i32.store8
             (local.get $6)
             (local.get $2)
            )
            (i32.store
             (local.get $7)
             (i32.sub
              (i32.load
               (local.get $7)
              )
              (i32.const 3)
             )
            )
            (br_if $while-in3
             (i32.gt_u
              (i32.load
               (local.get $7)
              )
              (i32.const 2)
             )
            )
           )
           (br_if $do-once
            (i32.eqz
             (i32.load
              (local.get $7)
             )
            )
           )
           (i32.store
            (local.get $4)
            (i32.add
             (local.tee $2
              (i32.load
               (local.get $4)
              )
             )
             (i32.const 1)
            )
           )
           (local.set $2
            (i32.load8_s
             (local.get $2)
            )
           )
           (i32.store
            (local.get $0)
            (i32.add
             (local.tee $6
              (i32.load
               (local.get $0)
              )
             )
             (i32.const 1)
            )
           )
           (i32.store8
            (local.get $6)
            (local.get $2)
           )
           (br_if $do-once
            (i32.le_u
             (i32.load
              (local.get $7)
             )
             (i32.const 1)
            )
           )
           (i32.store
            (local.get $4)
            (i32.add
             (local.tee $2
              (i32.load
               (local.get $4)
              )
             )
             (i32.const 1)
            )
           )
           (local.set $2
            (i32.load8_s
             (local.get $2)
            )
           )
           (i32.store
            (local.get $0)
            (i32.add
             (local.tee $6
              (i32.load
               (local.get $0)
              )
             )
             (i32.const 1)
            )
           )
           (i32.store8
            (local.get $6)
            (local.get $2)
           )
           (br $do-once)
          )
         )
         (i32.store
          (local.get $3)
          (i32.sub
           (i32.load
            (local.get $12)
           )
           (i32.load
            (local.get $3)
           )
          )
         )
         (if
          (i32.gt_u
           (i32.load
            (local.get $3)
           )
           (i32.load
            (local.get $22)
           )
          )
          (br_if $__rjti$2
           (i32.load
            (i32.add
             (i32.load
              (local.get $9)
             )
             (i32.const 7108)
            )
           )
          )
         )
         (i32.store
          (local.get $4)
          (i32.load
           (local.get $18)
          )
         )
         (if
          (i32.load
           (local.get $14)
          )
          (block $do-once4
           (if
            (i32.ge_u
             (i32.load
              (local.get $14)
             )
             (i32.load
              (local.get $3)
             )
            )
            (block
             (i32.store
              (local.get $4)
              (i32.add
               (i32.load
                (local.get $4)
               )
               (i32.sub
                (i32.load
                 (local.get $14)
                )
                (i32.load
                 (local.get $3)
                )
               )
              )
             )
             (br_if $do-once4
              (i32.ge_u
               (i32.load
                (local.get $3)
               )
               (i32.load
                (local.get $7)
               )
              )
             )
             (i32.store
              (local.get $7)
              (i32.sub
               (i32.load
                (local.get $7)
               )
               (i32.load
                (local.get $3)
               )
              )
             )
             (loop $while-in9
              (i32.store
               (local.get $4)
               (i32.add
                (local.tee $2
                 (i32.load
                  (local.get $4)
                 )
                )
                (i32.const 1)
               )
              )
              (local.set $2
               (i32.load8_s
                (local.get $2)
               )
              )
              (i32.store
               (local.get $0)
               (i32.add
                (local.tee $6
                 (i32.load
                  (local.get $0)
                 )
                )
                (i32.const 1)
               )
              )
              (i32.store8
               (local.get $6)
               (local.get $2)
              )
              (i32.store
               (local.get $3)
               (local.tee $2
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const -1)
                )
               )
              )
              (br_if $while-in9
               (local.get $2)
              )
             )
             (i32.store
              (local.get $4)
              (i32.sub
               (i32.load
                (local.get $0)
               )
               (i32.load
                (local.get $12)
               )
              )
             )
             (br $do-once4)
            )
           )
           (i32.store
            (local.get $4)
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.sub
              (i32.add
               (i32.load
                (local.get $17)
               )
               (i32.load
                (local.get $14)
               )
              )
              (i32.load
               (local.get $3)
              )
             )
            )
           )
           (i32.store
            (local.get $3)
            (i32.sub
             (i32.load
              (local.get $3)
             )
             (i32.load
              (local.get $14)
             )
            )
           )
           (if
            (i32.lt_u
             (i32.load
              (local.get $3)
             )
             (i32.load
              (local.get $7)
             )
            )
            (block
             (i32.store
              (local.get $7)
              (i32.sub
               (i32.load
                (local.get $7)
               )
               (i32.load
                (local.get $3)
               )
              )
             )
             (loop $while-in11
              (i32.store
               (local.get $4)
               (i32.add
                (local.tee $2
                 (i32.load
                  (local.get $4)
                 )
                )
                (i32.const 1)
               )
              )
              (local.set $2
               (i32.load8_s
                (local.get $2)
               )
              )
              (i32.store
               (local.get $0)
               (i32.add
                (local.tee $6
                 (i32.load
                  (local.get $0)
                 )
                )
                (i32.const 1)
               )
              )
              (i32.store8
               (local.get $6)
               (local.get $2)
              )
              (i32.store
               (local.get $3)
               (local.tee $2
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const -1)
                )
               )
              )
              (br_if $while-in11
               (local.get $2)
              )
             )
             (i32.store
              (local.get $4)
              (i32.load
               (local.get $18)
              )
             )
             (if
              (i32.lt_u
               (i32.load
                (local.get $14)
               )
               (i32.load
                (local.get $7)
               )
              )
              (block
               (i32.store
                (local.get $3)
                (i32.load
                 (local.get $14)
                )
               )
               (i32.store
                (local.get $7)
                (i32.sub
                 (i32.load
                  (local.get $7)
                 )
                 (i32.load
                  (local.get $3)
                 )
                )
               )
               (loop $while-in13
                (i32.store
                 (local.get $4)
                 (i32.add
                  (local.tee $2
                   (i32.load
                    (local.get $4)
                   )
                  )
                  (i32.const 1)
                 )
                )
                (local.set $2
                 (i32.load8_s
                  (local.get $2)
                 )
                )
                (i32.store
                 (local.get $0)
                 (i32.add
                  (local.tee $6
                   (i32.load
                    (local.get $0)
                   )
                  )
                  (i32.const 1)
                 )
                )
                (i32.store8
                 (local.get $6)
                 (local.get $2)
                )
                (i32.store
                 (local.get $3)
                 (local.tee $2
                  (i32.add
                   (i32.load
                    (local.get $3)
                   )
                   (i32.const -1)
                  )
                 )
                )
                (br_if $while-in13
                 (local.get $2)
                )
               )
               (i32.store
                (local.get $4)
                (i32.sub
                 (i32.load
                  (local.get $0)
                 )
                 (i32.load
                  (local.get $12)
                 )
                )
               )
              )
             )
            )
           )
          )
          (block
           (i32.store
            (local.get $4)
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.sub
              (i32.load
               (local.get $17)
              )
              (i32.load
               (local.get $3)
              )
             )
            )
           )
           (if
            (i32.lt_u
             (i32.load
              (local.get $3)
             )
             (i32.load
              (local.get $7)
             )
            )
            (block
             (i32.store
              (local.get $7)
              (i32.sub
               (i32.load
                (local.get $7)
               )
               (i32.load
                (local.get $3)
               )
              )
             )
             (loop $while-in7
              (i32.store
               (local.get $4)
               (i32.add
                (local.tee $2
                 (i32.load
                  (local.get $4)
                 )
                )
                (i32.const 1)
               )
              )
              (local.set $2
               (i32.load8_s
                (local.get $2)
               )
              )
              (i32.store
               (local.get $0)
               (i32.add
                (local.tee $6
                 (i32.load
                  (local.get $0)
                 )
                )
                (i32.const 1)
               )
              )
              (i32.store8
               (local.get $6)
               (local.get $2)
              )
              (i32.store
               (local.get $3)
               (local.tee $2
                (i32.add
                 (i32.load
                  (local.get $3)
                 )
                 (i32.const -1)
                )
               )
              )
              (br_if $while-in7
               (local.get $2)
              )
             )
             (i32.store
              (local.get $4)
              (i32.sub
               (i32.load
                (local.get $0)
               )
               (i32.load
                (local.get $12)
               )
              )
             )
            )
           )
          )
         )
         (loop $while-in15
          (if
           (i32.gt_u
            (i32.load
             (local.get $7)
            )
            (i32.const 2)
           )
           (block
            (i32.store
             (local.get $4)
             (i32.add
              (local.tee $2
               (i32.load
                (local.get $4)
               )
              )
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.load8_s
              (local.get $2)
             )
            )
            (i32.store
             (local.get $0)
             (i32.add
              (local.tee $6
               (i32.load
                (local.get $0)
               )
              )
              (i32.const 1)
             )
            )
            (i32.store8
             (local.get $6)
             (local.get $2)
            )
            (i32.store
             (local.get $4)
             (i32.add
              (local.tee $2
               (i32.load
                (local.get $4)
               )
              )
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.load8_s
              (local.get $2)
             )
            )
            (i32.store
             (local.get $0)
             (i32.add
              (local.tee $6
               (i32.load
                (local.get $0)
               )
              )
              (i32.const 1)
             )
            )
            (i32.store8
             (local.get $6)
             (local.get $2)
            )
            (i32.store
             (local.get $4)
             (i32.add
              (local.tee $2
               (i32.load
                (local.get $4)
               )
              )
              (i32.const 1)
             )
            )
            (local.set $2
             (i32.load8_s
              (local.get $2)
             )
            )
            (i32.store
             (local.get $0)
             (i32.add
              (local.tee $6
               (i32.load
                (local.get $0)
               )
              )
              (i32.const 1)
             )
            )
            (i32.store8
             (local.get $6)
             (local.get $2)
            )
            (i32.store
             (local.get $7)
             (i32.sub
              (i32.load
               (local.get $7)
              )
              (i32.const 3)
             )
            )
            (br $while-in15)
           )
          )
         )
         (if
          (i32.load
           (local.get $7)
          )
          (block
           (i32.store
            (local.get $4)
            (i32.add
             (local.tee $2
              (i32.load
               (local.get $4)
              )
             )
             (i32.const 1)
            )
           )
           (local.set $2
            (i32.load8_s
             (local.get $2)
            )
           )
           (i32.store
            (local.get $0)
            (i32.add
             (local.tee $6
              (i32.load
               (local.get $0)
              )
             )
             (i32.const 1)
            )
           )
           (i32.store8
            (local.get $6)
            (local.get $2)
           )
           (if
            (i32.gt_u
             (i32.load
              (local.get $7)
             )
             (i32.const 1)
            )
            (block
             (i32.store
              (local.get $4)
              (i32.add
               (local.tee $2
                (i32.load
                 (local.get $4)
                )
               )
               (i32.const 1)
              )
             )
             (local.set $2
              (i32.load8_s
               (local.get $2)
              )
             )
             (i32.store
              (local.get $0)
              (i32.add
               (local.tee $6
                (i32.load
                 (local.get $0)
                )
               )
               (i32.const 1)
              )
             )
             (i32.store8
              (local.get $6)
              (local.get $2)
             )
            )
           )
          )
         )
        )
        (br_if $label$break$L1
         (i32.ge_u
          (i32.load
           (local.get $8)
          )
          (i32.load
           (local.get $15)
          )
         )
        )
        (br_if $label$continue$L1
         (i32.lt_u
          (i32.load
           (local.get $0)
          )
          (i32.load
           (local.get $16)
          )
         )
        )
       )
      )
      (br $do-once16)
     )
     (i32.store
      (i32.add
       (i32.load
        (local.get $10)
       )
       (i32.const 24)
      )
      (i32.const 24425)
     )
     (i32.store
      (i32.add
       (i32.load
        (local.get $9)
       )
       (i32.const 4)
      )
      (i32.const 16209)
     )
     (br $do-once16)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $10)
      )
      (i32.const 24)
     )
     (i32.const 24455)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $9)
      )
      (i32.const 4)
     )
     (i32.const 16209)
    )
    (br $do-once16)
   )
   (if
    (i32.and
     (i32.load
      (local.get $3)
     )
     (i32.const 32)
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $9)
      )
      (i32.const 4)
     )
     (i32.const 16191)
    )
    (block
     (i32.store
      (i32.add
       (i32.load
        (local.get $10)
       )
       (i32.const 24)
      )
      (i32.const 24477)
     )
     (i32.store
      (i32.add
       (i32.load
        (local.get $9)
       )
       (i32.const 4)
      )
      (i32.const 16209)
     )
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.shr_u
    (i32.load
     (local.get $1)
    )
    (i32.const 3)
   )
  )
  (i32.store
   (local.get $8)
   (i32.sub
    (i32.load
     (local.get $8)
    )
    (i32.load
     (local.get $7)
    )
   )
  )
  (i32.store
   (local.get $1)
   (i32.sub
    (i32.load
     (local.get $1)
    )
    (i32.shl
     (i32.load
      (local.get $7)
     )
     (i32.const 3)
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.and
    (i32.load
     (local.get $5)
    )
    (i32.sub
     (i32.shl
      (i32.const 1)
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 1)
    )
   )
  )
  (i32.store
   (i32.load
    (local.get $10)
   )
   (i32.load
    (local.get $8)
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $10)
    )
    (i32.const 12)
   )
   (i32.load
    (local.get $0)
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (local.get $10)
    )
    (i32.const 4)
   )
   (if (result i32)
    (i32.lt_u
     (i32.load
      (local.get $8)
     )
     (i32.load
      (local.get $15)
     )
    )
    (i32.add
     (i32.sub
      (i32.load
       (local.get $15)
      )
      (i32.load
       (local.get $8)
      )
     )
     (i32.const 5)
    )
    (i32.sub
     (i32.const 5)
     (i32.sub
      (i32.load
       (local.get $8)
      )
      (i32.load
       (local.get $15)
      )
     )
    )
   )
  )
  (if
   (i32.lt_u
    (i32.load
     (local.get $0)
    )
    (i32.load
     (local.get $16)
    )
   )
   (block
    (i32.store
     (i32.add
      (i32.load
       (local.get $10)
      )
      (i32.const 16)
     )
     (i32.add
      (i32.sub
       (i32.load
        (local.get $16)
       )
       (i32.load
        (local.get $0)
       )
      )
      (i32.const 257)
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $9)
      )
      (i32.const 60)
     )
     (i32.load
      (local.get $5)
     )
    )
    (i32.store
     (i32.sub
      (i32.load
       (local.get $9)
      )
      (i32.const -64)
     )
     (i32.load
      (local.get $1)
     )
    )
    (global.set $STACKTOP
     (local.get $13)
    )
   )
   (block
    (i32.store
     (i32.add
      (i32.load
       (local.get $10)
      )
      (i32.const 16)
     )
     (i32.sub
      (i32.const 257)
      (i32.sub
       (i32.load
        (local.get $0)
       )
       (i32.load
        (local.get $16)
       )
      )
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (local.get $9)
      )
      (i32.const 60)
     )
     (i32.load
      (local.get $5)
     )
    )
    (i32.store
     (i32.sub
      (i32.load
       (local.get $9)
      )
      (i32.const -64)
     )
     (i32.load
      (local.get $1)
     )
    )
    (global.set $STACKTOP
     (local.get $13)
    )
   )
  )
 )
 (func $_malloc (; 285 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local.set $14
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (if (result i32)
    (i32.lt_u
     (local.get $0)
     (i32.const 245)
    )
    (block (result i32)
     (if
      (i32.and
       (local.tee $3
        (i32.shr_u
         (local.tee $7
          (i32.load
           (i32.const 25732)
          )
         )
         (local.tee $0
          (i32.shr_u
           (local.tee $2
            (select
             (i32.const 16)
             (i32.and
              (i32.add
               (local.get $0)
               (i32.const 11)
              )
              (i32.const -8)
             )
             (i32.lt_u
              (local.get $0)
              (i32.const 11)
             )
            )
           )
           (i32.const 3)
          )
         )
        )
       )
       (i32.const 3)
      )
      (block
       (if
        (i32.eq
         (local.tee $0
          (i32.load
           (local.tee $6
            (i32.add
             (local.tee $3
              (i32.load
               (local.tee $4
                (i32.add
                 (local.tee $2
                  (i32.add
                   (i32.shl
                    (local.tee $1
                     (i32.add
                      (i32.xor
                       (i32.and
                        (local.get $3)
                        (i32.const 1)
                       )
                       (i32.const 1)
                      )
                      (local.get $0)
                     )
                    )
                    (i32.const 3)
                   )
                   (i32.const 25772)
                  )
                 )
                 (i32.const 8)
                )
               )
              )
             )
             (i32.const 8)
            )
           )
          )
         )
         (local.get $2)
        )
        (i32.store
         (i32.const 25732)
         (i32.and
          (i32.xor
           (i32.shl
            (i32.const 1)
            (local.get $1)
           )
           (i32.const -1)
          )
          (local.get $7)
         )
        )
        (block
         (if
          (i32.gt_u
           (i32.load
            (i32.const 25748)
           )
           (local.get $0)
          )
          (call $_abort)
         )
         (if
          (i32.eq
           (local.get $3)
           (i32.load
            (local.tee $5
             (i32.add
              (local.get $0)
              (i32.const 12)
             )
            )
           )
          )
          (block
           (i32.store
            (local.get $5)
            (local.get $2)
           )
           (i32.store
            (local.get $4)
            (local.get $0)
           )
          )
          (call $_abort)
         )
        )
       )
       (i32.store offset=4
        (local.get $3)
        (i32.or
         (local.tee $0
          (i32.shl
           (local.get $1)
           (i32.const 3)
          )
         )
         (i32.const 3)
        )
       )
       (i32.store
        (local.tee $0
         (i32.add
          (i32.add
           (local.get $0)
           (local.get $3)
          )
          (i32.const 4)
         )
        )
        (i32.or
         (i32.load
          (local.get $0)
         )
         (i32.const 1)
        )
       )
       (global.set $STACKTOP
        (local.get $14)
       )
       (return
        (local.get $6)
       )
      )
     )
     (if (result i32)
      (i32.gt_u
       (local.get $2)
       (local.tee $12
        (i32.load
         (i32.const 25740)
        )
       )
      )
      (block (result i32)
       (if
        (local.get $3)
        (block
         (if
          (i32.eq
           (local.tee $3
            (i32.load
             (local.tee $9
              (i32.add
               (local.tee $0
                (i32.load
                 (local.tee $10
                  (i32.add
                   (local.tee $5
                    (i32.add
                     (i32.shl
                      (local.tee $1
                       (i32.add
                        (i32.or
                         (i32.or
                          (i32.or
                           (i32.or
                            (local.tee $3
                             (i32.and
                              (i32.shr_u
                               (local.tee $0
                                (i32.add
                                 (i32.and
                                  (local.tee $0
                                   (i32.and
                                    (i32.shl
                                     (local.get $3)
                                     (local.get $0)
                                    )
                                    (i32.or
                                     (local.tee $0
                                      (i32.shl
                                       (i32.const 2)
                                       (local.get $0)
                                      )
                                     )
                                     (i32.sub
                                      (i32.const 0)
                                      (local.get $0)
                                     )
                                    )
                                   )
                                  )
                                  (i32.sub
                                   (i32.const 0)
                                   (local.get $0)
                                  )
                                 )
                                 (i32.const -1)
                                )
                               )
                               (i32.const 12)
                              )
                              (i32.const 16)
                             )
                            )
                            (local.tee $3
                             (i32.and
                              (i32.shr_u
                               (local.tee $0
                                (i32.shr_u
                                 (local.get $0)
                                 (local.get $3)
                                )
                               )
                               (i32.const 5)
                              )
                              (i32.const 8)
                             )
                            )
                           )
                           (local.tee $3
                            (i32.and
                             (i32.shr_u
                              (local.tee $0
                               (i32.shr_u
                                (local.get $0)
                                (local.get $3)
                               )
                              )
                              (i32.const 2)
                             )
                             (i32.const 4)
                            )
                           )
                          )
                          (local.tee $3
                           (i32.and
                            (i32.shr_u
                             (local.tee $0
                              (i32.shr_u
                               (local.get $0)
                               (local.get $3)
                              )
                             )
                             (i32.const 1)
                            )
                            (i32.const 2)
                           )
                          )
                         )
                         (local.tee $3
                          (i32.and
                           (i32.shr_u
                            (local.tee $0
                             (i32.shr_u
                              (local.get $0)
                              (local.get $3)
                             )
                            )
                            (i32.const 1)
                           )
                           (i32.const 1)
                          )
                         )
                        )
                        (i32.shr_u
                         (local.get $0)
                         (local.get $3)
                        )
                       )
                      )
                      (i32.const 3)
                     )
                     (i32.const 25772)
                    )
                   )
                   (i32.const 8)
                  )
                 )
                )
               )
               (i32.const 8)
              )
             )
            )
           )
           (local.get $5)
          )
          (i32.store
           (i32.const 25732)
           (local.tee $4
            (i32.and
             (i32.xor
              (i32.shl
               (i32.const 1)
               (local.get $1)
              )
              (i32.const -1)
             )
             (local.get $7)
            )
           )
          )
          (block
           (if
            (i32.gt_u
             (i32.load
              (i32.const 25748)
             )
             (local.get $3)
            )
            (call $_abort)
           )
           (if
            (i32.eq
             (local.get $0)
             (i32.load
              (local.tee $11
               (i32.add
                (local.get $3)
                (i32.const 12)
               )
              )
             )
            )
            (block
             (i32.store
              (local.get $11)
              (local.get $5)
             )
             (i32.store
              (local.get $10)
              (local.get $3)
             )
             (local.set $4
              (local.get $7)
             )
            )
            (call $_abort)
           )
          )
         )
         (i32.store offset=4
          (local.get $0)
          (i32.or
           (local.get $2)
           (i32.const 3)
          )
         )
         (i32.store offset=4
          (local.tee $7
           (i32.add
            (local.get $0)
            (local.get $2)
           )
          )
          (i32.or
           (local.tee $5
            (i32.sub
             (local.tee $3
              (i32.shl
               (local.get $1)
               (i32.const 3)
              )
             )
             (local.get $2)
            )
           )
           (i32.const 1)
          )
         )
         (i32.store
          (i32.add
           (local.get $0)
           (local.get $3)
          )
          (local.get $5)
         )
         (if
          (local.get $12)
          (block
           (local.set $2
            (i32.load
             (i32.const 25752)
            )
           )
           (local.set $0
            (i32.add
             (i32.shl
              (local.tee $3
               (i32.shr_u
                (local.get $12)
                (i32.const 3)
               )
              )
              (i32.const 3)
             )
             (i32.const 25772)
            )
           )
           (if
            (i32.and
             (local.tee $3
              (i32.shl
               (i32.const 1)
               (local.get $3)
              )
             )
             (local.get $4)
            )
            (if
             (i32.gt_u
              (i32.load
               (i32.const 25748)
              )
              (local.tee $1
               (i32.load
                (local.tee $3
                 (i32.add
                  (local.get $0)
                  (i32.const 8)
                 )
                )
               )
              )
             )
             (call $_abort)
             (block
              (local.set $6
               (local.get $1)
              )
              (local.set $13
               (local.get $3)
              )
             )
            )
            (block
             (i32.store
              (i32.const 25732)
              (i32.or
               (local.get $3)
               (local.get $4)
              )
             )
             (local.set $6
              (local.get $0)
             )
             (local.set $13
              (i32.add
               (local.get $0)
               (i32.const 8)
              )
             )
            )
           )
           (i32.store
            (local.get $13)
            (local.get $2)
           )
           (i32.store offset=12
            (local.get $6)
            (local.get $2)
           )
           (i32.store offset=8
            (local.get $2)
            (local.get $6)
           )
           (i32.store offset=12
            (local.get $2)
            (local.get $0)
           )
          )
         )
         (i32.store
          (i32.const 25740)
          (local.get $5)
         )
         (i32.store
          (i32.const 25752)
          (local.get $7)
         )
         (global.set $STACKTOP
          (local.get $14)
         )
         (return
          (local.get $9)
         )
        )
       )
       (if (result i32)
        (local.tee $13
         (i32.load
          (i32.const 25736)
         )
        )
        (block
         (local.set $3
          (local.tee $4
           (i32.load
            (i32.add
             (i32.shl
              (i32.add
               (i32.or
                (i32.or
                 (i32.or
                  (i32.or
                   (local.tee $3
                    (i32.and
                     (i32.shr_u
                      (local.tee $0
                       (i32.add
                        (i32.and
                         (local.get $13)
                         (i32.sub
                          (i32.const 0)
                          (local.get $13)
                         )
                        )
                        (i32.const -1)
                       )
                      )
                      (i32.const 12)
                     )
                     (i32.const 16)
                    )
                   )
                   (local.tee $3
                    (i32.and
                     (i32.shr_u
                      (local.tee $0
                       (i32.shr_u
                        (local.get $0)
                        (local.get $3)
                       )
                      )
                      (i32.const 5)
                     )
                     (i32.const 8)
                    )
                   )
                  )
                  (local.tee $3
                   (i32.and
                    (i32.shr_u
                     (local.tee $0
                      (i32.shr_u
                       (local.get $0)
                       (local.get $3)
                      )
                     )
                     (i32.const 2)
                    )
                    (i32.const 4)
                   )
                  )
                 )
                 (local.tee $3
                  (i32.and
                   (i32.shr_u
                    (local.tee $0
                     (i32.shr_u
                      (local.get $0)
                      (local.get $3)
                     )
                    )
                    (i32.const 1)
                   )
                   (i32.const 2)
                  )
                 )
                )
                (local.tee $3
                 (i32.and
                  (i32.shr_u
                   (local.tee $0
                    (i32.shr_u
                     (local.get $0)
                     (local.get $3)
                    )
                   )
                   (i32.const 1)
                  )
                  (i32.const 1)
                 )
                )
               )
               (i32.shr_u
                (local.get $0)
                (local.get $3)
               )
              )
              (i32.const 2)
             )
             (i32.const 26036)
            )
           )
          )
         )
         (local.set $9
          (i32.sub
           (i32.and
            (i32.load offset=4
             (local.get $4)
            )
            (i32.const -8)
           )
           (local.get $2)
          )
         )
         (loop $while-in
          (block $while-out
           (if
            (i32.eqz
             (local.tee $0
              (i32.load offset=16
               (local.get $3)
              )
             )
            )
            (br_if $while-out
             (i32.eqz
              (local.tee $0
               (i32.load offset=20
                (local.get $3)
               )
              )
             )
            )
           )
           (local.set $3
            (local.get $0)
           )
           (local.set $4
            (select
             (local.get $0)
             (local.get $4)
             (local.tee $6
              (i32.lt_u
               (local.tee $0
                (i32.sub
                 (i32.and
                  (i32.load offset=4
                   (local.get $0)
                  )
                  (i32.const -8)
                 )
                 (local.get $2)
                )
               )
               (local.get $9)
              )
             )
            )
           )
           (local.set $9
            (select
             (local.get $0)
             (local.get $9)
             (local.get $6)
            )
           )
           (br $while-in)
          )
         )
         (if
          (i32.gt_u
           (local.tee $15
            (i32.load
             (i32.const 25748)
            )
           )
           (local.get $4)
          )
          (call $_abort)
         )
         (if
          (i32.le_u
           (local.tee $8
            (i32.add
             (local.get $2)
             (local.get $4)
            )
           )
           (local.get $4)
          )
          (call $_abort)
         )
         (local.set $11
          (i32.load offset=24
           (local.get $4)
          )
         )
         (if
          (i32.eq
           (local.get $4)
           (local.tee $0
            (i32.load offset=12
             (local.get $4)
            )
           )
          )
          (block $do-once4
           (if
            (i32.eqz
             (local.tee $0
              (i32.load
               (local.tee $3
                (i32.add
                 (local.get $4)
                 (i32.const 20)
                )
               )
              )
             )
            )
            (br_if $do-once4
             (i32.eqz
              (local.tee $0
               (i32.load
                (local.tee $3
                 (i32.add
                  (local.get $4)
                  (i32.const 16)
                 )
                )
               )
              )
             )
            )
           )
           (loop $while-in7
            (block $while-out6
             (local.set $0
              (if (result i32)
               (local.tee $10
                (i32.load
                 (local.tee $6
                  (i32.add
                   (local.get $0)
                   (i32.const 20)
                  )
                 )
                )
               )
               (block (result i32)
                (local.set $3
                 (local.get $6)
                )
                (local.get $10)
               )
               (block (result i32)
                (br_if $while-out6
                 (i32.eqz
                  (local.tee $10
                   (i32.load
                    (local.tee $6
                     (i32.add
                      (local.get $0)
                      (i32.const 16)
                     )
                    )
                   )
                  )
                 )
                )
                (local.set $3
                 (local.get $6)
                )
                (local.get $10)
               )
              )
             )
             (br $while-in7)
            )
           )
           (if
            (i32.gt_u
             (local.get $15)
             (local.get $3)
            )
            (call $_abort)
            (block
             (i32.store
              (local.get $3)
              (i32.const 0)
             )
             (local.set $1
              (local.get $0)
             )
            )
           )
          )
          (block
           (if
            (i32.gt_u
             (local.get $15)
             (local.tee $3
              (i32.load offset=8
               (local.get $4)
              )
             )
            )
            (call $_abort)
           )
           (if
            (i32.ne
             (i32.load
              (local.tee $6
               (i32.add
                (local.get $3)
                (i32.const 12)
               )
              )
             )
             (local.get $4)
            )
            (call $_abort)
           )
           (if
            (i32.eq
             (local.get $4)
             (i32.load
              (local.tee $10
               (i32.add
                (local.get $0)
                (i32.const 8)
               )
              )
             )
            )
            (block
             (i32.store
              (local.get $6)
              (local.get $0)
             )
             (i32.store
              (local.get $10)
              (local.get $3)
             )
             (local.set $1
              (local.get $0)
             )
            )
            (call $_abort)
           )
          )
         )
         (if
          (local.get $11)
          (block $label$break$L78
           (if
            (i32.eq
             (local.get $4)
             (i32.load
              (local.tee $3
               (i32.add
                (i32.shl
                 (local.tee $0
                  (i32.load offset=28
                   (local.get $4)
                  )
                 )
                 (i32.const 2)
                )
                (i32.const 26036)
               )
              )
             )
            )
            (block
             (i32.store
              (local.get $3)
              (local.get $1)
             )
             (if
              (i32.eqz
               (local.get $1)
              )
              (block
               (i32.store
                (i32.const 25736)
                (i32.and
                 (local.get $13)
                 (i32.xor
                  (i32.shl
                   (i32.const 1)
                   (local.get $0)
                  )
                  (i32.const -1)
                 )
                )
               )
               (br $label$break$L78)
              )
             )
            )
            (if
             (i32.gt_u
              (i32.load
               (i32.const 25748)
              )
              (local.get $11)
             )
             (call $_abort)
             (block
              (i32.store
               (select
                (local.tee $0
                 (i32.add
                  (local.get $11)
                  (i32.const 16)
                 )
                )
                (i32.add
                 (local.get $11)
                 (i32.const 20)
                )
                (i32.eq
                 (local.get $4)
                 (i32.load
                  (local.get $0)
                 )
                )
               )
               (local.get $1)
              )
              (br_if $label$break$L78
               (i32.eqz
                (local.get $1)
               )
              )
             )
            )
           )
           (if
            (i32.gt_u
             (local.tee $3
              (i32.load
               (i32.const 25748)
              )
             )
             (local.get $1)
            )
            (call $_abort)
           )
           (i32.store offset=24
            (local.get $1)
            (local.get $11)
           )
           (if
            (local.tee $0
             (i32.load offset=16
              (local.get $4)
             )
            )
            (if
             (i32.gt_u
              (local.get $3)
              (local.get $0)
             )
             (call $_abort)
             (block
              (i32.store offset=16
               (local.get $1)
               (local.get $0)
              )
              (i32.store offset=24
               (local.get $0)
               (local.get $1)
              )
             )
            )
           )
           (if
            (local.tee $0
             (i32.load offset=20
              (local.get $4)
             )
            )
            (if
             (i32.gt_u
              (i32.load
               (i32.const 25748)
              )
              (local.get $0)
             )
             (call $_abort)
             (block
              (i32.store offset=20
               (local.get $1)
               (local.get $0)
              )
              (i32.store offset=24
               (local.get $0)
               (local.get $1)
              )
             )
            )
           )
          )
         )
         (if
          (i32.lt_u
           (local.get $9)
           (i32.const 16)
          )
          (block
           (i32.store offset=4
            (local.get $4)
            (i32.or
             (local.tee $0
              (i32.add
               (local.get $2)
               (local.get $9)
              )
             )
             (i32.const 3)
            )
           )
           (i32.store
            (local.tee $0
             (i32.add
              (i32.add
               (local.get $0)
               (local.get $4)
              )
              (i32.const 4)
             )
            )
            (i32.or
             (i32.load
              (local.get $0)
             )
             (i32.const 1)
            )
           )
          )
          (block
           (i32.store offset=4
            (local.get $4)
            (i32.or
             (local.get $2)
             (i32.const 3)
            )
           )
           (i32.store offset=4
            (local.get $8)
            (i32.or
             (local.get $9)
             (i32.const 1)
            )
           )
           (i32.store
            (i32.add
             (local.get $8)
             (local.get $9)
            )
            (local.get $9)
           )
           (if
            (local.get $12)
            (block
             (local.set $2
              (i32.load
               (i32.const 25752)
              )
             )
             (local.set $0
              (i32.add
               (i32.shl
                (local.tee $3
                 (i32.shr_u
                  (local.get $12)
                  (i32.const 3)
                 )
                )
                (i32.const 3)
               )
               (i32.const 25772)
              )
             )
             (if
              (i32.and
               (local.tee $3
                (i32.shl
                 (i32.const 1)
                 (local.get $3)
                )
               )
               (local.get $7)
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 25748)
                )
                (local.tee $1
                 (i32.load
                  (local.tee $3
                   (i32.add
                    (local.get $0)
                    (i32.const 8)
                   )
                  )
                 )
                )
               )
               (call $_abort)
               (block
                (local.set $5
                 (local.get $1)
                )
                (local.set $16
                 (local.get $3)
                )
               )
              )
              (block
               (i32.store
                (i32.const 25732)
                (i32.or
                 (local.get $3)
                 (local.get $7)
                )
               )
               (local.set $5
                (local.get $0)
               )
               (local.set $16
                (i32.add
                 (local.get $0)
                 (i32.const 8)
                )
               )
              )
             )
             (i32.store
              (local.get $16)
              (local.get $2)
             )
             (i32.store offset=12
              (local.get $5)
              (local.get $2)
             )
             (i32.store offset=8
              (local.get $2)
              (local.get $5)
             )
             (i32.store offset=12
              (local.get $2)
              (local.get $0)
             )
            )
           )
           (i32.store
            (i32.const 25740)
            (local.get $9)
           )
           (i32.store
            (i32.const 25752)
            (local.get $8)
           )
          )
         )
         (global.set $STACKTOP
          (local.get $14)
         )
         (return
          (i32.add
           (local.get $4)
           (i32.const 8)
          )
         )
        )
        (local.get $2)
       )
      )
      (local.get $2)
     )
    )
    (if (result i32)
     (i32.gt_u
      (local.get $0)
      (i32.const -65)
     )
     (i32.const -1)
     (block $do-once (result i32)
      (local.set $4
       (i32.and
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 11)
         )
        )
        (i32.const -8)
       )
      )
      (if (result i32)
       (local.tee $6
        (i32.load
         (i32.const 25736)
        )
       )
       (block (result i32)
        (local.set $18
         (if (result i32)
          (local.tee $0
           (i32.shr_u
            (local.get $0)
            (i32.const 8)
           )
          )
          (if (result i32)
           (i32.gt_u
            (local.get $4)
            (i32.const 16777215)
           )
           (i32.const 31)
           (i32.or
            (i32.shl
             (local.tee $0
              (i32.add
               (i32.sub
                (i32.const 14)
                (i32.or
                 (i32.or
                  (local.tee $0
                   (i32.and
                    (i32.shr_u
                     (i32.add
                      (local.tee $2
                       (i32.shl
                        (local.get $0)
                        (local.tee $1
                         (i32.and
                          (i32.shr_u
                           (i32.add
                            (local.get $0)
                            (i32.const 1048320)
                           )
                           (i32.const 16)
                          )
                          (i32.const 8)
                         )
                        )
                       )
                      )
                      (i32.const 520192)
                     )
                     (i32.const 16)
                    )
                    (i32.const 4)
                   )
                  )
                  (local.get $1)
                 )
                 (local.tee $1
                  (i32.and
                   (i32.shr_u
                    (i32.add
                     (local.tee $0
                      (i32.shl
                       (local.get $2)
                       (local.get $0)
                      )
                     )
                     (i32.const 245760)
                    )
                    (i32.const 16)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
               (i32.shr_u
                (i32.shl
                 (local.get $0)
                 (local.get $1)
                )
                (i32.const 15)
               )
              )
             )
             (i32.const 1)
            )
            (i32.and
             (i32.shr_u
              (local.get $4)
              (i32.add
               (local.get $0)
               (i32.const 7)
              )
             )
             (i32.const 1)
            )
           )
          )
          (i32.const 0)
         )
        )
        (local.set $2
         (i32.sub
          (i32.const 0)
          (local.get $4)
         )
        )
        (block $__rjto$1
         (block $__rjti$1
          (if
           (i32.eqz
            (i32.or
             (local.tee $0
              (if (result i32)
               (local.tee $0
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $18)
                   (i32.const 2)
                  )
                  (i32.const 26036)
                 )
                )
               )
               (block (result i32)
                (local.set $1
                 (i32.const 0)
                )
                (local.set $13
                 (i32.shl
                  (local.get $4)
                  (select
                   (i32.const 0)
                   (i32.sub
                    (i32.const 25)
                    (i32.shr_u
                     (local.get $18)
                     (i32.const 1)
                    )
                   )
                   (i32.eq
                    (local.get $18)
                    (i32.const 31)
                   )
                  )
                 )
                )
                (loop $while-in15 (result i32)
                 (if
                  (i32.lt_u
                   (local.tee $16
                    (i32.sub
                     (i32.and
                      (i32.load offset=4
                       (local.get $0)
                      )
                      (i32.const -8)
                     )
                     (local.get $4)
                    )
                   )
                   (local.get $2)
                  )
                  (local.set $1
                   (if (result i32)
                    (local.get $16)
                    (block (result i32)
                     (local.set $2
                      (local.get $16)
                     )
                     (local.get $0)
                    )
                    (block
                     (local.set $1
                      (local.get $0)
                     )
                     (local.set $2
                      (i32.const 0)
                     )
                     (br $__rjti$1)
                    )
                   )
                  )
                 )
                 (local.set $5
                  (select
                   (local.get $5)
                   (local.tee $5
                    (i32.load offset=20
                     (local.get $0)
                    )
                   )
                   (i32.or
                    (i32.eqz
                     (local.get $5)
                    )
                    (i32.eq
                     (local.get $5)
                     (local.tee $0
                      (i32.load
                       (i32.add
                        (i32.add
                         (local.get $0)
                         (i32.const 16)
                        )
                        (i32.shl
                         (i32.shr_u
                          (local.get $13)
                          (i32.const 31)
                         )
                         (i32.const 2)
                        )
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                 (local.set $13
                  (i32.shl
                   (local.get $13)
                   (i32.const 1)
                  )
                 )
                 (br_if $while-in15
                  (local.get $0)
                 )
                 (local.get $1)
                )
               )
               (i32.const 0)
              )
             )
             (local.get $5)
            )
           )
           (block
            (drop
             (br_if $do-once
              (local.get $4)
              (i32.eqz
               (local.tee $1
                (i32.and
                 (local.get $6)
                 (i32.or
                  (local.tee $0
                   (i32.shl
                    (i32.const 2)
                    (local.get $18)
                   )
                  )
                  (i32.sub
                   (i32.const 0)
                   (local.get $0)
                  )
                 )
                )
               )
              )
             )
            )
            (local.set $5
             (i32.load
              (i32.add
               (i32.shl
                (i32.add
                 (i32.or
                  (i32.or
                   (i32.or
                    (i32.or
                     (local.tee $5
                      (i32.and
                       (i32.shr_u
                        (local.tee $1
                         (i32.add
                          (i32.and
                           (local.get $1)
                           (i32.sub
                            (i32.const 0)
                            (local.get $1)
                           )
                          )
                          (i32.const -1)
                         )
                        )
                        (i32.const 12)
                       )
                       (i32.const 16)
                      )
                     )
                     (local.tee $5
                      (i32.and
                       (i32.shr_u
                        (local.tee $1
                         (i32.shr_u
                          (local.get $1)
                          (local.get $5)
                         )
                        )
                        (i32.const 5)
                       )
                       (i32.const 8)
                      )
                     )
                    )
                    (local.tee $5
                     (i32.and
                      (i32.shr_u
                       (local.tee $1
                        (i32.shr_u
                         (local.get $1)
                         (local.get $5)
                        )
                       )
                       (i32.const 2)
                      )
                      (i32.const 4)
                     )
                    )
                   )
                   (local.tee $5
                    (i32.and
                     (i32.shr_u
                      (local.tee $1
                       (i32.shr_u
                        (local.get $1)
                        (local.get $5)
                       )
                      )
                      (i32.const 1)
                     )
                     (i32.const 2)
                    )
                   )
                  )
                  (local.tee $5
                   (i32.and
                    (i32.shr_u
                     (local.tee $1
                      (i32.shr_u
                       (local.get $1)
                       (local.get $5)
                      )
                     )
                     (i32.const 1)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (i32.shr_u
                  (local.get $1)
                  (local.get $5)
                 )
                )
                (i32.const 2)
               )
               (i32.const 26036)
              )
             )
            )
            (local.set $0
             (i32.const 0)
            )
           )
          )
          (local.set $5
           (if (result i32)
            (local.get $5)
            (block
             (local.set $1
              (local.get $0)
             )
             (local.set $0
              (local.get $5)
             )
             (br $__rjti$1)
            )
            (local.get $0)
           )
          )
          (br $__rjto$1)
         )
         (local.set $5
          (local.get $1)
         )
         (local.set $1
          (local.get $2)
         )
         (local.set $2
          (loop $while-in17 (result i32)
           (local.set $13
            (i32.lt_u
             (local.tee $16
              (i32.sub
               (i32.and
                (i32.load offset=4
                 (local.get $0)
                )
                (i32.const -8)
               )
               (local.get $4)
              )
             )
             (local.get $1)
            )
           )
           (local.set $1
            (select
             (local.get $16)
             (local.get $1)
             (local.get $13)
            )
           )
           (local.set $5
            (select
             (local.get $0)
             (local.get $5)
             (local.get $13)
            )
           )
           (if (result i32)
            (block (result i32)
             (if
              (i32.eqz
               (local.tee $2
                (i32.load offset=16
                 (local.get $0)
                )
               )
              )
              (local.set $2
               (i32.load offset=20
                (local.get $0)
               )
              )
             )
             (local.get $2)
            )
            (block
             (local.set $0
              (local.get $2)
             )
             (br $while-in17)
            )
            (local.get $1)
           )
          )
         )
        )
        (if (result i32)
         (local.get $5)
         (if (result i32)
          (i32.lt_u
           (local.get $2)
           (i32.sub
            (i32.load
             (i32.const 25740)
            )
            (local.get $4)
           )
          )
          (block
           (if
            (i32.gt_u
             (local.tee $17
              (i32.load
               (i32.const 25748)
              )
             )
             (local.get $5)
            )
            (call $_abort)
           )
           (if
            (i32.le_u
             (local.tee $8
              (i32.add
               (local.get $4)
               (local.get $5)
              )
             )
             (local.get $5)
            )
            (call $_abort)
           )
           (local.set $15
            (i32.load offset=24
             (local.get $5)
            )
           )
           (if
            (i32.eq
             (local.get $5)
             (local.tee $0
              (i32.load offset=12
               (local.get $5)
              )
             )
            )
            (block $do-once18
             (if
              (i32.eqz
               (local.tee $0
                (i32.load
                 (local.tee $1
                  (i32.add
                   (local.get $5)
                   (i32.const 20)
                  )
                 )
                )
               )
              )
              (br_if $do-once18
               (i32.eqz
                (local.tee $0
                 (i32.load
                  (local.tee $1
                   (i32.add
                    (local.get $5)
                    (i32.const 16)
                   )
                  )
                 )
                )
               )
              )
             )
             (loop $while-in21
              (block $while-out20
               (local.set $0
                (if (result i32)
                 (local.tee $11
                  (i32.load
                   (local.tee $10
                    (i32.add
                     (local.get $0)
                     (i32.const 20)
                    )
                   )
                  )
                 )
                 (block (result i32)
                  (local.set $1
                   (local.get $10)
                  )
                  (local.get $11)
                 )
                 (block (result i32)
                  (br_if $while-out20
                   (i32.eqz
                    (local.tee $11
                     (i32.load
                      (local.tee $10
                       (i32.add
                        (local.get $0)
                        (i32.const 16)
                       )
                      )
                     )
                    )
                   )
                  )
                  (local.set $1
                   (local.get $10)
                  )
                  (local.get $11)
                 )
                )
               )
               (br $while-in21)
              )
             )
             (if
              (i32.gt_u
               (local.get $17)
               (local.get $1)
              )
              (call $_abort)
              (block
               (i32.store
                (local.get $1)
                (i32.const 0)
               )
               (local.set $7
                (local.get $0)
               )
              )
             )
            )
            (block
             (if
              (i32.gt_u
               (local.get $17)
               (local.tee $1
                (i32.load offset=8
                 (local.get $5)
                )
               )
              )
              (call $_abort)
             )
             (if
              (i32.ne
               (i32.load
                (local.tee $10
                 (i32.add
                  (local.get $1)
                  (i32.const 12)
                 )
                )
               )
               (local.get $5)
              )
              (call $_abort)
             )
             (if
              (i32.eq
               (local.get $5)
               (i32.load
                (local.tee $11
                 (i32.add
                  (local.get $0)
                  (i32.const 8)
                 )
                )
               )
              )
              (block
               (i32.store
                (local.get $10)
                (local.get $0)
               )
               (i32.store
                (local.get $11)
                (local.get $1)
               )
               (local.set $7
                (local.get $0)
               )
              )
              (call $_abort)
             )
            )
           )
           (if
            (local.get $15)
            (block $label$break$L176
             (if
              (i32.eq
               (local.get $5)
               (i32.load
                (local.tee $1
                 (i32.add
                  (i32.shl
                   (local.tee $0
                    (i32.load offset=28
                     (local.get $5)
                    )
                   )
                   (i32.const 2)
                  )
                  (i32.const 26036)
                 )
                )
               )
              )
              (block
               (i32.store
                (local.get $1)
                (local.get $7)
               )
               (if
                (i32.eqz
                 (local.get $7)
                )
                (block
                 (i32.store
                  (i32.const 25736)
                  (local.tee $3
                   (i32.and
                    (local.get $6)
                    (i32.xor
                     (i32.shl
                      (i32.const 1)
                      (local.get $0)
                     )
                     (i32.const -1)
                    )
                   )
                  )
                 )
                 (br $label$break$L176)
                )
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 25748)
                )
                (local.get $15)
               )
               (call $_abort)
               (block
                (i32.store
                 (select
                  (local.tee $0
                   (i32.add
                    (local.get $15)
                    (i32.const 16)
                   )
                  )
                  (i32.add
                   (local.get $15)
                   (i32.const 20)
                  )
                  (i32.eq
                   (local.get $5)
                   (i32.load
                    (local.get $0)
                   )
                  )
                 )
                 (local.get $7)
                )
                (if
                 (i32.eqz
                  (local.get $7)
                 )
                 (block
                  (local.set $3
                   (local.get $6)
                  )
                  (br $label$break$L176)
                 )
                )
               )
              )
             )
             (if
              (i32.gt_u
               (local.tee $1
                (i32.load
                 (i32.const 25748)
                )
               )
               (local.get $7)
              )
              (call $_abort)
             )
             (i32.store offset=24
              (local.get $7)
              (local.get $15)
             )
             (if
              (local.tee $0
               (i32.load offset=16
                (local.get $5)
               )
              )
              (if
               (i32.gt_u
                (local.get $1)
                (local.get $0)
               )
               (call $_abort)
               (block
                (i32.store offset=16
                 (local.get $7)
                 (local.get $0)
                )
                (i32.store offset=24
                 (local.get $0)
                 (local.get $7)
                )
               )
              )
             )
             (if
              (local.tee $0
               (i32.load offset=20
                (local.get $5)
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 25748)
                )
                (local.get $0)
               )
               (call $_abort)
               (block
                (i32.store offset=20
                 (local.get $7)
                 (local.get $0)
                )
                (i32.store offset=24
                 (local.get $0)
                 (local.get $7)
                )
                (local.set $3
                 (local.get $6)
                )
               )
              )
              (local.set $3
               (local.get $6)
              )
             )
            )
            (local.set $3
             (local.get $6)
            )
           )
           (if
            (i32.lt_u
             (local.get $2)
             (i32.const 16)
            )
            (block
             (i32.store offset=4
              (local.get $5)
              (i32.or
               (local.tee $0
                (i32.add
                 (local.get $2)
                 (local.get $4)
                )
               )
               (i32.const 3)
              )
             )
             (i32.store
              (local.tee $0
               (i32.add
                (i32.add
                 (local.get $0)
                 (local.get $5)
                )
                (i32.const 4)
               )
              )
              (i32.or
               (i32.load
                (local.get $0)
               )
               (i32.const 1)
              )
             )
            )
            (block $label$break$L200
             (i32.store offset=4
              (local.get $5)
              (i32.or
               (local.get $4)
               (i32.const 3)
              )
             )
             (i32.store offset=4
              (local.get $8)
              (i32.or
               (local.get $2)
               (i32.const 1)
              )
             )
             (i32.store
              (i32.add
               (local.get $2)
               (local.get $8)
              )
              (local.get $2)
             )
             (local.set $1
              (i32.shr_u
               (local.get $2)
               (i32.const 3)
              )
             )
             (if
              (i32.lt_u
               (local.get $2)
               (i32.const 256)
              )
              (block
               (local.set $0
                (i32.add
                 (i32.shl
                  (local.get $1)
                  (i32.const 3)
                 )
                 (i32.const 25772)
                )
               )
               (if
                (i32.and
                 (local.tee $3
                  (i32.load
                   (i32.const 25732)
                  )
                 )
                 (local.tee $1
                  (i32.shl
                   (i32.const 1)
                   (local.get $1)
                  )
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (i32.const 25748)
                  )
                  (local.tee $1
                   (i32.load
                    (local.tee $3
                     (i32.add
                      (local.get $0)
                      (i32.const 8)
                     )
                    )
                   )
                  )
                 )
                 (call $_abort)
                 (block
                  (local.set $12
                   (local.get $1)
                  )
                  (local.set $19
                   (local.get $3)
                  )
                 )
                )
                (block
                 (i32.store
                  (i32.const 25732)
                  (i32.or
                   (local.get $1)
                   (local.get $3)
                  )
                 )
                 (local.set $12
                  (local.get $0)
                 )
                 (local.set $19
                  (i32.add
                   (local.get $0)
                   (i32.const 8)
                  )
                 )
                )
               )
               (i32.store
                (local.get $19)
                (local.get $8)
               )
               (i32.store offset=12
                (local.get $12)
                (local.get $8)
               )
               (i32.store offset=8
                (local.get $8)
                (local.get $12)
               )
               (i32.store offset=12
                (local.get $8)
                (local.get $0)
               )
               (br $label$break$L200)
              )
             )
             (local.set $0
              (i32.add
               (i32.shl
                (local.tee $1
                 (if (result i32)
                  (local.tee $0
                   (i32.shr_u
                    (local.get $2)
                    (i32.const 8)
                   )
                  )
                  (if (result i32)
                   (i32.gt_u
                    (local.get $2)
                    (i32.const 16777215)
                   )
                   (i32.const 31)
                   (i32.or
                    (i32.shl
                     (local.tee $0
                      (i32.add
                       (i32.sub
                        (i32.const 14)
                        (i32.or
                         (i32.or
                          (local.tee $0
                           (i32.and
                            (i32.shr_u
                             (i32.add
                              (local.tee $4
                               (i32.shl
                                (local.get $0)
                                (local.tee $1
                                 (i32.and
                                  (i32.shr_u
                                   (i32.add
                                    (local.get $0)
                                    (i32.const 1048320)
                                   )
                                   (i32.const 16)
                                  )
                                  (i32.const 8)
                                 )
                                )
                               )
                              )
                              (i32.const 520192)
                             )
                             (i32.const 16)
                            )
                            (i32.const 4)
                           )
                          )
                          (local.get $1)
                         )
                         (local.tee $1
                          (i32.and
                           (i32.shr_u
                            (i32.add
                             (local.tee $0
                              (i32.shl
                               (local.get $4)
                               (local.get $0)
                              )
                             )
                             (i32.const 245760)
                            )
                            (i32.const 16)
                           )
                           (i32.const 2)
                          )
                         )
                        )
                       )
                       (i32.shr_u
                        (i32.shl
                         (local.get $0)
                         (local.get $1)
                        )
                        (i32.const 15)
                       )
                      )
                     )
                     (i32.const 1)
                    )
                    (i32.and
                     (i32.shr_u
                      (local.get $2)
                      (i32.add
                       (local.get $0)
                       (i32.const 7)
                      )
                     )
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.const 0)
                 )
                )
                (i32.const 2)
               )
               (i32.const 26036)
              )
             )
             (i32.store offset=28
              (local.get $8)
              (local.get $1)
             )
             (i32.store offset=4
              (local.tee $4
               (i32.add
                (local.get $8)
                (i32.const 16)
               )
              )
              (i32.const 0)
             )
             (i32.store
              (local.get $4)
              (i32.const 0)
             )
             (if
              (i32.eqz
               (i32.and
                (local.tee $4
                 (i32.shl
                  (i32.const 1)
                  (local.get $1)
                 )
                )
                (local.get $3)
               )
              )
              (block
               (i32.store
                (i32.const 25736)
                (i32.or
                 (local.get $3)
                 (local.get $4)
                )
               )
               (i32.store
                (local.get $0)
                (local.get $8)
               )
               (i32.store offset=24
                (local.get $8)
                (local.get $0)
               )
               (i32.store offset=12
                (local.get $8)
                (local.get $8)
               )
               (i32.store offset=8
                (local.get $8)
                (local.get $8)
               )
               (br $label$break$L200)
              )
             )
             (if
              (i32.eq
               (local.get $2)
               (i32.and
                (i32.load offset=4
                 (local.tee $0
                  (i32.load
                   (local.get $0)
                  )
                 )
                )
                (i32.const -8)
               )
              )
              (local.set $9
               (local.get $0)
              )
              (block $label$break$L218
               (local.set $1
                (i32.shl
                 (local.get $2)
                 (select
                  (i32.const 0)
                  (i32.sub
                   (i32.const 25)
                   (i32.shr_u
                    (local.get $1)
                    (i32.const 1)
                   )
                  )
                  (i32.eq
                   (local.get $1)
                   (i32.const 31)
                  )
                 )
                )
               )
               (loop $while-in30
                (if
                 (local.tee $3
                  (i32.load
                   (local.tee $4
                    (i32.add
                     (i32.add
                      (local.get $0)
                      (i32.const 16)
                     )
                     (i32.shl
                      (i32.shr_u
                       (local.get $1)
                       (i32.const 31)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                  )
                 )
                 (block
                  (local.set $1
                   (i32.shl
                    (local.get $1)
                    (i32.const 1)
                   )
                  )
                  (if
                   (i32.eq
                    (local.get $2)
                    (i32.and
                     (i32.load offset=4
                      (local.get $3)
                     )
                     (i32.const -8)
                    )
                   )
                   (block
                    (local.set $9
                     (local.get $3)
                    )
                    (br $label$break$L218)
                   )
                   (block
                    (local.set $0
                     (local.get $3)
                    )
                    (br $while-in30)
                   )
                  )
                 )
                )
               )
               (if
                (i32.gt_u
                 (i32.load
                  (i32.const 25748)
                 )
                 (local.get $4)
                )
                (call $_abort)
                (block
                 (i32.store
                  (local.get $4)
                  (local.get $8)
                 )
                 (i32.store offset=24
                  (local.get $8)
                  (local.get $0)
                 )
                 (i32.store offset=12
                  (local.get $8)
                  (local.get $8)
                 )
                 (i32.store offset=8
                  (local.get $8)
                  (local.get $8)
                 )
                 (br $label$break$L200)
                )
               )
              )
             )
             (if
              (i32.and
               (i32.le_u
                (local.tee $0
                 (i32.load
                  (i32.const 25748)
                 )
                )
                (local.get $9)
               )
               (i32.le_u
                (local.get $0)
                (local.tee $0
                 (i32.load
                  (local.tee $3
                   (i32.add
                    (local.get $9)
                    (i32.const 8)
                   )
                  )
                 )
                )
               )
              )
              (block
               (i32.store offset=12
                (local.get $0)
                (local.get $8)
               )
               (i32.store
                (local.get $3)
                (local.get $8)
               )
               (i32.store offset=8
                (local.get $8)
                (local.get $0)
               )
               (i32.store offset=12
                (local.get $8)
                (local.get $9)
               )
               (i32.store offset=24
                (local.get $8)
                (i32.const 0)
               )
              )
              (call $_abort)
             )
            )
           )
           (global.set $STACKTOP
            (local.get $14)
           )
           (return
            (i32.add
             (local.get $5)
             (i32.const 8)
            )
           )
          )
          (local.get $4)
         )
         (local.get $4)
        )
       )
       (local.get $4)
      )
     )
    )
   )
  )
  (if
   (i32.ge_u
    (local.tee $1
     (i32.load
      (i32.const 25740)
     )
    )
    (local.get $3)
   )
   (block
    (local.set $0
     (i32.load
      (i32.const 25752)
     )
    )
    (if
     (i32.gt_u
      (local.tee $2
       (i32.sub
        (local.get $1)
        (local.get $3)
       )
      )
      (i32.const 15)
     )
     (block
      (i32.store
       (i32.const 25752)
       (local.tee $4
        (i32.add
         (local.get $0)
         (local.get $3)
        )
       )
      )
      (i32.store
       (i32.const 25740)
       (local.get $2)
      )
      (i32.store offset=4
       (local.get $4)
       (i32.or
        (local.get $2)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (local.get $1)
       )
       (local.get $2)
      )
      (i32.store offset=4
       (local.get $0)
       (i32.or
        (local.get $3)
        (i32.const 3)
       )
      )
     )
     (block
      (i32.store
       (i32.const 25740)
       (i32.const 0)
      )
      (i32.store
       (i32.const 25752)
       (i32.const 0)
      )
      (i32.store offset=4
       (local.get $0)
       (i32.or
        (local.get $1)
        (i32.const 3)
       )
      )
      (i32.store
       (local.tee $3
        (i32.add
         (i32.add
          (local.get $0)
          (local.get $1)
         )
         (i32.const 4)
        )
       )
       (i32.or
        (i32.load
         (local.get $3)
        )
        (i32.const 1)
       )
      )
     )
    )
    (global.set $STACKTOP
     (local.get $14)
    )
    (return
     (i32.add
      (local.get $0)
      (i32.const 8)
     )
    )
   )
  )
  (if
   (i32.gt_u
    (local.tee $1
     (i32.load
      (i32.const 25744)
     )
    )
    (local.get $3)
   )
   (block
    (i32.store
     (i32.const 25744)
     (local.tee $1
      (i32.sub
       (local.get $1)
       (local.get $3)
      )
     )
    )
    (i32.store
     (i32.const 25756)
     (local.tee $2
      (i32.add
       (local.get $3)
       (local.tee $0
        (i32.load
         (i32.const 25756)
        )
       )
      )
     )
    )
    (i32.store offset=4
     (local.get $2)
     (i32.or
      (local.get $1)
      (i32.const 1)
     )
    )
    (i32.store offset=4
     (local.get $0)
     (i32.or
      (local.get $3)
      (i32.const 3)
     )
    )
    (global.set $STACKTOP
     (local.get $14)
    )
    (return
     (i32.add
      (local.get $0)
      (i32.const 8)
     )
    )
   )
  )
  (local.set $0
   (local.get $14)
  )
  (if
   (i32.le_u
    (local.tee $4
     (i32.and
      (local.tee $5
       (i32.add
        (local.tee $6
         (i32.add
          (local.get $3)
          (i32.const 47)
         )
        )
        (local.tee $0
         (if (result i32)
          (i32.load
           (i32.const 26204)
          )
          (i32.load
           (i32.const 26212)
          )
          (block (result i32)
           (i32.store
            (i32.const 26212)
            (i32.const 4096)
           )
           (i32.store
            (i32.const 26208)
            (i32.const 4096)
           )
           (i32.store
            (i32.const 26216)
            (i32.const -1)
           )
           (i32.store
            (i32.const 26220)
            (i32.const -1)
           )
           (i32.store
            (i32.const 26224)
            (i32.const 0)
           )
           (i32.store
            (i32.const 26176)
            (i32.const 0)
           )
           (i32.store
            (i32.const 26204)
            (i32.xor
             (i32.and
              (local.get $0)
              (i32.const -16)
             )
             (i32.const 1431655768)
            )
           )
           (i32.const 4096)
          )
         )
        )
       )
      )
      (local.tee $7
       (i32.sub
        (i32.const 0)
        (local.get $0)
       )
      )
     )
    )
    (local.get $3)
   )
   (block
    (global.set $STACKTOP
     (local.get $14)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (local.tee $0
    (i32.load
     (i32.const 26172)
    )
   )
   (if
    (i32.or
     (i32.le_u
      (local.tee $9
       (i32.add
        (local.get $4)
        (local.tee $2
         (i32.load
          (i32.const 26164)
         )
        )
       )
      )
      (local.get $2)
     )
     (i32.gt_u
      (local.get $9)
      (local.get $0)
     )
    )
    (block
     (global.set $STACKTOP
      (local.get $14)
     )
     (return
      (i32.const 0)
     )
    )
   )
  )
  (local.set $9
   (i32.add
    (local.get $3)
    (i32.const 48)
   )
  )
  (block $__rjto$7
   (block $__rjti$7
    (if
     (i32.and
      (i32.load
       (i32.const 26176)
      )
      (i32.const 4)
     )
     (local.set $1
      (i32.const 0)
     )
     (block
      (block $do-once37
       (block $__rjti$3
        (block $__rjti$2
         (br_if $__rjti$2
          (i32.eqz
           (local.tee $0
            (i32.load
             (i32.const 25756)
            )
           )
          )
         )
         (local.set $2
          (i32.const 26180)
         )
         (loop $while-in34
          (block $while-out33
           (if
            (i32.le_u
             (local.tee $12
              (i32.load
               (local.get $2)
              )
             )
             (local.get $0)
            )
            (br_if $while-out33
             (i32.gt_u
              (i32.add
               (local.get $12)
               (i32.load offset=4
                (local.get $2)
               )
              )
              (local.get $0)
             )
            )
           )
           (br_if $while-in34
            (local.tee $2
             (i32.load offset=8
              (local.get $2)
             )
            )
           )
           (br $__rjti$2)
          )
         )
         (if
          (i32.lt_u
           (local.tee $1
            (i32.and
             (local.get $7)
             (i32.sub
              (local.get $5)
              (local.get $1)
             )
            )
           )
           (i32.const 2147483647)
          )
          (block
           (local.set $5
            (i32.add
             (local.get $2)
             (i32.const 4)
            )
           )
           (br_if $__rjti$3
            (i32.ne
             (local.tee $0
              (call $_sbrk
               (local.get $1)
              )
             )
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.load
               (local.get $5)
              )
             )
            )
           )
           (br_if $__rjti$7
            (i32.ne
             (local.get $0)
             (i32.const -1)
            )
           )
          )
          (local.set $1
           (i32.const 0)
          )
         )
         (br $do-once37)
        )
        (local.set $1
         (if (result i32)
          (i32.eq
           (local.tee $0
            (call $_sbrk
             (i32.const 0)
            )
           )
           (i32.const -1)
          )
          (i32.const 0)
          (block (result i32)
           (local.set $2
            (i32.add
             (local.tee $5
              (i32.load
               (i32.const 26164)
              )
             )
             (local.tee $1
              (i32.add
               (local.get $4)
               (select
                (i32.sub
                 (i32.and
                  (i32.add
                   (local.get $0)
                   (local.tee $2
                    (i32.add
                     (local.tee $1
                      (i32.load
                       (i32.const 26208)
                      )
                     )
                     (i32.const -1)
                    )
                   )
                  )
                  (i32.sub
                   (i32.const 0)
                   (local.get $1)
                  )
                 )
                 (local.get $0)
                )
                (i32.const 0)
                (i32.and
                 (local.get $0)
                 (local.get $2)
                )
               )
              )
             )
            )
           )
           (if (result i32)
            (i32.and
             (i32.lt_u
              (local.get $1)
              (i32.const 2147483647)
             )
             (i32.gt_u
              (local.get $1)
              (local.get $3)
             )
            )
            (block
             (if
              (local.tee $7
               (i32.load
                (i32.const 26172)
               )
              )
              (if
               (i32.or
                (i32.le_u
                 (local.get $2)
                 (local.get $5)
                )
                (i32.gt_u
                 (local.get $2)
                 (local.get $7)
                )
               )
               (block
                (local.set $1
                 (i32.const 0)
                )
                (br $do-once37)
               )
              )
             )
             (br_if $__rjti$7
              (i32.eq
               (local.get $0)
               (local.tee $2
                (call $_sbrk
                 (local.get $1)
                )
               )
              )
             )
             (local.set $0
              (local.get $2)
             )
             (br $__rjti$3)
            )
            (i32.const 0)
           )
          )
         )
        )
        (br $do-once37)
       )
       (if
        (i32.eqz
         (i32.and
          (i32.and
           (i32.ne
            (local.get $0)
            (i32.const -1)
           )
           (i32.lt_u
            (local.get $1)
            (i32.const 2147483647)
           )
          )
          (i32.gt_u
           (local.get $9)
           (local.get $1)
          )
         )
        )
        (if
         (i32.eq
          (local.get $0)
          (i32.const -1)
         )
         (block
          (local.set $1
           (i32.const 0)
          )
          (br $do-once37)
         )
         (br $__rjti$7)
        )
       )
       (br_if $__rjti$7
        (i32.ge_u
         (local.tee $2
          (i32.and
           (i32.add
            (local.tee $2
             (i32.load
              (i32.const 26212)
             )
            )
            (i32.sub
             (local.get $6)
             (local.get $1)
            )
           )
           (i32.sub
            (i32.const 0)
            (local.get $2)
           )
          )
         )
         (i32.const 2147483647)
        )
       )
       (local.set $6
        (i32.sub
         (i32.const 0)
         (local.get $1)
        )
       )
       (local.set $1
        (if (result i32)
         (i32.eq
          (call $_sbrk
           (local.get $2)
          )
          (i32.const -1)
         )
         (block (result i32)
          (drop
           (call $_sbrk
            (local.get $6)
           )
          )
          (i32.const 0)
         )
         (block
          (local.set $1
           (i32.add
            (local.get $1)
            (local.get $2)
           )
          )
          (br $__rjti$7)
         )
        )
       )
      )
      (i32.store
       (i32.const 26176)
       (i32.or
        (i32.load
         (i32.const 26176)
        )
        (i32.const 4)
       )
      )
     )
    )
    (if
     (i32.lt_u
      (local.get $4)
      (i32.const 2147483647)
     )
     (block
      (local.set $0
       (call $_sbrk
        (local.get $4)
       )
      )
      (local.set $4
       (i32.gt_u
        (local.tee $6
         (i32.sub
          (local.tee $2
           (call $_sbrk
            (i32.const 0)
           )
          )
          (local.get $0)
         )
        )
        (i32.add
         (local.get $3)
         (i32.const 40)
        )
       )
      )
      (local.set $1
       (select
        (local.get $6)
        (local.get $1)
        (local.get $4)
       )
      )
      (br_if $__rjti$7
       (i32.eqz
        (i32.or
         (i32.or
          (i32.xor
           (local.get $4)
           (i32.const 1)
          )
          (i32.eq
           (local.get $0)
           (i32.const -1)
          )
         )
         (i32.xor
          (i32.and
           (i32.and
            (i32.ne
             (local.get $0)
             (i32.const -1)
            )
            (i32.ne
             (local.get $2)
             (i32.const -1)
            )
           )
           (i32.lt_u
            (local.get $0)
            (local.get $2)
           )
          )
          (i32.const 1)
         )
        )
       )
      )
     )
    )
    (br $__rjto$7)
   )
   (i32.store
    (i32.const 26164)
    (local.tee $2
     (i32.add
      (local.get $1)
      (i32.load
       (i32.const 26164)
      )
     )
    )
   )
   (if
    (i32.gt_u
     (local.get $2)
     (i32.load
      (i32.const 26168)
     )
    )
    (i32.store
     (i32.const 26168)
     (local.get $2)
    )
   )
   (if
    (local.tee $6
     (i32.load
      (i32.const 25756)
     )
    )
    (block $label$break$L294
     (local.set $2
      (i32.const 26180)
     )
     (block $__rjto$4
      (block $__rjti$4
       (loop $while-in41
        (br_if $__rjti$4
         (i32.eq
          (local.get $0)
          (i32.add
           (local.tee $4
            (i32.load
             (local.get $2)
            )
           )
           (local.tee $5
            (i32.load offset=4
             (local.get $2)
            )
           )
          )
         )
        )
        (br_if $while-in41
         (local.tee $2
          (i32.load offset=8
           (local.get $2)
          )
         )
        )
       )
       (br $__rjto$4)
      )
      (local.set $7
       (i32.add
        (local.get $2)
        (i32.const 4)
       )
      )
      (if
       (i32.eqz
        (i32.and
         (i32.load offset=12
          (local.get $2)
         )
         (i32.const 8)
        )
       )
       (if
        (i32.and
         (i32.le_u
          (local.get $4)
          (local.get $6)
         )
         (i32.gt_u
          (local.get $0)
          (local.get $6)
         )
        )
        (block
         (i32.store
          (local.get $7)
          (i32.add
           (local.get $1)
           (local.get $5)
          )
         )
         (local.set $0
          (i32.add
           (local.get $6)
           (local.tee $2
            (select
             (i32.and
              (i32.sub
               (i32.const 0)
               (local.tee $0
                (i32.add
                 (local.get $6)
                 (i32.const 8)
                )
               )
              )
              (i32.const 7)
             )
             (i32.const 0)
             (i32.and
              (local.get $0)
              (i32.const 7)
             )
            )
           )
          )
         )
         (local.set $1
          (i32.sub
           (local.tee $4
            (i32.add
             (local.get $1)
             (i32.load
              (i32.const 25744)
             )
            )
           )
           (local.get $2)
          )
         )
         (i32.store
          (i32.const 25756)
          (local.get $0)
         )
         (i32.store
          (i32.const 25744)
          (local.get $1)
         )
         (i32.store offset=4
          (local.get $0)
          (i32.or
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.store offset=4
          (i32.add
           (local.get $4)
           (local.get $6)
          )
          (i32.const 40)
         )
         (i32.store
          (i32.const 25760)
          (i32.load
           (i32.const 26220)
          )
         )
         (br $label$break$L294)
        )
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $0)
       (local.tee $2
        (i32.load
         (i32.const 25748)
        )
       )
      )
      (block
       (i32.store
        (i32.const 25748)
        (local.get $0)
       )
       (local.set $2
        (local.get $0)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $0)
       (local.get $1)
      )
     )
     (local.set $4
      (i32.const 26180)
     )
     (block $__rjto$5
      (block $__rjti$5
       (loop $while-in43
        (br_if $__rjti$5
         (i32.eq
          (local.get $5)
          (i32.load
           (local.get $4)
          )
         )
        )
        (br_if $while-in43
         (local.tee $4
          (i32.load offset=8
           (local.get $4)
          )
         )
        )
       )
       (br $__rjto$5)
      )
      (if
       (i32.eqz
        (i32.and
         (i32.load offset=12
          (local.get $4)
         )
         (i32.const 8)
        )
       )
       (block
        (i32.store
         (local.get $4)
         (local.get $0)
        )
        (i32.store
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 4)
          )
         )
         (i32.add
          (local.get $1)
          (i32.load
           (local.get $4)
          )
         )
        )
        (local.set $7
         (i32.add
          (local.get $3)
          (local.tee $8
           (i32.add
            (local.get $0)
            (select
             (i32.and
              (i32.sub
               (i32.const 0)
               (local.tee $0
                (i32.add
                 (local.get $0)
                 (i32.const 8)
                )
               )
              )
              (i32.const 7)
             )
             (i32.const 0)
             (i32.and
              (local.get $0)
              (i32.const 7)
             )
            )
           )
          )
         )
        )
        (local.set $4
         (i32.sub
          (i32.sub
           (local.tee $1
            (i32.add
             (local.get $5)
             (select
              (i32.and
               (i32.sub
                (i32.const 0)
                (local.tee $0
                 (i32.add
                  (local.get $5)
                  (i32.const 8)
                 )
                )
               )
               (i32.const 7)
              )
              (i32.const 0)
              (i32.and
               (local.get $0)
               (i32.const 7)
              )
             )
            )
           )
           (local.get $8)
          )
          (local.get $3)
         )
        )
        (i32.store offset=4
         (local.get $8)
         (i32.or
          (local.get $3)
          (i32.const 3)
         )
        )
        (if
         (i32.eq
          (local.get $1)
          (local.get $6)
         )
         (block
          (i32.store
           (i32.const 25744)
           (local.tee $0
            (i32.add
             (local.get $4)
             (i32.load
              (i32.const 25744)
             )
            )
           )
          )
          (i32.store
           (i32.const 25756)
           (local.get $7)
          )
          (i32.store offset=4
           (local.get $7)
           (i32.or
            (local.get $0)
            (i32.const 1)
           )
          )
         )
         (block $label$break$L317
          (if
           (i32.eq
            (local.get $1)
            (i32.load
             (i32.const 25752)
            )
           )
           (block
            (i32.store
             (i32.const 25740)
             (local.tee $0
              (i32.add
               (local.get $4)
               (i32.load
                (i32.const 25740)
               )
              )
             )
            )
            (i32.store
             (i32.const 25752)
             (local.get $7)
            )
            (i32.store offset=4
             (local.get $7)
             (i32.or
              (local.get $0)
              (i32.const 1)
             )
            )
            (i32.store
             (i32.add
              (local.get $0)
              (local.get $7)
             )
             (local.get $0)
            )
            (br $label$break$L317)
           )
          )
          (local.set $2
           (if (result i32)
            (i32.eq
             (i32.and
              (local.tee $0
               (i32.load offset=4
                (local.get $1)
               )
              )
              (i32.const 3)
             )
             (i32.const 1)
            )
            (block (result i32)
             (local.set $12
              (i32.and
               (local.get $0)
               (i32.const -8)
              )
             )
             (local.set $5
              (i32.shr_u
               (local.get $0)
               (i32.const 3)
              )
             )
             (block $label$break$L325
              (if
               (i32.lt_u
                (local.get $0)
                (i32.const 256)
               )
               (block
                (local.set $3
                 (i32.load offset=12
                  (local.get $1)
                 )
                )
                (if
                 (i32.ne
                  (local.tee $6
                   (i32.load offset=8
                    (local.get $1)
                   )
                  )
                  (local.tee $0
                   (i32.add
                    (i32.shl
                     (local.get $5)
                     (i32.const 3)
                    )
                    (i32.const 25772)
                   )
                  )
                 )
                 (block $do-once46
                  (if
                   (i32.gt_u
                    (local.get $2)
                    (local.get $6)
                   )
                   (call $_abort)
                  )
                  (br_if $do-once46
                   (i32.eq
                    (local.get $1)
                    (i32.load offset=12
                     (local.get $6)
                    )
                   )
                  )
                  (call $_abort)
                 )
                )
                (if
                 (i32.eq
                  (local.get $3)
                  (local.get $6)
                 )
                 (block
                  (i32.store
                   (i32.const 25732)
                   (i32.and
                    (i32.load
                     (i32.const 25732)
                    )
                    (i32.xor
                     (i32.shl
                      (i32.const 1)
                      (local.get $5)
                     )
                     (i32.const -1)
                    )
                   )
                  )
                  (br $label$break$L325)
                 )
                )
                (if
                 (i32.eq
                  (local.get $0)
                  (local.get $3)
                 )
                 (local.set $20
                  (i32.add
                   (local.get $3)
                   (i32.const 8)
                  )
                 )
                 (block $do-once48
                  (if
                   (i32.gt_u
                    (local.get $2)
                    (local.get $3)
                   )
                   (call $_abort)
                  )
                  (if
                   (i32.eq
                    (local.get $1)
                    (i32.load
                     (local.tee $0
                      (i32.add
                       (local.get $3)
                       (i32.const 8)
                      )
                     )
                    )
                   )
                   (block
                    (local.set $20
                     (local.get $0)
                    )
                    (br $do-once48)
                   )
                  )
                  (call $_abort)
                 )
                )
                (i32.store offset=12
                 (local.get $6)
                 (local.get $3)
                )
                (i32.store
                 (local.get $20)
                 (local.get $6)
                )
               )
               (block
                (local.set $9
                 (i32.load offset=24
                  (local.get $1)
                 )
                )
                (if
                 (i32.eq
                  (local.get $1)
                  (local.tee $0
                   (i32.load offset=12
                    (local.get $1)
                   )
                  )
                 )
                 (block $do-once50
                  (if
                   (local.tee $0
                    (i32.load
                     (local.tee $6
                      (i32.add
                       (local.tee $3
                        (i32.add
                         (local.get $1)
                         (i32.const 16)
                        )
                       )
                       (i32.const 4)
                      )
                     )
                    )
                   )
                   (local.set $3
                    (local.get $6)
                   )
                   (br_if $do-once50
                    (i32.eqz
                     (local.tee $0
                      (i32.load
                       (local.get $3)
                      )
                     )
                    )
                   )
                  )
                  (loop $while-in53
                   (block $while-out52
                    (local.set $0
                     (if (result i32)
                      (local.tee $5
                       (i32.load
                        (local.tee $6
                         (i32.add
                          (local.get $0)
                          (i32.const 20)
                         )
                        )
                       )
                      )
                      (block (result i32)
                       (local.set $3
                        (local.get $6)
                       )
                       (local.get $5)
                      )
                      (block (result i32)
                       (br_if $while-out52
                        (i32.eqz
                         (local.tee $5
                          (i32.load
                           (local.tee $6
                            (i32.add
                             (local.get $0)
                             (i32.const 16)
                            )
                           )
                          )
                         )
                        )
                       )
                       (local.set $3
                        (local.get $6)
                       )
                       (local.get $5)
                      )
                     )
                    )
                    (br $while-in53)
                   )
                  )
                  (if
                   (i32.gt_u
                    (local.get $2)
                    (local.get $3)
                   )
                   (call $_abort)
                   (block
                    (i32.store
                     (local.get $3)
                     (i32.const 0)
                    )
                    (local.set $10
                     (local.get $0)
                    )
                   )
                  )
                 )
                 (block
                  (if
                   (i32.gt_u
                    (local.get $2)
                    (local.tee $3
                     (i32.load offset=8
                      (local.get $1)
                     )
                    )
                   )
                   (call $_abort)
                  )
                  (if
                   (i32.ne
                    (i32.load
                     (local.tee $2
                      (i32.add
                       (local.get $3)
                       (i32.const 12)
                      )
                     )
                    )
                    (local.get $1)
                   )
                   (call $_abort)
                  )
                  (if
                   (i32.eq
                    (local.get $1)
                    (i32.load
                     (local.tee $6
                      (i32.add
                       (local.get $0)
                       (i32.const 8)
                      )
                     )
                    )
                   )
                   (block
                    (i32.store
                     (local.get $2)
                     (local.get $0)
                    )
                    (i32.store
                     (local.get $6)
                     (local.get $3)
                    )
                    (local.set $10
                     (local.get $0)
                    )
                   )
                   (call $_abort)
                  )
                 )
                )
                (br_if $label$break$L325
                 (i32.eqz
                  (local.get $9)
                 )
                )
                (if
                 (i32.eq
                  (local.get $1)
                  (i32.load
                   (local.tee $3
                    (i32.add
                     (i32.shl
                      (local.tee $0
                       (i32.load offset=28
                        (local.get $1)
                       )
                      )
                      (i32.const 2)
                     )
                     (i32.const 26036)
                    )
                   )
                  )
                 )
                 (block $do-once54
                  (i32.store
                   (local.get $3)
                   (local.get $10)
                  )
                  (br_if $do-once54
                   (local.get $10)
                  )
                  (i32.store
                   (i32.const 25736)
                   (i32.and
                    (i32.load
                     (i32.const 25736)
                    )
                    (i32.xor
                     (i32.shl
                      (i32.const 1)
                      (local.get $0)
                     )
                     (i32.const -1)
                    )
                   )
                  )
                  (br $label$break$L325)
                 )
                 (if
                  (i32.gt_u
                   (i32.load
                    (i32.const 25748)
                   )
                   (local.get $9)
                  )
                  (call $_abort)
                  (block
                   (i32.store
                    (select
                     (local.tee $0
                      (i32.add
                       (local.get $9)
                       (i32.const 16)
                      )
                     )
                     (i32.add
                      (local.get $9)
                      (i32.const 20)
                     )
                     (i32.eq
                      (local.get $1)
                      (i32.load
                       (local.get $0)
                      )
                     )
                    )
                    (local.get $10)
                   )
                   (br_if $label$break$L325
                    (i32.eqz
                     (local.get $10)
                    )
                   )
                  )
                 )
                )
                (if
                 (i32.gt_u
                  (local.tee $3
                   (i32.load
                    (i32.const 25748)
                   )
                  )
                  (local.get $10)
                 )
                 (call $_abort)
                )
                (i32.store offset=24
                 (local.get $10)
                 (local.get $9)
                )
                (if
                 (local.tee $0
                  (i32.load
                   (local.tee $2
                    (i32.add
                     (local.get $1)
                     (i32.const 16)
                    )
                   )
                  )
                 )
                 (if
                  (i32.gt_u
                   (local.get $3)
                   (local.get $0)
                  )
                  (call $_abort)
                  (block
                   (i32.store offset=16
                    (local.get $10)
                    (local.get $0)
                   )
                   (i32.store offset=24
                    (local.get $0)
                    (local.get $10)
                   )
                  )
                 )
                )
                (br_if $label$break$L325
                 (i32.eqz
                  (local.tee $0
                   (i32.load offset=4
                    (local.get $2)
                   )
                  )
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (i32.const 25748)
                  )
                  (local.get $0)
                 )
                 (call $_abort)
                 (block
                  (i32.store offset=20
                   (local.get $10)
                   (local.get $0)
                  )
                  (i32.store offset=24
                   (local.get $0)
                   (local.get $10)
                  )
                 )
                )
               )
              )
             )
             (local.set $1
              (i32.add
               (local.get $1)
               (local.get $12)
              )
             )
             (i32.add
              (local.get $4)
              (local.get $12)
             )
            )
            (local.get $4)
           )
          )
          (i32.store
           (local.tee $0
            (i32.add
             (local.get $1)
             (i32.const 4)
            )
           )
           (i32.and
            (i32.load
             (local.get $0)
            )
            (i32.const -2)
           )
          )
          (i32.store offset=4
           (local.get $7)
           (i32.or
            (local.get $2)
            (i32.const 1)
           )
          )
          (i32.store
           (i32.add
            (local.get $2)
            (local.get $7)
           )
           (local.get $2)
          )
          (local.set $3
           (i32.shr_u
            (local.get $2)
            (i32.const 3)
           )
          )
          (if
           (i32.lt_u
            (local.get $2)
            (i32.const 256)
           )
           (block
            (local.set $0
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 3)
              )
              (i32.const 25772)
             )
            )
            (if
             (i32.and
              (local.tee $1
               (i32.load
                (i32.const 25732)
               )
              )
              (local.tee $3
               (i32.shl
                (i32.const 1)
                (local.get $3)
               )
              )
             )
             (block $do-once58
              (if
               (i32.le_u
                (i32.load
                 (i32.const 25748)
                )
                (local.tee $1
                 (i32.load
                  (local.tee $3
                   (i32.add
                    (local.get $0)
                    (i32.const 8)
                   )
                  )
                 )
                )
               )
               (block
                (local.set $15
                 (local.get $1)
                )
                (local.set $21
                 (local.get $3)
                )
                (br $do-once58)
               )
              )
              (call $_abort)
             )
             (block
              (i32.store
               (i32.const 25732)
               (i32.or
                (local.get $1)
                (local.get $3)
               )
              )
              (local.set $15
               (local.get $0)
              )
              (local.set $21
               (i32.add
                (local.get $0)
                (i32.const 8)
               )
              )
             )
            )
            (i32.store
             (local.get $21)
             (local.get $7)
            )
            (i32.store offset=12
             (local.get $15)
             (local.get $7)
            )
            (i32.store offset=8
             (local.get $7)
             (local.get $15)
            )
            (i32.store offset=12
             (local.get $7)
             (local.get $0)
            )
            (br $label$break$L317)
           )
          )
          (local.set $0
           (i32.add
            (i32.shl
             (local.tee $3
              (if (result i32)
               (local.tee $0
                (i32.shr_u
                 (local.get $2)
                 (i32.const 8)
                )
               )
               (if (result i32)
                (i32.gt_u
                 (local.get $2)
                 (i32.const 16777215)
                )
                (i32.const 31)
                (i32.or
                 (i32.shl
                  (local.tee $0
                   (i32.add
                    (i32.sub
                     (i32.const 14)
                     (i32.or
                      (i32.or
                       (local.tee $0
                        (i32.and
                         (i32.shr_u
                          (i32.add
                           (local.tee $1
                            (i32.shl
                             (local.get $0)
                             (local.tee $3
                              (i32.and
                               (i32.shr_u
                                (i32.add
                                 (local.get $0)
                                 (i32.const 1048320)
                                )
                                (i32.const 16)
                               )
                               (i32.const 8)
                              )
                             )
                            )
                           )
                           (i32.const 520192)
                          )
                          (i32.const 16)
                         )
                         (i32.const 4)
                        )
                       )
                       (local.get $3)
                      )
                      (local.tee $3
                       (i32.and
                        (i32.shr_u
                         (i32.add
                          (local.tee $0
                           (i32.shl
                            (local.get $1)
                            (local.get $0)
                           )
                          )
                          (i32.const 245760)
                         )
                         (i32.const 16)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                    )
                    (i32.shr_u
                     (i32.shl
                      (local.get $0)
                      (local.get $3)
                     )
                     (i32.const 15)
                    )
                   )
                  )
                  (i32.const 1)
                 )
                 (i32.and
                  (i32.shr_u
                   (local.get $2)
                   (i32.add
                    (local.get $0)
                    (i32.const 7)
                   )
                  )
                  (i32.const 1)
                 )
                )
               )
               (i32.const 0)
              )
             )
             (i32.const 2)
            )
            (i32.const 26036)
           )
          )
          (i32.store offset=28
           (local.get $7)
           (local.get $3)
          )
          (i32.store offset=4
           (local.tee $1
            (i32.add
             (local.get $7)
             (i32.const 16)
            )
           )
           (i32.const 0)
          )
          (i32.store
           (local.get $1)
           (i32.const 0)
          )
          (if
           (i32.eqz
            (i32.and
             (local.tee $1
              (i32.load
               (i32.const 25736)
              )
             )
             (local.tee $4
              (i32.shl
               (i32.const 1)
               (local.get $3)
              )
             )
            )
           )
           (block
            (i32.store
             (i32.const 25736)
             (i32.or
              (local.get $1)
              (local.get $4)
             )
            )
            (i32.store
             (local.get $0)
             (local.get $7)
            )
            (i32.store offset=24
             (local.get $7)
             (local.get $0)
            )
            (i32.store offset=12
             (local.get $7)
             (local.get $7)
            )
            (i32.store offset=8
             (local.get $7)
             (local.get $7)
            )
            (br $label$break$L317)
           )
          )
          (if
           (i32.eq
            (local.get $2)
            (i32.and
             (i32.load offset=4
              (local.tee $0
               (i32.load
                (local.get $0)
               )
              )
             )
             (i32.const -8)
            )
           )
           (local.set $11
            (local.get $0)
           )
           (block $label$break$L410
            (local.set $1
             (i32.shl
              (local.get $2)
              (select
               (i32.const 0)
               (i32.sub
                (i32.const 25)
                (i32.shr_u
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (i32.eq
                (local.get $3)
                (i32.const 31)
               )
              )
             )
            )
            (loop $while-in64
             (if
              (local.tee $3
               (i32.load
                (local.tee $4
                 (i32.add
                  (i32.add
                   (local.get $0)
                   (i32.const 16)
                  )
                  (i32.shl
                   (i32.shr_u
                    (local.get $1)
                    (i32.const 31)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
              )
              (block
               (local.set $1
                (i32.shl
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (if
                (i32.eq
                 (local.get $2)
                 (i32.and
                  (i32.load offset=4
                   (local.get $3)
                  )
                  (i32.const -8)
                 )
                )
                (block
                 (local.set $11
                  (local.get $3)
                 )
                 (br $label$break$L410)
                )
                (block
                 (local.set $0
                  (local.get $3)
                 )
                 (br $while-in64)
                )
               )
              )
             )
            )
            (if
             (i32.gt_u
              (i32.load
               (i32.const 25748)
              )
              (local.get $4)
             )
             (call $_abort)
             (block
              (i32.store
               (local.get $4)
               (local.get $7)
              )
              (i32.store offset=24
               (local.get $7)
               (local.get $0)
              )
              (i32.store offset=12
               (local.get $7)
               (local.get $7)
              )
              (i32.store offset=8
               (local.get $7)
               (local.get $7)
              )
              (br $label$break$L317)
             )
            )
           )
          )
          (if
           (i32.and
            (i32.le_u
             (local.tee $0
              (i32.load
               (i32.const 25748)
              )
             )
             (local.get $11)
            )
            (i32.le_u
             (local.get $0)
             (local.tee $0
              (i32.load
               (local.tee $3
                (i32.add
                 (local.get $11)
                 (i32.const 8)
                )
               )
              )
             )
            )
           )
           (block
            (i32.store offset=12
             (local.get $0)
             (local.get $7)
            )
            (i32.store
             (local.get $3)
             (local.get $7)
            )
            (i32.store offset=8
             (local.get $7)
             (local.get $0)
            )
            (i32.store offset=12
             (local.get $7)
             (local.get $11)
            )
            (i32.store offset=24
             (local.get $7)
             (i32.const 0)
            )
           )
           (call $_abort)
          )
         )
        )
        (global.set $STACKTOP
         (local.get $14)
        )
        (return
         (i32.add
          (local.get $8)
          (i32.const 8)
         )
        )
       )
      )
     )
     (local.set $2
      (i32.const 26180)
     )
     (loop $while-in66
      (block $while-out65
       (if
        (i32.le_u
         (local.tee $4
          (i32.load
           (local.get $2)
          )
         )
         (local.get $6)
        )
        (br_if $while-out65
         (i32.gt_u
          (local.tee $5
           (i32.add
            (local.get $4)
            (i32.load offset=4
             (local.get $2)
            )
           )
          )
          (local.get $6)
         )
        )
       )
       (local.set $2
        (i32.load offset=8
         (local.get $2)
        )
       )
       (br $while-in66)
      )
     )
     (local.set $4
      (i32.add
       (local.tee $2
        (select
         (local.get $6)
         (local.tee $2
          (i32.add
           (select
            (i32.and
             (i32.sub
              (i32.const 0)
              (local.tee $2
               (i32.add
                (local.tee $4
                 (i32.add
                  (local.get $5)
                  (i32.const -47)
                 )
                )
                (i32.const 8)
               )
              )
             )
             (i32.const 7)
            )
            (i32.const 0)
            (i32.and
             (local.get $2)
             (i32.const 7)
            )
           )
           (local.get $4)
          )
         )
         (i32.lt_u
          (local.get $2)
          (local.tee $10
           (i32.add
            (local.get $6)
            (i32.const 16)
           )
          )
         )
        )
       )
       (i32.const 8)
      )
     )
     (i32.store
      (i32.const 25756)
      (local.tee $9
       (i32.add
        (local.get $0)
        (local.tee $7
         (select
          (i32.and
           (i32.sub
            (i32.const 0)
            (local.tee $7
             (i32.add
              (local.get $0)
              (i32.const 8)
             )
            )
           )
           (i32.const 7)
          )
          (i32.const 0)
          (i32.and
           (local.get $7)
           (i32.const 7)
          )
         )
        )
       )
      )
     )
     (i32.store
      (i32.const 25744)
      (local.tee $7
       (i32.sub
        (local.tee $11
         (i32.add
          (local.get $1)
          (i32.const -40)
         )
        )
        (local.get $7)
       )
      )
     )
     (i32.store offset=4
      (local.get $9)
      (i32.or
       (local.get $7)
       (i32.const 1)
      )
     )
     (i32.store offset=4
      (i32.add
       (local.get $0)
       (local.get $11)
      )
      (i32.const 40)
     )
     (i32.store
      (i32.const 25760)
      (i32.load
       (i32.const 26220)
      )
     )
     (i32.store
      (local.tee $7
       (i32.add
        (local.get $2)
        (i32.const 4)
       )
      )
      (i32.const 27)
     )
     (i64.store align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 26180)
      )
     )
     (i64.store offset=8 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 26188)
      )
     )
     (i32.store
      (i32.const 26180)
      (local.get $0)
     )
     (i32.store
      (i32.const 26184)
      (local.get $1)
     )
     (i32.store
      (i32.const 26192)
      (i32.const 0)
     )
     (i32.store
      (i32.const 26188)
      (local.get $4)
     )
     (local.set $0
      (i32.add
       (local.get $2)
       (i32.const 24)
      )
     )
     (loop $while-in68
      (i32.store
       (local.tee $1
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (i32.const 7)
      )
      (if
       (i32.lt_u
        (i32.add
         (local.get $0)
         (i32.const 8)
        )
        (local.get $5)
       )
       (block
        (local.set $0
         (local.get $1)
        )
        (br $while-in68)
       )
      )
     )
     (if
      (i32.ne
       (local.get $2)
       (local.get $6)
      )
      (block
       (i32.store
        (local.get $7)
        (i32.and
         (i32.load
          (local.get $7)
         )
         (i32.const -2)
        )
       )
       (i32.store offset=4
        (local.get $6)
        (i32.or
         (local.tee $4
          (i32.sub
           (local.get $2)
           (local.get $6)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store
        (local.get $2)
        (local.get $4)
       )
       (local.set $1
        (i32.shr_u
         (local.get $4)
         (i32.const 3)
        )
       )
       (if
        (i32.lt_u
         (local.get $4)
         (i32.const 256)
        )
        (block
         (local.set $0
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 3)
           )
           (i32.const 25772)
          )
         )
         (if
          (i32.and
           (local.tee $2
            (i32.load
             (i32.const 25732)
            )
           )
           (local.tee $1
            (i32.shl
             (i32.const 1)
             (local.get $1)
            )
           )
          )
          (if
           (i32.gt_u
            (i32.load
             (i32.const 25748)
            )
            (local.tee $2
             (i32.load
              (local.tee $1
               (i32.add
                (local.get $0)
                (i32.const 8)
               )
              )
             )
            )
           )
           (call $_abort)
           (block
            (local.set $17
             (local.get $2)
            )
            (local.set $22
             (local.get $1)
            )
           )
          )
          (block
           (i32.store
            (i32.const 25732)
            (i32.or
             (local.get $1)
             (local.get $2)
            )
           )
           (local.set $17
            (local.get $0)
           )
           (local.set $22
            (i32.add
             (local.get $0)
             (i32.const 8)
            )
           )
          )
         )
         (i32.store
          (local.get $22)
          (local.get $6)
         )
         (i32.store offset=12
          (local.get $17)
          (local.get $6)
         )
         (i32.store offset=8
          (local.get $6)
          (local.get $17)
         )
         (i32.store offset=12
          (local.get $6)
          (local.get $0)
         )
         (br $label$break$L294)
        )
       )
       (local.set $0
        (i32.add
         (i32.shl
          (local.tee $1
           (if (result i32)
            (local.tee $0
             (i32.shr_u
              (local.get $4)
              (i32.const 8)
             )
            )
            (if (result i32)
             (i32.gt_u
              (local.get $4)
              (i32.const 16777215)
             )
             (i32.const 31)
             (block (result i32)
              (local.set $0
               (i32.and
                (i32.shr_u
                 (i32.add
                  (local.tee $2
                   (i32.shl
                    (local.get $0)
                    (local.tee $1
                     (i32.and
                      (i32.shr_u
                       (i32.add
                        (local.get $0)
                        (i32.const 1048320)
                       )
                       (i32.const 16)
                      )
                      (i32.const 8)
                     )
                    )
                   )
                  )
                  (i32.const 520192)
                 )
                 (i32.const 16)
                )
                (i32.const 4)
               )
              )
              (i32.or
               (i32.shl
                (local.tee $0
                 (i32.add
                  (i32.sub
                   (i32.const 14)
                   (i32.or
                    (local.tee $5
                     (i32.and
                      (i32.shr_u
                       (i32.add
                        (local.tee $2
                         (i32.shl
                          (local.get $2)
                          (local.get $0)
                         )
                        )
                        (i32.const 245760)
                       )
                       (i32.const 16)
                      )
                      (i32.const 2)
                     )
                    )
                    (i32.or
                     (local.get $0)
                     (local.get $1)
                    )
                   )
                  )
                  (i32.shr_u
                   (i32.shl
                    (local.get $2)
                    (local.get $5)
                   )
                   (i32.const 15)
                  )
                 )
                )
                (i32.const 1)
               )
               (i32.and
                (i32.shr_u
                 (local.get $4)
                 (i32.add
                  (local.get $0)
                  (i32.const 7)
                 )
                )
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 0)
           )
          )
          (i32.const 2)
         )
         (i32.const 26036)
        )
       )
       (i32.store offset=28
        (local.get $6)
        (local.get $1)
       )
       (i32.store offset=20
        (local.get $6)
        (i32.const 0)
       )
       (i32.store
        (local.get $10)
        (i32.const 0)
       )
       (if
        (i32.eqz
         (i32.and
          (local.tee $2
           (i32.load
            (i32.const 25736)
           )
          )
          (local.tee $5
           (i32.shl
            (i32.const 1)
            (local.get $1)
           )
          )
         )
        )
        (block
         (i32.store
          (i32.const 25736)
          (i32.or
           (local.get $2)
           (local.get $5)
          )
         )
         (i32.store
          (local.get $0)
          (local.get $6)
         )
         (i32.store offset=24
          (local.get $6)
          (local.get $0)
         )
         (i32.store offset=12
          (local.get $6)
          (local.get $6)
         )
         (i32.store offset=8
          (local.get $6)
          (local.get $6)
         )
         (br $label$break$L294)
        )
       )
       (if
        (i32.eq
         (i32.and
          (i32.load offset=4
           (local.tee $0
            (i32.load
             (local.get $0)
            )
           )
          )
          (i32.const -8)
         )
         (local.get $4)
        )
        (local.set $8
         (local.get $0)
        )
        (block $label$break$L451
         (local.set $2
          (i32.shl
           (local.get $4)
           (select
            (i32.const 0)
            (i32.sub
             (i32.const 25)
             (i32.shr_u
              (local.get $1)
              (i32.const 1)
             )
            )
            (i32.eq
             (local.get $1)
             (i32.const 31)
            )
           )
          )
         )
         (loop $while-in71
          (if
           (local.tee $1
            (i32.load
             (local.tee $5
              (i32.add
               (i32.add
                (local.get $0)
                (i32.const 16)
               )
               (i32.shl
                (i32.shr_u
                 (local.get $2)
                 (i32.const 31)
                )
                (i32.const 2)
               )
              )
             )
            )
           )
           (block
            (local.set $2
             (i32.shl
              (local.get $2)
              (i32.const 1)
             )
            )
            (if
             (i32.eq
              (i32.and
               (i32.load offset=4
                (local.get $1)
               )
               (i32.const -8)
              )
              (local.get $4)
             )
             (block
              (local.set $8
               (local.get $1)
              )
              (br $label$break$L451)
             )
             (block
              (local.set $0
               (local.get $1)
              )
              (br $while-in71)
             )
            )
           )
          )
         )
         (if
          (i32.gt_u
           (i32.load
            (i32.const 25748)
           )
           (local.get $5)
          )
          (call $_abort)
          (block
           (i32.store
            (local.get $5)
            (local.get $6)
           )
           (i32.store offset=24
            (local.get $6)
            (local.get $0)
           )
           (i32.store offset=12
            (local.get $6)
            (local.get $6)
           )
           (i32.store offset=8
            (local.get $6)
            (local.get $6)
           )
           (br $label$break$L294)
          )
         )
        )
       )
       (if
        (i32.and
         (i32.le_u
          (local.tee $0
           (i32.load
            (i32.const 25748)
           )
          )
          (local.get $8)
         )
         (i32.le_u
          (local.get $0)
          (local.tee $0
           (i32.load
            (local.tee $1
             (i32.add
              (local.get $8)
              (i32.const 8)
             )
            )
           )
          )
         )
        )
        (block
         (i32.store offset=12
          (local.get $0)
          (local.get $6)
         )
         (i32.store
          (local.get $1)
          (local.get $6)
         )
         (i32.store offset=8
          (local.get $6)
          (local.get $0)
         )
         (i32.store offset=12
          (local.get $6)
          (local.get $8)
         )
         (i32.store offset=24
          (local.get $6)
          (i32.const 0)
         )
        )
        (call $_abort)
       )
      )
     )
    )
    (block
     (if
      (i32.or
       (i32.eqz
        (local.tee $2
         (i32.load
          (i32.const 25748)
         )
        )
       )
       (i32.lt_u
        (local.get $0)
        (local.get $2)
       )
      )
      (i32.store
       (i32.const 25748)
       (local.get $0)
      )
     )
     (i32.store
      (i32.const 26180)
      (local.get $0)
     )
     (i32.store
      (i32.const 26184)
      (local.get $1)
     )
     (i32.store
      (i32.const 26192)
      (i32.const 0)
     )
     (i32.store
      (i32.const 25768)
      (i32.load
       (i32.const 26204)
      )
     )
     (i32.store
      (i32.const 25764)
      (i32.const -1)
     )
     (i32.store
      (i32.const 25784)
      (i32.const 25772)
     )
     (i32.store
      (i32.const 25780)
      (i32.const 25772)
     )
     (i32.store
      (i32.const 25792)
      (i32.const 25780)
     )
     (i32.store
      (i32.const 25788)
      (i32.const 25780)
     )
     (i32.store
      (i32.const 25800)
      (i32.const 25788)
     )
     (i32.store
      (i32.const 25796)
      (i32.const 25788)
     )
     (i32.store
      (i32.const 25808)
      (i32.const 25796)
     )
     (i32.store
      (i32.const 25804)
      (i32.const 25796)
     )
     (i32.store
      (i32.const 25816)
      (i32.const 25804)
     )
     (i32.store
      (i32.const 25812)
      (i32.const 25804)
     )
     (i32.store
      (i32.const 25824)
      (i32.const 25812)
     )
     (i32.store
      (i32.const 25820)
      (i32.const 25812)
     )
     (i32.store
      (i32.const 25832)
      (i32.const 25820)
     )
     (i32.store
      (i32.const 25828)
      (i32.const 25820)
     )
     (i32.store
      (i32.const 25840)
      (i32.const 25828)
     )
     (i32.store
      (i32.const 25836)
      (i32.const 25828)
     )
     (i32.store
      (i32.const 25848)
      (i32.const 25836)
     )
     (i32.store
      (i32.const 25844)
      (i32.const 25836)
     )
     (i32.store
      (i32.const 25856)
      (i32.const 25844)
     )
     (i32.store
      (i32.const 25852)
      (i32.const 25844)
     )
     (i32.store
      (i32.const 25864)
      (i32.const 25852)
     )
     (i32.store
      (i32.const 25860)
      (i32.const 25852)
     )
     (i32.store
      (i32.const 25872)
      (i32.const 25860)
     )
     (i32.store
      (i32.const 25868)
      (i32.const 25860)
     )
     (i32.store
      (i32.const 25880)
      (i32.const 25868)
     )
     (i32.store
      (i32.const 25876)
      (i32.const 25868)
     )
     (i32.store
      (i32.const 25888)
      (i32.const 25876)
     )
     (i32.store
      (i32.const 25884)
      (i32.const 25876)
     )
     (i32.store
      (i32.const 25896)
      (i32.const 25884)
     )
     (i32.store
      (i32.const 25892)
      (i32.const 25884)
     )
     (i32.store
      (i32.const 25904)
      (i32.const 25892)
     )
     (i32.store
      (i32.const 25900)
      (i32.const 25892)
     )
     (i32.store
      (i32.const 25912)
      (i32.const 25900)
     )
     (i32.store
      (i32.const 25908)
      (i32.const 25900)
     )
     (i32.store
      (i32.const 25920)
      (i32.const 25908)
     )
     (i32.store
      (i32.const 25916)
      (i32.const 25908)
     )
     (i32.store
      (i32.const 25928)
      (i32.const 25916)
     )
     (i32.store
      (i32.const 25924)
      (i32.const 25916)
     )
     (i32.store
      (i32.const 25936)
      (i32.const 25924)
     )
     (i32.store
      (i32.const 25932)
      (i32.const 25924)
     )
     (i32.store
      (i32.const 25944)
      (i32.const 25932)
     )
     (i32.store
      (i32.const 25940)
      (i32.const 25932)
     )
     (i32.store
      (i32.const 25952)
      (i32.const 25940)
     )
     (i32.store
      (i32.const 25948)
      (i32.const 25940)
     )
     (i32.store
      (i32.const 25960)
      (i32.const 25948)
     )
     (i32.store
      (i32.const 25956)
      (i32.const 25948)
     )
     (i32.store
      (i32.const 25968)
      (i32.const 25956)
     )
     (i32.store
      (i32.const 25964)
      (i32.const 25956)
     )
     (i32.store
      (i32.const 25976)
      (i32.const 25964)
     )
     (i32.store
      (i32.const 25972)
      (i32.const 25964)
     )
     (i32.store
      (i32.const 25984)
      (i32.const 25972)
     )
     (i32.store
      (i32.const 25980)
      (i32.const 25972)
     )
     (i32.store
      (i32.const 25992)
      (i32.const 25980)
     )
     (i32.store
      (i32.const 25988)
      (i32.const 25980)
     )
     (i32.store
      (i32.const 26000)
      (i32.const 25988)
     )
     (i32.store
      (i32.const 25996)
      (i32.const 25988)
     )
     (i32.store
      (i32.const 26008)
      (i32.const 25996)
     )
     (i32.store
      (i32.const 26004)
      (i32.const 25996)
     )
     (i32.store
      (i32.const 26016)
      (i32.const 26004)
     )
     (i32.store
      (i32.const 26012)
      (i32.const 26004)
     )
     (i32.store
      (i32.const 26024)
      (i32.const 26012)
     )
     (i32.store
      (i32.const 26020)
      (i32.const 26012)
     )
     (i32.store
      (i32.const 26032)
      (i32.const 26020)
     )
     (i32.store
      (i32.const 26028)
      (i32.const 26020)
     )
     (i32.store
      (i32.const 25756)
      (local.tee $4
       (i32.add
        (local.get $0)
        (local.tee $2
         (select
          (i32.and
           (i32.sub
            (i32.const 0)
            (local.tee $2
             (i32.add
              (local.get $0)
              (i32.const 8)
             )
            )
           )
           (i32.const 7)
          )
          (i32.const 0)
          (i32.and
           (local.get $2)
           (i32.const 7)
          )
         )
        )
       )
      )
     )
     (i32.store
      (i32.const 25744)
      (local.tee $2
       (i32.sub
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const -40)
         )
        )
        (local.get $2)
       )
      )
     )
     (i32.store offset=4
      (local.get $4)
      (i32.or
       (local.get $2)
       (i32.const 1)
      )
     )
     (i32.store offset=4
      (i32.add
       (local.get $0)
       (local.get $1)
      )
      (i32.const 40)
     )
     (i32.store
      (i32.const 25760)
      (i32.load
       (i32.const 26220)
      )
     )
    )
   )
   (if
    (i32.gt_u
     (local.tee $0
      (i32.load
       (i32.const 25744)
      )
     )
     (local.get $3)
    )
    (block
     (i32.store
      (i32.const 25744)
      (local.tee $1
       (i32.sub
        (local.get $0)
        (local.get $3)
       )
      )
     )
     (i32.store
      (i32.const 25756)
      (local.tee $2
       (i32.add
        (local.get $3)
        (local.tee $0
         (i32.load
          (i32.const 25756)
         )
        )
       )
      )
     )
     (i32.store offset=4
      (local.get $2)
      (i32.or
       (local.get $1)
       (i32.const 1)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (local.get $3)
       (i32.const 3)
      )
     )
     (global.set $STACKTOP
      (local.get $14)
     )
     (return
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (i32.store
   (i32.const 26292)
   (i32.const 12)
  )
  (global.set $STACKTOP
   (local.get $14)
  )
  (i32.const 0)
 )
 (func $_free (; 286 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return)
  )
  (if
   (i32.lt_u
    (local.tee $4
     (i32.add
      (local.get $0)
      (i32.const -8)
     )
    )
    (local.tee $12
     (i32.load
      (i32.const 25748)
     )
    )
   )
   (call $_abort)
  )
  (if
   (i32.eq
    (local.tee $11
     (i32.and
      (local.tee $0
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
      )
      (i32.const 3)
     )
    )
    (i32.const 1)
   )
   (call $_abort)
  )
  (local.set $7
   (i32.add
    (local.get $4)
    (local.tee $2
     (i32.and
      (local.get $0)
      (i32.const -8)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $0)
    (i32.const 1)
   )
   (block
    (local.set $1
     (local.get $2)
    )
    (local.set $5
     (local.tee $3
      (local.get $4)
     )
    )
   )
   (block $label$break$L10
    (local.set $9
     (i32.load
      (local.get $4)
     )
    )
    (if
     (i32.eqz
      (local.get $11)
     )
     (return)
    )
    (if
     (i32.lt_u
      (local.tee $0
       (i32.sub
        (local.get $4)
        (local.get $9)
       )
      )
      (local.get $12)
     )
     (call $_abort)
    )
    (local.set $4
     (i32.add
      (local.get $2)
      (local.get $9)
     )
    )
    (if
     (i32.eq
      (local.get $0)
      (i32.load
       (i32.const 25752)
      )
     )
     (block
      (if
       (i32.ne
        (i32.and
         (local.tee $3
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $7)
             (i32.const 4)
            )
           )
          )
         )
         (i32.const 3)
        )
        (i32.const 3)
       )
       (block
        (local.set $3
         (local.get $0)
        )
        (local.set $1
         (local.get $4)
        )
        (local.set $5
         (local.get $0)
        )
        (br $label$break$L10)
       )
      )
      (i32.store
       (i32.const 25740)
       (local.get $4)
      )
      (i32.store
       (local.get $1)
       (i32.and
        (local.get $3)
        (i32.const -2)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 4)
       )
       (i32.or
        (local.get $4)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (local.get $4)
       )
       (local.get $4)
      )
      (return)
     )
    )
    (local.set $2
     (i32.shr_u
      (local.get $9)
      (i32.const 3)
     )
    )
    (if
     (i32.lt_u
      (local.get $9)
      (i32.const 256)
     )
     (block
      (local.set $3
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 12)
        )
       )
      )
      (if
       (i32.ne
        (local.tee $5
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
        )
        (local.tee $1
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 3)
          )
          (i32.const 25772)
         )
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $12)
          (local.get $5)
         )
         (call $_abort)
        )
        (if
         (i32.ne
          (i32.load
           (i32.add
            (local.get $5)
            (i32.const 12)
           )
          )
          (local.get $0)
         )
         (call $_abort)
        )
       )
      )
      (if
       (i32.eq
        (local.get $3)
        (local.get $5)
       )
       (block
        (i32.store
         (i32.const 25732)
         (i32.and
          (i32.load
           (i32.const 25732)
          )
          (i32.xor
           (i32.shl
            (i32.const 1)
            (local.get $2)
           )
           (i32.const -1)
          )
         )
        )
        (local.set $3
         (local.get $0)
        )
        (local.set $1
         (local.get $4)
        )
        (local.set $5
         (local.get $0)
        )
        (br $label$break$L10)
       )
      )
      (if
       (i32.eq
        (local.get $1)
        (local.get $3)
       )
       (local.set $6
        (i32.add
         (local.get $3)
         (i32.const 8)
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $12)
          (local.get $3)
         )
         (call $_abort)
        )
        (if
         (i32.eq
          (local.get $0)
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $3)
             (i32.const 8)
            )
           )
          )
         )
         (local.set $6
          (local.get $1)
         )
         (call $_abort)
        )
       )
      )
      (i32.store
       (i32.add
        (local.get $5)
        (i32.const 12)
       )
       (local.get $3)
      )
      (i32.store
       (local.get $6)
       (local.get $5)
      )
      (local.set $3
       (local.get $0)
      )
      (local.set $1
       (local.get $4)
      )
      (local.set $5
       (local.get $0)
      )
      (br $label$break$L10)
     )
    )
    (local.set $13
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 24)
      )
     )
    )
    (if
     (i32.eq
      (local.get $0)
      (local.tee $2
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 12)
        )
       )
      )
     )
     (block $do-once
      (if
       (local.tee $2
        (i32.load
         (local.tee $9
          (i32.add
           (local.tee $6
            (i32.add
             (local.get $0)
             (i32.const 16)
            )
           )
           (i32.const 4)
          )
         )
        )
       )
       (local.set $6
        (local.get $9)
       )
       (br_if $do-once
        (i32.eqz
         (local.tee $2
          (i32.load
           (local.get $6)
          )
         )
        )
       )
      )
      (loop $while-in
       (block $while-out
        (local.set $2
         (if (result i32)
          (local.tee $11
           (i32.load
            (local.tee $9
             (i32.add
              (local.get $2)
              (i32.const 20)
             )
            )
           )
          )
          (block (result i32)
           (local.set $6
            (local.get $9)
           )
           (local.get $11)
          )
          (block (result i32)
           (br_if $while-out
            (i32.eqz
             (local.tee $11
              (i32.load
               (local.tee $9
                (i32.add
                 (local.get $2)
                 (i32.const 16)
                )
               )
              )
             )
            )
           )
           (local.set $6
            (local.get $9)
           )
           (local.get $11)
          )
         )
        )
        (br $while-in)
       )
      )
      (if
       (i32.gt_u
        (local.get $12)
        (local.get $6)
       )
       (call $_abort)
       (block
        (i32.store
         (local.get $6)
         (i32.const 0)
        )
        (local.set $8
         (local.get $2)
        )
       )
      )
     )
     (block
      (if
       (i32.gt_u
        (local.get $12)
        (local.tee $6
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
        )
       )
       (call $_abort)
      )
      (if
       (i32.ne
        (i32.load
         (local.tee $9
          (i32.add
           (local.get $6)
           (i32.const 12)
          )
         )
        )
        (local.get $0)
       )
       (call $_abort)
      )
      (if
       (i32.eq
        (local.get $0)
        (i32.load
         (local.tee $11
          (i32.add
           (local.get $2)
           (i32.const 8)
          )
         )
        )
       )
       (block
        (i32.store
         (local.get $9)
         (local.get $2)
        )
        (i32.store
         (local.get $11)
         (local.get $6)
        )
        (local.set $8
         (local.get $2)
        )
       )
       (call $_abort)
      )
     )
    )
    (if
     (local.get $13)
     (block
      (if
       (i32.eq
        (local.get $0)
        (i32.load
         (local.tee $6
          (i32.add
           (i32.shl
            (local.tee $2
             (i32.load
              (i32.add
               (local.get $0)
               (i32.const 28)
              )
             )
            )
            (i32.const 2)
           )
           (i32.const 26036)
          )
         )
        )
       )
       (block
        (i32.store
         (local.get $6)
         (local.get $8)
        )
        (if
         (i32.eqz
          (local.get $8)
         )
         (block
          (i32.store
           (i32.const 25736)
           (i32.and
            (i32.load
             (i32.const 25736)
            )
            (i32.xor
             (i32.shl
              (i32.const 1)
              (local.get $2)
             )
             (i32.const -1)
            )
           )
          )
          (local.set $3
           (local.get $0)
          )
          (local.set $1
           (local.get $4)
          )
          (local.set $5
           (local.get $0)
          )
          (br $label$break$L10)
         )
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 25748)
         )
         (local.get $13)
        )
        (call $_abort)
        (block
         (i32.store
          (select
           (local.tee $2
            (i32.add
             (local.get $13)
             (i32.const 16)
            )
           )
           (i32.add
            (local.get $13)
            (i32.const 20)
           )
           (i32.eq
            (local.get $0)
            (i32.load
             (local.get $2)
            )
           )
          )
          (local.get $8)
         )
         (if
          (i32.eqz
           (local.get $8)
          )
          (block
           (local.set $3
            (local.get $0)
           )
           (local.set $1
            (local.get $4)
           )
           (local.set $5
            (local.get $0)
           )
           (br $label$break$L10)
          )
         )
        )
       )
      )
      (if
       (i32.gt_u
        (local.tee $6
         (i32.load
          (i32.const 25748)
         )
        )
        (local.get $8)
       )
       (call $_abort)
      )
      (i32.store
       (i32.add
        (local.get $8)
        (i32.const 24)
       )
       (local.get $13)
      )
      (if
       (local.tee $2
        (i32.load
         (local.tee $9
          (i32.add
           (local.get $0)
           (i32.const 16)
          )
         )
        )
       )
       (if
        (i32.gt_u
         (local.get $6)
         (local.get $2)
        )
        (call $_abort)
        (block
         (i32.store
          (i32.add
           (local.get $8)
           (i32.const 16)
          )
          (local.get $2)
         )
         (i32.store
          (i32.add
           (local.get $2)
           (i32.const 24)
          )
          (local.get $8)
         )
        )
       )
      )
      (if
       (local.tee $2
        (i32.load
         (i32.add
          (local.get $9)
          (i32.const 4)
         )
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 25748)
         )
         (local.get $2)
        )
        (call $_abort)
        (block
         (i32.store
          (i32.add
           (local.get $8)
           (i32.const 20)
          )
          (local.get $2)
         )
         (i32.store
          (i32.add
           (local.get $2)
           (i32.const 24)
          )
          (local.get $8)
         )
         (local.set $3
          (local.get $0)
         )
         (local.set $1
          (local.get $4)
         )
         (local.set $5
          (local.get $0)
         )
        )
       )
       (block
        (local.set $3
         (local.get $0)
        )
        (local.set $1
         (local.get $4)
        )
        (local.set $5
         (local.get $0)
        )
       )
      )
     )
     (block
      (local.set $3
       (local.get $0)
      )
      (local.set $1
       (local.get $4)
      )
      (local.set $5
       (local.get $0)
      )
     )
    )
   )
  )
  (if
   (i32.ge_u
    (local.get $5)
    (local.get $7)
   )
   (call $_abort)
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $0
      (i32.load
       (local.tee $4
        (i32.add
         (local.get $7)
         (i32.const 4)
        )
       )
      )
     )
     (i32.const 1)
    )
   )
   (call $_abort)
  )
  (local.set $1
   (i32.shr_u
    (local.tee $5
     (if (result i32)
      (i32.and
       (local.get $0)
       (i32.const 2)
      )
      (block (result i32)
       (i32.store
        (local.get $4)
        (i32.and
         (local.get $0)
         (i32.const -2)
        )
       )
       (i32.store
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
        (i32.or
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.store
        (i32.add
         (local.get $1)
         (local.get $5)
        )
        (local.get $1)
       )
       (local.get $1)
      )
      (block (result i32)
       (if
        (i32.eq
         (local.get $7)
         (i32.load
          (i32.const 25756)
         )
        )
        (block
         (i32.store
          (i32.const 25744)
          (local.tee $0
           (i32.add
            (local.get $1)
            (i32.load
             (i32.const 25744)
            )
           )
          )
         )
         (i32.store
          (i32.const 25756)
          (local.get $3)
         )
         (i32.store
          (i32.add
           (local.get $3)
           (i32.const 4)
          )
          (i32.or
           (local.get $0)
           (i32.const 1)
          )
         )
         (if
          (i32.ne
           (i32.load
            (i32.const 25752)
           )
           (local.get $3)
          )
          (return)
         )
         (i32.store
          (i32.const 25752)
          (i32.const 0)
         )
         (i32.store
          (i32.const 25740)
          (i32.const 0)
         )
         (return)
        )
       )
       (if
        (i32.eq
         (local.get $7)
         (i32.load
          (i32.const 25752)
         )
        )
        (block
         (i32.store
          (i32.const 25740)
          (local.tee $0
           (i32.add
            (local.get $1)
            (i32.load
             (i32.const 25740)
            )
           )
          )
         )
         (i32.store
          (i32.const 25752)
          (local.get $5)
         )
         (i32.store
          (i32.add
           (local.get $3)
           (i32.const 4)
          )
          (i32.or
           (local.get $0)
           (i32.const 1)
          )
         )
         (i32.store
          (i32.add
           (local.get $0)
           (local.get $5)
          )
          (local.get $0)
         )
         (return)
        )
       )
       (local.set $4
        (i32.add
         (local.get $1)
         (i32.and
          (local.get $0)
          (i32.const -8)
         )
        )
       )
       (local.set $6
        (i32.shr_u
         (local.get $0)
         (i32.const 3)
        )
       )
       (block $label$break$L111
        (if
         (i32.lt_u
          (local.get $0)
          (i32.const 256)
         )
         (block
          (local.set $1
           (i32.load
            (i32.add
             (local.get $7)
             (i32.const 12)
            )
           )
          )
          (if
           (i32.ne
            (local.tee $2
             (i32.load
              (i32.add
               (local.get $7)
               (i32.const 8)
              )
             )
            )
            (local.tee $0
             (i32.add
              (i32.shl
               (local.get $6)
               (i32.const 3)
              )
              (i32.const 25772)
             )
            )
           )
           (block
            (if
             (i32.gt_u
              (i32.load
               (i32.const 25748)
              )
              (local.get $2)
             )
             (call $_abort)
            )
            (if
             (i32.ne
              (i32.load
               (i32.add
                (local.get $2)
                (i32.const 12)
               )
              )
              (local.get $7)
             )
             (call $_abort)
            )
           )
          )
          (if
           (i32.eq
            (local.get $1)
            (local.get $2)
           )
           (block
            (i32.store
             (i32.const 25732)
             (i32.and
              (i32.load
               (i32.const 25732)
              )
              (i32.xor
               (i32.shl
                (i32.const 1)
                (local.get $6)
               )
               (i32.const -1)
              )
             )
            )
            (br $label$break$L111)
           )
          )
          (if
           (i32.eq
            (local.get $0)
            (local.get $1)
           )
           (local.set $16
            (i32.add
             (local.get $1)
             (i32.const 8)
            )
           )
           (block
            (if
             (i32.gt_u
              (i32.load
               (i32.const 25748)
              )
              (local.get $1)
             )
             (call $_abort)
            )
            (if
             (i32.eq
              (local.get $7)
              (i32.load
               (local.tee $0
                (i32.add
                 (local.get $1)
                 (i32.const 8)
                )
               )
              )
             )
             (local.set $16
              (local.get $0)
             )
             (call $_abort)
            )
           )
          )
          (i32.store
           (i32.add
            (local.get $2)
            (i32.const 12)
           )
           (local.get $1)
          )
          (i32.store
           (local.get $16)
           (local.get $2)
          )
         )
         (block
          (local.set $8
           (i32.load
            (i32.add
             (local.get $7)
             (i32.const 24)
            )
           )
          )
          (if
           (i32.eq
            (local.get $7)
            (local.tee $0
             (i32.load
              (i32.add
               (local.get $7)
               (i32.const 12)
              )
             )
            )
           )
           (block $do-once6
            (if
             (local.tee $0
              (i32.load
               (local.tee $2
                (i32.add
                 (local.tee $1
                  (i32.add
                   (local.get $7)
                   (i32.const 16)
                  )
                 )
                 (i32.const 4)
                )
               )
              )
             )
             (local.set $1
              (local.get $2)
             )
             (br_if $do-once6
              (i32.eqz
               (local.tee $0
                (i32.load
                 (local.get $1)
                )
               )
              )
             )
            )
            (loop $while-in9
             (block $while-out8
              (local.set $0
               (if (result i32)
                (local.tee $6
                 (i32.load
                  (local.tee $2
                   (i32.add
                    (local.get $0)
                    (i32.const 20)
                   )
                  )
                 )
                )
                (block (result i32)
                 (local.set $1
                  (local.get $2)
                 )
                 (local.get $6)
                )
                (block (result i32)
                 (br_if $while-out8
                  (i32.eqz
                   (local.tee $6
                    (i32.load
                     (local.tee $2
                      (i32.add
                       (local.get $0)
                       (i32.const 16)
                      )
                     )
                    )
                   )
                  )
                 )
                 (local.set $1
                  (local.get $2)
                 )
                 (local.get $6)
                )
               )
              )
              (br $while-in9)
             )
            )
            (if
             (i32.gt_u
              (i32.load
               (i32.const 25748)
              )
              (local.get $1)
             )
             (call $_abort)
             (block
              (i32.store
               (local.get $1)
               (i32.const 0)
              )
              (local.set $10
               (local.get $0)
              )
             )
            )
           )
           (block
            (if
             (i32.gt_u
              (i32.load
               (i32.const 25748)
              )
              (local.tee $1
               (i32.load
                (i32.add
                 (local.get $7)
                 (i32.const 8)
                )
               )
              )
             )
             (call $_abort)
            )
            (if
             (i32.ne
              (i32.load
               (local.tee $2
                (i32.add
                 (local.get $1)
                 (i32.const 12)
                )
               )
              )
              (local.get $7)
             )
             (call $_abort)
            )
            (if
             (i32.eq
              (local.get $7)
              (i32.load
               (local.tee $6
                (i32.add
                 (local.get $0)
                 (i32.const 8)
                )
               )
              )
             )
             (block
              (i32.store
               (local.get $2)
               (local.get $0)
              )
              (i32.store
               (local.get $6)
               (local.get $1)
              )
              (local.set $10
               (local.get $0)
              )
             )
             (call $_abort)
            )
           )
          )
          (if
           (local.get $8)
           (block
            (if
             (i32.eq
              (local.get $7)
              (i32.load
               (local.tee $1
                (i32.add
                 (i32.shl
                  (local.tee $0
                   (i32.load
                    (i32.add
                     (local.get $7)
                     (i32.const 28)
                    )
                   )
                  )
                  (i32.const 2)
                 )
                 (i32.const 26036)
                )
               )
              )
             )
             (block
              (i32.store
               (local.get $1)
               (local.get $10)
              )
              (if
               (i32.eqz
                (local.get $10)
               )
               (block
                (i32.store
                 (i32.const 25736)
                 (i32.and
                  (i32.load
                   (i32.const 25736)
                  )
                  (i32.xor
                   (i32.shl
                    (i32.const 1)
                    (local.get $0)
                   )
                   (i32.const -1)
                  )
                 )
                )
                (br $label$break$L111)
               )
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 25748)
               )
               (local.get $8)
              )
              (call $_abort)
              (block
               (i32.store
                (select
                 (local.tee $0
                  (i32.add
                   (local.get $8)
                   (i32.const 16)
                  )
                 )
                 (i32.add
                  (local.get $8)
                  (i32.const 20)
                 )
                 (i32.eq
                  (local.get $7)
                  (i32.load
                   (local.get $0)
                  )
                 )
                )
                (local.get $10)
               )
               (br_if $label$break$L111
                (i32.eqz
                 (local.get $10)
                )
               )
              )
             )
            )
            (if
             (i32.gt_u
              (local.tee $1
               (i32.load
                (i32.const 25748)
               )
              )
              (local.get $10)
             )
             (call $_abort)
            )
            (i32.store
             (i32.add
              (local.get $10)
              (i32.const 24)
             )
             (local.get $8)
            )
            (if
             (local.tee $0
              (i32.load
               (local.tee $2
                (i32.add
                 (local.get $7)
                 (i32.const 16)
                )
               )
              )
             )
             (if
              (i32.gt_u
               (local.get $1)
               (local.get $0)
              )
              (call $_abort)
              (block
               (i32.store
                (i32.add
                 (local.get $10)
                 (i32.const 16)
                )
                (local.get $0)
               )
               (i32.store
                (i32.add
                 (local.get $0)
                 (i32.const 24)
                )
                (local.get $10)
               )
              )
             )
            )
            (if
             (local.tee $0
              (i32.load
               (i32.add
                (local.get $2)
                (i32.const 4)
               )
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 25748)
               )
               (local.get $0)
              )
              (call $_abort)
              (block
               (i32.store
                (i32.add
                 (local.get $10)
                 (i32.const 20)
                )
                (local.get $0)
               )
               (i32.store
                (i32.add
                 (local.get $0)
                 (i32.const 24)
                )
                (local.get $10)
               )
              )
             )
            )
           )
          )
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
        (i32.or
         (local.get $4)
         (i32.const 1)
        )
       )
       (i32.store
        (i32.add
         (local.get $4)
         (local.get $5)
        )
        (local.get $4)
       )
       (if (result i32)
        (i32.eq
         (local.get $3)
         (i32.load
          (i32.const 25752)
         )
        )
        (block
         (i32.store
          (i32.const 25740)
          (local.get $4)
         )
         (return)
        )
        (local.get $4)
       )
      )
     )
    )
    (i32.const 3)
   )
  )
  (if
   (i32.lt_u
    (local.get $5)
    (i32.const 256)
   )
   (block
    (local.set $0
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 3)
      )
      (i32.const 25772)
     )
    )
    (if
     (i32.and
      (local.tee $5
       (i32.load
        (i32.const 25732)
       )
      )
      (local.tee $1
       (i32.shl
        (i32.const 1)
        (local.get $1)
       )
      )
     )
     (if
      (i32.gt_u
       (i32.load
        (i32.const 25748)
       )
       (local.tee $5
        (i32.load
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
        )
       )
      )
      (call $_abort)
      (block
       (local.set $15
        (local.get $5)
       )
       (local.set $17
        (local.get $1)
       )
      )
     )
     (block
      (i32.store
       (i32.const 25732)
       (i32.or
        (local.get $1)
        (local.get $5)
       )
      )
      (local.set $15
       (local.get $0)
      )
      (local.set $17
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
     )
    )
    (i32.store
     (local.get $17)
     (local.get $3)
    )
    (i32.store
     (i32.add
      (local.get $15)
      (i32.const 12)
     )
     (local.get $3)
    )
    (i32.store
     (i32.add
      (local.get $3)
      (i32.const 8)
     )
     (local.get $15)
    )
    (i32.store
     (i32.add
      (local.get $3)
      (i32.const 12)
     )
     (local.get $0)
    )
    (return)
   )
  )
  (local.set $0
   (i32.add
    (i32.shl
     (local.tee $1
      (if (result i32)
       (local.tee $0
        (i32.shr_u
         (local.get $5)
         (i32.const 8)
        )
       )
       (if (result i32)
        (i32.gt_u
         (local.get $5)
         (i32.const 16777215)
        )
        (i32.const 31)
        (block (result i32)
         (local.set $0
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $4
              (i32.shl
               (local.get $0)
               (local.tee $1
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.get $0)
                   (i32.const 1048320)
                  )
                  (i32.const 16)
                 )
                 (i32.const 8)
                )
               )
              )
             )
             (i32.const 520192)
            )
            (i32.const 16)
           )
           (i32.const 4)
          )
         )
         (i32.or
          (i32.shl
           (local.tee $0
            (i32.add
             (i32.sub
              (i32.const 14)
              (i32.or
               (i32.or
                (local.get $0)
                (local.get $1)
               )
               (local.tee $1
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.tee $0
                    (i32.shl
                     (local.get $4)
                     (local.get $0)
                    )
                   )
                   (i32.const 245760)
                  )
                  (i32.const 16)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (i32.shr_u
              (i32.shl
               (local.get $0)
               (local.get $1)
              )
              (i32.const 15)
             )
            )
           )
           (i32.const 1)
          )
          (i32.and
           (i32.shr_u
            (local.get $5)
            (i32.add
             (local.get $0)
             (i32.const 7)
            )
           )
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
    (i32.const 26036)
   )
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 28)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 20)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
   (i32.const 0)
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (i32.const 25736)
     )
    )
    (local.tee $2
     (i32.shl
      (i32.const 1)
      (local.get $1)
     )
    )
   )
   (block $label$break$L197
    (if
     (i32.eq
      (local.get $5)
      (i32.and
       (i32.load
        (i32.add
         (local.tee $0
          (i32.load
           (local.get $0)
          )
         )
         (i32.const 4)
        )
       )
       (i32.const -8)
      )
     )
     (local.set $14
      (local.get $0)
     )
     (block $label$break$L200
      (local.set $4
       (i32.shl
        (local.get $5)
        (select
         (i32.const 0)
         (i32.sub
          (i32.const 25)
          (i32.shr_u
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.eq
          (local.get $1)
          (i32.const 31)
         )
        )
       )
      )
      (loop $while-in17
       (if
        (local.tee $1
         (i32.load
          (local.tee $2
           (i32.add
            (i32.add
             (local.get $0)
             (i32.const 16)
            )
            (i32.shl
             (i32.shr_u
              (local.get $4)
              (i32.const 31)
             )
             (i32.const 2)
            )
           )
          )
         )
        )
        (block
         (local.set $4
          (i32.shl
           (local.get $4)
           (i32.const 1)
          )
         )
         (if
          (i32.eq
           (local.get $5)
           (i32.and
            (i32.load
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
            (i32.const -8)
           )
          )
          (block
           (local.set $14
            (local.get $1)
           )
           (br $label$break$L200)
          )
          (block
           (local.set $0
            (local.get $1)
           )
           (br $while-in17)
          )
         )
        )
       )
      )
      (if
       (i32.gt_u
        (i32.load
         (i32.const 25748)
        )
        (local.get $2)
       )
       (call $_abort)
       (block
        (i32.store
         (local.get $2)
         (local.get $3)
        )
        (i32.store
         (i32.add
          (local.get $3)
          (i32.const 24)
         )
         (local.get $0)
        )
        (i32.store
         (i32.add
          (local.get $3)
          (i32.const 12)
         )
         (local.get $3)
        )
        (i32.store
         (i32.add
          (local.get $3)
          (i32.const 8)
         )
         (local.get $3)
        )
        (br $label$break$L197)
       )
      )
     )
    )
    (if
     (i32.and
      (i32.le_u
       (local.tee $0
        (i32.load
         (i32.const 25748)
        )
       )
       (local.get $14)
      )
      (i32.le_u
       (local.get $0)
       (local.tee $0
        (i32.load
         (local.tee $1
          (i32.add
           (local.get $14)
           (i32.const 8)
          )
         )
        )
       )
      )
     )
     (block
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 12)
       )
       (local.get $3)
      )
      (i32.store
       (local.get $1)
       (local.get $3)
      )
      (i32.store
       (i32.add
        (local.get $3)
        (i32.const 8)
       )
       (local.get $0)
      )
      (i32.store
       (i32.add
        (local.get $3)
        (i32.const 12)
       )
       (local.get $14)
      )
      (i32.store
       (i32.add
        (local.get $3)
        (i32.const 24)
       )
       (i32.const 0)
      )
     )
     (call $_abort)
    )
   )
   (block
    (i32.store
     (i32.const 25736)
     (i32.or
      (local.get $2)
      (local.get $4)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $3)
    )
    (i32.store
     (i32.add
      (local.get $3)
      (i32.const 24)
     )
     (local.get $0)
    )
    (i32.store
     (i32.add
      (local.get $3)
      (i32.const 12)
     )
     (local.get $3)
    )
    (i32.store
     (i32.add
      (local.get $3)
      (i32.const 8)
     )
     (local.get $3)
    )
   )
  )
  (i32.store
   (i32.const 25764)
   (local.tee $0
    (i32.add
     (i32.load
      (i32.const 25764)
     )
     (i32.const -1)
    )
   )
  )
  (if
   (local.get $0)
   (return)
  )
  (local.set $0
   (i32.const 26188)
  )
  (loop $while-in19
   (local.set $0
    (i32.add
     (local.tee $1
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 8)
    )
   )
   (br_if $while-in19
    (local.get $1)
   )
  )
  (i32.store
   (i32.const 25764)
   (i32.const -1)
  )
 )
 (func $_realloc (; 287 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (call $_malloc
     (local.get $1)
    )
   )
  )
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const -65)
   )
   (block
    (i32.store
     (i32.const 26292)
     (i32.const 12)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (local.tee $2
    (call $_try_realloc_chunk
     (i32.add
      (local.get $0)
      (i32.const -8)
     )
     (select
      (i32.const 16)
      (i32.and
       (i32.add
        (local.get $1)
        (i32.const 11)
       )
       (i32.const -8)
      )
      (i32.lt_u
       (local.get $1)
       (i32.const 11)
      )
     )
    )
   )
   (return
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $2
     (call $_malloc
      (local.get $1)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $_memcpy
    (local.get $2)
    (local.get $0)
    (select
     (local.tee $3
      (i32.sub
       (i32.and
        (local.tee $3
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const -4)
          )
         )
        )
        (i32.const -8)
       )
       (select
        (i32.const 4)
        (i32.const 8)
        (i32.and
         (local.get $3)
         (i32.const 3)
        )
       )
      )
     )
     (local.get $1)
     (i32.lt_u
      (local.get $3)
      (local.get $1)
     )
    )
   )
  )
  (call $_free
   (local.get $0)
  )
  (local.get $2)
 )
 (func $_try_realloc_chunk (; 288 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.gt_u
      (local.tee $6
       (i32.add
        (local.get $0)
        (local.tee $2
         (i32.and
          (local.tee $8
           (i32.load
            (local.tee $10
             (i32.add
              (local.get $0)
              (i32.const 4)
             )
            )
           )
          )
          (i32.const -8)
         )
        )
       )
      )
      (local.get $0)
     )
     (i32.and
      (i32.ne
       (local.tee $9
        (i32.and
         (local.get $8)
         (i32.const 3)
        )
       )
       (i32.const 1)
      )
      (i32.le_u
       (local.tee $11
        (i32.load
         (i32.const 25748)
        )
       )
       (local.get $0)
      )
     )
    )
   )
   (call $_abort)
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $4
      (i32.load
       (local.tee $7
        (i32.add
         (local.get $6)
         (i32.const 4)
        )
       )
      )
     )
     (i32.const 1)
    )
   )
   (call $_abort)
  )
  (if
   (i32.eqz
    (local.get $9)
   )
   (block
    (if
     (i32.lt_u
      (local.get $1)
      (i32.const 256)
     )
     (return
      (i32.const 0)
     )
    )
    (if
     (i32.ge_u
      (local.get $2)
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (if
      (i32.le_u
       (i32.sub
        (local.get $2)
        (local.get $1)
       )
       (i32.shl
        (i32.load
         (i32.const 26212)
        )
        (i32.const 1)
       )
      )
      (return
       (local.get $0)
      )
     )
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (i32.ge_u
    (local.get $2)
    (local.get $1)
   )
   (block
    (if
     (i32.le_u
      (local.tee $3
       (i32.sub
        (local.get $2)
        (local.get $1)
       )
      )
      (i32.const 15)
     )
     (return
      (local.get $0)
     )
    )
    (i32.store
     (local.get $10)
     (i32.or
      (i32.or
       (local.get $1)
       (i32.and
        (local.get $8)
        (i32.const 1)
       )
      )
      (i32.const 2)
     )
    )
    (i32.store
     (i32.add
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.const 4)
     )
     (i32.or
      (local.get $3)
      (i32.const 3)
     )
    )
    (i32.store
     (local.get $7)
     (i32.or
      (i32.load
       (local.get $7)
      )
      (i32.const 1)
     )
    )
    (call $_dispose_chunk
     (local.get $1)
     (local.get $3)
    )
    (return
     (local.get $0)
    )
   )
  )
  (if
   (i32.eq
    (i32.load
     (i32.const 25756)
    )
    (local.get $6)
   )
   (block
    (if
     (i32.le_u
      (local.tee $3
       (i32.add
        (i32.load
         (i32.const 25744)
        )
        (local.get $2)
       )
      )
      (local.get $1)
     )
     (return
      (i32.const 0)
     )
    )
    (i32.store
     (local.get $10)
     (i32.or
      (i32.or
       (local.get $1)
       (i32.and
        (local.get $8)
        (i32.const 1)
       )
      )
      (i32.const 2)
     )
    )
    (i32.store
     (i32.add
      (local.tee $2
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.const 4)
     )
     (i32.or
      (local.tee $1
       (i32.sub
        (local.get $3)
        (local.get $1)
       )
      )
      (i32.const 1)
     )
    )
    (i32.store
     (i32.const 25756)
     (local.get $2)
    )
    (i32.store
     (i32.const 25744)
     (local.get $1)
    )
    (return
     (local.get $0)
    )
   )
  )
  (if
   (i32.eq
    (i32.load
     (i32.const 25752)
    )
    (local.get $6)
   )
   (block
    (if
     (i32.lt_u
      (local.tee $2
       (i32.add
        (local.get $2)
        (i32.load
         (i32.const 25740)
        )
       )
      )
      (local.get $1)
     )
     (return
      (i32.const 0)
     )
    )
    (if
     (i32.gt_u
      (local.tee $3
       (i32.sub
        (local.get $2)
        (local.get $1)
       )
      )
      (i32.const 15)
     )
     (block
      (i32.store
       (local.get $10)
       (i32.or
        (i32.or
         (local.get $1)
         (i32.and
          (local.get $8)
          (i32.const 1)
         )
        )
        (i32.const 2)
       )
      )
      (i32.store
       (i32.add
        (local.tee $1
         (i32.add
          (local.get $0)
          (local.get $1)
         )
        )
        (i32.const 4)
       )
       (i32.or
        (local.get $3)
        (i32.const 1)
       )
      )
      (i32.store
       (local.tee $2
        (i32.add
         (local.get $0)
         (local.get $2)
        )
       )
       (local.get $3)
      )
      (i32.store
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const 4)
        )
       )
       (i32.and
        (i32.load
         (local.get $2)
        )
        (i32.const -2)
       )
      )
     )
     (block
      (i32.store
       (local.get $10)
       (i32.or
        (i32.or
         (local.get $2)
         (i32.and
          (local.get $8)
          (i32.const 1)
         )
        )
        (i32.const 2)
       )
      )
      (i32.store
       (local.tee $1
        (i32.add
         (i32.add
          (local.get $0)
          (local.get $2)
         )
         (i32.const 4)
        )
       )
       (i32.or
        (i32.load
         (local.get $1)
        )
        (i32.const 1)
       )
      )
      (local.set $1
       (i32.const 0)
      )
      (local.set $3
       (i32.const 0)
      )
     )
    )
    (i32.store
     (i32.const 25740)
     (local.get $3)
    )
    (i32.store
     (i32.const 25752)
     (local.get $1)
    )
    (return
     (local.get $0)
    )
   )
  )
  (if
   (i32.and
    (local.get $4)
    (i32.const 2)
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.lt_u
    (local.tee $12
     (i32.add
      (local.get $2)
      (i32.and
       (local.get $4)
       (i32.const -8)
      )
     )
    )
    (local.get $1)
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $13
   (i32.sub
    (local.get $12)
    (local.get $1)
   )
  )
  (local.set $2
   (i32.shr_u
    (local.get $4)
    (i32.const 3)
   )
  )
  (block $label$break$L49
   (if
    (i32.lt_u
     (local.get $4)
     (i32.const 256)
    )
    (block
     (local.set $5
      (i32.load
       (i32.add
        (local.get $6)
        (i32.const 12)
       )
      )
     )
     (if
      (i32.ne
       (local.tee $4
        (i32.load
         (i32.add
          (local.get $6)
          (i32.const 8)
         )
        )
       )
       (local.tee $7
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 3)
         )
         (i32.const 25772)
        )
       )
      )
      (block
       (if
        (i32.gt_u
         (local.get $11)
         (local.get $4)
        )
        (call $_abort)
       )
       (if
        (i32.ne
         (i32.load
          (i32.add
           (local.get $4)
           (i32.const 12)
          )
         )
         (local.get $6)
        )
        (call $_abort)
       )
      )
     )
     (if
      (i32.eq
       (local.get $4)
       (local.get $5)
      )
      (block
       (i32.store
        (i32.const 25732)
        (i32.and
         (i32.load
          (i32.const 25732)
         )
         (i32.xor
          (i32.shl
           (i32.const 1)
           (local.get $2)
          )
          (i32.const -1)
         )
        )
       )
       (br $label$break$L49)
      )
     )
     (if
      (i32.eq
       (local.get $5)
       (local.get $7)
      )
      (local.set $3
       (i32.add
        (local.get $5)
        (i32.const 8)
       )
      )
      (block
       (if
        (i32.gt_u
         (local.get $11)
         (local.get $5)
        )
        (call $_abort)
       )
       (if
        (i32.eq
         (local.get $6)
         (i32.load
          (local.tee $2
           (i32.add
            (local.get $5)
            (i32.const 8)
           )
          )
         )
        )
        (local.set $3
         (local.get $2)
        )
        (call $_abort)
       )
      )
     )
     (i32.store
      (i32.add
       (local.get $4)
       (i32.const 12)
      )
      (local.get $5)
     )
     (i32.store
      (local.get $3)
      (local.get $4)
     )
    )
    (block
     (local.set $9
      (i32.load
       (i32.add
        (local.get $6)
        (i32.const 24)
       )
      )
     )
     (if
      (i32.eq
       (local.tee $3
        (i32.load
         (i32.add
          (local.get $6)
          (i32.const 12)
         )
        )
       )
       (local.get $6)
      )
      (block $do-once
       (if
        (local.tee $3
         (i32.load
          (local.tee $4
           (i32.add
            (local.tee $2
             (i32.add
              (local.get $6)
              (i32.const 16)
             )
            )
            (i32.const 4)
           )
          )
         )
        )
        (local.set $2
         (local.get $4)
        )
        (br_if $do-once
         (i32.eqz
          (local.tee $3
           (i32.load
            (local.get $2)
           )
          )
         )
        )
       )
       (loop $while-in
        (block $while-out
         (local.set $3
          (if (result i32)
           (local.tee $7
            (i32.load
             (local.tee $4
              (i32.add
               (local.get $3)
               (i32.const 20)
              )
             )
            )
           )
           (block (result i32)
            (local.set $2
             (local.get $4)
            )
            (local.get $7)
           )
           (block (result i32)
            (br_if $while-out
             (i32.eqz
              (local.tee $7
               (i32.load
                (local.tee $4
                 (i32.add
                  (local.get $3)
                  (i32.const 16)
                 )
                )
               )
              )
             )
            )
            (local.set $2
             (local.get $4)
            )
            (local.get $7)
           )
          )
         )
         (br $while-in)
        )
       )
       (if
        (i32.gt_u
         (local.get $11)
         (local.get $2)
        )
        (call $_abort)
        (block
         (i32.store
          (local.get $2)
          (i32.const 0)
         )
         (local.set $5
          (local.get $3)
         )
        )
       )
      )
      (block
       (if
        (i32.gt_u
         (local.get $11)
         (local.tee $2
          (i32.load
           (i32.add
            (local.get $6)
            (i32.const 8)
           )
          )
         )
        )
        (call $_abort)
       )
       (if
        (i32.ne
         (local.get $6)
         (i32.load
          (local.tee $4
           (i32.add
            (local.get $2)
            (i32.const 12)
           )
          )
         )
        )
        (call $_abort)
       )
       (if
        (i32.eq
         (i32.load
          (local.tee $7
           (i32.add
            (local.get $3)
            (i32.const 8)
           )
          )
         )
         (local.get $6)
        )
        (block
         (i32.store
          (local.get $4)
          (local.get $3)
         )
         (i32.store
          (local.get $7)
          (local.get $2)
         )
         (local.set $5
          (local.get $3)
         )
        )
        (call $_abort)
       )
      )
     )
     (if
      (local.get $9)
      (block
       (if
        (i32.eq
         (i32.load
          (local.tee $2
           (i32.add
            (i32.shl
             (local.tee $3
              (i32.load
               (i32.add
                (local.get $6)
                (i32.const 28)
               )
              )
             )
             (i32.const 2)
            )
            (i32.const 26036)
           )
          )
         )
         (local.get $6)
        )
        (block
         (i32.store
          (local.get $2)
          (local.get $5)
         )
         (if
          (i32.eqz
           (local.get $5)
          )
          (block
           (i32.store
            (i32.const 25736)
            (i32.and
             (i32.load
              (i32.const 25736)
             )
             (i32.xor
              (i32.shl
               (i32.const 1)
               (local.get $3)
              )
              (i32.const -1)
             )
            )
           )
           (br $label$break$L49)
          )
         )
        )
        (if
         (i32.gt_u
          (i32.load
           (i32.const 25748)
          )
          (local.get $9)
         )
         (call $_abort)
         (block
          (i32.store
           (select
            (local.tee $3
             (i32.add
              (local.get $9)
              (i32.const 16)
             )
            )
            (i32.add
             (local.get $9)
             (i32.const 20)
            )
            (i32.eq
             (i32.load
              (local.get $3)
             )
             (local.get $6)
            )
           )
           (local.get $5)
          )
          (br_if $label$break$L49
           (i32.eqz
            (local.get $5)
           )
          )
         )
        )
       )
       (if
        (i32.gt_u
         (local.tee $2
          (i32.load
           (i32.const 25748)
          )
         )
         (local.get $5)
        )
        (call $_abort)
       )
       (i32.store
        (i32.add
         (local.get $5)
         (i32.const 24)
        )
        (local.get $9)
       )
       (if
        (local.tee $3
         (i32.load
          (local.tee $4
           (i32.add
            (local.get $6)
            (i32.const 16)
           )
          )
         )
        )
        (if
         (i32.gt_u
          (local.get $2)
          (local.get $3)
         )
         (call $_abort)
         (block
          (i32.store
           (i32.add
            (local.get $5)
            (i32.const 16)
           )
           (local.get $3)
          )
          (i32.store
           (i32.add
            (local.get $3)
            (i32.const 24)
           )
           (local.get $5)
          )
         )
        )
       )
       (if
        (local.tee $3
         (i32.load
          (i32.add
           (local.get $4)
           (i32.const 4)
          )
         )
        )
        (if
         (i32.gt_u
          (i32.load
           (i32.const 25748)
          )
          (local.get $3)
         )
         (call $_abort)
         (block
          (i32.store
           (i32.add
            (local.get $5)
            (i32.const 20)
           )
           (local.get $3)
          )
          (i32.store
           (i32.add
            (local.get $3)
            (i32.const 24)
           )
           (local.get $5)
          )
         )
        )
       )
      )
     )
    )
   )
  )
  (if (result i32)
   (i32.lt_u
    (local.get $13)
    (i32.const 16)
   )
   (block (result i32)
    (i32.store
     (local.get $10)
     (i32.or
      (i32.or
       (i32.and
        (local.get $8)
        (i32.const 1)
       )
       (local.get $12)
      )
      (i32.const 2)
     )
    )
    (i32.store
     (local.tee $1
      (i32.add
       (i32.add
        (local.get $0)
        (local.get $12)
       )
       (i32.const 4)
      )
     )
     (i32.or
      (i32.load
       (local.get $1)
      )
      (i32.const 1)
     )
    )
    (local.get $0)
   )
   (block (result i32)
    (i32.store
     (local.get $10)
     (i32.or
      (i32.or
       (local.get $1)
       (i32.and
        (local.get $8)
        (i32.const 1)
       )
      )
      (i32.const 2)
     )
    )
    (i32.store
     (i32.add
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.const 4)
     )
     (i32.or
      (local.get $13)
      (i32.const 3)
     )
    )
    (i32.store
     (local.tee $3
      (i32.add
       (i32.add
        (local.get $0)
        (local.get $12)
       )
       (i32.const 4)
      )
     )
     (i32.or
      (i32.load
       (local.get $3)
      )
      (i32.const 1)
     )
    )
    (call $_dispose_chunk
     (local.get $1)
     (local.get $13)
    )
    (local.get $0)
   )
  )
 )
 (func $_dispose_chunk (; 289 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local.set $6
   (i32.add
    (local.get $0)
    (local.get $1)
   )
  )
  (if
   (i32.and
    (local.tee $7
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
    )
    (i32.const 1)
   )
   (block
    (local.set $2
     (local.get $0)
    )
    (local.set $4
     (local.get $1)
    )
   )
   (block $label$break$L1
    (local.set $5
     (i32.load
      (local.get $0)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (local.get $7)
       (i32.const 3)
      )
     )
     (return)
    )
    (if
     (i32.lt_u
      (local.tee $0
       (i32.sub
        (local.get $0)
        (local.get $5)
       )
      )
      (local.tee $12
       (i32.load
        (i32.const 25748)
       )
      )
     )
     (call $_abort)
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $5)
     )
    )
    (if
     (i32.eq
      (local.get $0)
      (i32.load
       (i32.const 25752)
      )
     )
     (block
      (if
       (i32.ne
        (i32.and
         (local.tee $2
          (i32.load
           (local.tee $4
            (i32.add
             (local.get $6)
             (i32.const 4)
            )
           )
          )
         )
         (i32.const 3)
        )
        (i32.const 3)
       )
       (block
        (local.set $2
         (local.get $0)
        )
        (local.set $4
         (local.get $1)
        )
        (br $label$break$L1)
       )
      )
      (i32.store
       (i32.const 25740)
       (local.get $1)
      )
      (i32.store
       (local.get $4)
       (i32.and
        (local.get $2)
        (i32.const -2)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 4)
       )
       (i32.or
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.store
       (local.get $6)
       (local.get $1)
      )
      (return)
     )
    )
    (local.set $7
     (i32.shr_u
      (local.get $5)
      (i32.const 3)
     )
    )
    (if
     (i32.lt_u
      (local.get $5)
      (i32.const 256)
     )
     (block
      (local.set $2
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 12)
        )
       )
      )
      (if
       (i32.ne
        (local.tee $5
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
        )
        (local.tee $4
         (i32.add
          (i32.shl
           (local.get $7)
           (i32.const 3)
          )
          (i32.const 25772)
         )
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $12)
          (local.get $5)
         )
         (call $_abort)
        )
        (if
         (i32.ne
          (i32.load
           (i32.add
            (local.get $5)
            (i32.const 12)
           )
          )
          (local.get $0)
         )
         (call $_abort)
        )
       )
      )
      (if
       (i32.eq
        (local.get $2)
        (local.get $5)
       )
       (block
        (i32.store
         (i32.const 25732)
         (i32.and
          (i32.load
           (i32.const 25732)
          )
          (i32.xor
           (i32.shl
            (i32.const 1)
            (local.get $7)
           )
           (i32.const -1)
          )
         )
        )
        (local.set $2
         (local.get $0)
        )
        (local.set $4
         (local.get $1)
        )
        (br $label$break$L1)
       )
      )
      (if
       (i32.eq
        (local.get $2)
        (local.get $4)
       )
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const 8)
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $12)
          (local.get $2)
         )
         (call $_abort)
        )
        (if
         (i32.eq
          (local.get $0)
          (i32.load
           (local.tee $4
            (i32.add
             (local.get $2)
             (i32.const 8)
            )
           )
          )
         )
         (local.set $3
          (local.get $4)
         )
         (call $_abort)
        )
       )
      )
      (i32.store
       (i32.add
        (local.get $5)
        (i32.const 12)
       )
       (local.get $2)
      )
      (i32.store
       (local.get $3)
       (local.get $5)
      )
      (local.set $2
       (local.get $0)
      )
      (local.set $4
       (local.get $1)
      )
      (br $label$break$L1)
     )
    )
    (local.set $10
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 24)
      )
     )
    )
    (if
     (i32.eq
      (local.get $0)
      (local.tee $3
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 12)
        )
       )
      )
     )
     (block $do-once
      (if
       (local.tee $3
        (i32.load
         (local.tee $7
          (i32.add
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 16)
            )
           )
           (i32.const 4)
          )
         )
        )
       )
       (local.set $5
        (local.get $7)
       )
       (br_if $do-once
        (i32.eqz
         (local.tee $3
          (i32.load
           (local.get $5)
          )
         )
        )
       )
      )
      (loop $while-in
       (block $while-out
        (local.set $3
         (if (result i32)
          (local.tee $11
           (i32.load
            (local.tee $7
             (i32.add
              (local.get $3)
              (i32.const 20)
             )
            )
           )
          )
          (block (result i32)
           (local.set $5
            (local.get $7)
           )
           (local.get $11)
          )
          (block (result i32)
           (br_if $while-out
            (i32.eqz
             (local.tee $11
              (i32.load
               (local.tee $7
                (i32.add
                 (local.get $3)
                 (i32.const 16)
                )
               )
              )
             )
            )
           )
           (local.set $5
            (local.get $7)
           )
           (local.get $11)
          )
         )
        )
        (br $while-in)
       )
      )
      (if
       (i32.gt_u
        (local.get $12)
        (local.get $5)
       )
       (call $_abort)
       (block
        (i32.store
         (local.get $5)
         (i32.const 0)
        )
        (local.set $8
         (local.get $3)
        )
       )
      )
     )
     (block
      (if
       (i32.gt_u
        (local.get $12)
        (local.tee $5
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
        )
       )
       (call $_abort)
      )
      (if
       (i32.ne
        (i32.load
         (local.tee $7
          (i32.add
           (local.get $5)
           (i32.const 12)
          )
         )
        )
        (local.get $0)
       )
       (call $_abort)
      )
      (if
       (i32.eq
        (local.get $0)
        (i32.load
         (local.tee $11
          (i32.add
           (local.get $3)
           (i32.const 8)
          )
         )
        )
       )
       (block
        (i32.store
         (local.get $7)
         (local.get $3)
        )
        (i32.store
         (local.get $11)
         (local.get $5)
        )
        (local.set $8
         (local.get $3)
        )
       )
       (call $_abort)
      )
     )
    )
    (if
     (local.get $10)
     (block
      (if
       (i32.eq
        (local.get $0)
        (i32.load
         (local.tee $5
          (i32.add
           (i32.shl
            (local.tee $3
             (i32.load
              (i32.add
               (local.get $0)
               (i32.const 28)
              )
             )
            )
            (i32.const 2)
           )
           (i32.const 26036)
          )
         )
        )
       )
       (block
        (i32.store
         (local.get $5)
         (local.get $8)
        )
        (if
         (i32.eqz
          (local.get $8)
         )
         (block
          (i32.store
           (i32.const 25736)
           (i32.and
            (i32.load
             (i32.const 25736)
            )
            (i32.xor
             (i32.shl
              (i32.const 1)
              (local.get $3)
             )
             (i32.const -1)
            )
           )
          )
          (local.set $2
           (local.get $0)
          )
          (local.set $4
           (local.get $1)
          )
          (br $label$break$L1)
         )
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 25748)
         )
         (local.get $10)
        )
        (call $_abort)
        (block
         (i32.store
          (select
           (local.tee $3
            (i32.add
             (local.get $10)
             (i32.const 16)
            )
           )
           (i32.add
            (local.get $10)
            (i32.const 20)
           )
           (i32.eq
            (local.get $0)
            (i32.load
             (local.get $3)
            )
           )
          )
          (local.get $8)
         )
         (if
          (i32.eqz
           (local.get $8)
          )
          (block
           (local.set $2
            (local.get $0)
           )
           (local.set $4
            (local.get $1)
           )
           (br $label$break$L1)
          )
         )
        )
       )
      )
      (if
       (i32.gt_u
        (local.tee $5
         (i32.load
          (i32.const 25748)
         )
        )
        (local.get $8)
       )
       (call $_abort)
      )
      (i32.store
       (i32.add
        (local.get $8)
        (i32.const 24)
       )
       (local.get $10)
      )
      (if
       (local.tee $3
        (i32.load
         (local.tee $7
          (i32.add
           (local.get $0)
           (i32.const 16)
          )
         )
        )
       )
       (if
        (i32.gt_u
         (local.get $5)
         (local.get $3)
        )
        (call $_abort)
        (block
         (i32.store
          (i32.add
           (local.get $8)
           (i32.const 16)
          )
          (local.get $3)
         )
         (i32.store
          (i32.add
           (local.get $3)
           (i32.const 24)
          )
          (local.get $8)
         )
        )
       )
      )
      (if
       (local.tee $3
        (i32.load
         (i32.add
          (local.get $7)
          (i32.const 4)
         )
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 25748)
         )
         (local.get $3)
        )
        (call $_abort)
        (block
         (i32.store
          (i32.add
           (local.get $8)
           (i32.const 20)
          )
          (local.get $3)
         )
         (i32.store
          (i32.add
           (local.get $3)
           (i32.const 24)
          )
          (local.get $8)
         )
         (local.set $2
          (local.get $0)
         )
         (local.set $4
          (local.get $1)
         )
        )
       )
       (block
        (local.set $2
         (local.get $0)
        )
        (local.set $4
         (local.get $1)
        )
       )
      )
     )
     (block
      (local.set $2
       (local.get $0)
      )
      (local.set $4
       (local.get $1)
      )
     )
    )
   )
  )
  (if
   (i32.lt_u
    (local.get $6)
    (local.tee $7
     (i32.load
      (i32.const 25748)
     )
    )
   )
   (call $_abort)
  )
  (if
   (i32.and
    (local.tee $0
     (i32.load
      (local.tee $1
       (i32.add
        (local.get $6)
        (i32.const 4)
       )
      )
     )
    )
    (i32.const 2)
   )
   (block
    (i32.store
     (local.get $1)
     (i32.and
      (local.get $0)
      (i32.const -2)
     )
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 4)
     )
     (i32.or
      (local.get $4)
      (i32.const 1)
     )
    )
    (i32.store
     (i32.add
      (local.get $2)
      (local.get $4)
     )
     (local.get $4)
    )
   )
   (block
    (if
     (i32.eq
      (i32.load
       (i32.const 25756)
      )
      (local.get $6)
     )
     (block
      (i32.store
       (i32.const 25744)
       (local.tee $0
        (i32.add
         (local.get $4)
         (i32.load
          (i32.const 25744)
         )
        )
       )
      )
      (i32.store
       (i32.const 25756)
       (local.get $2)
      )
      (i32.store
       (i32.add
        (local.get $2)
        (i32.const 4)
       )
       (i32.or
        (local.get $0)
        (i32.const 1)
       )
      )
      (if
       (i32.ne
        (i32.load
         (i32.const 25752)
        )
        (local.get $2)
       )
       (return)
      )
      (i32.store
       (i32.const 25752)
       (i32.const 0)
      )
      (i32.store
       (i32.const 25740)
       (i32.const 0)
      )
      (return)
     )
    )
    (if
     (i32.eq
      (i32.load
       (i32.const 25752)
      )
      (local.get $6)
     )
     (block
      (i32.store
       (i32.const 25740)
       (local.tee $0
        (i32.add
         (local.get $4)
         (i32.load
          (i32.const 25740)
         )
        )
       )
      )
      (i32.store
       (i32.const 25752)
       (local.get $2)
      )
      (i32.store
       (i32.add
        (local.get $2)
        (i32.const 4)
       )
       (i32.or
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (local.get $2)
       )
       (local.get $0)
      )
      (return)
     )
    )
    (local.set $4
     (i32.add
      (local.get $4)
      (i32.and
       (local.get $0)
       (i32.const -8)
      )
     )
    )
    (local.set $5
     (i32.shr_u
      (local.get $0)
      (i32.const 3)
     )
    )
    (block $label$break$L99
     (if
      (i32.lt_u
       (local.get $0)
       (i32.const 256)
      )
      (block
       (local.set $1
        (i32.load
         (i32.add
          (local.get $6)
          (i32.const 12)
         )
        )
       )
       (if
        (i32.ne
         (local.tee $3
          (i32.load
           (i32.add
            (local.get $6)
            (i32.const 8)
           )
          )
         )
         (local.tee $0
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 3)
           )
           (i32.const 25772)
          )
         )
        )
        (block
         (if
          (i32.gt_u
           (local.get $7)
           (local.get $3)
          )
          (call $_abort)
         )
         (if
          (i32.ne
           (local.get $6)
           (i32.load
            (i32.add
             (local.get $3)
             (i32.const 12)
            )
           )
          )
          (call $_abort)
         )
        )
       )
       (if
        (i32.eq
         (local.get $1)
         (local.get $3)
        )
        (block
         (i32.store
          (i32.const 25732)
          (i32.and
           (i32.load
            (i32.const 25732)
           )
           (i32.xor
            (i32.shl
             (i32.const 1)
             (local.get $5)
            )
            (i32.const -1)
           )
          )
         )
         (br $label$break$L99)
        )
       )
       (if
        (i32.eq
         (local.get $0)
         (local.get $1)
        )
        (local.set $14
         (i32.add
          (local.get $1)
          (i32.const 8)
         )
        )
        (block
         (if
          (i32.gt_u
           (local.get $7)
           (local.get $1)
          )
          (call $_abort)
         )
         (if
          (i32.eq
           (i32.load
            (local.tee $0
             (i32.add
              (local.get $1)
              (i32.const 8)
             )
            )
           )
           (local.get $6)
          )
          (local.set $14
           (local.get $0)
          )
          (call $_abort)
         )
        )
       )
       (i32.store
        (i32.add
         (local.get $3)
         (i32.const 12)
        )
        (local.get $1)
       )
       (i32.store
        (local.get $14)
        (local.get $3)
       )
      )
      (block
       (local.set $8
        (i32.load
         (i32.add
          (local.get $6)
          (i32.const 24)
         )
        )
       )
       (if
        (i32.eq
         (local.tee $0
          (i32.load
           (i32.add
            (local.get $6)
            (i32.const 12)
           )
          )
         )
         (local.get $6)
        )
        (block $do-once6
         (if
          (local.tee $0
           (i32.load
            (local.tee $3
             (i32.add
              (local.tee $1
               (i32.add
                (local.get $6)
                (i32.const 16)
               )
              )
              (i32.const 4)
             )
            )
           )
          )
          (local.set $1
           (local.get $3)
          )
          (br_if $do-once6
           (i32.eqz
            (local.tee $0
             (i32.load
              (local.get $1)
             )
            )
           )
          )
         )
         (loop $while-in9
          (block $while-out8
           (local.set $0
            (if (result i32)
             (local.tee $5
              (i32.load
               (local.tee $3
                (i32.add
                 (local.get $0)
                 (i32.const 20)
                )
               )
              )
             )
             (block (result i32)
              (local.set $1
               (local.get $3)
              )
              (local.get $5)
             )
             (block (result i32)
              (br_if $while-out8
               (i32.eqz
                (local.tee $5
                 (i32.load
                  (local.tee $3
                   (i32.add
                    (local.get $0)
                    (i32.const 16)
                   )
                  )
                 )
                )
               )
              )
              (local.set $1
               (local.get $3)
              )
              (local.get $5)
             )
            )
           )
           (br $while-in9)
          )
         )
         (if
          (i32.gt_u
           (local.get $7)
           (local.get $1)
          )
          (call $_abort)
          (block
           (i32.store
            (local.get $1)
            (i32.const 0)
           )
           (local.set $9
            (local.get $0)
           )
          )
         )
        )
        (block
         (if
          (i32.gt_u
           (local.get $7)
           (local.tee $1
            (i32.load
             (i32.add
              (local.get $6)
              (i32.const 8)
             )
            )
           )
          )
          (call $_abort)
         )
         (if
          (i32.ne
           (local.get $6)
           (i32.load
            (local.tee $3
             (i32.add
              (local.get $1)
              (i32.const 12)
             )
            )
           )
          )
          (call $_abort)
         )
         (if
          (i32.eq
           (i32.load
            (local.tee $5
             (i32.add
              (local.get $0)
              (i32.const 8)
             )
            )
           )
           (local.get $6)
          )
          (block
           (i32.store
            (local.get $3)
            (local.get $0)
           )
           (i32.store
            (local.get $5)
            (local.get $1)
           )
           (local.set $9
            (local.get $0)
           )
          )
          (call $_abort)
         )
        )
       )
       (if
        (local.get $8)
        (block
         (if
          (i32.eq
           (i32.load
            (local.tee $1
             (i32.add
              (i32.shl
               (local.tee $0
                (i32.load
                 (i32.add
                  (local.get $6)
                  (i32.const 28)
                 )
                )
               )
               (i32.const 2)
              )
              (i32.const 26036)
             )
            )
           )
           (local.get $6)
          )
          (block
           (i32.store
            (local.get $1)
            (local.get $9)
           )
           (if
            (i32.eqz
             (local.get $9)
            )
            (block
             (i32.store
              (i32.const 25736)
              (i32.and
               (i32.load
                (i32.const 25736)
               )
               (i32.xor
                (i32.shl
                 (i32.const 1)
                 (local.get $0)
                )
                (i32.const -1)
               )
              )
             )
             (br $label$break$L99)
            )
           )
          )
          (if
           (i32.gt_u
            (i32.load
             (i32.const 25748)
            )
            (local.get $8)
           )
           (call $_abort)
           (block
            (i32.store
             (select
              (local.tee $0
               (i32.add
                (local.get $8)
                (i32.const 16)
               )
              )
              (i32.add
               (local.get $8)
               (i32.const 20)
              )
              (i32.eq
               (i32.load
                (local.get $0)
               )
               (local.get $6)
              )
             )
             (local.get $9)
            )
            (br_if $label$break$L99
             (i32.eqz
              (local.get $9)
             )
            )
           )
          )
         )
         (if
          (i32.gt_u
           (local.tee $1
            (i32.load
             (i32.const 25748)
            )
           )
           (local.get $9)
          )
          (call $_abort)
         )
         (i32.store
          (i32.add
           (local.get $9)
           (i32.const 24)
          )
          (local.get $8)
         )
         (if
          (local.tee $0
           (i32.load
            (local.tee $3
             (i32.add
              (local.get $6)
              (i32.const 16)
             )
            )
           )
          )
          (if
           (i32.gt_u
            (local.get $1)
            (local.get $0)
           )
           (call $_abort)
           (block
            (i32.store
             (i32.add
              (local.get $9)
              (i32.const 16)
             )
             (local.get $0)
            )
            (i32.store
             (i32.add
              (local.get $0)
              (i32.const 24)
             )
             (local.get $9)
            )
           )
          )
         )
         (if
          (local.tee $0
           (i32.load
            (i32.add
             (local.get $3)
             (i32.const 4)
            )
           )
          )
          (if
           (i32.gt_u
            (i32.load
             (i32.const 25748)
            )
            (local.get $0)
           )
           (call $_abort)
           (block
            (i32.store
             (i32.add
              (local.get $9)
              (i32.const 20)
             )
             (local.get $0)
            )
            (i32.store
             (i32.add
              (local.get $0)
              (i32.const 24)
             )
             (local.get $9)
            )
           )
          )
         )
        )
       )
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 4)
     )
     (i32.or
      (local.get $4)
      (i32.const 1)
     )
    )
    (i32.store
     (i32.add
      (local.get $2)
      (local.get $4)
     )
     (local.get $4)
    )
    (if
     (i32.eq
      (local.get $2)
      (i32.load
       (i32.const 25752)
      )
     )
     (block
      (i32.store
       (i32.const 25740)
       (local.get $4)
      )
      (return)
     )
    )
   )
  )
  (local.set $1
   (i32.shr_u
    (local.get $4)
    (i32.const 3)
   )
  )
  (if
   (i32.lt_u
    (local.get $4)
    (i32.const 256)
   )
   (block
    (local.set $0
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 3)
      )
      (i32.const 25772)
     )
    )
    (if
     (i32.and
      (local.tee $4
       (i32.load
        (i32.const 25732)
       )
      )
      (local.tee $1
       (i32.shl
        (i32.const 1)
        (local.get $1)
       )
      )
     )
     (if
      (i32.gt_u
       (i32.load
        (i32.const 25748)
       )
       (local.tee $4
        (i32.load
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
        )
       )
      )
      (call $_abort)
      (block
       (local.set $13
        (local.get $4)
       )
       (local.set $15
        (local.get $1)
       )
      )
     )
     (block
      (i32.store
       (i32.const 25732)
       (i32.or
        (local.get $1)
        (local.get $4)
       )
      )
      (local.set $13
       (local.get $0)
      )
      (local.set $15
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
     )
    )
    (i32.store
     (local.get $15)
     (local.get $2)
    )
    (i32.store
     (i32.add
      (local.get $13)
      (i32.const 12)
     )
     (local.get $2)
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 8)
     )
     (local.get $13)
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 12)
     )
     (local.get $0)
    )
    (return)
   )
  )
  (local.set $0
   (i32.add
    (i32.shl
     (local.tee $1
      (if (result i32)
       (local.tee $0
        (i32.shr_u
         (local.get $4)
         (i32.const 8)
        )
       )
       (if (result i32)
        (i32.gt_u
         (local.get $4)
         (i32.const 16777215)
        )
        (i32.const 31)
        (block (result i32)
         (local.set $0
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $3
              (i32.shl
               (local.get $0)
               (local.tee $1
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.get $0)
                   (i32.const 1048320)
                  )
                  (i32.const 16)
                 )
                 (i32.const 8)
                )
               )
              )
             )
             (i32.const 520192)
            )
            (i32.const 16)
           )
           (i32.const 4)
          )
         )
         (i32.or
          (i32.shl
           (local.tee $0
            (i32.add
             (i32.sub
              (i32.const 14)
              (i32.or
               (i32.or
                (local.get $0)
                (local.get $1)
               )
               (local.tee $1
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.tee $0
                    (i32.shl
                     (local.get $3)
                     (local.get $0)
                    )
                   )
                   (i32.const 245760)
                  )
                  (i32.const 16)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (i32.shr_u
              (i32.shl
               (local.get $0)
               (local.get $1)
              )
              (i32.const 15)
             )
            )
           )
           (i32.const 1)
          )
          (i32.and
           (i32.shr_u
            (local.get $4)
            (i32.add
             (local.get $0)
             (i32.const 7)
            )
           )
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
    (i32.const 26036)
   )
  )
  (i32.store
   (i32.add
    (local.get $2)
    (i32.const 28)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $2)
    (i32.const 20)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (local.get $2)
    (i32.const 16)
   )
   (i32.const 0)
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $3
      (i32.load
       (i32.const 25736)
      )
     )
     (local.tee $5
      (i32.shl
       (i32.const 1)
       (local.get $1)
      )
     )
    )
   )
   (block
    (i32.store
     (i32.const 25736)
     (i32.or
      (local.get $3)
      (local.get $5)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $2)
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 24)
     )
     (local.get $0)
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 12)
     )
     (local.get $2)
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 8)
     )
     (local.get $2)
    )
    (return)
   )
  )
  (if
   (i32.eq
    (local.get $4)
    (i32.and
     (i32.load
      (i32.add
       (local.tee $0
        (i32.load
         (local.get $0)
        )
       )
       (i32.const 4)
      )
     )
     (i32.const -8)
    )
   )
   (local.set $1
    (local.get $0)
   )
   (block $label$break$L189
    (local.set $3
     (i32.shl
      (local.get $4)
      (select
       (i32.const 0)
       (i32.sub
        (i32.const 25)
        (i32.shr_u
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.eq
        (local.get $1)
        (i32.const 31)
       )
      )
     )
    )
    (loop $while-in16
     (if
      (local.tee $1
       (i32.load
        (local.tee $5
         (i32.add
          (i32.add
           (local.get $0)
           (i32.const 16)
          )
          (i32.shl
           (i32.shr_u
            (local.get $3)
            (i32.const 31)
           )
           (i32.const 2)
          )
         )
        )
       )
      )
      (block
       (local.set $3
        (i32.shl
         (local.get $3)
         (i32.const 1)
        )
       )
       (br_if $label$break$L189
        (i32.eq
         (local.get $4)
         (i32.and
          (i32.load
           (i32.add
            (local.get $1)
            (i32.const 4)
           )
          )
          (i32.const -8)
         )
        )
       )
       (local.set $0
        (local.get $1)
       )
       (br $while-in16)
      )
     )
    )
    (if
     (i32.gt_u
      (i32.load
       (i32.const 25748)
      )
      (local.get $5)
     )
     (call $_abort)
    )
    (i32.store
     (local.get $5)
     (local.get $2)
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 24)
     )
     (local.get $0)
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 12)
     )
     (local.get $2)
    )
    (i32.store
     (i32.add
      (local.get $2)
      (i32.const 8)
     )
     (local.get $2)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.le_u
      (local.tee $0
       (i32.load
        (i32.const 25748)
       )
      )
      (local.get $1)
     )
     (i32.le_u
      (local.get $0)
      (local.tee $0
       (i32.load
        (local.tee $4
         (i32.add
          (local.get $1)
          (i32.const 8)
         )
        )
       )
      )
     )
    )
   )
   (call $_abort)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 12)
   )
   (local.get $2)
  )
  (i32.store
   (local.get $4)
   (local.get $2)
  )
  (i32.store
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
   (local.get $0)
  )
  (i32.store
   (i32.add
    (local.get $2)
    (i32.const 12)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $2)
    (i32.const 24)
   )
   (i32.const 0)
  )
 )
 (func $___stdio_close (; 290 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (i32.load offset=60
    (local.get $0)
   )
  )
  (local.set $0
   (call $___syscall_ret
    (call $___syscall6
     (i32.const 6)
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $___stdio_write (; 291 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 32)
   )
  )
  (i32.store
   (local.tee $3
    (local.get $7)
   )
   (local.tee $4
    (i32.load
     (local.tee $10
      (i32.add
       (local.get $0)
       (i32.const 28)
      )
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
   (local.tee $4
    (i32.sub
     (i32.load
      (local.tee $11
       (i32.add
        (local.get $0)
        (i32.const 20)
       )
      )
     )
     (local.get $4)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 12)
   )
   (local.get $2)
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $3)
     (i32.const 16)
    )
   )
   (i32.load
    (local.tee $12
     (i32.add
      (local.get $0)
      (i32.const 60)
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 4)
   )
   (local.get $3)
  )
  (i32.store
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
   (i32.const 2)
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eq
      (local.tee $4
       (i32.add
        (local.get $2)
        (local.get $4)
       )
      )
      (local.tee $6
       (call $___syscall_ret
        (call $___syscall146
         (i32.const 146)
         (local.get $1)
        )
       )
      )
     )
    )
    (local.set $8
     (i32.const 2)
    )
    (local.set $1
     (local.get $3)
    )
    (local.set $3
     (local.get $6)
    )
    (loop $while-in
     (if
      (i32.ge_s
       (local.get $3)
       (i32.const 0)
      )
      (block
       (i32.store
        (local.tee $1
         (select
          (i32.add
           (local.get $1)
           (i32.const 8)
          )
          (local.get $1)
          (local.tee $6
           (i32.gt_u
            (local.get $3)
            (local.tee $9
             (i32.load
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
            )
           )
          )
         )
        )
        (i32.add
         (local.tee $9
          (i32.sub
           (local.get $3)
           (select
            (local.get $9)
            (i32.const 0)
            (local.get $6)
           )
          )
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store
        (local.tee $13
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
        (i32.sub
         (i32.load
          (local.get $13)
         )
         (local.get $9)
        )
       )
       (i32.store
        (local.get $5)
        (i32.load
         (local.get $12)
        )
       )
       (i32.store
        (i32.add
         (local.get $5)
         (i32.const 4)
        )
        (local.get $1)
       )
       (i32.store
        (i32.add
         (local.get $5)
         (i32.const 8)
        )
        (local.tee $8
         (i32.add
          (local.get $8)
          (i32.shr_s
           (i32.shl
            (local.get $6)
            (i32.const 31)
           )
           (i32.const 31)
          )
         )
        )
       )
       (br_if $__rjti$0
        (i32.eq
         (local.tee $4
          (i32.sub
           (local.get $4)
           (local.get $3)
          )
         )
         (local.tee $3
          (call $___syscall_ret
           (call $___syscall146
            (i32.const 146)
            (local.get $5)
           )
          )
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 16)
     )
     (i32.const 0)
    )
    (i32.store
     (local.get $10)
     (i32.const 0)
    )
    (i32.store
     (local.get $11)
     (i32.const 0)
    )
    (i32.store
     (local.get $0)
     (i32.or
      (i32.load
       (local.get $0)
      )
      (i32.const 32)
     )
    )
    (local.set $2
     (if (result i32)
      (i32.eq
       (local.get $8)
       (i32.const 2)
      )
      (i32.const 0)
      (i32.sub
       (local.get $2)
       (i32.load
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (i32.store
    (i32.add
     (local.get $0)
     (i32.const 16)
    )
    (i32.add
     (local.tee $1
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 44)
       )
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 48)
      )
     )
    )
   )
   (i32.store
    (local.get $10)
    (local.get $1)
   )
   (i32.store
    (local.get $11)
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $2)
 )
 (func $___stdio_seek (; 292 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (i32.store
   (local.tee $3
    (local.get $4)
   )
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 60)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 12)
   )
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 20)
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
   (local.get $2)
  )
  (local.set $0
   (if (result i32)
    (i32.lt_s
     (call $___syscall_ret
      (call $___syscall140
       (i32.const 140)
       (local.get $3)
      )
     )
     (i32.const 0)
    )
    (block (result i32)
     (i32.store
      (local.get $0)
      (i32.const -1)
     )
     (i32.const -1)
    )
    (i32.load
     (local.get $0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $___syscall_ret (; 293 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.gt_u
    (local.get $0)
    (i32.const -4096)
   )
   (block (result i32)
    (i32.store
     (i32.const 26292)
     (i32.sub
      (i32.const 0)
      (local.get $0)
     )
    )
    (i32.const -1)
   )
   (local.get $0)
  )
 )
 (func $___errno_location (; 294 ;) (; has Stack IR ;) (result i32)
  (i32.const 26292)
 )
 (func $___stdout_write (; 295 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $5
   (i32.add
    (local.tee $3
     (local.get $4)
    )
    (i32.const 16)
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 36)
   )
   (i32.const 1)
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 64)
    )
   )
   (block
    (i32.store
     (local.get $3)
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 60)
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $3)
      (i32.const 4)
     )
     (i32.const 21523)
    )
    (i32.store
     (i32.add
      (local.get $3)
      (i32.const 8)
     )
     (local.get $5)
    )
    (if
     (call $___syscall54
      (i32.const 54)
      (local.get $3)
     )
     (i32.store8
      (i32.add
       (local.get $0)
       (i32.const 75)
      )
      (i32.const -1)
     )
    )
   )
  )
  (local.set $0
   (call $___stdio_write
    (local.get $0)
    (local.get $1)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $___shlim (; 296 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (i32.store offset=104
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=108
   (local.get $0)
   (i32.sub
    (local.tee $1
     (i32.load offset=8
      (local.get $0)
     )
    )
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
  (i32.store offset=100
   (local.get $0)
   (local.get $1)
  )
 )
 (func $___shgetc (; 297 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (block $__rjto$2
   (block $__rjti$2
    (if
     (local.tee $2
      (i32.load
       (local.tee $3
        (i32.add
         (local.get $0)
         (i32.const 104)
        )
       )
      )
     )
     (br_if $__rjti$2
      (i32.ge_s
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 108)
        )
       )
       (local.get $2)
      )
     )
    )
    (br_if $__rjti$2
     (i32.lt_s
      (local.tee $2
       (call $___uflow
        (local.get $0)
       )
      )
      (i32.const 0)
     )
    )
    (local.set $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (if
       (local.tee $4
        (i32.load
         (local.get $3)
        )
       )
       (block
        (local.set $3
         (local.get $1)
        )
        (br_if $__rjti$0
         (i32.lt_s
          (i32.sub
           (local.get $1)
           (local.tee $5
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 4)
             )
            )
           )
          )
          (local.tee $4
           (i32.sub
            (local.get $4)
            (i32.load
             (i32.add
              (local.get $0)
              (i32.const 108)
             )
            )
           )
          )
         )
        )
        (i32.store
         (i32.add
          (local.get $0)
          (i32.const 100)
         )
         (i32.add
          (local.get $5)
          (i32.add
           (local.get $4)
           (i32.const -1)
          )
         )
        )
       )
       (block
        (local.set $3
         (local.get $1)
        )
        (br $__rjti$0)
       )
      )
      (br $__rjto$0)
     )
     (i32.store
      (i32.add
       (local.get $0)
       (i32.const 100)
      )
      (local.get $1)
     )
    )
    (local.set $1
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
    (if
     (local.get $3)
     (i32.store
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 108)
       )
      )
      (i32.add
       (i32.load
        (local.get $0)
       )
       (i32.sub
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
        (local.tee $0
         (i32.load
          (local.get $1)
         )
        )
       )
      )
     )
     (local.set $0
      (i32.load
       (local.get $1)
      )
     )
    )
    (if
     (i32.ne
      (local.get $2)
      (i32.load8_u
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const -1)
        )
       )
      )
     )
     (i32.store8
      (local.get $0)
      (local.get $2)
     )
    )
    (br $__rjto$2)
   )
   (i32.store
    (i32.add
     (local.get $0)
     (i32.const 100)
    )
    (i32.const 0)
   )
   (local.set $2
    (i32.const -1)
   )
  )
  (local.get $2)
 )
 (func $___uflow (; 298 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $2
   (local.get $1)
  )
  (local.set $0
   (if (result i32)
    (call $___toread
     (local.get $0)
    )
    (i32.const -1)
    (block (result i32)
     (local.set $3
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 32)
       )
      )
     )
     (if (result i32)
      (i32.eq
       (call_indirect (type $FUNCSIG$iiii)
        (local.get $0)
        (local.get $2)
        (i32.const 1)
        (i32.add
         (i32.and
          (local.get $3)
          (i32.const 15)
         )
         (i32.const 12)
        )
       )
       (i32.const 1)
      )
      (i32.load8_u
       (local.get $2)
      )
      (i32.const -1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $___toread (; 299 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $1
   (i32.load8_s
    (local.tee $2
     (i32.add
      (local.get $0)
      (i32.const 74)
     )
    )
   )
  )
  (i32.store8
   (local.get $2)
   (i32.or
    (local.get $1)
    (i32.add
     (local.get $1)
     (i32.const 255)
    )
   )
  )
  (if
   (i32.gt_u
    (i32.load
     (local.tee $1
      (i32.add
       (local.get $0)
       (i32.const 20)
      )
     )
    )
    (i32.load
     (local.tee $2
      (i32.add
       (local.get $0)
       (i32.const 28)
      )
     )
    )
   )
   (block
    (local.set $3
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 36)
      )
     )
    )
    (drop
     (call_indirect (type $FUNCSIG$iiii)
      (local.get $0)
      (i32.const 0)
      (i32.const 0)
      (i32.add
       (i32.and
        (local.get $3)
        (i32.const 15)
       )
       (i32.const 12)
      )
     )
    )
   )
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
   (i32.const 0)
  )
  (i32.store
   (local.get $2)
   (i32.const 0)
  )
  (i32.store
   (local.get $1)
   (i32.const 0)
  )
  (if (result i32)
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 4)
   )
   (block (result i32)
    (i32.store
     (local.get $0)
     (i32.or
      (local.get $1)
      (i32.const 32)
     )
    )
    (i32.const -1)
   )
   (block (result i32)
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 8)
     )
     (local.tee $2
      (i32.add
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 44)
        )
       )
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 48)
        )
       )
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
     (local.get $2)
    )
    (i32.shr_s
     (i32.shl
      (local.get $1)
      (i32.const 27)
     )
     (i32.const 31)
    )
   )
  )
 )
 (func $_memcmp (; 300 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (if (result i32)
   (local.get $2)
   (block $label$break$L1 (result i32)
    (loop $while-in
     (if
      (i32.eq
       (local.tee $3
        (i32.load8_s
         (local.get $0)
        )
       )
       (local.tee $4
        (i32.load8_s
         (local.get $1)
        )
       )
      )
      (block
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (drop
        (br_if $label$break$L1
         (i32.const 0)
         (i32.eqz
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const -1)
           )
          )
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.sub
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
     (i32.and
      (local.get $4)
      (i32.const 255)
     )
    )
   )
   (i32.const 0)
  )
 )
 (func $_isdigit (; 301 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.lt_u
   (i32.add
    (local.get $0)
    (i32.const -48)
   )
   (i32.const 10)
  )
 )
 (func $_sprintf (; 302 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $2)
  )
  (local.set $0
   (call $_vsnprintf
    (local.get $0)
    (local.get $1)
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_vsnprintf (; 303 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (i64.store align=4
   (local.tee $3
    (local.get $6)
   )
   (i64.load align=4
    (i32.const 16768)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16776)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16784)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16792)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16800)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16808)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16816)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16824)
   )
  )
  (i64.store align=4
   (i32.sub
    (local.get $3)
    (i32.const -64)
   )
   (i64.load align=4
    (i32.const 16832)
   )
  )
  (i64.store offset=72 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16840)
   )
  )
  (i64.store offset=80 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16848)
   )
  )
  (i64.store offset=88 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16856)
   )
  )
  (i64.store offset=96 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16864)
   )
  )
  (i64.store offset=104 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16872)
   )
  )
  (i64.store offset=112 align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 16880)
   )
  )
  (i32.store offset=120
   (local.get $3)
   (i32.load
    (i32.const 16888)
   )
  )
  (i32.store offset=48
   (local.get $3)
   (local.tee $7
    (select
     (local.tee $4
      (i32.sub
       (i32.const -2)
       (local.get $0)
      )
     )
     (i32.const 2147483647)
     (i32.gt_u
      (i32.const 2147483647)
      (local.get $4)
     )
    )
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $3)
     (i32.const 20)
    )
   )
   (local.get $0)
  )
  (i32.store offset=44
   (local.get $3)
   (local.get $0)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 16)
    )
   )
   (local.tee $0
    (i32.add
     (local.get $0)
     (local.get $7)
    )
   )
  )
  (i32.store offset=28
   (local.get $3)
   (local.get $0)
  )
  (local.set $0
   (call $_vfprintf
    (local.get $3)
    (local.get $1)
    (local.get $2)
   )
  )
  (if
   (local.get $7)
   (i32.store8
    (i32.add
     (local.tee $5
      (i32.load
       (local.get $5)
      )
     )
     (i32.shr_s
      (i32.shl
       (i32.eq
        (local.get $5)
        (i32.load
         (local.get $4)
        )
       )
       (i32.const 31)
      )
      (i32.const 31)
     )
    )
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $_vfprintf (; 304 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 224)
   )
  )
  (local.set $5
   (local.get $4)
  )
  (i64.store
   (local.tee $3
    (i32.add
     (local.get $4)
     (i32.const 160)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=24
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=32
   (local.get $3)
   (i64.const 0)
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $4)
     (i32.const 208)
    )
   )
   (i32.load
    (local.get $2)
   )
  )
  (local.set $0
   (if (result i32)
    (i32.lt_s
     (call $_printf_core
      (i32.const 0)
      (local.get $1)
      (local.get $6)
      (local.tee $2
       (i32.add
        (local.get $4)
        (i32.const 80)
       )
      )
      (local.get $3)
     )
     (i32.const 0)
    )
    (i32.const -1)
    (block (result i32)
     (drop
      (if (result i32)
       (i32.gt_s
        (i32.load offset=76
         (local.get $0)
        )
        (i32.const -1)
       )
       (i32.const 1)
       (i32.const 0)
      )
     )
     (local.set $7
      (i32.load
       (local.get $0)
      )
     )
     (if
      (i32.lt_s
       (i32.load8_s offset=74
        (local.get $0)
       )
       (i32.const 1)
      )
      (i32.store
       (local.get $0)
       (i32.and
        (local.get $7)
        (i32.const -33)
       )
      )
     )
     (if
      (i32.load
       (local.tee $8
        (i32.add
         (local.get $0)
         (i32.const 48)
        )
       )
      )
      (local.set $1
       (call $_printf_core
        (local.get $0)
        (local.get $1)
        (local.get $6)
        (local.get $2)
        (local.get $3)
       )
      )
      (block
       (local.set $10
        (i32.load
         (local.tee $9
          (i32.add
           (local.get $0)
           (i32.const 44)
          )
         )
        )
       )
       (i32.store
        (local.get $9)
        (local.get $5)
       )
       (i32.store
        (local.tee $12
         (i32.add
          (local.get $0)
          (i32.const 28)
         )
        )
        (local.get $5)
       )
       (i32.store
        (local.tee $11
         (i32.add
          (local.get $0)
          (i32.const 20)
         )
        )
        (local.get $5)
       )
       (i32.store
        (local.get $8)
        (i32.const 80)
       )
       (i32.store
        (local.tee $13
         (i32.add
          (local.get $0)
          (i32.const 16)
         )
        )
        (i32.add
         (local.get $5)
         (i32.const 80)
        )
       )
       (local.set $1
        (call $_printf_core
         (local.get $0)
         (local.get $1)
         (local.get $6)
         (local.get $2)
         (local.get $3)
        )
       )
       (if
        (local.get $10)
        (block
         (drop
          (call_indirect (type $FUNCSIG$iiii)
           (local.get $0)
           (i32.const 0)
           (i32.const 0)
           (i32.add
            (i32.and
             (i32.load offset=36
              (local.get $0)
             )
             (i32.const 15)
            )
            (i32.const 12)
           )
          )
         )
         (local.set $1
          (select
           (local.get $1)
           (i32.const -1)
           (i32.load
            (local.get $11)
           )
          )
         )
         (i32.store
          (local.get $9)
          (local.get $10)
         )
         (i32.store
          (local.get $8)
          (i32.const 0)
         )
         (i32.store
          (local.get $13)
          (i32.const 0)
         )
         (i32.store
          (local.get $12)
          (i32.const 0)
         )
         (i32.store
          (local.get $11)
          (i32.const 0)
         )
        )
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.or
       (local.tee $2
        (i32.load
         (local.get $0)
        )
       )
       (i32.and
        (local.get $7)
        (i32.const 32)
       )
      )
     )
     (select
      (i32.const -1)
      (local.get $1)
      (i32.and
       (local.get $2)
       (i32.const 32)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $_printf_core (; 305 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i64)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local.set $18
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $11
   (i32.add
    (local.get $18)
    (i32.const 40)
   )
  )
  (local.set $23
   (i32.add
    (local.get $18)
    (i32.const 60)
   )
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $18)
     (i32.const 56)
    )
   )
   (local.get $1)
  )
  (local.set $20
   (i32.ne
    (local.get $0)
    (i32.const 0)
   )
  )
  (local.set $21
   (local.tee $22
    (i32.add
     (local.get $18)
     (i32.const 40)
    )
   )
  )
  (local.set $24
   (i32.add
    (local.get $18)
    (i32.const 39)
   )
  )
  (local.set $27
   (i32.add
    (local.tee $25
     (i32.add
      (local.get $18)
      (i32.const 48)
     )
    )
    (i32.const 4)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (block $label$break$L123
   (block $__rjti$10
    (loop $label$continue$L1
     (block $label$break$L1
      (loop $while-in
       (if
        (i32.gt_s
         (local.get $8)
         (i32.const -1)
        )
        (local.set $8
         (if (result i32)
          (i32.gt_s
           (local.get $1)
           (i32.sub
            (i32.const 2147483647)
            (local.get $8)
           )
          )
          (block (result i32)
           (i32.store
            (i32.const 26292)
            (i32.const 75)
           )
           (i32.const -1)
          )
          (i32.add
           (local.get $1)
           (local.get $8)
          )
         )
        )
       )
       (br_if $__rjti$10
        (i32.eqz
         (local.tee $9
          (i32.load8_s
           (local.tee $10
            (i32.load
             (local.get $12)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (local.get $10)
       )
       (block $label$break$L15
        (block $__rjti$0
         (loop $label$continue$L12
          (block $label$break$L12
           (block $switch
            (br_table $label$break$L12 $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $__rjti$0 $switch
             (i32.shr_s
              (i32.shl
               (local.get $9)
               (i32.const 24)
              )
              (i32.const 24)
             )
            )
           )
           (i32.store
            (local.get $12)
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
           (local.set $9
            (i32.load8_s
             (local.get $1)
            )
           )
           (br $label$continue$L12)
          )
         )
         (br $label$break$L15)
        )
        (local.set $9
         (local.get $1)
        )
        (local.set $1
         (loop $while-in3 (result i32)
          (if
           (i32.ne
            (i32.load8_s offset=1
             (local.get $1)
            )
            (i32.const 37)
           )
           (block
            (local.set $1
             (local.get $9)
            )
            (br $label$break$L15)
           )
          )
          (local.set $9
           (i32.add
            (local.get $9)
            (i32.const 1)
           )
          )
          (i32.store
           (local.get $12)
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 2)
            )
           )
          )
          (br_if $while-in3
           (i32.eq
            (i32.load8_s
             (local.get $1)
            )
            (i32.const 37)
           )
          )
          (local.get $9)
         )
        )
       )
       (local.set $1
        (i32.sub
         (local.get $1)
         (local.get $10)
        )
       )
       (if
        (local.get $20)
        (call $_out
         (local.get $0)
         (local.get $10)
         (local.get $1)
        )
       )
       (br_if $while-in
        (local.get $1)
       )
      )
      (local.set $9
       (i32.eqz
        (call $_isdigit
         (i32.load8_s offset=1
          (i32.load
           (local.get $12)
          )
         )
        )
       )
      )
      (i32.store
       (local.get $12)
       (local.tee $1
        (i32.add
         (local.tee $1
          (i32.load
           (local.get $12)
          )
         )
         (if (result i32)
          (local.get $9)
          (block (result i32)
           (local.set $14
            (i32.const -1)
           )
           (i32.const 1)
          )
          (if (result i32)
           (i32.eq
            (i32.load8_s offset=2
             (local.get $1)
            )
            (i32.const 36)
           )
           (block (result i32)
            (local.set $14
             (i32.add
              (i32.load8_s offset=1
               (local.get $1)
              )
              (i32.const -48)
             )
            )
            (local.set $5
             (i32.const 1)
            )
            (i32.const 3)
           )
           (block (result i32)
            (local.set $14
             (i32.const -1)
            )
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (if
       (i32.or
        (i32.gt_u
         (local.tee $9
          (i32.add
           (local.tee $6
            (i32.load8_s
             (local.get $1)
            )
           )
           (i32.const -32)
          )
         )
         (i32.const 31)
        )
        (i32.eqz
         (i32.and
          (i32.shl
           (i32.const 1)
           (local.get $9)
          )
          (i32.const 75913)
         )
        )
       )
       (local.set $9
        (i32.const 0)
       )
       (block
        (local.set $6
         (i32.const 0)
        )
        (loop $while-in5
         (local.set $9
          (i32.or
           (local.get $6)
           (i32.shl
            (i32.const 1)
            (local.get $9)
           )
          )
         )
         (i32.store
          (local.get $12)
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
         (if
          (i32.eqz
           (i32.or
            (i32.gt_u
             (local.tee $7
              (i32.add
               (local.tee $6
                (i32.load8_s
                 (local.get $1)
                )
               )
               (i32.const -32)
              )
             )
             (i32.const 31)
            )
            (i32.eqz
             (i32.and
              (i32.shl
               (i32.const 1)
               (local.get $7)
              )
              (i32.const 75913)
             )
            )
           )
          )
          (block
           (local.set $6
            (local.get $9)
           )
           (local.set $9
            (local.get $7)
           )
           (br $while-in5)
          )
         )
        )
       )
      )
      (if
       (i32.eq
        (i32.and
         (local.get $6)
         (i32.const 255)
        )
        (i32.const 42)
       )
       (block
        (i32.store
         (local.get $12)
         (local.tee $5
          (block $__rjto$1 (result i32)
           (block $__rjti$1
            (br_if $__rjti$1
             (i32.eqz
              (call $_isdigit
               (i32.load8_s offset=1
                (local.get $1)
               )
              )
             )
            )
            (br_if $__rjti$1
             (i32.ne
              (i32.load8_s offset=2
               (local.tee $7
                (i32.load
                 (local.get $12)
                )
               )
              )
              (i32.const 36)
             )
            )
            (i32.store
             (i32.add
              (i32.shl
               (i32.add
                (i32.load8_s
                 (local.tee $1
                  (i32.add
                   (local.get $7)
                   (i32.const 1)
                  )
                 )
                )
                (i32.const -48)
               )
               (i32.const 2)
              )
              (local.get $4)
             )
             (i32.const 10)
            )
            (local.set $1
             (i32.wrap_i64
              (i64.load
               (i32.add
                (i32.shl
                 (i32.add
                  (i32.load8_s
                   (local.get $1)
                  )
                  (i32.const -48)
                 )
                 (i32.const 3)
                )
                (local.get $3)
               )
              )
             )
            )
            (local.set $6
             (i32.const 1)
            )
            (br $__rjto$1
             (i32.add
              (local.get $7)
              (i32.const 3)
             )
            )
           )
           (if
            (local.get $5)
            (block
             (local.set $8
              (i32.const -1)
             )
             (br $label$break$L1)
            )
           )
           (if
            (local.get $20)
            (block
             (local.set $1
              (i32.load
               (local.tee $5
                (i32.and
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (local.get $2)
              (i32.add
               (local.get $5)
               (i32.const 4)
              )
             )
            )
            (local.set $1
             (i32.const 0)
            )
           )
           (local.set $6
            (i32.const 0)
           )
           (i32.add
            (i32.load
             (local.get $12)
            )
            (i32.const 1)
           )
          )
         )
        )
        (local.set $15
         (select
          (i32.sub
           (i32.const 0)
           (local.get $1)
          )
          (local.get $1)
          (local.tee $1
           (i32.lt_s
            (local.get $1)
            (i32.const 0)
           )
          )
         )
        )
        (local.set $16
         (select
          (i32.or
           (local.get $9)
           (i32.const 8192)
          )
          (local.get $9)
          (local.get $1)
         )
        )
        (local.set $9
         (local.get $6)
        )
       )
       (block
        (if
         (i32.lt_s
          (local.tee $15
           (call $_getint
            (local.get $12)
           )
          )
          (i32.const 0)
         )
         (block
          (local.set $8
           (i32.const -1)
          )
          (br $label$break$L1)
         )
        )
        (local.set $16
         (local.get $9)
        )
        (local.set $9
         (local.get $5)
        )
        (local.set $5
         (i32.load
          (local.get $12)
         )
        )
       )
      )
      (if
       (i32.eq
        (i32.load8_s
         (local.get $5)
        )
        (i32.const 46)
       )
       (block $do-once6
        (if
         (i32.ne
          (i32.load8_s
           (local.tee $1
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
          )
          (i32.const 42)
         )
         (block
          (i32.store
           (local.get $12)
           (local.get $1)
          )
          (local.set $1
           (call $_getint
            (local.get $12)
           )
          )
          (local.set $5
           (i32.load
            (local.get $12)
           )
          )
          (br $do-once6)
         )
        )
        (if
         (call $_isdigit
          (i32.load8_s offset=2
           (local.get $5)
          )
         )
         (if
          (i32.eq
           (i32.load8_s offset=3
            (local.tee $5
             (i32.load
              (local.get $12)
             )
            )
           )
           (i32.const 36)
          )
          (block
           (i32.store
            (i32.add
             (i32.shl
              (i32.add
               (i32.load8_s
                (local.tee $1
                 (i32.add
                  (local.get $5)
                  (i32.const 2)
                 )
                )
               )
               (i32.const -48)
              )
              (i32.const 2)
             )
             (local.get $4)
            )
            (i32.const 10)
           )
           (local.set $1
            (i32.wrap_i64
             (i64.load
              (i32.add
               (i32.shl
                (i32.add
                 (i32.load8_s
                  (local.get $1)
                 )
                 (i32.const -48)
                )
                (i32.const 3)
               )
               (local.get $3)
              )
             )
            )
           )
           (i32.store
            (local.get $12)
            (local.tee $5
             (i32.add
              (local.get $5)
              (i32.const 4)
             )
            )
           )
           (br $do-once6)
          )
         )
        )
        (if
         (local.get $9)
         (block
          (local.set $8
           (i32.const -1)
          )
          (br $label$break$L1)
         )
        )
        (if
         (local.get $20)
         (block
          (local.set $1
           (i32.load
            (local.tee $5
             (i32.and
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 3)
              )
              (i32.const -4)
             )
            )
           )
          )
          (i32.store
           (local.get $2)
           (i32.add
            (local.get $5)
            (i32.const 4)
           )
          )
         )
         (local.set $1
          (i32.const 0)
         )
        )
        (i32.store
         (local.get $12)
         (local.tee $5
          (i32.add
           (i32.load
            (local.get $12)
           )
           (i32.const 2)
          )
         )
        )
       )
       (local.set $1
        (i32.const -1)
       )
      )
      (local.set $13
       (i32.const 0)
      )
      (loop $while-in9
       (if
        (i32.gt_u
         (i32.add
          (i32.load8_s
           (local.get $5)
          )
          (i32.const -65)
         )
         (i32.const 57)
        )
        (block
         (local.set $8
          (i32.const -1)
         )
         (br $label$break$L1)
        )
       )
       (i32.store
        (local.get $12)
        (local.tee $6
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
       )
       (if
        (i32.lt_u
         (i32.add
          (local.tee $5
           (i32.and
            (local.tee $7
             (i32.load8_s
              (i32.add
               (i32.add
                (i32.load8_s
                 (local.get $5)
                )
                (i32.mul
                 (local.get $13)
                 (i32.const 58)
                )
               )
               (i32.const 15823)
              )
             )
            )
            (i32.const 255)
           )
          )
          (i32.const -1)
         )
         (i32.const 8)
        )
        (block
         (local.set $13
          (local.get $5)
         )
         (local.set $5
          (local.get $6)
         )
         (br $while-in9)
        )
       )
      )
      (if
       (i32.eqz
        (local.get $7)
       )
       (block
        (local.set $8
         (i32.const -1)
        )
        (br $label$break$L1)
       )
      )
      (local.set $19
       (i32.gt_s
        (local.get $14)
        (i32.const -1)
       )
      )
      (block $label$break$L77
       (block $__rjti$9
        (if
         (i32.eq
          (local.get $7)
          (i32.const 19)
         )
         (if
          (local.get $19)
          (block
           (local.set $8
            (i32.const -1)
           )
           (br $label$break$L1)
          )
         )
         (block $__rjti$8
          (if
           (local.get $19)
           (block
            (i32.store
             (i32.add
              (i32.shl
               (local.get $14)
               (i32.const 2)
              )
              (local.get $4)
             )
             (local.get $5)
            )
            (i64.store
             (local.get $11)
             (i64.load
              (i32.add
               (i32.shl
                (local.get $14)
                (i32.const 3)
               )
               (local.get $3)
              )
             )
            )
            (br $__rjti$8)
           )
          )
          (if
           (i32.eqz
            (local.get $20)
           )
           (block
            (local.set $8
             (i32.const 0)
            )
            (br $label$break$L1)
           )
          )
          (call $_pop_arg
           (local.get $11)
           (local.get $5)
           (local.get $2)
          )
          (local.set $6
           (i32.load
            (local.get $12)
           )
          )
          (br $__rjti$9)
         )
        )
        (br_if $__rjti$9
         (local.get $20)
        )
        (local.set $1
         (i32.const 0)
        )
        (br $label$break$L77)
       )
       (local.set $5
        (select
         (local.tee $7
          (i32.and
           (local.get $16)
           (i32.const -65537)
          )
         )
         (local.get $16)
         (i32.and
          (local.get $16)
          (i32.const 8192)
         )
        )
       )
       (block $__rjto$7
        (block $__rjti$7
         (block $__rjti$6
          (block $__rjti$5
           (block $__rjti$4
            (block $__rjti$3
             (block $switch-default44
              (block $switch-case43
               (block $switch-case35
                (block $switch-case34
                 (block $switch-case33
                  (block $switch-case32
                   (block $switch-case31
                    (block $switch-case30
                     (block $switch-case28
                      (block $switch-case25
                       (block $switch-case24
                        (br_table $switch-case43 $switch-default44 $switch-case34 $switch-default44 $switch-case43 $switch-case43 $switch-case43 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case35 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $__rjti$3 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case43 $switch-default44 $switch-case32 $switch-case30 $switch-case43 $switch-case43 $switch-case43 $switch-default44 $switch-case30 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case24 $switch-case28 $switch-case25 $switch-default44 $switch-default44 $switch-case33 $switch-default44 $switch-case31 $switch-default44 $switch-default44 $__rjti$3 $switch-default44
                         (i32.sub
                          (local.tee $6
                           (select
                            (i32.and
                             (local.tee $6
                              (i32.load8_s
                               (i32.add
                                (local.get $6)
                                (i32.const -1)
                               )
                              )
                             )
                             (i32.const -33)
                            )
                            (local.get $6)
                            (i32.and
                             (i32.eq
                              (i32.and
                               (local.get $6)
                               (i32.const 15)
                              )
                              (i32.const 3)
                             )
                             (i32.ne
                              (local.get $13)
                              (i32.const 0)
                             )
                            )
                           )
                          )
                          (i32.const 65)
                         )
                        )
                       )
                       (block $switch-default23
                        (block $switch-case22
                         (block $switch-case21
                          (block $switch-case20
                           (block $switch-case19
                            (block $switch-case18
                             (block $switch-case17
                              (block $switch-case16
                               (br_table $switch-case16 $switch-case17 $switch-case18 $switch-case19 $switch-case20 $switch-default23 $switch-case21 $switch-case22 $switch-default23
                                (i32.shr_s
                                 (i32.shl
                                  (i32.and
                                   (local.get $13)
                                   (i32.const 255)
                                  )
                                  (i32.const 24)
                                 )
                                 (i32.const 24)
                                )
                               )
                              )
                              (i32.store
                               (i32.load
                                (local.get $11)
                               )
                               (local.get $8)
                              )
                              (local.set $1
                               (i32.const 0)
                              )
                              (br $label$break$L77)
                             )
                             (i32.store
                              (i32.load
                               (local.get $11)
                              )
                              (local.get $8)
                             )
                             (local.set $1
                              (i32.const 0)
                             )
                             (br $label$break$L77)
                            )
                            (i64.store
                             (i32.load
                              (local.get $11)
                             )
                             (i64.extend_i32_s
                              (local.get $8)
                             )
                            )
                            (local.set $1
                             (i32.const 0)
                            )
                            (br $label$break$L77)
                           )
                           (i32.store16
                            (i32.load
                             (local.get $11)
                            )
                            (local.get $8)
                           )
                           (local.set $1
                            (i32.const 0)
                           )
                           (br $label$break$L77)
                          )
                          (i32.store8
                           (i32.load
                            (local.get $11)
                           )
                           (local.get $8)
                          )
                          (local.set $1
                           (i32.const 0)
                          )
                          (br $label$break$L77)
                         )
                         (i32.store
                          (i32.load
                           (local.get $11)
                          )
                          (local.get $8)
                         )
                         (local.set $1
                          (i32.const 0)
                         )
                         (br $label$break$L77)
                        )
                        (i64.store
                         (i32.load
                          (local.get $11)
                         )
                         (i64.extend_i32_s
                          (local.get $8)
                         )
                        )
                        (local.set $1
                         (i32.const 0)
                        )
                        (br $label$break$L77)
                       )
                       (local.set $1
                        (i32.const 0)
                       )
                       (br $label$break$L77)
                      )
                      (local.set $6
                       (i32.const 120)
                      )
                      (local.set $1
                       (select
                        (local.get $1)
                        (i32.const 8)
                        (i32.gt_u
                         (local.get $1)
                         (i32.const 8)
                        )
                       )
                      )
                      (local.set $5
                       (i32.or
                        (local.get $5)
                        (i32.const 8)
                       )
                      )
                      (br $__rjti$3)
                     )
                     (local.set $6
                      (i32.sub
                       (local.get $21)
                       (local.tee $13
                        (call $_fmt_o
                         (local.tee $17
                          (i64.load
                           (local.get $11)
                          )
                         )
                         (local.get $22)
                        )
                       )
                      )
                     )
                     (local.set $10
                      (i32.const 0)
                     )
                     (local.set $7
                      (i32.const 24505)
                     )
                     (local.set $1
                      (select
                       (local.get $1)
                       (i32.add
                        (local.get $6)
                        (i32.const 1)
                       )
                       (i32.or
                        (i32.eqz
                         (i32.and
                          (local.get $5)
                          (i32.const 8)
                         )
                        )
                        (i32.gt_s
                         (local.get $1)
                         (local.get $6)
                        )
                       )
                      )
                     )
                     (br $__rjti$6)
                    )
                    (if
                     (i64.lt_s
                      (local.tee $17
                       (i64.load
                        (local.get $11)
                       )
                      )
                      (i64.const 0)
                     )
                     (block
                      (i64.store
                       (local.get $11)
                       (local.tee $17
                        (i64.sub
                         (i64.const 0)
                         (local.get $17)
                        )
                       )
                      )
                      (local.set $10
                       (i32.const 1)
                      )
                      (local.set $7
                       (i32.const 24505)
                      )
                      (br $__rjti$4)
                     )
                     (block
                      (local.set $10
                       (i32.ne
                        (i32.and
                         (local.get $5)
                         (i32.const 2049)
                        )
                        (i32.const 0)
                       )
                      )
                      (local.set $7
                       (select
                        (i32.const 24506)
                        (select
                         (i32.const 24507)
                         (i32.const 24505)
                         (i32.and
                          (local.get $5)
                          (i32.const 1)
                         )
                        )
                        (i32.and
                         (local.get $5)
                         (i32.const 2048)
                        )
                       )
                      )
                      (br $__rjti$4)
                     )
                    )
                   )
                   (local.set $10
                    (i32.const 0)
                   )
                   (local.set $7
                    (i32.const 24505)
                   )
                   (local.set $17
                    (i64.load
                     (local.get $11)
                    )
                   )
                   (br $__rjti$4)
                  )
                  (i64.store8
                   (local.get $24)
                   (i64.load
                    (local.get $11)
                   )
                  )
                  (local.set $6
                   (local.get $24)
                  )
                  (local.set $10
                   (i32.const 0)
                  )
                  (local.set $16
                   (i32.const 24505)
                  )
                  (local.set $13
                   (i32.const 1)
                  )
                  (local.set $5
                   (local.get $7)
                  )
                  (local.set $1
                   (local.get $21)
                  )
                  (br $__rjto$7)
                 )
                 (local.set $26
                  (i32.eqz
                   (local.tee $19
                    (call $_memchr
                     (local.tee $14
                      (select
                       (local.tee $5
                        (i32.load
                         (local.get $11)
                        )
                       )
                       (i32.const 24515)
                       (local.get $5)
                      )
                     )
                     (local.get $1)
                    )
                   )
                  )
                 )
                 (local.set $10
                  (i32.const 0)
                 )
                 (local.set $16
                  (i32.const 24505)
                 )
                 (local.set $13
                  (select
                   (local.get $1)
                   (i32.sub
                    (local.get $19)
                    (local.tee $6
                     (local.get $14)
                    )
                   )
                   (local.get $26)
                  )
                 )
                 (local.set $5
                  (local.get $7)
                 )
                 (local.set $1
                  (select
                   (i32.add
                    (local.get $1)
                    (local.get $6)
                   )
                   (local.get $19)
                   (local.get $26)
                  )
                 )
                 (br $__rjto$7)
                )
                (i64.store32
                 (local.get $25)
                 (i64.load
                  (local.get $11)
                 )
                )
                (i32.store
                 (local.get $27)
                 (i32.const 0)
                )
                (i32.store
                 (local.get $11)
                 (local.get $25)
                )
                (local.set $10
                 (i32.const -1)
                )
                (br $__rjti$5)
               )
               (if
                (local.get $1)
                (block
                 (local.set $10
                  (local.get $1)
                 )
                 (br $__rjti$5)
                )
                (block
                 (call $_pad_661
                  (local.get $0)
                  (i32.const 32)
                  (local.get $15)
                  (i32.const 0)
                  (local.get $5)
                 )
                 (local.set $1
                  (i32.const 0)
                 )
                 (br $__rjti$7)
                )
               )
              )
              (local.set $1
               (call $_fmt_fp
                (local.get $0)
                (f64.load
                 (local.get $11)
                )
                (local.get $15)
                (local.get $1)
                (local.get $5)
                (local.get $6)
               )
              )
              (br $label$break$L77)
             )
             (local.set $6
              (local.get $10)
             )
             (local.set $10
              (i32.const 0)
             )
             (local.set $16
              (i32.const 24505)
             )
             (local.set $13
              (local.get $1)
             )
             (local.set $1
              (local.get $21)
             )
             (br $__rjto$7)
            )
            (local.set $13
             (call $_fmt_x
              (local.tee $17
               (i64.load
                (local.get $11)
               )
              )
              (local.get $22)
              (i32.and
               (local.get $6)
               (i32.const 32)
              )
             )
            )
            (local.set $10
             (select
              (i32.const 0)
              (i32.const 2)
              (local.tee $7
               (i32.or
                (i32.eqz
                 (i32.and
                  (local.get $5)
                  (i32.const 8)
                 )
                )
                (i64.eq
                 (local.get $17)
                 (i64.const 0)
                )
               )
              )
             )
            )
            (local.set $7
             (select
              (i32.const 24505)
              (i32.add
               (i32.shr_u
                (local.get $6)
                (i32.const 4)
               )
               (i32.const 24505)
              )
              (local.get $7)
             )
            )
            (br $__rjti$6)
           )
           (local.set $13
            (call $_fmt_u
             (local.get $17)
             (local.get $22)
            )
           )
           (br $__rjti$6)
          )
          (local.set $6
           (i32.load
            (local.get $11)
           )
          )
          (local.set $1
           (i32.const 0)
          )
          (block $__rjto$2
           (block $__rjti$2
            (loop $while-in47
             (if
              (local.tee $7
               (i32.load
                (local.get $6)
               )
              )
              (block
               (br_if $__rjti$2
                (i32.or
                 (local.tee $13
                  (i32.lt_s
                   (local.tee $7
                    (call $_wctomb
                     (local.get $23)
                     (local.get $7)
                    )
                   )
                   (i32.const 0)
                  )
                 )
                 (i32.gt_u
                  (local.get $7)
                  (i32.sub
                   (local.get $10)
                   (local.get $1)
                  )
                 )
                )
               )
               (local.set $6
                (i32.add
                 (local.get $6)
                 (i32.const 4)
                )
               )
               (br_if $while-in47
                (i32.gt_u
                 (local.get $10)
                 (local.tee $1
                  (i32.add
                   (local.get $1)
                   (local.get $7)
                  )
                 )
                )
               )
              )
             )
            )
            (br $__rjto$2)
           )
           (if
            (local.get $13)
            (block
             (local.set $8
              (i32.const -1)
             )
             (br $label$break$L1)
            )
           )
          )
          (call $_pad_661
           (local.get $0)
           (i32.const 32)
           (local.get $15)
           (local.get $1)
           (local.get $5)
          )
          (if
           (local.get $1)
           (block
            (local.set $6
             (i32.load
              (local.get $11)
             )
            )
            (local.set $10
             (i32.const 0)
            )
            (loop $while-in49
             (br_if $__rjti$7
              (i32.eqz
               (local.tee $7
                (i32.load
                 (local.get $6)
                )
               )
              )
             )
             (br_if $__rjti$7
              (i32.gt_s
               (local.tee $10
                (i32.add
                 (local.get $10)
                 (local.tee $7
                  (call $_wctomb
                   (local.get $23)
                   (local.get $7)
                  )
                 )
                )
               )
               (local.get $1)
              )
             )
             (local.set $6
              (i32.add
               (local.get $6)
               (i32.const 4)
              )
             )
             (call $_out
              (local.get $0)
              (local.get $23)
              (local.get $7)
             )
             (br_if $while-in49
              (i32.lt_u
               (local.get $10)
               (local.get $1)
              )
             )
            )
            (br $__rjti$7)
           )
           (block
            (local.set $1
             (i32.const 0)
            )
            (br $__rjti$7)
           )
          )
         )
         (local.set $6
          (select
           (local.get $13)
           (local.get $22)
           (local.tee $19
            (i32.or
             (local.tee $14
              (i64.ne
               (local.get $17)
               (i64.const 0)
              )
             )
             (i32.ne
              (local.get $1)
              (i32.const 0)
             )
            )
           )
          )
         )
         (local.set $16
          (local.get $7)
         )
         (local.set $13
          (select
           (select
            (local.get $1)
            (local.tee $7
             (i32.add
              (i32.sub
               (local.get $21)
               (local.get $13)
              )
              (i32.and
               (i32.xor
                (local.get $14)
                (i32.const 1)
               )
               (i32.const 1)
              )
             )
            )
            (i32.gt_s
             (local.get $1)
             (local.get $7)
            )
           )
           (i32.const 0)
           (local.get $19)
          )
         )
         (local.set $5
          (select
           (i32.and
            (local.get $5)
            (i32.const -65537)
           )
           (local.get $5)
           (i32.gt_s
            (local.get $1)
            (i32.const -1)
           )
          )
         )
         (local.set $1
          (local.get $21)
         )
         (br $__rjto$7)
        )
        (call $_pad_661
         (local.get $0)
         (i32.const 32)
         (local.get $15)
         (local.get $1)
         (i32.xor
          (local.get $5)
          (i32.const 8192)
         )
        )
        (local.set $1
         (select
          (local.get $15)
          (local.get $1)
          (i32.gt_s
           (local.get $15)
           (local.get $1)
          )
         )
        )
        (br $label$break$L77)
       )
       (call $_pad_661
        (local.get $0)
        (i32.const 32)
        (local.tee $1
         (select
          (local.tee $7
           (i32.add
            (local.get $10)
            (local.tee $13
             (select
              (local.tee $14
               (i32.sub
                (local.get $1)
                (local.get $6)
               )
              )
              (local.get $13)
              (i32.lt_s
               (local.get $13)
               (local.get $14)
              )
             )
            )
           )
          )
          (local.get $15)
          (i32.lt_s
           (local.get $15)
           (local.get $7)
          )
         )
        )
        (local.get $7)
        (local.get $5)
       )
       (call $_out
        (local.get $0)
        (local.get $16)
        (local.get $10)
       )
       (call $_pad_661
        (local.get $0)
        (i32.const 48)
        (local.get $1)
        (local.get $7)
        (i32.xor
         (local.get $5)
         (i32.const 65536)
        )
       )
       (call $_pad_661
        (local.get $0)
        (i32.const 48)
        (local.get $13)
        (local.get $14)
        (i32.const 0)
       )
       (call $_out
        (local.get $0)
        (local.get $6)
        (local.get $14)
       )
       (call $_pad_661
        (local.get $0)
        (i32.const 32)
        (local.get $1)
        (local.get $7)
        (i32.xor
         (local.get $5)
         (i32.const 8192)
        )
       )
      )
      (local.set $5
       (local.get $9)
      )
      (br $label$continue$L1)
     )
    )
    (br $label$break$L123)
   )
   (if
    (i32.eqz
     (local.get $0)
    )
    (local.set $8
     (if (result i32)
      (local.get $5)
      (block (result i32)
       (local.set $0
        (i32.const 1)
       )
       (loop $while-in52
        (if
         (local.tee $1
          (i32.load
           (i32.add
            (i32.shl
             (local.get $0)
             (i32.const 2)
            )
            (local.get $4)
           )
          )
         )
         (block
          (call $_pop_arg
           (i32.add
            (i32.shl
             (local.get $0)
             (i32.const 3)
            )
            (local.get $3)
           )
           (local.get $1)
           (local.get $2)
          )
          (br_if $while-in52
           (i32.lt_u
            (local.tee $0
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
            (i32.const 10)
           )
          )
          (local.set $8
           (i32.const 1)
          )
          (br $label$break$L123)
         )
        )
       )
       (loop $while-in54 (result i32)
        (if
         (i32.load
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (block
          (local.set $8
           (i32.const -1)
          )
          (br $label$break$L123)
         )
        )
        (br_if $while-in54
         (i32.lt_u
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (i32.const 10)
         )
        )
        (i32.const 1)
       )
      )
      (i32.const 0)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $18)
  )
  (local.get $8)
 )
 (func $_out (; 306 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 32)
    )
   )
   (drop
    (call $___fwritex
     (local.get $1)
     (local.get $2)
     (local.get $0)
    )
   )
  )
 )
 (func $_getint (; 307 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (call $_isdigit
    (i32.load8_s
     (i32.load
      (local.get $0)
     )
    )
   )
   (loop $while-in
    (local.set $1
     (i32.add
      (i32.load8_s
       (local.tee $2
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.add
       (i32.mul
        (local.get $1)
        (i32.const 10)
       )
       (i32.const -48)
      )
     )
    )
    (i32.store
     (local.get $0)
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
    )
    (br_if $while-in
     (call $_isdigit
      (i32.load8_s
       (local.get $2)
      )
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_pop_arg (; 308 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i64)
  (if
   (i32.le_u
    (local.get $1)
    (i32.const 20)
   )
   (block $label$break$L1
    (block $switch-case9
     (block $switch-case8
      (block $switch-case7
       (block $switch-case6
        (block $switch-case5
         (block $switch-case4
          (block $switch-case3
           (block $switch-case2
            (block $switch-case1
             (block $switch-case
              (br_table $switch-case $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch-case5 $switch-case6 $switch-case7 $switch-case8 $switch-case9 $label$break$L1
               (i32.sub
                (local.get $1)
                (i32.const 9)
               )
              )
             )
             (local.set $3
              (i32.load
               (local.tee $1
                (i32.and
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (local.get $2)
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
             (i32.store
              (local.get $0)
              (local.get $3)
             )
             (br $label$break$L1)
            )
            (local.set $3
             (i32.load
              (local.tee $1
               (i32.and
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 3)
                )
                (i32.const -4)
               )
              )
             )
            )
            (i32.store
             (local.get $2)
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
            (i64.store
             (local.get $0)
             (i64.extend_i32_s
              (local.get $3)
             )
            )
            (br $label$break$L1)
           )
           (local.set $3
            (i32.load
             (local.tee $1
              (i32.and
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 3)
               )
               (i32.const -4)
              )
             )
            )
           )
           (i32.store
            (local.get $2)
            (i32.add
             (local.get $1)
             (i32.const 4)
            )
           )
           (i64.store
            (local.get $0)
            (i64.extend_i32_u
             (local.get $3)
            )
           )
           (br $label$break$L1)
          )
          (local.set $5
           (i64.load
            (local.tee $1
             (i32.and
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 7)
              )
              (i32.const -8)
             )
            )
           )
          )
          (i32.store
           (local.get $2)
           (i32.add
            (local.get $1)
            (i32.const 8)
           )
          )
          (i64.store
           (local.get $0)
           (local.get $5)
          )
          (br $label$break$L1)
         )
         (local.set $3
          (i32.load
           (local.tee $1
            (i32.and
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 3)
             )
             (i32.const -4)
            )
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
         (i64.store
          (local.get $0)
          (i64.extend_i32_s
           (i32.shr_s
            (i32.shl
             (i32.and
              (local.get $3)
              (i32.const 65535)
             )
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
         (br $label$break$L1)
        )
        (local.set $3
         (i32.load
          (local.tee $1
           (i32.and
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
         )
        )
        (i32.store
         (local.get $2)
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
        (i64.store
         (local.get $0)
         (i64.extend_i32_u
          (i32.and
           (local.get $3)
           (i32.const 65535)
          )
         )
        )
        (br $label$break$L1)
       )
       (local.set $3
        (i32.load
         (local.tee $1
          (i32.and
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 3)
           )
           (i32.const -4)
          )
         )
        )
       )
       (i32.store
        (local.get $2)
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (i64.store
        (local.get $0)
        (i64.extend_i32_s
         (i32.shr_s
          (i32.shl
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
           (i32.const 24)
          )
          (i32.const 24)
         )
        )
       )
       (br $label$break$L1)
      )
      (local.set $3
       (i32.load
        (local.tee $1
         (i32.and
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 3)
          )
          (i32.const -4)
         )
        )
       )
      )
      (i32.store
       (local.get $2)
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
      (i64.store
       (local.get $0)
       (i64.extend_i32_u
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
       )
      )
      (br $label$break$L1)
     )
     (local.set $4
      (f64.load
       (local.tee $1
        (i32.and
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 7)
         )
         (i32.const -8)
        )
       )
      )
     )
     (i32.store
      (local.get $2)
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (f64.store
      (local.get $0)
      (local.get $4)
     )
     (br $label$break$L1)
    )
    (local.set $4
     (f64.load
      (local.tee $1
       (i32.and
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const 7)
        )
        (i32.const -8)
       )
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.add
      (local.get $1)
      (i32.const 8)
     )
    )
    (f64.store
     (local.get $0)
     (local.get $4)
    )
   )
  )
 )
 (func $_fmt_x (; 309 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i64.ne
    (local.get $0)
    (i64.const 0)
   )
   (loop $while-in
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (local.get $2)
      (i32.load8_u
       (i32.add
        (i32.and
         (i32.wrap_i64
          (local.get $0)
         )
         (i32.const 15)
        )
        (i32.const 16352)
       )
      )
     )
    )
    (br_if $while-in
     (i64.ne
      (local.tee $0
       (i64.shr_u
        (local.get $0)
        (i64.const 4)
       )
      )
      (i64.const 0)
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_fmt_o (; 310 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (result i32)
  (if
   (i64.ne
    (local.get $0)
    (i64.const 0)
   )
   (loop $while-in
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.and
       (i32.wrap_i64
        (local.get $0)
       )
       (i32.const 7)
      )
      (i32.const 48)
     )
    )
    (br_if $while-in
     (i64.ne
      (local.tee $0
       (i64.shr_u
        (local.get $0)
        (i64.const 3)
       )
      )
      (i64.const 0)
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_fmt_u (; 311 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local.set $2
   (i32.wrap_i64
    (local.get $0)
   )
  )
  (if
   (i64.gt_u
    (local.get $0)
    (i64.const 4294967295)
   )
   (block
    (loop $while-in
     (i32.store8
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const -1)
       )
      )
      (i32.or
       (i32.and
        (i32.wrap_i64
         (i64.sub
          (local.get $0)
          (i64.mul
           (local.tee $3
            (i64.div_u
             (local.get $0)
             (i64.const 10)
            )
           )
           (i64.const 10)
          )
         )
        )
        (i32.const 255)
       )
       (i32.const 48)
      )
     )
     (if
      (i64.gt_u
       (local.get $0)
       (i64.const 42949672959)
      )
      (block
       (local.set $0
        (local.get $3)
       )
       (br $while-in)
      )
     )
    )
    (local.set $2
     (i32.wrap_i64
      (local.get $3)
     )
    )
   )
  )
  (if
   (local.get $2)
   (loop $while-in1
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.sub
       (local.get $2)
       (i32.mul
        (local.tee $4
         (i32.div_u
          (local.get $2)
          (i32.const 10)
         )
        )
        (i32.const 10)
       )
      )
      (i32.const 48)
     )
    )
    (if
     (i32.ge_u
      (local.get $2)
      (i32.const 10)
     )
     (block
      (local.set $2
       (local.get $4)
      )
      (br $while-in1)
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_memchr (; 312 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (block $__rjto$3
   (block $__rjti$3
    (block $__rjti$2
     (if
      (i32.and
       (local.tee $2
        (i32.ne
         (local.get $1)
         (i32.const 0)
        )
       )
       (i32.ne
        (i32.and
         (local.get $0)
         (i32.const 3)
        )
        (i32.const 0)
       )
      )
      (loop $while-in
       (br_if $__rjti$2
        (i32.eqz
         (i32.load8_u
          (local.get $0)
         )
        )
       )
       (br_if $while-in
        (i32.and
         (local.tee $2
          (i32.ne
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const -1)
            )
           )
           (i32.const 0)
          )
         )
         (i32.ne
          (i32.and
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (i32.const 3)
          )
          (i32.const 0)
         )
        )
       )
      )
     )
     (br_if $__rjti$3
      (i32.eqz
       (local.get $2)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load8_u
       (local.get $0)
      )
     )
     (block
      (br_if $__rjti$3
       (i32.eqz
        (local.get $1)
       )
      )
      (br $__rjto$3)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.le_u
        (local.get $1)
        (i32.const 3)
       )
      )
      (loop $while-in3
       (if
        (i32.eqz
         (i32.and
          (i32.add
           (local.tee $2
            (i32.load
             (local.get $0)
            )
           )
           (i32.const -16843009)
          )
          (i32.xor
           (i32.and
            (local.get $2)
            (i32.const -2139062144)
           )
           (i32.const -2139062144)
          )
         )
        )
        (block
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 4)
          )
         )
         (br_if $while-in3
          (i32.gt_u
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const -4)
            )
           )
           (i32.const 3)
          )
         )
         (br $__rjti$0)
        )
       )
      )
      (br $__rjto$0)
     )
     (br_if $__rjti$3
      (i32.eqz
       (local.get $1)
      )
     )
    )
    (loop $while-in5
     (br_if $__rjto$3
      (i32.eqz
       (i32.load8_u
        (local.get $0)
       )
      )
     )
     (br_if $__rjti$3
      (i32.eqz
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const -1)
        )
       )
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
   (local.set $0
    (i32.const 0)
   )
  )
  (local.get $0)
 )
 (func $_pad_661 (; 313 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (local.set $5
   (local.get $6)
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.get $4)
      (i32.const 73728)
     )
    )
    (i32.gt_s
     (local.get $2)
     (local.get $3)
    )
   )
   (block
    (drop
     (call $_memset
      (local.get $5)
      (i32.shr_s
       (i32.shl
        (local.get $1)
        (i32.const 24)
       )
       (i32.const 24)
      )
      (select
       (local.tee $1
        (i32.sub
         (local.get $2)
         (local.get $3)
        )
       )
       (i32.const 256)
       (i32.lt_u
        (local.get $1)
        (i32.const 256)
       )
      )
     )
    )
    (if
     (i32.gt_u
      (local.get $1)
      (i32.const 255)
     )
     (block
      (local.set $2
       (i32.sub
        (local.get $2)
        (local.get $3)
       )
      )
      (loop $while-in
       (call $_out
        (local.get $0)
        (local.get $5)
        (i32.const 256)
       )
       (br_if $while-in
        (i32.gt_u
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const -256)
          )
         )
         (i32.const 255)
        )
       )
      )
      (local.set $1
       (i32.and
        (local.get $2)
        (i32.const 255)
       )
      )
     )
    )
    (call $_out
     (local.get $0)
     (local.get $5)
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_wctomb (; 314 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.get $0)
   (call $_wcrtomb
    (local.get $0)
    (local.get $1)
   )
   (i32.const 0)
  )
 )
 (func $_fmt_fp (; 315 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f64)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i64)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i64)
  (local $27 i64)
  (local $28 i32)
  (local.set $23
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 560)
   )
  )
  (local.set $7
   (i32.add
    (local.get $23)
    (i32.const 32)
   )
  )
  (local.set $18
   (local.tee $13
    (local.get $23)
   )
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.get $13)
     (i32.const 536)
    )
   )
   (i32.const 0)
  )
  (local.set $15
   (i32.add
    (local.tee $12
     (i32.add
      (local.get $13)
      (i32.const 540)
     )
    )
    (i32.const 12)
   )
  )
  (local.set $20
   (if (result i32)
    (i64.lt_s
     (local.tee $22
      (i64.reinterpret_f64
       (local.get $1)
      )
     )
     (i64.const 0)
    )
    (block (result i32)
     (local.set $22
      (i64.reinterpret_f64
       (local.tee $1
        (f64.neg
         (local.get $1)
        )
       )
      )
     )
     (local.set $19
      (i32.const 24522)
     )
     (i32.const 1)
    )
    (block (result i32)
     (local.set $19
      (select
       (i32.const 24525)
       (select
        (i32.const 24528)
        (i32.const 24523)
        (i32.and
         (local.get $4)
         (i32.const 1)
        )
       )
       (i32.and
        (local.get $4)
        (i32.const 2048)
       )
      )
     )
     (i32.ne
      (i32.and
       (local.get $4)
       (i32.const 2049)
      )
      (i32.const 0)
     )
    )
   )
  )
  (local.set $0
   (if (result i32)
    (i64.eq
     (i64.and
      (local.get $22)
      (i64.const 9218868437227405312)
     )
     (i64.const 9218868437227405312)
    )
    (block (result i32)
     (local.set $5
      (select
       (select
        (i32.const 24564)
        (i32.const 24549)
        (local.tee $3
         (i32.ne
          (i32.and
           (local.get $5)
           (i32.const 32)
          )
          (i32.const 0)
         )
        )
       )
       (select
        (i32.const 24541)
        (i32.const 24545)
        (local.get $3)
       )
       (f64.ne
        (local.get $1)
        (local.get $1)
       )
      )
     )
     (call $_pad_661
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.tee $3
       (i32.add
        (local.get $20)
        (i32.const 3)
       )
      )
      (i32.and
       (local.get $4)
       (i32.const -65537)
      )
     )
     (call $_out
      (local.get $0)
      (local.get $19)
      (local.get $20)
     )
     (call $_out
      (local.get $0)
      (local.get $5)
      (i32.const 3)
     )
     (call $_pad_661
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.get $3)
      (i32.xor
       (local.get $4)
       (i32.const 8192)
      )
     )
     (local.get $3)
    )
    (block $do-once (result i32)
     (if
      (local.tee $6
       (f64.ne
        (local.tee $1
         (f64.mul
          (call $_frexp
           (local.get $1)
           (local.get $10)
          )
          (f64.const 2)
         )
        )
        (f64.const 0)
       )
      )
      (i32.store
       (local.get $10)
       (i32.add
        (i32.load
         (local.get $10)
        )
        (i32.const -1)
       )
      )
     )
     (if
      (i32.eq
       (local.tee $14
        (i32.or
         (local.get $5)
         (i32.const 32)
        )
       )
       (i32.const 97)
      )
      (block
       (local.set $8
        (select
         (i32.add
          (local.get $19)
          (i32.const 9)
         )
         (local.get $19)
         (local.tee $11
          (i32.and
           (local.get $5)
           (i32.const 32)
          )
         )
        )
       )
       (if
        (i32.eqz
         (i32.or
          (i32.eqz
           (local.tee $7
            (i32.sub
             (i32.const 12)
             (local.get $3)
            )
           )
          )
          (i32.gt_u
           (local.get $3)
           (i32.const 11)
          )
         )
        )
        (block
         (local.set $16
          (f64.const 8)
         )
         (loop $while-in
          (local.set $16
           (f64.mul
            (local.get $16)
            (f64.const 16)
           )
          )
          (br_if $while-in
           (local.tee $7
            (i32.add
             (local.get $7)
             (i32.const -1)
            )
           )
          )
         )
         (local.set $1
          (if (result f64)
           (i32.eq
            (i32.load8_s
             (local.get $8)
            )
            (i32.const 45)
           )
           (f64.neg
            (f64.add
             (local.get $16)
             (f64.sub
              (f64.neg
               (local.get $1)
              )
              (local.get $16)
             )
            )
           )
           (f64.sub
            (f64.add
             (local.get $1)
             (local.get $16)
            )
            (local.get $16)
           )
          )
         )
        )
       )
       (local.set $9
        (i32.or
         (local.get $20)
         (i32.const 2)
        )
       )
       (if
        (i32.eq
         (local.get $15)
         (local.tee $7
          (call $_fmt_u
           (i64.extend_i32_s
            (select
             (i32.sub
              (i32.const 0)
              (local.tee $6
               (i32.load
                (local.get $10)
               )
              )
             )
             (local.get $6)
             (i32.lt_s
              (local.get $6)
              (i32.const 0)
             )
            )
           )
           (local.get $15)
          )
         )
        )
        (i32.store8
         (local.tee $7
          (i32.add
           (local.get $12)
           (i32.const 11)
          )
         )
         (i32.const 48)
        )
       )
       (i32.store8
        (i32.add
         (local.get $7)
         (i32.const -1)
        )
        (i32.add
         (i32.and
          (i32.shr_s
           (local.get $6)
           (i32.const 31)
          )
          (i32.const 2)
         )
         (i32.const 43)
        )
       )
       (i32.store8
        (local.tee $7
         (i32.add
          (local.get $7)
          (i32.const -2)
         )
        )
        (i32.add
         (local.get $5)
         (i32.const 15)
        )
       )
       (local.set $12
        (i32.lt_s
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $10
        (i32.eqz
         (i32.and
          (local.get $4)
          (i32.const 8)
         )
        )
       )
       (local.set $5
        (local.get $13)
       )
       (loop $while-in3
        (i32.store8
         (local.get $5)
         (i32.or
          (local.get $11)
          (i32.load8_u
           (i32.add
            (local.tee $6
             (i32.trunc_f64_s
              (local.get $1)
             )
            )
            (i32.const 16352)
           )
          )
         )
        )
        (local.set $1
         (f64.mul
          (f64.sub
           (local.get $1)
           (f64.convert_i32_s
            (local.get $6)
           )
          )
          (f64.const 16)
         )
        )
        (local.set $5
         (if (result i32)
          (i32.eq
           (i32.sub
            (local.tee $6
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.get $18)
           )
           (i32.const 1)
          )
          (if (result i32)
           (i32.and
            (local.get $10)
            (i32.and
             (local.get $12)
             (f64.eq
              (local.get $1)
              (f64.const 0)
             )
            )
           )
           (local.get $6)
           (block (result i32)
            (i32.store8
             (local.get $6)
             (i32.const 46)
            )
            (i32.add
             (local.get $5)
             (i32.const 2)
            )
           )
          )
          (local.get $6)
         )
        )
        (br_if $while-in3
         (f64.ne
          (local.get $1)
          (f64.const 0)
         )
        )
       )
       (local.set $3
        (block $__rjto$0 (result i32)
         (block $__rjti$0
          (br_if $__rjti$0
           (i32.eqz
            (local.get $3)
           )
          )
          (br_if $__rjti$0
           (i32.ge_s
            (i32.add
             (local.get $5)
             (i32.sub
              (i32.const -2)
              (local.get $18)
             )
            )
            (local.get $3)
           )
          )
          (local.set $12
           (i32.sub
            (i32.add
             (local.get $15)
             (i32.add
              (local.get $3)
              (i32.const 2)
             )
            )
            (local.get $7)
           )
          )
          (br $__rjto$0
           (local.get $7)
          )
         )
         (local.set $12
          (i32.add
           (local.get $5)
           (i32.sub
            (i32.sub
             (local.get $15)
             (local.get $18)
            )
            (local.get $7)
           )
          )
         )
         (local.get $7)
        )
       )
       (call $_pad_661
        (local.get $0)
        (i32.const 32)
        (local.get $2)
        (local.tee $6
         (i32.add
          (local.get $9)
          (local.get $12)
         )
        )
        (local.get $4)
       )
       (call $_out
        (local.get $0)
        (local.get $8)
        (local.get $9)
       )
       (call $_pad_661
        (local.get $0)
        (i32.const 48)
        (local.get $2)
        (local.get $6)
        (i32.xor
         (local.get $4)
         (i32.const 65536)
        )
       )
       (call $_out
        (local.get $0)
        (local.get $13)
        (local.tee $5
         (i32.sub
          (local.get $5)
          (local.get $18)
         )
        )
       )
       (call $_pad_661
        (local.get $0)
        (i32.const 48)
        (i32.sub
         (local.get $12)
         (i32.add
          (local.get $5)
          (local.tee $3
           (i32.sub
            (local.get $15)
            (local.get $3)
           )
          )
         )
        )
        (i32.const 0)
        (i32.const 0)
       )
       (call $_out
        (local.get $0)
        (local.get $7)
        (local.get $3)
       )
       (call $_pad_661
        (local.get $0)
        (i32.const 32)
        (local.get $2)
        (local.get $6)
        (i32.xor
         (local.get $4)
         (i32.const 8192)
        )
       )
       (br $do-once
        (local.get $6)
       )
      )
     )
     (if
      (local.get $6)
      (block
       (i32.store
        (local.get $10)
        (local.tee $8
         (i32.add
          (i32.load
           (local.get $10)
          )
          (i32.const -28)
         )
        )
       )
       (local.set $1
        (f64.mul
         (local.get $1)
         (f64.const 268435456)
        )
       )
      )
      (local.set $8
       (i32.load
        (local.get $10)
       )
      )
     )
     (local.set $6
      (local.tee $12
       (select
        (local.get $7)
        (i32.add
         (local.get $7)
         (i32.const 288)
        )
        (i32.lt_s
         (local.get $8)
         (i32.const 0)
        )
       )
      )
     )
     (loop $while-in5
      (i32.store
       (local.get $6)
       (local.tee $7
        (i32.trunc_f64_u
         (local.get $1)
        )
       )
      )
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 4)
       )
      )
      (br_if $while-in5
       (f64.ne
        (local.tee $1
         (f64.mul
          (f64.sub
           (local.get $1)
           (f64.convert_i32_u
            (local.get $7)
           )
          )
          (f64.const 1e9)
         )
        )
        (f64.const 0)
       )
      )
     )
     (if
      (i32.gt_s
       (local.get $8)
       (i32.const 0)
      )
      (block
       (local.set $7
        (local.get $12)
       )
       (loop $while-in7
        (local.set $11
         (select
          (local.get $8)
          (i32.const 29)
          (i32.lt_s
           (local.get $8)
           (i32.const 29)
          )
         )
        )
        (if
         (i32.ge_u
          (local.tee $8
           (i32.add
            (local.get $6)
            (i32.const -4)
           )
          )
          (local.get $7)
         )
         (block
          (local.set $26
           (i64.extend_i32_u
            (local.get $11)
           )
          )
          (local.set $9
           (i32.const 0)
          )
          (loop $while-in9
           (local.set $22
            (i64.div_u
             (local.tee $27
              (i64.add
               (i64.extend_i32_u
                (local.get $9)
               )
               (i64.shl
                (i64.extend_i32_u
                 (i32.load
                  (local.get $8)
                 )
                )
                (local.get $26)
               )
              )
             )
             (i64.const 1000000000)
            )
           )
           (i64.store32
            (local.get $8)
            (i64.sub
             (local.get $27)
             (i64.mul
              (local.get $22)
              (i64.const 1000000000)
             )
            )
           )
           (local.set $9
            (i32.wrap_i64
             (local.get $22)
            )
           )
           (br_if $while-in9
            (i32.ge_u
             (local.tee $8
              (i32.add
               (local.get $8)
               (i32.const -4)
              )
             )
             (local.get $7)
            )
           )
          )
          (if
           (local.get $9)
           (i32.store
            (local.tee $7
             (i32.add
              (local.get $7)
              (i32.const -4)
             )
            )
            (local.get $9)
           )
          )
         )
        )
        (if
         (i32.gt_u
          (local.get $6)
          (local.get $7)
         )
         (block $label$break$L57
          (local.set $6
           (loop $while-in12 (result i32)
            (br_if $label$break$L57
             (i32.load
              (local.tee $8
               (i32.add
                (local.get $6)
                (i32.const -4)
               )
              )
             )
            )
            (if (result i32)
             (i32.gt_u
              (local.get $8)
              (local.get $7)
             )
             (block
              (local.set $6
               (local.get $8)
              )
              (br $while-in12)
             )
             (local.get $8)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $10)
         (local.tee $8
          (i32.sub
           (i32.load
            (local.get $10)
           )
           (local.get $11)
          )
         )
        )
        (br_if $while-in7
         (i32.gt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
      (local.set $7
       (local.get $12)
      )
     )
     (local.set $11
      (select
       (i32.const 6)
       (local.get $3)
       (i32.lt_s
        (local.get $3)
        (i32.const 0)
       )
      )
     )
     (if
      (i32.lt_s
       (local.get $8)
       (i32.const 0)
      )
      (block
       (local.set $17
        (i32.add
         (i32.div_s
          (i32.add
           (local.get $11)
           (i32.const 25)
          )
          (i32.const 9)
         )
         (i32.const 1)
        )
       )
       (local.set $21
        (i32.eq
         (local.get $14)
         (i32.const 102)
        )
       )
       (local.set $3
        (local.get $6)
       )
       (loop $while-in14
        (local.set $9
         (select
          (local.tee $6
           (i32.sub
            (i32.const 0)
            (local.get $8)
           )
          )
          (i32.const 9)
          (i32.lt_s
           (local.get $6)
           (i32.const 9)
          )
         )
        )
        (local.set $8
         (select
          (i32.add
           (local.tee $7
            (select
             (local.get $12)
             (local.tee $3
              (if (result i32)
               (i32.lt_u
                (local.get $7)
                (local.get $3)
               )
               (block (result i32)
                (local.set $24
                 (i32.add
                  (i32.shl
                   (i32.const 1)
                   (local.get $9)
                  )
                  (i32.const -1)
                 )
                )
                (local.set $25
                 (i32.shr_u
                  (i32.const 1000000000)
                  (local.get $9)
                 )
                )
                (local.set $8
                 (i32.const 0)
                )
                (local.set $6
                 (local.get $7)
                )
                (loop $while-in16
                 (i32.store
                  (local.get $6)
                  (i32.add
                   (local.get $8)
                   (i32.shr_u
                    (local.tee $8
                     (i32.load
                      (local.get $6)
                     )
                    )
                    (local.get $9)
                   )
                  )
                 )
                 (local.set $8
                  (i32.mul
                   (local.get $25)
                   (i32.and
                    (local.get $8)
                    (local.get $24)
                   )
                  )
                 )
                 (br_if $while-in16
                  (i32.lt_u
                   (local.tee $6
                    (i32.add
                     (local.get $6)
                     (i32.const 4)
                    )
                   )
                   (local.get $3)
                  )
                 )
                )
                (local.set $7
                 (select
                  (local.get $7)
                  (i32.add
                   (local.get $7)
                   (i32.const 4)
                  )
                  (i32.load
                   (local.get $7)
                  )
                 )
                )
                (if (result i32)
                 (local.get $8)
                 (block (result i32)
                  (i32.store
                   (local.get $3)
                   (local.get $8)
                  )
                  (local.set $6
                   (i32.add
                    (local.get $3)
                    (i32.const 4)
                   )
                  )
                  (local.get $7)
                 )
                 (block (result i32)
                  (local.set $6
                   (local.get $3)
                  )
                  (local.get $7)
                 )
                )
               )
               (block (result i32)
                (local.set $6
                 (local.get $3)
                )
                (select
                 (local.get $7)
                 (i32.add
                  (local.get $7)
                  (i32.const 4)
                 )
                 (i32.load
                  (local.get $7)
                 )
                )
               )
              )
             )
             (local.get $21)
            )
           )
           (i32.shl
            (local.get $17)
            (i32.const 2)
           )
          )
          (local.get $6)
          (i32.gt_s
           (i32.shr_s
            (i32.sub
             (local.get $6)
             (local.get $7)
            )
            (i32.const 2)
           )
           (local.get $17)
          )
         )
        )
        (i32.store
         (local.get $10)
         (local.tee $6
          (i32.add
           (local.get $9)
           (i32.load
            (local.get $10)
           )
          )
         )
        )
        (if
         (i32.lt_s
          (local.get $6)
          (i32.const 0)
         )
         (block
          (local.set $7
           (local.get $3)
          )
          (local.set $3
           (local.get $8)
          )
          (local.set $8
           (local.get $6)
          )
          (br $while-in14)
         )
        )
       )
      )
      (block
       (local.set $3
        (local.get $7)
       )
       (local.set $8
        (local.get $6)
       )
      )
     )
     (local.set $17
      (local.get $12)
     )
     (if
      (i32.lt_u
       (local.get $3)
       (local.get $8)
      )
      (block
       (local.set $7
        (i32.mul
         (i32.shr_s
          (i32.sub
           (local.get $17)
           (local.get $3)
          )
          (i32.const 2)
         )
         (i32.const 9)
        )
       )
       (if
        (i32.ge_u
         (local.tee $9
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 10)
        )
        (block
         (local.set $6
          (i32.const 10)
         )
         (loop $while-in18
          (local.set $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (br_if $while-in18
           (i32.ge_u
            (local.get $9)
            (local.tee $6
             (i32.mul
              (local.get $6)
              (i32.const 10)
             )
            )
           )
          )
         )
        )
       )
      )
      (local.set $7
       (i32.const 0)
      )
     )
     (local.set $7
      (if (result i32)
       (i32.lt_s
        (local.tee $6
         (i32.add
          (i32.sub
           (local.get $11)
           (select
            (i32.const 0)
            (local.get $7)
            (i32.eq
             (local.get $14)
             (i32.const 102)
            )
           )
          )
          (i32.shr_s
           (i32.shl
            (i32.and
             (local.tee $24
              (i32.eq
               (local.get $14)
               (i32.const 103)
              )
             )
             (local.tee $25
              (i32.ne
               (local.get $11)
               (i32.const 0)
              )
             )
            )
            (i32.const 31)
           )
           (i32.const 31)
          )
         )
        )
        (i32.add
         (i32.mul
          (i32.shr_s
           (i32.sub
            (local.get $8)
            (local.get $17)
           )
           (i32.const 2)
          )
          (i32.const 9)
         )
         (i32.const -9)
        )
       )
       (block (result i32)
        (local.set $14
         (i32.div_s
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const 9216)
           )
          )
          (i32.const 9)
         )
        )
        (if
         (i32.lt_s
          (local.tee $6
           (i32.sub
            (local.get $6)
            (i32.mul
             (local.get $14)
             (i32.const 9)
            )
           )
          )
          (i32.const 8)
         )
         (block
          (local.set $9
           (i32.const 10)
          )
          (loop $while-in20
           (local.set $10
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
           (local.set $9
            (i32.mul
             (local.get $9)
             (i32.const 10)
            )
           )
           (if
            (i32.lt_s
             (local.get $6)
             (i32.const 7)
            )
            (block
             (local.set $6
              (local.get $10)
             )
             (br $while-in20)
            )
           )
          )
         )
         (local.set $9
          (i32.const 10)
         )
        )
        (local.set $21
         (i32.div_u
          (local.tee $14
           (i32.load
            (local.tee $6
             (i32.add
              (i32.add
               (i32.shl
                (local.get $14)
                (i32.const 2)
               )
               (local.get $12)
              )
              (i32.const -4092)
             )
            )
           )
          )
          (local.get $9)
         )
        )
        (if
         (i32.eqz
          (i32.and
           (local.tee $28
            (i32.eq
             (local.get $8)
             (i32.add
              (local.get $6)
              (i32.const 4)
             )
            )
           )
           (i32.eqz
            (local.tee $10
             (i32.sub
              (local.get $14)
              (i32.mul
               (local.get $9)
               (local.get $21)
              )
             )
            )
           )
          )
         )
         (block
          (local.set $1
           (select
            (f64.const 9007199254740994)
            (f64.const 9007199254740992)
            (i32.and
             (local.get $21)
             (i32.const 1)
            )
           )
          )
          (local.set $16
           (select
            (f64.const 0.5)
            (select
             (f64.const 1)
             (f64.const 1.5)
             (i32.and
              (local.get $28)
              (i32.eq
               (local.get $10)
               (local.tee $21
                (i32.shr_u
                 (local.get $9)
                 (i32.const 1)
                )
               )
              )
             )
            )
            (i32.lt_u
             (local.get $10)
             (local.get $21)
            )
           )
          )
          (if
           (local.get $20)
           (block
            (local.set $16
             (select
              (f64.neg
               (local.get $16)
              )
              (local.get $16)
              (local.tee $21
               (i32.eq
                (i32.load8_s
                 (local.get $19)
                )
                (i32.const 45)
               )
              )
             )
            )
            (local.set $1
             (select
              (f64.neg
               (local.get $1)
              )
              (local.get $1)
              (local.get $21)
             )
            )
           )
          )
          (i32.store
           (local.get $6)
           (local.tee $10
            (i32.sub
             (local.get $14)
             (local.get $10)
            )
           )
          )
          (if
           (f64.ne
            (f64.add
             (local.get $1)
             (local.get $16)
            )
            (local.get $1)
           )
           (block
            (i32.store
             (local.get $6)
             (local.tee $7
              (i32.add
               (local.get $9)
               (local.get $10)
              )
             )
            )
            (if
             (i32.gt_u
              (local.get $7)
              (i32.const 999999999)
             )
             (loop $while-in22
              (i32.store
               (local.get $6)
               (i32.const 0)
              )
              (if
               (i32.lt_u
                (local.tee $6
                 (i32.add
                  (local.get $6)
                  (i32.const -4)
                 )
                )
                (local.get $3)
               )
               (i32.store
                (local.tee $3
                 (i32.add
                  (local.get $3)
                  (i32.const -4)
                 )
                )
                (i32.const 0)
               )
              )
              (i32.store
               (local.get $6)
               (local.tee $7
                (i32.add
                 (i32.load
                  (local.get $6)
                 )
                 (i32.const 1)
                )
               )
              )
              (br_if $while-in22
               (i32.gt_u
                (local.get $7)
                (i32.const 999999999)
               )
              )
             )
            )
            (local.set $7
             (i32.mul
              (i32.shr_s
               (i32.sub
                (local.get $17)
                (local.get $3)
               )
               (i32.const 2)
              )
              (i32.const 9)
             )
            )
            (if
             (i32.ge_u
              (local.tee $10
               (i32.load
                (local.get $3)
               )
              )
              (i32.const 10)
             )
             (block
              (local.set $9
               (i32.const 10)
              )
              (loop $while-in24
               (local.set $7
                (i32.add
                 (local.get $7)
                 (i32.const 1)
                )
               )
               (br_if $while-in24
                (i32.ge_u
                 (local.get $10)
                 (local.tee $9
                  (i32.mul
                   (local.get $9)
                   (i32.const 10)
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
        )
        (local.set $9
         (local.get $7)
        )
        (local.set $6
         (select
          (local.tee $7
           (i32.add
            (local.get $6)
            (i32.const 4)
           )
          )
          (local.get $8)
          (i32.gt_u
           (local.get $8)
           (local.get $7)
          )
         )
        )
        (local.get $3)
       )
       (block (result i32)
        (local.set $9
         (local.get $7)
        )
        (local.set $6
         (local.get $8)
        )
        (local.get $3)
       )
      )
     )
     (local.set $14
      (if (result i32)
       (i32.gt_u
        (local.get $6)
        (local.get $7)
       )
       (block $label$break$L109 (result i32)
        (local.set $3
         (local.get $6)
        )
        (loop $while-in27 (result i32)
         (if
          (i32.load
           (local.tee $6
            (i32.add
             (local.get $3)
             (i32.const -4)
            )
           )
          )
          (block
           (local.set $6
            (local.get $3)
           )
           (br $label$break$L109
            (i32.const 1)
           )
          )
         )
         (if (result i32)
          (i32.gt_u
           (local.get $6)
           (local.get $7)
          )
          (block
           (local.set $3
            (local.get $6)
           )
           (br $while-in27)
          )
          (i32.const 0)
         )
        )
       )
       (i32.const 0)
      )
     )
     (local.set $3
      (if (result i32)
       (local.get $24)
       (block (result i32)
        (local.set $5
         (if (result i32)
          (i32.and
           (i32.gt_s
            (local.tee $3
             (i32.add
              (i32.and
               (i32.xor
                (local.get $25)
                (i32.const 1)
               )
               (i32.const 1)
              )
              (local.get $11)
             )
            )
            (local.get $9)
           )
           (i32.gt_s
            (local.get $9)
            (i32.const -5)
           )
          )
          (block (result i32)
           (local.set $10
            (i32.sub
             (i32.add
              (local.get $3)
              (i32.const -1)
             )
             (local.get $9)
            )
           )
           (i32.add
            (local.get $5)
            (i32.const -1)
           )
          )
          (block (result i32)
           (local.set $10
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
           (i32.add
            (local.get $5)
            (i32.const -2)
           )
          )
         )
        )
        (if (result i32)
         (i32.and
          (local.get $4)
          (i32.const 8)
         )
         (local.get $10)
         (block (result i32)
          (if
           (local.get $14)
           (if
            (local.tee $11
             (i32.load
              (i32.add
               (local.get $6)
               (i32.const -4)
              )
             )
            )
            (if
             (i32.rem_u
              (local.get $11)
              (i32.const 10)
             )
             (local.set $3
              (i32.const 0)
             )
             (block
              (local.set $3
               (i32.const 0)
              )
              (local.set $8
               (i32.const 10)
              )
              (loop $while-in31
               (local.set $3
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (br_if $while-in31
                (i32.eqz
                 (i32.rem_u
                  (local.get $11)
                  (local.tee $8
                   (i32.mul
                    (local.get $8)
                    (i32.const 10)
                   )
                  )
                 )
                )
               )
              )
             )
            )
            (local.set $3
             (i32.const 9)
            )
           )
           (local.set $3
            (i32.const 9)
           )
          )
          (local.set $8
           (i32.add
            (i32.mul
             (i32.shr_s
              (i32.sub
               (local.get $6)
               (local.get $17)
              )
              (i32.const 2)
             )
             (i32.const 9)
            )
            (i32.const -9)
           )
          )
          (if (result i32)
           (i32.eq
            (i32.or
             (local.get $5)
             (i32.const 32)
            )
            (i32.const 102)
           )
           (select
            (local.get $10)
            (local.tee $3
             (select
              (local.tee $3
               (i32.sub
                (local.get $8)
                (local.get $3)
               )
              )
              (i32.const 0)
              (i32.gt_s
               (local.get $3)
               (i32.const 0)
              )
             )
            )
            (i32.lt_s
             (local.get $10)
             (local.get $3)
            )
           )
           (select
            (local.get $10)
            (local.tee $3
             (select
              (local.tee $3
               (i32.sub
                (i32.add
                 (local.get $8)
                 (local.get $9)
                )
                (local.get $3)
               )
              )
              (i32.const 0)
              (i32.gt_s
               (local.get $3)
               (i32.const 0)
              )
             )
            )
            (i32.lt_s
             (local.get $10)
             (local.get $3)
            )
           )
          )
         )
        )
       )
       (local.get $11)
      )
     )
     (local.set $8
      (i32.sub
       (i32.const 0)
       (local.get $9)
      )
     )
     (call $_pad_661
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.tee $9
       (i32.add
        (if (result i32)
         (local.tee $11
          (i32.eq
           (i32.or
            (local.get $5)
            (i32.const 32)
           )
           (i32.const 102)
          )
         )
         (block (result i32)
          (local.set $8
           (i32.const 0)
          )
          (select
           (local.get $9)
           (i32.const 0)
           (i32.gt_s
            (local.get $9)
            (i32.const 0)
           )
          )
         )
         (block (result i32)
          (local.set $8
           (call $_fmt_u
            (i64.extend_i32_s
             (select
              (local.get $8)
              (local.get $9)
              (i32.lt_s
               (local.get $9)
               (i32.const 0)
              )
             )
            )
            (local.get $15)
           )
          )
          (if
           (i32.lt_s
            (i32.sub
             (local.tee $10
              (local.get $15)
             )
             (local.get $8)
            )
            (i32.const 2)
           )
           (loop $while-in33
            (i32.store8
             (local.tee $8
              (i32.add
               (local.get $8)
               (i32.const -1)
              )
             )
             (i32.const 48)
            )
            (br_if $while-in33
             (i32.lt_s
              (i32.sub
               (local.get $10)
               (local.get $8)
              )
              (i32.const 2)
             )
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $8)
            (i32.const -1)
           )
           (i32.add
            (i32.and
             (i32.shr_s
              (local.get $9)
              (i32.const 31)
             )
             (i32.const 2)
            )
            (i32.const 43)
           )
          )
          (i32.store8
           (local.tee $8
            (i32.add
             (local.get $8)
             (i32.const -2)
            )
           )
           (local.get $5)
          )
          (i32.sub
           (local.get $10)
           (local.get $8)
          )
         )
        )
        (i32.add
         (i32.add
          (local.get $3)
          (i32.add
           (local.get $20)
           (i32.const 1)
          )
         )
         (select
          (i32.const 1)
          (i32.and
           (i32.shr_u
            (local.get $4)
            (i32.const 3)
           )
           (i32.const 1)
          )
          (local.tee $10
           (i32.ne
            (local.get $3)
            (i32.const 0)
           )
          )
         )
        )
       )
      )
      (local.get $4)
     )
     (call $_out
      (local.get $0)
      (local.get $19)
      (local.get $20)
     )
     (call $_pad_661
      (local.get $0)
      (i32.const 48)
      (local.get $2)
      (local.get $9)
      (i32.xor
       (local.get $4)
       (i32.const 65536)
      )
     )
     (if
      (local.get $11)
      (block
       (local.set $11
        (local.tee $8
         (i32.add
          (local.get $13)
          (i32.const 9)
         )
        )
       )
       (local.set $15
        (i32.add
         (local.get $13)
         (i32.const 8)
        )
       )
       (local.set $7
        (local.tee $17
         (select
          (local.get $12)
          (local.get $7)
          (i32.gt_u
           (local.get $7)
           (local.get $12)
          )
         )
        )
       )
       (loop $while-in35
        (local.set $5
         (call $_fmt_u
          (i64.extend_i32_u
           (i32.load
            (local.get $7)
           )
          )
          (local.get $8)
         )
        )
        (if
         (i32.eq
          (local.get $7)
          (local.get $17)
         )
         (if
          (i32.eq
           (local.get $5)
           (local.get $8)
          )
          (block
           (i32.store8
            (local.get $15)
            (i32.const 48)
           )
           (local.set $5
            (local.get $15)
           )
          )
         )
         (if
          (i32.gt_u
           (local.get $5)
           (local.get $13)
          )
          (block
           (drop
            (call $_memset
             (local.get $13)
             (i32.const 48)
             (i32.sub
              (local.get $5)
              (local.get $18)
             )
            )
           )
           (loop $while-in37
            (br_if $while-in37
             (i32.gt_u
              (local.tee $5
               (i32.add
                (local.get $5)
                (i32.const -1)
               )
              )
              (local.get $13)
             )
            )
           )
          )
         )
        )
        (call $_out
         (local.get $0)
         (local.get $5)
         (i32.sub
          (local.get $11)
          (local.get $5)
         )
        )
        (if
         (i32.le_u
          (local.tee $5
           (i32.add
            (local.get $7)
            (i32.const 4)
           )
          )
          (local.get $12)
         )
         (block
          (local.set $7
           (local.get $5)
          )
          (br $while-in35)
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (i32.eqz
           (i32.and
            (local.get $4)
            (i32.const 8)
           )
          )
          (i32.xor
           (local.get $10)
           (i32.const 1)
          )
         )
        )
        (call $_out
         (local.get $0)
         (i32.const 24553)
         (i32.const 1)
        )
       )
       (call $_pad_661
        (local.get $0)
        (i32.const 48)
        (i32.add
         (if (result i32)
          (i32.and
           (i32.lt_u
            (local.get $5)
            (local.get $6)
           )
           (i32.gt_s
            (local.get $3)
            (i32.const 0)
           )
          )
          (loop $while-in39 (result i32)
           (if
            (i32.gt_u
             (local.tee $7
              (call $_fmt_u
               (i64.extend_i32_u
                (i32.load
                 (local.get $5)
                )
               )
               (local.get $8)
              )
             )
             (local.get $13)
            )
            (block
             (drop
              (call $_memset
               (local.get $13)
               (i32.const 48)
               (i32.sub
                (local.get $7)
                (local.get $18)
               )
              )
             )
             (loop $while-in41
              (br_if $while-in41
               (i32.gt_u
                (local.tee $7
                 (i32.add
                  (local.get $7)
                  (i32.const -1)
                 )
                )
                (local.get $13)
               )
              )
             )
            )
           )
           (call $_out
            (local.get $0)
            (local.get $7)
            (select
             (local.get $3)
             (i32.const 9)
             (i32.lt_s
              (local.get $3)
              (i32.const 9)
             )
            )
           )
           (local.set $7
            (i32.add
             (local.get $3)
             (i32.const -9)
            )
           )
           (if (result i32)
            (i32.and
             (i32.lt_u
              (local.tee $5
               (i32.add
                (local.get $5)
                (i32.const 4)
               )
              )
              (local.get $6)
             )
             (i32.gt_s
              (local.get $3)
              (i32.const 9)
             )
            )
            (block
             (local.set $3
              (local.get $7)
             )
             (br $while-in39)
            )
            (local.get $7)
           )
          )
          (local.get $3)
         )
         (i32.const 9)
        )
        (i32.const 9)
        (i32.const 0)
       )
      )
      (block
       (call $_pad_661
        (local.get $0)
        (i32.const 48)
        (i32.add
         (if (result i32)
          (i32.and
           (i32.lt_u
            (local.get $7)
            (local.tee $17
             (select
              (local.get $6)
              (i32.add
               (local.get $7)
               (i32.const 4)
              )
              (local.get $14)
             )
            )
           )
           (i32.gt_s
            (local.get $3)
            (i32.const -1)
           )
          )
          (block (result i32)
           (local.set $20
            (i32.eqz
             (i32.and
              (local.get $4)
              (i32.const 8)
             )
            )
           )
           (local.set $19
            (local.tee $11
             (i32.add
              (local.get $13)
              (i32.const 9)
             )
            )
           )
           (local.set $18
            (i32.sub
             (i32.const 0)
             (local.get $18)
            )
           )
           (local.set $10
            (i32.add
             (local.get $13)
             (i32.const 8)
            )
           )
           (local.set $5
            (local.get $3)
           )
           (local.set $6
            (local.get $7)
           )
           (loop $while-in43 (result i32)
            (if
             (i32.eq
              (local.get $11)
              (local.tee $3
               (call $_fmt_u
                (i64.extend_i32_u
                 (i32.load
                  (local.get $6)
                 )
                )
                (local.get $11)
               )
              )
             )
             (block
              (i32.store8
               (local.get $10)
               (i32.const 48)
              )
              (local.set $3
               (local.get $10)
              )
             )
            )
            (block $do-once44
             (if
              (i32.eq
               (local.get $6)
               (local.get $7)
              )
              (block
               (local.set $12
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (call $_out
                (local.get $0)
                (local.get $3)
                (i32.const 1)
               )
               (if
                (i32.and
                 (local.get $20)
                 (i32.lt_s
                  (local.get $5)
                  (i32.const 1)
                 )
                )
                (block
                 (local.set $3
                  (local.get $12)
                 )
                 (br $do-once44)
                )
               )
               (call $_out
                (local.get $0)
                (i32.const 24553)
                (i32.const 1)
               )
               (local.set $3
                (local.get $12)
               )
              )
              (block
               (br_if $do-once44
                (i32.le_u
                 (local.get $3)
                 (local.get $13)
                )
               )
               (drop
                (call $_memset
                 (local.get $13)
                 (i32.const 48)
                 (i32.add
                  (local.get $3)
                  (local.get $18)
                 )
                )
               )
               (loop $while-in47
                (br_if $while-in47
                 (i32.gt_u
                  (local.tee $3
                   (i32.add
                    (local.get $3)
                    (i32.const -1)
                   )
                  )
                  (local.get $13)
                 )
                )
               )
              )
             )
            )
            (call $_out
             (local.get $0)
             (local.get $3)
             (select
              (local.tee $3
               (i32.sub
                (local.get $19)
                (local.get $3)
               )
              )
              (local.get $5)
              (i32.gt_s
               (local.get $5)
               (local.get $3)
              )
             )
            )
            (br_if $while-in43
             (i32.and
              (i32.lt_u
               (local.tee $6
                (i32.add
                 (local.get $6)
                 (i32.const 4)
                )
               )
               (local.get $17)
              )
              (i32.gt_s
               (local.tee $5
                (i32.sub
                 (local.get $5)
                 (local.get $3)
                )
               )
               (i32.const -1)
              )
             )
            )
            (local.get $5)
           )
          )
          (local.get $3)
         )
         (i32.const 18)
        )
        (i32.const 18)
        (i32.const 0)
       )
       (call $_out
        (local.get $0)
        (local.get $8)
        (i32.sub
         (local.get $15)
         (local.get $8)
        )
       )
      )
     )
     (call $_pad_661
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.get $9)
      (i32.xor
       (local.get $4)
       (i32.const 8192)
      )
     )
     (local.get $9)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $23)
  )
  (select
   (local.get $2)
   (local.get $0)
   (i32.lt_s
    (local.get $0)
    (local.get $2)
   )
  )
 )
 (func $_frexp (; 316 ;) (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  (block $switch
   (block $switch-default
    (if
     (local.tee $4
      (i32.and
       (i32.wrap_i64
        (local.tee $3
         (i64.shr_u
          (local.tee $2
           (i64.reinterpret_f64
            (local.get $0)
           )
          )
          (i64.const 52)
         )
        )
       )
       (i32.const 2047)
      )
     )
     (if
      (i32.eq
       (local.get $4)
       (i32.const 2047)
      )
      (br $switch)
      (br $switch-default)
     )
    )
    (i32.store
     (local.get $1)
     (if (result i32)
      (f64.ne
       (local.get $0)
       (f64.const 0)
      )
      (block (result i32)
       (local.set $0
        (call $_frexp
         (f64.mul
          (local.get $0)
          (f64.const 18446744073709551615)
         )
         (local.get $1)
        )
       )
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const -64)
       )
      )
      (i32.const 0)
     )
    )
    (br $switch)
   )
   (i32.store
    (local.get $1)
    (i32.add
     (i32.and
      (i32.wrap_i64
       (local.get $3)
      )
      (i32.const 2047)
     )
     (i32.const -1022)
    )
   )
   (local.set $0
    (f64.reinterpret_i64
     (i64.or
      (i64.and
       (local.get $2)
       (i64.const -9218868437227405313)
      )
      (i64.const 4602678819172646912)
     )
    )
   )
  )
  (local.get $0)
 )
 (func $_wcrtomb (; 317 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.get $0)
   (block $do-once (result i32)
    (if
     (i32.lt_u
      (local.get $1)
      (i32.const 128)
     )
     (block
      (i32.store8
       (local.get $0)
       (local.get $1)
      )
      (br $do-once
       (i32.const 1)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (i32.load
        (i32.const 17080)
       )
      )
     )
     (if
      (i32.eq
       (i32.and
        (local.get $1)
        (i32.const -128)
       )
       (i32.const 57216)
      )
      (block
       (i32.store8
        (local.get $0)
        (local.get $1)
       )
       (br $do-once
        (i32.const 1)
       )
      )
      (block
       (i32.store
        (i32.const 26292)
        (i32.const 84)
       )
       (br $do-once
        (i32.const -1)
       )
      )
     )
    )
    (if
     (i32.lt_u
      (local.get $1)
      (i32.const 2048)
     )
     (block
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 6)
        )
        (i32.const 192)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (br $do-once
       (i32.const 2)
      )
     )
    )
    (if
     (i32.or
      (i32.eq
       (i32.and
        (local.get $1)
        (i32.const -8192)
       )
       (i32.const 57344)
      )
      (i32.lt_u
       (local.get $1)
       (i32.const 55296)
      )
     )
     (block
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 12)
        )
        (i32.const 224)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 6)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=2
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (br $do-once
       (i32.const 3)
      )
     )
    )
    (if (result i32)
     (i32.lt_u
      (i32.add
       (local.get $1)
       (i32.const -65536)
      )
      (i32.const 1048576)
     )
     (block (result i32)
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 18)
        )
        (i32.const 240)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 12)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=2
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 6)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=3
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.const 4)
     )
     (block (result i32)
      (i32.store
       (i32.const 26292)
       (i32.const 84)
      )
      (i32.const -1)
     )
    )
   )
   (i32.const 1)
  )
 )
 (func $___fwritex (; 318 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (block $label$break$L5
   (block $__rjti$0
    (br_if $__rjti$0
     (local.tee $3
      (i32.load
       (local.tee $4
        (i32.add
         (local.get $2)
         (i32.const 16)
        )
       )
      )
     )
    )
    (local.set $2
     (if (result i32)
      (call $___towrite
       (local.get $2)
      )
      (i32.const 0)
      (block
       (local.set $3
        (i32.load
         (local.get $4)
        )
       )
       (br $__rjti$0)
      )
     )
    )
    (br $label$break$L5)
   )
   (if
    (i32.lt_u
     (i32.sub
      (local.get $3)
      (local.tee $4
       (i32.load
        (local.tee $5
         (i32.add
          (local.get $2)
          (i32.const 20)
         )
        )
       )
      )
     )
     (local.get $1)
    )
    (block
     (local.set $3
      (i32.load
       (i32.add
        (local.get $2)
        (i32.const 36)
       )
      )
     )
     (local.set $2
      (call_indirect (type $FUNCSIG$iiii)
       (local.get $2)
       (local.get $0)
       (local.get $1)
       (i32.add
        (i32.and
         (local.get $3)
         (i32.const 15)
        )
        (i32.const 12)
       )
      )
     )
     (br $label$break$L5)
    )
   )
   (local.set $2
    (if (result i32)
     (i32.or
      (i32.eqz
       (local.get $1)
      )
      (i32.lt_s
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.const 75)
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 0)
     (block $label$break$L10 (result i32)
      (local.set $3
       (local.get $1)
      )
      (loop $while-in
       (if
        (i32.ne
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.tee $6
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
          )
         )
         (i32.const 10)
        )
        (if
         (local.get $6)
         (block
          (local.set $3
           (local.get $6)
          )
          (br $while-in)
         )
         (br $label$break$L10
          (i32.const 0)
         )
        )
       )
      )
      (local.set $4
       (i32.load
        (i32.add
         (local.get $2)
         (i32.const 36)
        )
       )
      )
      (br_if $label$break$L5
       (i32.lt_u
        (local.tee $2
         (call_indirect (type $FUNCSIG$iiii)
          (local.get $2)
          (local.get $0)
          (local.get $3)
          (i32.add
           (i32.and
            (local.get $4)
            (i32.const 15)
           )
           (i32.const 12)
          )
         )
        )
        (local.get $3)
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (local.get $3)
       )
      )
      (local.set $1
       (i32.sub
        (local.get $1)
        (local.get $3)
       )
      )
      (local.set $4
       (i32.load
        (local.get $5)
       )
      )
      (local.get $3)
     )
    )
   )
   (drop
    (call $_memcpy
     (local.get $4)
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.store
    (local.get $5)
    (i32.add
     (local.get $1)
     (i32.load
      (local.get $5)
     )
    )
   )
   (local.set $2
    (i32.add
     (local.get $1)
     (local.get $2)
    )
   )
  )
  (local.get $2)
 )
 (func $___towrite (; 319 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (i32.load8_s
    (local.tee $2
     (i32.add
      (local.get $0)
      (i32.const 74)
     )
    )
   )
  )
  (i32.store8
   (local.get $2)
   (i32.or
    (local.get $1)
    (i32.add
     (local.get $1)
     (i32.const 255)
    )
   )
  )
  (if (result i32)
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 8)
   )
   (block (result i32)
    (i32.store
     (local.get $0)
     (i32.or
      (local.get $1)
      (i32.const 32)
     )
    )
    (i32.const -1)
   )
   (block (result i32)
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 8)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 28)
     )
     (local.tee $1
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 44)
       )
      )
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 20)
     )
     (local.get $1)
    )
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 16)
     )
     (i32.add
      (local.get $1)
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 48)
       )
      )
     )
    )
    (i32.const 0)
   )
  )
 )
 (func $_sn_write (; 320 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (select
    (local.get $2)
    (local.tee $3
     (i32.sub
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 16)
       )
      )
      (local.tee $4
       (i32.load
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 20)
         )
        )
       )
      )
     )
    )
    (i32.gt_u
     (local.get $3)
     (local.get $2)
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $4)
    (local.get $1)
    (local.get $3)
   )
  )
  (i32.store
   (local.get $0)
   (i32.add
    (i32.load
     (local.get $0)
    )
    (local.get $3)
   )
  )
  (local.get $2)
 )
 (func $___floatscan (; 321 ;) (; has Stack IR ;) (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (block $label$break$L4 (result f64)
   (local.set $2
    (i32.add
     (local.get $0)
     (i32.const 4)
    )
   )
   (local.set $4
    (i32.add
     (local.get $0)
     (i32.const 100)
    )
   )
   (loop $while-in
    (br_if $while-in
     (i32.or
      (i32.eq
       (local.tee $5
        (local.tee $1
         (if (result i32)
          (i32.lt_u
           (local.tee $1
            (i32.load
             (local.get $2)
            )
           )
           (i32.load
            (local.get $4)
           )
          )
          (block (result i32)
           (i32.store
            (local.get $2)
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (i32.load8_u
            (local.get $1)
           )
          )
          (call $___shgetc
           (local.get $0)
          )
         )
        )
       )
       (i32.const 32)
      )
      (i32.lt_u
       (i32.add
        (local.get $5)
        (i32.const -9)
       )
       (i32.const 5)
      )
     )
    )
   )
   (block $label$break$L13
    (block $switch-default6
     (block $switch-case5
      (br_table $switch-case5 $switch-default6 $switch-case5 $switch-default6
       (i32.sub
        (local.get $1)
        (i32.const 43)
       )
      )
     )
     (local.set $5
      (i32.sub
       (i32.const 1)
       (i32.shl
        (i32.eq
         (local.get $1)
         (i32.const 45)
        )
        (i32.const 1)
       )
      )
     )
     (if
      (i32.lt_u
       (local.tee $1
        (i32.load
         (local.get $2)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (block
       (i32.store
        (local.get $2)
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.load8_u
         (local.get $1)
        )
       )
       (br $label$break$L13)
      )
      (block
       (local.set $1
        (call $___shgetc
         (local.get $0)
        )
       )
       (br $label$break$L13)
      )
     )
    )
    (local.set $5
     (i32.const 1)
    )
   )
   (block $__rjto$0
    (block $__rjti$0
     (block $switch-default27
      (br_table $__rjti$0 $switch-default27 $switch-default27 $switch-default27 $switch-default27 $__rjto$0 $switch-default27
       (i32.sub
        (i32.and
         (local.tee $3
          (loop $while-in8 (result i32)
           (if (result i32)
            (i32.eq
             (i32.load8_s
              (i32.add
               (local.get $3)
               (i32.const 24555)
              )
             )
             (i32.or
              (local.get $1)
              (i32.const 32)
             )
            )
            (block (result i32)
             (if
              (i32.lt_u
               (local.get $3)
               (i32.const 7)
              )
              (local.set $1
               (if (result i32)
                (i32.lt_u
                 (local.tee $1
                  (i32.load
                   (local.get $2)
                  )
                 )
                 (i32.load
                  (local.get $4)
                 )
                )
                (block (result i32)
                 (i32.store
                  (local.get $2)
                  (i32.add
                   (local.get $1)
                   (i32.const 1)
                  )
                 )
                 (i32.load8_u
                  (local.get $1)
                 )
                )
                (call $___shgetc
                 (local.get $0)
                )
               )
              )
             )
             (br_if $while-in8
              (i32.lt_u
               (local.tee $3
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (i32.const 8)
              )
             )
             (i32.const 8)
            )
            (local.get $3)
           )
          )
         )
         (i32.const 2147483647)
        )
        (i32.const 3)
       )
      )
     )
     (if
      (i32.gt_u
       (local.get $3)
       (i32.const 3)
      )
      (block
       (br_if $__rjto$0
        (i32.eq
         (local.get $3)
         (i32.const 8)
        )
       )
       (br $__rjti$0)
      )
     )
     (if
      (i32.eqz
       (local.get $3)
      )
      (block $label$break$L34
       (local.set $3
        (i32.const 0)
       )
       (local.set $3
        (loop $while-in16 (result i32)
         (br_if $label$break$L34
          (i32.ne
           (i32.load8_s
            (i32.add
             (local.get $3)
             (i32.const 24564)
            )
           )
           (i32.or
            (local.get $1)
            (i32.const 32)
           )
          )
         )
         (if
          (i32.lt_u
           (local.get $3)
           (i32.const 2)
          )
          (local.set $1
           (if (result i32)
            (i32.lt_u
             (local.tee $1
              (i32.load
               (local.get $2)
              )
             )
             (i32.load
              (local.get $4)
             )
            )
            (block (result i32)
             (i32.store
              (local.get $2)
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.load8_u
              (local.get $1)
             )
            )
            (call $___shgetc
             (local.get $0)
            )
           )
          )
         )
         (br_if $while-in16
          (i32.lt_u
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (i32.const 3)
          )
         )
         (i32.const 3)
        )
       )
      )
     )
     (block $switch-default26
      (block $switch-case25
       (block $switch-case24
        (br_table $switch-case25 $switch-default26 $switch-default26 $switch-case24 $switch-default26
         (local.get $3)
        )
       )
       (if
        (i32.ne
         (if (result i32)
          (i32.lt_u
           (local.tee $1
            (i32.load
             (local.get $2)
            )
           )
           (i32.load
            (local.get $4)
           )
          )
          (block (result i32)
           (i32.store
            (local.get $2)
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (i32.load8_u
            (local.get $1)
           )
          )
          (call $___shgetc
           (local.get $0)
          )
         )
         (i32.const 40)
        )
        (block
         (drop
          (br_if $label$break$L4
           (global.get $nan)
           (i32.eqz
            (i32.load
             (local.get $4)
            )
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const -1)
          )
         )
         (br $label$break$L4
          (global.get $nan)
         )
        )
       )
       (local.set $1
        (i32.const 1)
       )
       (loop $while-in21
        (block $while-out20
         (if
          (i32.eqz
           (i32.or
            (i32.lt_u
             (i32.add
              (local.tee $3
               (if (result i32)
                (i32.lt_u
                 (local.tee $3
                  (i32.load
                   (local.get $2)
                  )
                 )
                 (i32.load
                  (local.get $4)
                 )
                )
                (block (result i32)
                 (i32.store
                  (local.get $2)
                  (i32.add
                   (local.get $3)
                   (i32.const 1)
                  )
                 )
                 (i32.load8_u
                  (local.get $3)
                 )
                )
                (call $___shgetc
                 (local.get $0)
                )
               )
              )
              (i32.const -48)
             )
             (i32.const 10)
            )
            (i32.lt_u
             (i32.add
              (local.get $3)
              (i32.const -65)
             )
             (i32.const 26)
            )
           )
          )
          (br_if $while-out20
           (i32.eqz
            (i32.or
             (i32.eq
              (local.get $3)
              (i32.const 95)
             )
             (i32.lt_u
              (i32.add
               (local.get $3)
               (i32.const -97)
              )
              (i32.const 26)
             )
            )
           )
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (br $while-in21)
        )
       )
       (drop
        (br_if $label$break$L4
         (global.get $nan)
         (i32.eq
          (local.get $3)
          (i32.const 41)
         )
        )
       )
       (if
        (i32.eqz
         (local.tee $3
          (i32.eqz
           (i32.load
            (local.get $4)
           )
          )
         )
        )
        (i32.store
         (local.get $2)
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const -1)
         )
        )
       )
       (drop
        (br_if $label$break$L4
         (global.get $nan)
         (i32.eqz
          (local.get $1)
         )
        )
       )
       (local.set $0
        (local.get $1)
       )
       (loop $while-in23
        (if
         (i32.eqz
          (local.get $3)
         )
         (i32.store
          (local.get $2)
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const -1)
          )
         )
        )
        (drop
         (br_if $label$break$L4
          (global.get $nan)
          (i32.eqz
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const -1)
            )
           )
          )
         )
        )
        (br $while-in23)
       )
      )
      (br $label$break$L4
       (call $_decfloat
        (local.get $0)
        (if (result i32)
         (i32.eq
          (local.get $1)
          (i32.const 48)
         )
         (block (result i32)
          (if
           (i32.eq
            (i32.or
             (if (result i32)
              (i32.lt_u
               (local.tee $1
                (i32.load
                 (local.get $2)
                )
               )
               (i32.load
                (local.get $4)
               )
              )
              (block (result i32)
               (i32.store
                (local.get $2)
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (i32.load8_u
                (local.get $1)
               )
              )
              (call $___shgetc
               (local.get $0)
              )
             )
             (i32.const 32)
            )
            (i32.const 120)
           )
           (br $label$break$L4
            (call $_hexfloat
             (local.get $0)
             (local.get $5)
            )
           )
          )
          (if (result i32)
           (i32.load
            (local.get $4)
           )
           (block (result i32)
            (i32.store
             (local.get $2)
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const -1)
             )
            )
            (i32.const 48)
           )
           (i32.const 48)
          )
         )
         (local.get $1)
        )
        (local.get $5)
       )
      )
     )
     (if
      (i32.load
       (local.get $4)
      )
      (i32.store
       (local.get $2)
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const -1)
       )
      )
     )
     (i32.store
      (i32.const 26292)
      (i32.const 22)
     )
     (call $___shlim
      (local.get $0)
     )
     (br $label$break$L4
      (f64.const 0)
     )
    )
    (if
     (i32.eqz
      (local.tee $0
       (i32.eqz
        (i32.load
         (local.get $4)
        )
       )
      )
     )
     (i32.store
      (local.get $2)
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const -1)
      )
     )
    )
    (if
     (i32.gt_u
      (local.get $3)
      (i32.const 3)
     )
     (loop $while-in29
      (if
       (i32.eqz
        (local.get $0)
       )
       (i32.store
        (local.get $2)
        (i32.add
         (i32.load
          (local.get $2)
         )
         (i32.const -1)
        )
       )
      )
      (br_if $while-in29
       (i32.gt_u
        (local.tee $3
         (i32.add
          (local.get $3)
          (i32.const -1)
         )
        )
        (i32.const 3)
       )
      )
     )
    )
   )
   (f64.promote_f32
    (f32.mul
     (f32.convert_i32_s
      (local.get $5)
     )
     (f32.demote_f64
      (global.get $inf)
     )
    )
   )
  )
 )
 (func $_hexfloat (; 322 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 f64)
  (local $7 f64)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  (local $11 f64)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i64)
  (local.set $8
   (i32.const 53)
  )
  (local.set $3
   (if (result i32)
    (i32.lt_u
     (local.tee $2
      (i32.load
       (local.tee $4
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
      )
     )
     (i32.load
      (local.tee $10
       (i32.add
        (local.get $0)
        (i32.const 100)
       )
      )
     )
    )
    (block (result i32)
     (i32.store
      (local.get $4)
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (i32.load8_u
      (local.get $2)
     )
    )
    (call $___shgetc
     (local.get $0)
    )
   )
  )
  (block $__rjto$3
   (block $__rjti$3
    (loop $label$continue$L5
     (block $label$break$L5
      (block $switch
       (br_table $__rjti$3 $label$break$L5 $switch $label$break$L5
        (i32.sub
         (local.get $3)
         (i32.const 46)
        )
       )
      )
      (local.set $3
       (if (result i32)
        (i32.lt_u
         (local.tee $2
          (i32.load
           (local.get $4)
          )
         )
         (i32.load
          (local.get $10)
         )
        )
        (block (result i32)
         (i32.store
          (local.get $4)
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $2)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (local.set $14
       (i32.const 1)
      )
      (br $label$continue$L5)
     )
    )
    (br $__rjto$3)
   )
   (local.set $13
    (if (result i32)
     (i32.eq
      (local.tee $3
       (if (result i32)
        (i32.lt_u
         (local.tee $2
          (i32.load
           (local.get $4)
          )
         )
         (i32.load
          (local.get $10)
         )
        )
        (block (result i32)
         (i32.store
          (local.get $4)
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $2)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (i32.const 48)
     )
     (loop $while-in (result i32)
      (local.set $3
       (if (result i32)
        (i32.lt_u
         (local.tee $2
          (i32.load
           (local.get $4)
          )
         )
         (i32.load
          (local.get $10)
         )
        )
        (block (result i32)
         (i32.store
          (local.get $4)
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $2)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (local.set $5
       (i64.add
        (local.get $5)
        (i64.const -1)
       )
      )
      (br_if $while-in
       (i32.eq
        (local.get $3)
        (i32.const 48)
       )
      )
      (local.set $12
       (local.get $5)
      )
      (local.set $14
       (i32.const 1)
      )
      (i32.const 1)
     )
     (i32.const 1)
    )
   )
  )
  (local.set $5
   (i64.const 0)
  )
  (local.set $6
   (f64.const 1)
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in2
   (block $while-out1
    (local.set $15
     (i32.or
      (local.get $3)
      (i32.const 32)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.lt_u
        (local.tee $17
         (i32.add
          (local.get $3)
          (i32.const -48)
         )
        )
        (i32.const 10)
       )
      )
      (br_if $while-out1
       (i32.eqz
        (i32.or
         (local.tee $18
          (i32.eq
           (local.get $3)
           (i32.const 46)
          )
         )
         (i32.lt_u
          (i32.add
           (local.get $15)
           (i32.const -97)
          )
          (i32.const 6)
         )
        )
       )
      )
      (br_if $__rjti$0
       (i32.eqz
        (local.get $18)
       )
      )
      (local.set $13
       (if (result i32)
        (local.get $13)
        (block
         (local.set $3
          (i32.const 46)
         )
         (br $while-out1)
        )
        (block (result i32)
         (local.set $9
          (local.get $5)
         )
         (local.set $12
          (local.get $5)
         )
         (i32.const 1)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $3
      (select
       (i32.add
        (local.get $15)
        (i32.const -87)
       )
       (local.get $17)
       (i32.gt_s
        (local.get $3)
        (i32.const 57)
       )
      )
     )
     (if
      (i64.lt_s
       (local.get $5)
       (i64.const 8)
      )
      (block
       (local.set $11
        (local.get $6)
       )
       (local.set $2
        (i32.add
         (local.get $3)
         (i32.shl
          (local.get $2)
          (i32.const 4)
         )
        )
       )
      )
      (local.set $7
       (if (result f64)
        (i64.lt_s
         (local.get $5)
         (i64.const 14)
        )
        (block (result f64)
         (local.set $11
          (local.tee $6
           (f64.mul
            (local.get $6)
            (f64.const 0.0625)
           )
          )
         )
         (f64.add
          (local.get $7)
          (f64.mul
           (local.get $6)
           (f64.convert_i32_s
            (local.get $3)
           )
          )
         )
        )
        (block (result f64)
         (local.set $16
          (select
           (local.get $16)
           (i32.const 1)
           (local.tee $3
            (i32.or
             (i32.eqz
              (local.get $3)
             )
             (i32.ne
              (local.get $16)
              (i32.const 0)
             )
            )
           )
          )
         )
         (local.set $11
          (local.get $6)
         )
         (select
          (local.get $7)
          (f64.add
           (local.get $7)
           (f64.mul
            (local.get $6)
            (f64.const 0.5)
           )
          )
          (local.get $3)
         )
        )
       )
      )
     )
     (local.set $9
      (i64.add
       (local.get $5)
       (i64.const 1)
      )
     )
     (local.set $6
      (local.get $11)
     )
     (local.set $14
      (i32.const 1)
     )
    )
    (local.set $3
     (if (result i32)
      (i32.lt_u
       (local.tee $3
        (i32.load
         (local.get $4)
        )
       )
       (i32.load
        (local.get $10)
       )
      )
      (block (result i32)
       (i32.store
        (local.get $4)
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.load8_u
        (local.get $3)
       )
      )
      (call $___shgetc
       (local.get $0)
      )
     )
    )
    (local.set $5
     (local.get $9)
    )
    (br $while-in2)
   )
  )
  (if (result f64)
   (local.get $14)
   (block $do-once3 (result f64)
    (if
     (i64.lt_s
      (local.get $5)
      (i64.const 8)
     )
     (block
      (local.set $9
       (local.get $5)
      )
      (loop $while-in6
       (local.set $2
        (i32.shl
         (local.get $2)
         (i32.const 4)
        )
       )
       (local.set $19
        (i64.add
         (local.get $9)
         (i64.const 1)
        )
       )
       (if
        (i64.lt_s
         (local.get $9)
         (i64.const 7)
        )
        (block
         (local.set $9
          (local.get $19)
         )
         (br $while-in6)
        )
       )
      )
     )
    )
    (local.set $9
     (if (result i64)
      (i32.eq
       (i32.or
        (local.get $3)
        (i32.const 32)
       )
       (i32.const 112)
      )
      (if (result i64)
       (i64.eq
        (local.tee $9
         (call $_scanexp
          (local.get $0)
         )
        )
        (i64.const -9223372036854775808)
       )
       (if (result i64)
        (i32.load
         (local.get $10)
        )
        (block (result i64)
         (i32.store
          (local.get $4)
          (i32.add
           (i32.load
            (local.get $4)
           )
           (i32.const -1)
          )
         )
         (i64.const 0)
        )
        (i64.const 0)
       )
       (local.get $9)
      )
      (if (result i64)
       (i32.load
        (local.get $10)
       )
       (block (result i64)
        (i32.store
         (local.get $4)
         (i32.add
          (i32.load
           (local.get $4)
          )
          (i32.const -1)
         )
        )
        (i64.const 0)
       )
       (i64.const 0)
      )
     )
    )
    (drop
     (br_if $do-once3
      (f64.mul
       (f64.convert_i32_s
        (local.get $1)
       )
       (f64.const 0)
      )
      (i32.eqz
       (local.get $2)
      )
     )
    )
    (if
     (i64.gt_s
      (local.tee $5
       (i64.add
        (local.get $9)
        (i64.add
         (i64.shl
          (select
           (local.get $12)
           (local.get $5)
           (local.get $13)
          )
          (i64.const 2)
         )
         (i64.const -32)
        )
       )
      )
      (i64.const 1074)
     )
     (block
      (i32.store
       (i32.const 26292)
       (i32.const 34)
      )
      (br $do-once3
       (f64.mul
        (f64.mul
         (f64.convert_i32_s
          (local.get $1)
         )
         (f64.const 1797693134862315708145274e284)
        )
        (f64.const 1797693134862315708145274e284)
       )
      )
     )
    )
    (if
     (i64.lt_s
      (local.get $5)
      (i64.const -1180)
     )
     (block
      (i32.store
       (i32.const 26292)
       (i32.const 34)
      )
      (br $do-once3
       (f64.mul
        (f64.mul
         (f64.convert_i32_s
          (local.get $1)
         )
         (f64.const 2.2250738585072014e-308)
        )
        (f64.const 2.2250738585072014e-308)
       )
      )
     )
    )
    (if
     (i32.gt_s
      (local.get $2)
      (i32.const -1)
     )
     (block
      (local.set $0
       (local.get $2)
      )
      (loop $while-in8
       (local.set $0
        (i32.or
         (i32.xor
          (local.tee $2
           (i32.eqz
            (f64.ge
             (local.get $7)
             (f64.const 0.5)
            )
           )
          )
          (i32.const 1)
         )
         (i32.shl
          (local.get $0)
          (i32.const 1)
         )
        )
       )
       (local.set $7
        (f64.add
         (local.get $7)
         (select
          (local.get $7)
          (f64.add
           (local.get $7)
           (f64.const -1)
          )
          (local.get $2)
         )
        )
       )
       (local.set $5
        (i64.add
         (local.get $5)
         (i64.const -1)
        )
       )
       (br_if $while-in8
        (i32.gt_s
         (local.get $0)
         (i32.const -1)
        )
       )
      )
     )
     (local.set $0
      (local.get $2)
     )
    )
    (local.set $11
     (block $__rjto$2 (result f64)
      (block $__rjti$2
       (if
        (i64.lt_s
         (local.tee $12
          (i64.add
           (local.get $5)
           (i64.const 1106)
          )
         )
         (i64.const 53)
        )
        (if
         (i32.le_s
          (local.tee $8
           (i32.wrap_i64
            (local.get $12)
           )
          )
          (i32.const 0)
         )
         (block
          (local.set $8
           (i32.const 0)
          )
          (local.set $2
           (i32.const 84)
          )
          (br $__rjti$2)
         )
        )
       )
       (local.set $2
        (i32.sub
         (i32.const 84)
         (local.get $8)
        )
       )
       (br_if $__rjti$2
        (i32.lt_s
         (local.get $8)
         (i32.const 53)
        )
       )
       (local.set $6
        (f64.convert_i32_s
         (local.get $1)
        )
       )
       (br $__rjto$2
        (f64.const 0)
       )
      )
      (local.set $6
       (f64.convert_i32_s
        (local.get $1)
       )
      )
      (call $_copysignl
       (call $_scalbn
        (f64.const 1)
        (local.get $2)
       )
       (local.get $6)
      )
     )
    )
    (if
     (f64.eq
      (local.tee $7
       (f64.sub
        (f64.add
         (f64.mul
          (select
           (f64.const 0)
           (local.get $7)
           (local.tee $8
            (i32.and
             (i32.eqz
              (i32.and
               (local.get $0)
               (i32.const 1)
              )
             )
             (i32.and
              (i32.lt_s
               (local.get $8)
               (i32.const 32)
              )
              (f64.ne
               (local.get $7)
               (f64.const 0)
              )
             )
            )
           )
          )
          (local.get $6)
         )
         (f64.add
          (local.get $11)
          (f64.mul
           (local.get $6)
           (f64.convert_i32_u
            (i32.add
             (local.get $0)
             (i32.and
              (local.get $8)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
        (local.get $11)
       )
      )
      (f64.const 0)
     )
     (i32.store
      (i32.const 26292)
      (i32.const 34)
     )
    )
    (call $_scalbnl
     (local.get $7)
     (i32.wrap_i64
      (local.get $5)
     )
    )
   )
   (block (result f64)
    (if
     (i32.eqz
      (local.tee $8
       (i32.eqz
        (i32.load
         (local.get $10)
        )
       )
      )
     )
     (i32.store
      (local.get $4)
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const -1)
      )
     )
    )
    (if
     (i32.eqz
      (local.get $8)
     )
     (block
      (i32.store
       (local.get $4)
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const -1)
       )
      )
      (if
       (i32.eqz
        (i32.or
         (local.get $8)
         (i32.eqz
          (local.get $13)
         )
        )
       )
       (i32.store
        (local.get $4)
        (i32.add
         (i32.load
          (local.get $4)
         )
         (i32.const -1)
        )
       )
      )
     )
    )
    (f64.mul
     (f64.convert_i32_s
      (local.get $1)
     )
     (f64.const 0)
    )
   )
  )
 )
 (func $_decfloat (; 323 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  (local $14 i32)
  (local $15 i32)
  (local $16 i64)
  (local $17 i32)
  (local $18 i32)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 i32)
  (local $23 f64)
  (local.set $22
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 512)
   )
  )
  (local.set $9
   (local.get $22)
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
  (local.set $15
   (i32.add
    (local.get $0)
    (i32.const 100)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $label$continue$L1
     (block $label$break$L1
      (block $switch
       (block $switch-default
        (br_table $__rjti$1 $switch-default $switch $switch-default
         (i32.sub
          (local.get $1)
          (i32.const 46)
         )
        )
       )
       (local.set $6
        (local.get $1)
       )
       (local.set $1
        (local.get $3)
       )
       (br $label$break$L1)
      )
      (local.set $1
       (if (result i32)
        (i32.lt_u
         (local.tee $1
          (i32.load
           (local.get $4)
          )
         )
         (i32.load
          (local.get $15)
         )
        )
        (block (result i32)
         (i32.store
          (local.get $4)
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $1)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (local.set $3
       (i32.const 1)
      )
      (br $label$continue$L1)
     )
    )
    (br $__rjto$1)
   )
   (local.set $1
    (if (result i32)
     (i32.eq
      (local.tee $6
       (if (result i32)
        (i32.lt_u
         (local.tee $1
          (i32.load
           (local.get $4)
          )
         )
         (i32.load
          (local.get $15)
         )
        )
        (block (result i32)
         (i32.store
          (local.get $4)
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $1)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (i32.const 48)
     )
     (loop $while-in (result i32)
      (local.set $6
       (if (result i32)
        (i32.lt_u
         (local.tee $1
          (i32.load
           (local.get $4)
          )
         )
         (i32.load
          (local.get $15)
         )
        )
        (block (result i32)
         (i32.store
          (local.get $4)
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $1)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (local.set $13
       (i64.add
        (local.get $13)
        (i64.const -1)
       )
      )
      (br_if $while-in
       (i32.eq
        (local.get $6)
        (i32.const 48)
       )
      )
      (local.set $5
       (i32.const 1)
      )
      (i32.const 1)
     )
     (block (result i32)
      (local.set $5
       (i32.const 1)
      )
      (local.get $3)
     )
    )
   )
  )
  (i32.store
   (local.get $9)
   (i32.const 0)
  )
  (local.set $10
   (block $do-once4 (result f64)
    (block $__rjti$6
     (block $__rjti$5
      (block $__rjti$4
       (block $__rjti$3
        (if
         (i32.or
          (local.tee $11
           (i32.eq
            (local.get $6)
            (i32.const 46)
           )
          )
          (i32.lt_u
           (local.tee $17
            (i32.add
             (local.get $6)
             (i32.const -48)
            )
           )
           (i32.const 10)
          )
         )
         (block $__rjti$2
          (local.set $18
           (i32.add
            (local.get $9)
            (i32.const 496)
           )
          )
          (local.set $3
           (i32.const 0)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $6
           (local.get $17)
          )
          (loop $label$continue$L24
           (block $label$break$L24
            (local.set $16
             (if (result i64)
              (local.get $11)
              (block (result i64)
               (br_if $label$break$L24
                (local.get $5)
               )
               (local.set $5
                (i32.const 1)
               )
               (local.set $13
                (local.get $12)
               )
               (local.get $12)
              )
              (block $do-once (result i64)
               (local.set $12
                (i64.add
                 (local.get $12)
                 (i64.const 1)
                )
               )
               (local.set $11
                (i32.ne
                 (local.get $14)
                 (i32.const 48)
                )
               )
               (if
                (i32.ge_s
                 (local.get $7)
                 (i32.const 125)
                )
                (block
                 (drop
                  (br_if $do-once
                   (local.get $12)
                   (i32.eqz
                    (local.get $11)
                   )
                  )
                 )
                 (i32.store
                  (local.get $18)
                  (i32.or
                   (i32.load
                    (local.get $18)
                   )
                   (i32.const 1)
                  )
                 )
                 (br $do-once
                  (local.get $12)
                 )
                )
               )
               (i32.store
                (local.tee $1
                 (i32.add
                  (i32.shl
                   (local.get $7)
                   (i32.const 2)
                  )
                  (local.get $9)
                 )
                )
                (if (result i32)
                 (local.get $8)
                 (i32.add
                  (i32.add
                   (local.get $14)
                   (i32.const -48)
                  )
                  (i32.mul
                   (i32.load
                    (local.get $1)
                   )
                   (i32.const 10)
                  )
                 )
                 (local.get $6)
                )
               )
               (local.set $6
                (i32.eq
                 (local.tee $1
                  (i32.add
                   (local.get $8)
                   (i32.const 1)
                  )
                 )
                 (i32.const 9)
                )
               )
               (local.set $8
                (select
                 (i32.const 0)
                 (local.get $1)
                 (local.get $6)
                )
               )
               (local.set $7
                (i32.add
                 (local.get $6)
                 (local.get $7)
                )
               )
               (local.set $3
                (select
                 (i32.wrap_i64
                  (local.get $12)
                 )
                 (local.get $3)
                 (local.get $11)
                )
               )
               (local.set $1
                (i32.const 1)
               )
               (local.get $12)
              )
             )
            )
            (if
             (i32.or
              (i32.lt_u
               (local.tee $6
                (i32.add
                 (local.tee $14
                  (if (result i32)
                   (i32.lt_u
                    (local.tee $6
                     (i32.load
                      (local.get $4)
                     )
                    )
                    (i32.load
                     (local.get $15)
                    )
                   )
                   (block (result i32)
                    (i32.store
                     (local.get $4)
                     (i32.add
                      (local.get $6)
                      (i32.const 1)
                     )
                    )
                    (i32.load8_u
                     (local.get $6)
                    )
                   )
                   (call $___shgetc
                    (local.get $0)
                   )
                  )
                 )
                 (i32.const -48)
                )
               )
               (i32.const 10)
              )
              (local.tee $11
               (i32.eq
                (local.get $14)
                (i32.const 46)
               )
              )
             )
             (block
              (local.set $12
               (local.get $16)
              )
              (br $label$continue$L24)
             )
             (block
              (local.set $6
               (local.get $14)
              )
              (br $__rjti$2)
             )
            )
           )
          )
          (local.set $1
           (i32.ne
            (local.get $1)
            (i32.const 0)
           )
          )
          (br $__rjti$3)
         )
         (local.set $3
          (i32.const 0)
         )
        )
        (local.set $13
         (select
          (local.get $13)
          (local.get $16)
          (local.get $5)
         )
        )
        (if
         (i32.eqz
          (i32.and
           (local.tee $1
            (i32.ne
             (local.get $1)
             (i32.const 0)
            )
           )
           (i32.eq
            (i32.or
             (local.get $6)
             (i32.const 32)
            )
            (i32.const 101)
           )
          )
         )
         (if
          (i32.gt_s
           (local.get $6)
           (i32.const -1)
          )
          (block
           (local.set $12
            (local.get $16)
           )
           (br $__rjti$3)
          )
          (br $__rjti$4)
         )
        )
        (local.set $13
         (i64.add
          (if (result i64)
           (i64.eq
            (local.tee $12
             (call $_scanexp
              (local.get $0)
             )
            )
            (i64.const -9223372036854775808)
           )
           (if (result i64)
            (i32.load
             (local.get $15)
            )
            (block (result i64)
             (i32.store
              (local.get $4)
              (i32.add
               (i32.load
                (local.get $4)
               )
               (i32.const -1)
              )
             )
             (i64.const 0)
            )
            (i64.const 0)
           )
           (local.get $12)
          )
          (local.get $13)
         )
        )
        (br $__rjti$6)
       )
       (local.set $16
        (if (result i64)
         (i32.load
          (local.get $15)
         )
         (block
          (i32.store
           (local.get $4)
           (i32.add
            (i32.load
             (local.get $4)
            )
            (i32.const -1)
           )
          )
          (br_if $__rjti$5
           (i32.eqz
            (local.get $1)
           )
          )
          (local.set $16
           (local.get $12)
          )
          (br $__rjti$6)
         )
         (local.get $12)
        )
       )
      )
      (br_if $__rjti$5
       (i32.eqz
        (local.get $1)
       )
      )
      (br $__rjti$6)
     )
     (i32.store
      (i32.const 26292)
      (i32.const 22)
     )
     (call $___shlim
      (local.get $0)
     )
     (br $do-once4
      (f64.const 0)
     )
    )
    (drop
     (br_if $do-once4
      (f64.mul
       (f64.convert_i32_s
        (local.get $2)
       )
       (f64.const 0)
      )
      (i32.eqz
       (local.tee $0
        (i32.load
         (local.get $9)
        )
       )
      )
     )
    )
    (if
     (i32.and
      (i64.eq
       (local.get $13)
       (local.get $16)
      )
      (i64.lt_s
       (local.get $16)
       (i64.const 10)
      )
     )
     (drop
      (br_if $do-once4
       (f64.mul
        (f64.convert_i32_s
         (local.get $2)
        )
        (f64.convert_i32_u
         (local.get $0)
        )
       )
       (i32.or
        (i32.eqz
         (i32.shr_u
          (local.get $0)
          (i32.const 53)
         )
        )
        (i32.const 1)
       )
      )
     )
    )
    (if
     (i64.gt_s
      (local.get $13)
      (i64.const 537)
     )
     (block
      (i32.store
       (i32.const 26292)
       (i32.const 34)
      )
      (br $do-once4
       (f64.mul
        (f64.mul
         (f64.convert_i32_s
          (local.get $2)
         )
         (f64.const 1797693134862315708145274e284)
        )
        (f64.const 1797693134862315708145274e284)
       )
      )
     )
    )
    (if
     (i64.lt_s
      (local.get $13)
      (i64.const -1180)
     )
     (block
      (i32.store
       (i32.const 26292)
       (i32.const 34)
      )
      (br $do-once4
       (f64.mul
        (f64.mul
         (f64.convert_i32_s
          (local.get $2)
         )
         (f64.const 2.2250738585072014e-308)
        )
        (f64.const 2.2250738585072014e-308)
       )
      )
     )
    )
    (if
     (local.get $8)
     (block
      (if
       (i32.lt_s
        (local.get $8)
        (i32.const 9)
       )
       (block
        (local.set $1
         (i32.load
          (local.tee $4
           (i32.add
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
            (local.get $9)
           )
          )
         )
        )
        (loop $while-in7
         (local.set $1
          (i32.mul
           (local.get $1)
           (i32.const 10)
          )
         )
         (local.set $0
          (i32.add
           (local.get $8)
           (i32.const 1)
          )
         )
         (if
          (i32.lt_s
           (local.get $8)
           (i32.const 8)
          )
          (block
           (local.set $8
            (local.get $0)
           )
           (br $while-in7)
          )
         )
        )
        (i32.store
         (local.get $4)
         (local.get $1)
        )
       )
      )
      (local.set $7
       (i32.add
        (local.get $7)
        (i32.const 1)
       )
      )
     )
    )
    (local.set $1
     (i32.wrap_i64
      (local.get $13)
     )
    )
    (if
     (i32.lt_s
      (local.get $3)
      (i32.const 9)
     )
     (if
      (i32.and
       (i32.lt_s
        (local.get $1)
        (i32.const 18)
       )
       (i32.le_s
        (local.get $3)
        (local.get $1)
       )
      )
      (block
       (if
        (i32.eq
         (local.get $1)
         (i32.const 9)
        )
        (br $do-once4
         (f64.mul
          (f64.convert_i32_s
           (local.get $2)
          )
          (f64.convert_i32_u
           (i32.load
            (local.get $9)
           )
          )
         )
        )
       )
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 9)
        )
        (br $do-once4
         (f64.div
          (f64.mul
           (f64.convert_i32_s
            (local.get $2)
           )
           (f64.convert_i32_u
            (i32.load
             (local.get $9)
            )
           )
          )
          (f64.convert_i32_s
           (i32.load
            (i32.add
             (i32.shl
              (i32.sub
               (i32.const 0)
               (local.get $1)
              )
              (i32.const 2)
             )
             (i32.const 16400)
            )
           )
          )
         )
        )
       )
       (if
        (i32.or
         (i32.gt_s
          (local.tee $4
           (i32.add
            (i32.mul
             (local.get $1)
             (i32.const -3)
            )
            (i32.const 80)
           )
          )
          (i32.const 30)
         )
         (i32.eqz
          (i32.shr_u
           (local.tee $0
            (i32.load
             (local.get $9)
            )
           )
           (local.get $4)
          )
         )
        )
        (br $do-once4
         (f64.mul
          (f64.mul
           (f64.convert_i32_s
            (local.get $2)
           )
           (f64.convert_i32_u
            (local.get $0)
           )
          )
          (f64.convert_i32_s
           (i32.load
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (i32.const 16328)
            )
           )
          )
         )
        )
       )
      )
     )
    )
    (local.set $3
     (if (result i32)
      (local.tee $0
       (i32.rem_s
        (local.get $1)
        (i32.const 9)
       )
      )
      (block (result i32)
       (local.set $17
        (i32.load
         (i32.add
          (i32.shl
           (i32.sub
            (i32.const 0)
            (local.tee $11
             (select
              (local.get $0)
              (i32.add
               (local.get $0)
               (i32.const 9)
              )
              (i32.gt_s
               (local.get $1)
               (i32.const -1)
              )
             )
            )
           )
           (i32.const 2)
          )
          (i32.const 16400)
         )
        )
       )
       (local.set $0
        (if (result i32)
         (local.get $7)
         (block (result i32)
          (local.set $6
           (i32.div_s
            (i32.const 1000000000)
            (local.get $17)
           )
          )
          (local.set $3
           (i32.const 0)
          )
          (local.set $0
           (i32.const 0)
          )
          (local.set $4
           (i32.const 0)
          )
          (loop $while-in9
           (local.set $14
            (i32.add
             (local.get $3)
             (local.tee $3
              (i32.div_u
               (local.tee $5
                (i32.load
                 (local.tee $8
                  (i32.add
                   (i32.shl
                    (local.get $4)
                    (i32.const 2)
                   )
                   (local.get $9)
                  )
                 )
                )
               )
               (local.get $17)
              )
             )
            )
           )
           (i32.store
            (local.get $8)
            (local.get $14)
           )
           (local.set $3
            (i32.mul
             (local.get $6)
             (i32.sub
              (local.get $5)
              (i32.mul
               (local.get $3)
               (local.get $17)
              )
             )
            )
           )
           (local.set $1
            (select
             (i32.add
              (local.get $1)
              (i32.const -9)
             )
             (local.get $1)
             (local.tee $5
              (i32.and
               (i32.eqz
                (local.get $14)
               )
               (i32.eq
                (local.get $0)
                (local.get $4)
               )
              )
             )
            )
           )
           (local.set $0
            (select
             (i32.and
              (i32.add
               (local.get $0)
               (i32.const 1)
              )
              (i32.const 127)
             )
             (local.get $0)
             (local.get $5)
            )
           )
           (br_if $while-in9
            (i32.ne
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const 1)
              )
             )
             (local.get $7)
            )
           )
          )
          (if (result i32)
           (local.get $3)
           (block (result i32)
            (i32.store
             (i32.add
              (i32.shl
               (local.get $7)
               (i32.const 2)
              )
              (local.get $9)
             )
             (local.get $3)
            )
            (local.set $4
             (local.get $0)
            )
            (i32.add
             (local.get $7)
             (i32.const 1)
            )
           )
           (block (result i32)
            (local.set $4
             (local.get $0)
            )
            (local.get $7)
           )
          )
         )
         (block (result i32)
          (local.set $4
           (i32.const 0)
          )
          (i32.const 0)
         )
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.sub
          (i32.const 9)
          (local.get $11)
         )
        )
       )
       (local.get $4)
      )
      (block (result i32)
       (local.set $0
        (local.get $7)
       )
       (i32.const 0)
      )
     )
    )
    (local.set $4
     (i32.const 0)
    )
    (loop $label$continue$L104
     (block $label$break$L104
      (local.set $17
       (i32.lt_s
        (local.get $1)
        (i32.const 18)
       )
      )
      (local.set $14
       (i32.eq
        (local.get $1)
        (i32.const 18)
       )
      )
      (local.set $11
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
        (local.get $9)
       )
      )
      (loop $while-in11
       (if
        (i32.eqz
         (local.get $17)
        )
        (block
         (br_if $label$break$L104
          (i32.eqz
           (local.get $14)
          )
         )
         (if
          (i32.ge_u
           (i32.load
            (local.get $11)
           )
           (i32.const 9007199)
          )
          (block
           (local.set $1
            (i32.const 18)
           )
           (br $label$break$L104)
          )
         )
        )
       )
       (local.set $7
        (i32.const 0)
       )
       (local.set $5
        (i32.add
         (local.get $0)
         (i32.const 127)
        )
       )
       (loop $while-in13
        (local.set $5
         (i32.wrap_i64
          (local.tee $16
           (i64.add
            (i64.extend_i32_u
             (local.get $7)
            )
            (i64.shl
             (i64.extend_i32_u
              (i32.load
               (local.tee $8
                (i32.add
                 (i32.shl
                  (local.tee $18
                   (i32.and
                    (local.get $5)
                    (i32.const 127)
                   )
                  )
                  (i32.const 2)
                 )
                 (local.get $9)
                )
               )
              )
             )
             (i64.const 29)
            )
           )
          )
         )
        )
        (if
         (i64.gt_u
          (local.get $16)
          (i64.const 1000000000)
         )
         (block
          (local.set $7
           (i32.wrap_i64
            (local.tee $13
             (i64.div_u
              (local.get $16)
              (i64.const 1000000000)
             )
            )
           )
          )
          (local.set $5
           (i32.wrap_i64
            (i64.sub
             (local.get $16)
             (i64.mul
              (local.get $13)
              (i64.const 1000000000)
             )
            )
           )
          )
         )
         (local.set $7
          (i32.const 0)
         )
        )
        (i32.store
         (local.get $8)
         (local.get $5)
        )
        (local.set $8
         (select
          (local.get $0)
          (select
           (local.get $0)
           (local.get $18)
           (local.get $5)
          )
          (i32.or
           (local.tee $6
            (i32.eq
             (local.get $3)
             (local.get $18)
            )
           )
           (i32.ne
            (local.get $18)
            (i32.and
             (i32.add
              (local.get $0)
              (i32.const 127)
             )
             (i32.const 127)
            )
           )
          )
         )
        )
        (local.set $5
         (i32.add
          (local.get $18)
          (i32.const -1)
         )
        )
        (if
         (i32.eqz
          (local.get $6)
         )
         (block
          (local.set $0
           (local.get $8)
          )
          (br $while-in13)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const -29)
        )
       )
       (br_if $while-in11
        (i32.eqz
         (local.get $7)
        )
       )
      )
      (local.set $5
       (i32.and
        (i32.add
         (local.get $8)
         (i32.const 127)
        )
        (i32.const 127)
       )
      )
      (local.set $6
       (i32.add
        (i32.shl
         (i32.and
          (i32.add
           (local.get $8)
           (i32.const 126)
          )
          (i32.const 127)
         )
         (i32.const 2)
        )
        (local.get $9)
       )
      )
      (if
       (i32.eq
        (local.tee $3
         (i32.and
          (i32.add
           (local.get $3)
           (i32.const 127)
          )
          (i32.const 127)
         )
        )
        (local.get $8)
       )
       (block
        (i32.store
         (local.get $6)
         (i32.or
          (i32.load
           (i32.add
            (i32.shl
             (local.get $5)
             (i32.const 2)
            )
            (local.get $9)
           )
          )
          (i32.load
           (local.get $6)
          )
         )
        )
        (local.set $0
         (local.get $5)
        )
       )
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
        (local.get $9)
       )
       (local.get $7)
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 9)
       )
      )
      (br $label$continue$L104)
     )
    )
    (loop $label$continue$L123
     (block $label$break$L123
      (local.set $6
       (i32.and
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
        (i32.const 127)
       )
      )
      (local.set $18
       (i32.add
        (i32.shl
         (i32.and
          (i32.add
           (local.get $0)
           (i32.const 127)
          )
          (i32.const 127)
         )
         (i32.const 2)
        )
        (local.get $9)
       )
      )
      (local.set $5
       (local.get $1)
      )
      (loop $while-in15
       (block $while-out14
        (local.set $8
         (i32.eq
          (local.get $5)
          (i32.const 18)
         )
        )
        (local.set $15
         (select
          (i32.const 9)
          (i32.const 1)
          (i32.gt_s
           (local.get $5)
           (i32.const 27)
          )
         )
        )
        (local.set $1
         (local.get $3)
        )
        (loop $while-in17
         (local.set $11
          (i32.const 0)
         )
         (block $__rjto$0
          (block $__rjti$0
           (loop $while-in19
            (block $while-out18
             (br_if $__rjti$0
              (i32.eq
               (local.get $0)
               (local.tee $3
                (i32.and
                 (i32.add
                  (local.get $1)
                  (local.get $11)
                 )
                 (i32.const 127)
                )
               )
              )
             )
             (br_if $__rjti$0
              (i32.lt_u
               (local.tee $7
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $3)
                   (i32.const 2)
                  )
                  (local.get $9)
                 )
                )
               )
               (local.tee $3
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $11)
                   (i32.const 2)
                  )
                  (i32.const 17136)
                 )
                )
               )
              )
             )
             (br_if $while-out18
              (i32.gt_u
               (local.get $7)
               (local.get $3)
              )
             )
             (br_if $__rjti$0
              (i32.ge_u
               (i32.add
                (local.get $11)
                (i32.const 1)
               )
               (i32.const 2)
              )
             )
             (local.set $11
              (i32.const 1)
             )
             (br $while-in19)
            )
           )
           (br $__rjto$0)
          )
          (br_if $label$break$L123
           (local.get $8)
          )
         )
         (local.set $4
          (i32.add
           (local.get $4)
           (local.get $15)
          )
         )
         (if
          (i32.eq
           (local.get $0)
           (local.get $1)
          )
          (block
           (local.set $1
            (local.get $0)
           )
           (br $while-in17)
          )
         )
        )
        (local.set $14
         (i32.add
          (i32.shl
           (i32.const 1)
           (local.get $15)
          )
          (i32.const -1)
         )
        )
        (local.set $11
         (i32.shr_u
          (i32.const 1000000000)
          (local.get $15)
         )
        )
        (local.set $8
         (i32.const 0)
        )
        (local.set $3
         (local.get $1)
        )
        (local.set $7
         (local.get $1)
        )
        (loop $while-in21
         (local.set $17
          (i32.add
           (local.get $8)
           (i32.shr_u
            (local.tee $1
             (i32.load
              (local.tee $8
               (i32.add
                (i32.shl
                 (local.get $7)
                 (i32.const 2)
                )
                (local.get $9)
               )
              )
             )
            )
            (local.get $15)
           )
          )
         )
         (i32.store
          (local.get $8)
          (local.get $17)
         )
         (local.set $8
          (i32.mul
           (local.get $11)
           (i32.and
            (local.get $1)
            (local.get $14)
           )
          )
         )
         (local.set $1
          (select
           (i32.add
            (local.get $5)
            (i32.const -9)
           )
           (local.get $5)
           (local.tee $5
            (i32.and
             (i32.eqz
              (local.get $17)
             )
             (i32.eq
              (local.get $3)
              (local.get $7)
             )
            )
           )
          )
         )
         (local.set $3
          (select
           (i32.and
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
            (i32.const 127)
           )
           (local.get $3)
           (local.get $5)
          )
         )
         (if
          (i32.ne
           (local.tee $7
            (i32.and
             (i32.add
              (local.get $7)
              (i32.const 1)
             )
             (i32.const 127)
            )
           )
           (local.get $0)
          )
          (block
           (local.set $5
            (local.get $1)
           )
           (br $while-in21)
          )
         )
        )
        (if
         (local.get $8)
         (block
          (br_if $while-out14
           (i32.ne
            (local.get $3)
            (local.get $6)
           )
          )
          (i32.store
           (local.get $18)
           (i32.or
            (i32.load
             (local.get $18)
            )
            (i32.const 1)
           )
          )
         )
        )
        (local.set $5
         (local.get $1)
        )
        (br $while-in15)
       )
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
        (local.get $9)
       )
       (local.get $8)
      )
      (local.set $0
       (local.get $6)
      )
      (br $label$continue$L123)
     )
    )
    (local.set $3
     (i32.const 0)
    )
    (loop $while-in23
     (local.set $5
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
       (i32.const 127)
      )
     )
     (if
      (i32.eq
       (local.get $0)
       (local.tee $7
        (i32.and
         (i32.add
          (local.get $1)
          (local.get $3)
         )
         (i32.const 127)
        )
       )
      )
      (block
       (i32.store
        (i32.add
         (i32.shl
          (i32.add
           (local.get $5)
           (i32.const -1)
          )
          (i32.const 2)
         )
         (local.get $9)
        )
        (i32.const 0)
       )
       (local.set $0
        (local.get $5)
       )
      )
     )
     (local.set $10
      (f64.add
       (f64.mul
        (local.get $10)
        (f64.const 1e9)
       )
       (f64.convert_i32_u
        (i32.load
         (i32.add
          (i32.shl
           (local.get $7)
           (i32.const 2)
          )
          (local.get $9)
         )
        )
       )
      )
     )
     (br_if $while-in23
      (i32.ne
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
    )
    (local.set $21
     (f64.mul
      (local.get $10)
      (local.tee $20
       (f64.convert_i32_s
        (local.get $2)
       )
      )
     )
    )
    (local.set $8
     (i32.lt_s
      (local.tee $3
       (i32.sub
        (local.tee $2
         (i32.add
          (local.get $4)
          (i32.const 53)
         )
        )
        (i32.const -1074)
       )
      )
      (i32.const 53)
     )
    )
    (local.set $19
     (f64.sub
      (f64.add
       (if (result f64)
        (i32.lt_s
         (local.tee $5
          (select
           (select
            (local.get $3)
            (i32.const 0)
            (i32.gt_s
             (local.get $3)
             (i32.const 0)
            )
           )
           (i32.const 53)
           (local.get $8)
          )
         )
         (i32.const 53)
        )
        (block (result f64)
         (local.set $19
          (call $_copysignl
           (call $_scalbn
            (f64.const 1)
            (i32.sub
             (i32.const 105)
             (local.get $5)
            )
           )
           (local.get $21)
          )
         )
         (local.set $10
          (call $_fmodl
           (local.get $21)
           (call $_scalbn
            (f64.const 1)
            (i32.sub
             (i32.const 53)
             (local.get $5)
            )
           )
          )
         )
         (local.set $23
          (local.get $19)
         )
         (f64.add
          (local.get $19)
          (f64.sub
           (local.get $21)
           (local.get $10)
          )
         )
        )
        (block (result f64)
         (local.set $10
          (f64.const 0)
         )
         (local.get $21)
        )
       )
       (block (result f64)
        (if
         (i32.ne
          (local.tee $6
           (i32.and
            (i32.add
             (local.get $1)
             (i32.const 2)
            )
            (i32.const 127)
           )
          )
          (local.get $0)
         )
         (block
          (block $do-once24
           (local.set $10
            (if (result f64)
             (i32.lt_u
              (local.tee $6
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $6)
                  (i32.const 2)
                 )
                 (local.get $9)
                )
               )
              )
              (i32.const 500000000)
             )
             (block (result f64)
              (if
               (i32.eqz
                (local.get $6)
               )
               (br_if $do-once24
                (i32.eq
                 (local.get $0)
                 (i32.and
                  (i32.add
                   (local.get $1)
                   (i32.const 3)
                  )
                  (i32.const 127)
                 )
                )
               )
              )
              (f64.add
               (f64.mul
                (local.get $20)
                (f64.const 0.25)
               )
               (local.get $10)
              )
             )
             (block (result f64)
              (if
               (i32.ne
                (local.get $6)
                (i32.const 500000000)
               )
               (block
                (local.set $10
                 (f64.add
                  (f64.mul
                   (local.get $20)
                   (f64.const 0.75)
                  )
                  (local.get $10)
                 )
                )
                (br $do-once24)
               )
              )
              (if (result f64)
               (i32.eq
                (local.get $0)
                (i32.and
                 (i32.add
                  (local.get $1)
                  (i32.const 3)
                 )
                 (i32.const 127)
                )
               )
               (f64.add
                (f64.mul
                 (local.get $20)
                 (f64.const 0.5)
                )
                (local.get $10)
               )
               (f64.add
                (f64.mul
                 (local.get $20)
                 (f64.const 0.75)
                )
                (local.get $10)
               )
              )
             )
            )
           )
          )
          (local.set $10
           (if (result f64)
            (i32.gt_s
             (i32.sub
              (i32.const 53)
              (local.get $5)
             )
             (i32.const 1)
            )
            (if (result f64)
             (f64.eq
              (call $_fmodl
               (local.get $10)
               (f64.const 1)
              )
              (f64.const 0)
             )
             (f64.add
              (local.get $10)
              (f64.const 1)
             )
             (local.get $10)
            )
            (local.get $10)
           )
          )
         )
        )
        (local.get $10)
       )
      )
      (local.get $23)
     )
    )
    (call $_scalbnl
     (if (result f64)
      (i32.gt_s
       (i32.and
        (local.get $2)
        (i32.const 2147483647)
       )
       (i32.const 1019)
      )
      (block $do-once26 (result f64)
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.xor
          (local.tee $0
           (i32.eqz
            (f64.ge
             (f64.abs
              (local.get $19)
             )
             (f64.const 9007199254740992)
            )
           )
          )
          (i32.const 1)
         )
        )
       )
       (local.set $19
        (select
         (local.get $19)
         (f64.mul
          (local.get $19)
          (f64.const 0.5)
         )
         (local.get $0)
        )
       )
       (if
        (i32.le_s
         (i32.add
          (local.get $4)
          (i32.const 50)
         )
         (i32.const 1021)
        )
        (drop
         (br_if $do-once26
          (local.get $19)
          (i32.eqz
           (i32.and
            (i32.and
             (local.get $8)
             (i32.or
              (local.get $0)
              (i32.ne
               (local.get $3)
               (local.get $5)
              )
             )
            )
            (f64.ne
             (local.get $10)
             (f64.const 0)
            )
           )
          )
         )
        )
       )
       (i32.store
        (i32.const 26292)
        (i32.const 34)
       )
       (local.get $19)
      )
      (local.get $19)
     )
     (local.get $4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $22)
  )
  (local.get $10)
 )
 (func $_scanexp (; 324 ;) (; has Stack IR ;) (param $0 i32) (result i64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (block $__rjto$1 (result i64)
   (block $__rjti$1
    (block $__rjti$0
     (block $switch-default
      (block $switch-case0
       (br_table $switch-case0 $switch-default $switch-case0 $switch-default
        (i32.sub
         (local.tee $2
          (if (result i32)
           (i32.lt_u
            (local.tee $2
             (i32.load
              (local.tee $1
               (i32.add
                (local.get $0)
                (i32.const 4)
               )
              )
             )
            )
            (i32.load
             (local.tee $4
              (i32.add
               (local.get $0)
               (i32.const 100)
              )
             )
            )
           )
           (block (result i32)
            (i32.store
             (local.get $1)
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (i32.load8_u
             (local.get $2)
            )
           )
           (call $___shgetc
            (local.get $0)
           )
          )
         )
         (i32.const 43)
        )
       )
      )
      (local.set $5
       (if (result i32)
        (i32.lt_u
         (local.tee $5
          (i32.load
           (local.get $1)
          )
         )
         (i32.load
          (local.get $4)
         )
        )
        (block (result i32)
         (i32.store
          (local.get $1)
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $5)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (local.set $7
       (i32.eq
        (local.get $2)
        (i32.const 45)
       )
      )
      (br $__rjto$1
       (if (result i64)
        (i32.gt_u
         (local.tee $2
          (i32.add
           (local.get $5)
           (i32.const -48)
          )
         )
         (i32.const 9)
        )
        (if (result i64)
         (i32.load
          (local.get $4)
         )
         (block
          (i32.store
           (local.get $1)
           (i32.add
            (i32.load
             (local.get $1)
            )
            (i32.const -1)
           )
          )
          (br $__rjti$1)
         )
         (i64.const -9223372036854775808)
        )
        (block
         (local.set $3
          (local.get $5)
         )
         (br $__rjti$0)
        )
       )
      )
     )
     (local.set $3
      (local.get $2)
     )
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const -48)
      )
     )
    )
    (br_if $__rjti$1
     (i32.gt_u
      (local.get $2)
      (i32.const 9)
     )
    )
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in
     (br_if $while-in
      (i32.and
       (i32.lt_s
        (local.tee $2
         (i32.add
          (i32.add
           (local.get $3)
           (i32.const -48)
          )
          (i32.mul
           (local.get $2)
           (i32.const 10)
          )
         )
        )
        (i32.const 214748364)
       )
       (i32.lt_u
        (local.tee $5
         (i32.add
          (local.tee $3
           (if (result i32)
            (i32.lt_u
             (local.tee $3
              (i32.load
               (local.get $1)
              )
             )
             (i32.load
              (local.get $4)
             )
            )
            (block (result i32)
             (i32.store
              (local.get $1)
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (i32.load8_u
              (local.get $3)
             )
            )
            (call $___shgetc
             (local.get $0)
            )
           )
          )
          (i32.const -48)
         )
        )
        (i32.const 10)
       )
      )
     )
    )
    (local.set $6
     (i64.extend_i32_s
      (local.get $2)
     )
    )
    (if
     (i32.lt_u
      (local.get $5)
      (i32.const 10)
     )
     (block
      (loop $while-in2
       (local.set $6
        (i64.add
         (i64.add
          (i64.extend_i32_s
           (local.get $3)
          )
          (i64.const -48)
         )
         (i64.mul
          (local.get $6)
          (i64.const 10)
         )
        )
       )
       (br_if $while-in2
        (i32.and
         (i32.lt_u
          (local.tee $2
           (i32.add
            (local.tee $3
             (if (result i32)
              (i32.lt_u
               (local.tee $3
                (i32.load
                 (local.get $1)
                )
               )
               (i32.load
                (local.get $4)
               )
              )
              (block (result i32)
               (i32.store
                (local.get $1)
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (i32.load8_u
                (local.get $3)
               )
              )
              (call $___shgetc
               (local.get $0)
              )
             )
            )
            (i32.const -48)
           )
          )
          (i32.const 10)
         )
         (i64.lt_s
          (local.get $6)
          (i64.const 92233720368547758)
         )
        )
       )
      )
      (if
       (i32.lt_u
        (local.get $2)
        (i32.const 10)
       )
       (loop $while-in4
        (br_if $while-in4
         (i32.lt_u
          (i32.add
           (if (result i32)
            (i32.lt_u
             (local.tee $3
              (i32.load
               (local.get $1)
              )
             )
             (i32.load
              (local.get $4)
             )
            )
            (block (result i32)
             (i32.store
              (local.get $1)
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (i32.load8_u
              (local.get $3)
             )
            )
            (call $___shgetc
             (local.get $0)
            )
           )
           (i32.const -48)
          )
          (i32.const 10)
         )
        )
       )
      )
     )
    )
    (if
     (i32.load
      (local.get $4)
     )
     (i32.store
      (local.get $1)
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const -1)
      )
     )
    )
    (br $__rjto$1
     (select
      (i64.sub
       (i64.const 0)
       (local.get $6)
      )
      (local.get $6)
      (local.get $7)
     )
    )
   )
   (if (result i64)
    (i32.load
     (local.get $4)
    )
    (block (result i64)
     (i32.store
      (local.get $1)
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const -1)
      )
     )
     (i64.const -9223372036854775808)
    )
    (i64.const -9223372036854775808)
   )
  )
 )
 (func $_scalbn (; 325 ;) (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 1023)
   )
   (block
    (local.set $0
     (select
      (f64.mul
       (local.tee $0
        (f64.mul
         (local.get $0)
         (f64.const 8988465674311579538646525e283)
        )
       )
       (f64.const 8988465674311579538646525e283)
      )
      (local.get $0)
      (local.tee $2
       (i32.gt_s
        (local.get $1)
        (i32.const 2046)
       )
      )
     )
    )
    (local.set $1
     (select
      (select
       (local.tee $3
        (i32.add
         (local.get $1)
         (i32.const -2046)
        )
       )
       (i32.const 1023)
       (i32.lt_s
        (local.get $3)
        (i32.const 1023)
       )
      )
      (i32.add
       (local.get $1)
       (i32.const -1023)
      )
      (local.get $2)
     )
    )
   )
   (if
    (i32.lt_s
     (local.get $1)
     (i32.const -1022)
    )
    (block
     (local.set $0
      (select
       (f64.mul
        (local.tee $0
         (f64.mul
          (local.get $0)
          (f64.const 2.2250738585072014e-308)
         )
        )
        (f64.const 2.2250738585072014e-308)
       )
       (local.get $0)
       (local.tee $2
        (i32.lt_s
         (local.get $1)
         (i32.const -2044)
        )
       )
      )
     )
     (local.set $1
      (select
       (select
        (local.tee $3
         (i32.add
          (local.get $1)
          (i32.const 2044)
         )
        )
        (i32.const -1022)
        (i32.gt_s
         (local.get $3)
         (i32.const -1022)
        )
       )
       (i32.add
        (local.get $1)
        (i32.const 1022)
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (f64.mul
   (local.get $0)
   (f64.reinterpret_i64
    (i64.shl
     (i64.extend_i32_u
      (i32.add
       (local.get $1)
       (i32.const 1023)
      )
     )
     (i64.const 52)
    )
   )
  )
 )
 (func $_copysignl (; 326 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (f64.reinterpret_i64
   (i64.or
    (i64.and
     (i64.reinterpret_f64
      (local.get $0)
     )
     (i64.const 9223372036854775807)
    )
    (i64.and
     (i64.reinterpret_f64
      (local.get $1)
     )
     (i64.const -9223372036854775808)
    )
   )
  )
 )
 (func $_fmodl (; 327 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (call $_fmod
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_scalbnl (; 328 ;) (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (call $_scalbn
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_fmod (; 329 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local.set $3
   (i32.and
    (i32.wrap_i64
     (i64.shr_u
      (local.tee $4
       (i64.reinterpret_f64
        (local.get $0)
       )
      )
      (i64.const 52)
     )
    )
    (i32.const 2047)
   )
  )
  (local.set $7
   (i32.and
    (i32.wrap_i64
     (i64.shr_u
      (local.tee $5
       (i64.reinterpret_f64
        (local.get $1)
       )
      )
      (i64.const 52)
     )
    )
    (i32.const 2047)
   )
  )
  (local.set $8
   (i64.and
    (local.get $4)
    (i64.const -9223372036854775808)
   )
  )
  (block $__rjto$0 (result f64)
   (block $__rjti$0
    (br_if $__rjti$0
     (i64.eq
      (local.tee $2
       (i64.shl
        (local.get $5)
        (i64.const 1)
       )
      )
      (i64.const 0)
     )
    )
    (br $__rjto$0
     (block $label$break$L1 (result f64)
      (br_if $__rjti$0
       (i32.or
        (i32.eq
         (local.get $3)
         (i32.const 2047)
        )
        (i64.gt_u
         (i64.and
          (i64.reinterpret_f64
           (local.get $1)
          )
          (i64.const 9223372036854775807)
         )
         (i64.const 9218868437227405312)
        )
       )
      )
      (if
       (i64.le_u
        (local.tee $9
         (i64.shl
          (local.get $4)
          (i64.const 1)
         )
        )
        (local.get $2)
       )
       (return
        (select
         (f64.mul
          (local.get $0)
          (f64.const 0)
         )
         (local.get $0)
         (i64.eq
          (local.get $2)
          (local.get $9)
         )
        )
       )
      )
      (local.set $6
       (i64.gt_s
        (local.tee $2
         (i64.sub
          (local.tee $4
           (if (result i64)
            (local.get $3)
            (i64.or
             (i64.and
              (local.get $4)
              (i64.const 4503599627370495)
             )
             (i64.const 4503599627370496)
            )
            (block (result i64)
             (if
              (i64.gt_s
               (local.tee $2
                (i64.shl
                 (local.get $4)
                 (i64.const 12)
                )
               )
               (i64.const -1)
              )
              (block
               (local.set $3
                (i32.const 0)
               )
               (loop $while-in
                (local.set $3
                 (i32.add
                  (local.get $3)
                  (i32.const -1)
                 )
                )
                (br_if $while-in
                 (i64.gt_s
                  (local.tee $2
                   (i64.shl
                    (local.get $2)
                    (i64.const 1)
                   )
                  )
                  (i64.const -1)
                 )
                )
               )
              )
              (local.set $3
               (i32.const 0)
              )
             )
             (i64.shl
              (local.get $4)
              (i64.extend_i32_u
               (i32.sub
                (i32.const 1)
                (local.get $3)
               )
              )
             )
            )
           )
          )
          (local.tee $5
           (if (result i64)
            (local.get $7)
            (i64.or
             (i64.and
              (local.get $5)
              (i64.const 4503599627370495)
             )
             (i64.const 4503599627370496)
            )
            (block (result i64)
             (if
              (i64.gt_s
               (local.tee $2
                (i64.shl
                 (local.get $5)
                 (i64.const 12)
                )
               )
               (i64.const -1)
              )
              (loop $while-in1
               (local.set $6
                (i32.add
                 (local.get $6)
                 (i32.const -1)
                )
               )
               (br_if $while-in1
                (i64.gt_s
                 (local.tee $2
                  (i64.shl
                   (local.get $2)
                   (i64.const 1)
                  )
                 )
                 (i64.const -1)
                )
               )
              )
             )
             (i64.shl
              (local.get $5)
              (i64.extend_i32_u
               (i32.sub
                (i32.const 1)
                (local.tee $7
                 (local.get $6)
                )
               )
              )
             )
            )
           )
          )
         )
        )
        (i64.const -1)
       )
      )
      (if
       (i32.gt_s
        (local.get $3)
        (local.get $7)
       )
       (block $label$break$L25
        (loop $while-in4
         (block $while-out3
          (if
           (local.get $6)
           (br_if $while-out3
            (i64.eq
             (local.get $2)
             (i64.const 0)
            )
           )
           (local.set $2
            (local.get $4)
           )
          )
          (local.set $6
           (i64.gt_s
            (local.tee $2
             (i64.sub
              (local.tee $4
               (i64.shl
                (local.get $2)
                (i64.const 1)
               )
              )
              (local.get $5)
             )
            )
            (i64.const -1)
           )
          )
          (br_if $while-in4
           (i32.gt_s
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const -1)
             )
            )
            (local.get $7)
           )
          )
          (br $label$break$L25)
         )
        )
        (br $label$break$L1
         (f64.mul
          (local.get $0)
          (f64.const 0)
         )
        )
       )
      )
      (if
       (local.get $6)
       (drop
        (br_if $label$break$L1
         (f64.mul
          (local.get $0)
          (f64.const 0)
         )
         (i64.eq
          (local.get $2)
          (i64.const 0)
         )
        )
       )
       (local.set $2
        (local.get $4)
       )
      )
      (if
       (i64.lt_u
        (local.get $2)
        (i64.const 4503599627370496)
       )
       (loop $while-in6
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const -1)
         )
        )
        (br_if $while-in6
         (i64.lt_u
          (local.tee $2
           (i64.shl
            (local.get $2)
            (i64.const 1)
           )
          )
          (i64.const 4503599627370496)
         )
        )
       )
      )
      (f64.reinterpret_i64
       (i64.or
        (if (result i64)
         (i32.gt_s
          (local.get $3)
          (i32.const 0)
         )
         (i64.or
          (i64.add
           (local.get $2)
           (i64.const -4503599627370496)
          )
          (i64.shl
           (i64.extend_i32_u
            (local.get $3)
           )
           (i64.const 52)
          )
         )
         (i64.shr_u
          (local.get $2)
          (i64.extend_i32_u
           (i32.sub
            (i32.const 1)
            (local.get $3)
           )
          )
         )
        )
        (local.get $8)
       )
      )
     )
    )
   )
   (f64.div
    (local.tee $0
     (f64.mul
      (local.get $0)
      (local.get $1)
     )
    )
    (local.get $0)
   )
  )
 )
 (func $_strlen (; 330 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (i32.and
       (local.tee $2
        (local.get $0)
       )
       (i32.const 3)
      )
     )
    )
    (local.set $1
     (local.get $0)
    )
    (block $label$break$L1
     (loop $while-in
      (br_if $label$break$L1
       (i32.eqz
        (i32.load8_s
         (local.get $1)
        )
       )
      )
      (br_if $while-in
       (i32.and
        (local.tee $0
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
        (i32.const 3)
       )
      )
     )
     (local.set $0
      (local.get $1)
     )
     (br $__rjti$0)
    )
    (br $__rjto$0)
   )
   (loop $while-in1
    (local.set $1
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (i32.add
        (local.tee $3
         (i32.load
          (local.get $0)
         )
        )
        (i32.const -16843009)
       )
       (i32.xor
        (i32.and
         (local.get $3)
         (i32.const -2139062144)
        )
        (i32.const -2139062144)
       )
      )
     )
     (block
      (local.set $0
       (local.get $1)
      )
      (br $while-in1)
     )
    )
   )
   (if
    (i32.and
     (local.get $3)
     (i32.const 255)
    )
    (loop $while-in3
     (br_if $while-in3
      (i32.load8_s
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
  )
  (i32.sub
   (local.get $0)
   (local.get $2)
  )
 )
 (func $_strcpy (; 331 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $___stpcpy
   (local.get $0)
   (local.get $1)
  )
 )
 (func $___stpcpy (; 332 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.and
      (i32.xor
       (local.tee $2
        (local.get $1)
       )
       (local.get $0)
      )
      (i32.const 3)
     )
    )
    (block $label$break$L1
     (if
      (i32.and
       (local.get $2)
       (i32.const 3)
      )
      (loop $while-in
       (i32.store8
        (local.get $0)
        (local.tee $2
         (i32.load8_s
          (local.get $1)
         )
        )
       )
       (br_if $label$break$L1
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (i32.and
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.const 3)
        )
       )
      )
     )
     (if
      (i32.eqz
       (i32.and
        (i32.add
         (local.tee $2
          (i32.load
           (local.get $1)
          )
         )
         (i32.const -16843009)
        )
        (i32.xor
         (i32.and
          (local.get $2)
          (i32.const -2139062144)
         )
         (i32.const -2139062144)
        )
       )
      )
      (local.set $0
       (loop $while-in1 (result i32)
        (local.set $3
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (i32.store
         (local.get $0)
         (local.get $2)
        )
        (if (result i32)
         (i32.and
          (i32.add
           (local.tee $2
            (i32.load
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
            )
           )
           (i32.const -16843009)
          )
          (i32.xor
           (i32.and
            (local.get $2)
            (i32.const -2139062144)
           )
           (i32.const -2139062144)
          )
         )
         (local.get $3)
         (block
          (local.set $0
           (local.get $3)
          )
          (br $while-in1)
         )
        )
       )
      )
     )
     (br $__rjti$0)
    )
    (br $__rjto$0)
   )
   (i32.store8
    (local.get $0)
    (local.tee $2
     (i32.load8_s
      (local.get $1)
     )
    )
   )
   (if
    (local.get $2)
    (loop $while-in3
     (i32.store8
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (local.tee $2
       (i32.load8_s
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
     )
     (br_if $while-in3
      (local.get $2)
     )
    )
   )
  )
 )
 (func $_fwrite (; 333 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $3
   (local.get $1)
  )
  (select
   (local.tee $0
    (block (result i32)
     (drop
      (i32.load offset=76
       (local.get $2)
      )
     )
     (call $___fwritex
      (local.get $0)
      (local.get $3)
      (local.get $2)
     )
    )
   )
   (local.get $1)
   (i32.ne
    (local.get $0)
    (local.get $3)
   )
  )
 )
 (func $___overflow (; 334 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.tee $4
    (local.get $3)
   )
   (i32.const 10)
  )
  (block $do-once
   (block $__rjti$0
    (br_if $__rjti$0
     (local.tee $1
      (i32.load
       (local.tee $2
        (i32.add
         (local.get $0)
         (i32.const 16)
        )
       )
      )
     )
    )
    (local.set $1
     (if (result i32)
      (call $___towrite
       (local.get $0)
      )
      (i32.const -1)
      (block
       (local.set $1
        (i32.load
         (local.get $2)
        )
       )
       (br $__rjti$0)
      )
     )
    )
    (br $do-once)
   )
   (if
    (i32.lt_u
     (local.tee $5
      (i32.load
       (local.tee $2
        (i32.add
         (local.get $0)
         (i32.const 20)
        )
       )
      )
     )
     (local.get $1)
    )
    (if
     (i32.ne
      (local.tee $1
       (i32.const 10)
      )
      (i32.load8_s offset=75
       (local.get $0)
      )
     )
     (block
      (i32.store
       (local.get $2)
       (i32.add
        (local.get $5)
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $5)
       (i32.const 10)
      )
      (br $do-once)
     )
    )
   )
   (local.set $1
    (if (result i32)
     (i32.eq
      (call_indirect (type $FUNCSIG$iiii)
       (local.get $0)
       (local.get $4)
       (i32.const 1)
       (i32.add
        (i32.and
         (i32.load offset=36
          (local.get $0)
         )
         (i32.const 15)
        )
        (i32.const 12)
       )
      )
      (i32.const 1)
     )
     (i32.load8_u
      (local.get $4)
     )
     (i32.const -1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $1)
 )
 (func $_fflush (; 335 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (local.get $0)
   (local.set $0
    (block $do-once (result i32)
     (if
      (i32.le_s
       (i32.load offset=76
        (local.get $0)
       )
       (i32.const -1)
      )
      (br $do-once
       (call $___fflush_unlocked
        (local.get $0)
       )
      )
     )
     (call $___fflush_unlocked
      (local.get $0)
     )
    )
   )
   (block
    (local.set $0
     (if (result i32)
      (i32.load
       (i32.const 16764)
      )
      (call $_fflush
       (i32.load
        (i32.const 16764)
       )
      )
      (i32.const 0)
     )
    )
    (if
     (block (result i32)
      (call $___lock
       (i32.const 26296)
      )
      (local.tee $1
       (i32.load
        (i32.const 26304)
       )
      )
     )
     (loop $while-in
      (drop
       (if (result i32)
        (i32.gt_s
         (i32.load offset=76
          (local.get $1)
         )
         (i32.const -1)
        )
        (i32.const 1)
        (i32.const 0)
       )
      )
      (if
       (i32.gt_u
        (i32.load offset=20
         (local.get $1)
        )
        (i32.load offset=28
         (local.get $1)
        )
       )
       (local.set $0
        (i32.or
         (call $___fflush_unlocked
          (local.get $1)
         )
         (local.get $0)
        )
       )
      )
      (br_if $while-in
       (local.tee $1
        (i32.load offset=56
         (local.get $1)
        )
       )
      )
     )
    )
    (call $___unlock
     (i32.const 26296)
    )
   )
  )
  (local.get $0)
 )
 (func $___fflush_unlocked (; 336 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.le_u
      (i32.load
       (local.tee $2
        (i32.add
         (local.get $0)
         (i32.const 20)
        )
       )
      )
      (i32.load
       (local.tee $3
        (i32.add
         (local.get $0)
         (i32.const 28)
        )
       )
      )
     )
    )
    (local.set $1
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 36)
      )
     )
    )
    (drop
     (call_indirect (type $FUNCSIG$iiii)
      (local.get $0)
      (i32.const 0)
      (i32.const 0)
      (i32.add
       (i32.and
        (local.get $1)
        (i32.const 15)
       )
       (i32.const 12)
      )
     )
    )
    (br_if $__rjti$0
     (i32.load
      (local.get $2)
     )
    )
    (br $__rjto$0
     (i32.const -1)
    )
   )
   (if
    (i32.lt_u
     (local.tee $4
      (i32.load
       (local.tee $1
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
      )
     )
     (local.tee $6
      (i32.load
       (local.tee $5
        (i32.add
         (local.get $0)
         (i32.const 8)
        )
       )
      )
     )
    )
    (block
     (local.set $7
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 40)
       )
      )
     )
     (drop
      (call_indirect (type $FUNCSIG$iiii)
       (local.get $0)
       (i32.sub
        (local.get $4)
        (local.get $6)
       )
       (i32.const 1)
       (i32.add
        (i32.and
         (local.get $7)
         (i32.const 15)
        )
        (i32.const 12)
       )
      )
     )
    )
   )
   (i32.store
    (i32.add
     (local.get $0)
     (i32.const 16)
    )
    (i32.const 0)
   )
   (i32.store
    (local.get $3)
    (i32.const 0)
   )
   (i32.store
    (local.get $2)
    (i32.const 0)
   )
   (i32.store
    (local.get $5)
    (i32.const 0)
   )
   (i32.store
    (local.get $1)
    (i32.const 0)
   )
   (i32.const 0)
  )
 )
 (func $_fprintf (; 337 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $2)
  )
  (drop
   (call $_vfprintf
    (local.get $0)
    (local.get $1)
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_fread (; 338 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (drop
   (if (result i32)
    (i32.gt_s
     (i32.load offset=76
      (local.get $2)
     )
     (i32.const -1)
    )
    (i32.const 1)
    (i32.const 0)
   )
  )
  (local.set $5
   (local.get $1)
  )
  (local.set $3
   (i32.load8_s
    (local.tee $4
     (i32.add
      (local.get $2)
      (i32.const 74)
     )
    )
   )
  )
  (i32.store8
   (local.get $4)
   (i32.or
    (local.get $3)
    (i32.add
     (local.get $3)
     (i32.const 255)
    )
   )
  )
  (block $__rjto$0
   (br_if $__rjto$0
    (i32.eqz
     (local.tee $4
      (if (result i32)
       (i32.gt_s
        (local.tee $3
         (i32.sub
          (i32.load offset=8
           (local.get $2)
          )
          (local.tee $4
           (i32.load
            (local.tee $6
             (i32.add
              (local.get $2)
              (i32.const 4)
             )
            )
           )
          )
         )
        )
        (i32.const 0)
       )
       (block (result i32)
        (drop
         (call $_memcpy
          (local.get $0)
          (local.get $4)
          (local.tee $3
           (select
            (local.get $3)
            (local.get $5)
            (i32.lt_u
             (local.get $3)
             (local.get $5)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $6)
         (i32.add
          (local.get $3)
          (i32.load
           (local.get $6)
          )
         )
        )
        (local.set $0
         (i32.add
          (local.get $0)
          (local.get $3)
         )
        )
        (i32.sub
         (local.get $5)
         (local.get $3)
        )
       )
       (local.get $5)
      )
     )
    )
   )
   (local.set $6
    (i32.add
     (local.get $2)
     (i32.const 32)
    )
   )
   (local.set $3
    (local.get $0)
   )
   (local.set $0
    (local.get $4)
   )
   (loop $while-in
    (block $while-out
     (br_if $while-out
      (call $___toread
       (local.get $2)
      )
     )
     (br_if $while-out
      (i32.lt_u
       (i32.add
        (local.tee $4
         (call_indirect (type $FUNCSIG$iiii)
          (local.get $2)
          (local.get $3)
          (local.get $0)
          (i32.add
           (i32.and
            (i32.load
             (local.get $6)
            )
            (i32.const 15)
           )
           (i32.const 12)
          )
         )
        )
        (i32.const 1)
       )
       (i32.const 2)
      )
     )
     (br_if $__rjto$0
      (i32.eqz
       (local.tee $0
        (i32.sub
         (local.get $0)
         (local.get $4)
        )
       )
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (local.get $4)
      )
     )
     (br $while-in)
    )
   )
   (local.set $1
    (i32.sub
     (local.get $5)
     (local.get $0)
    )
   )
  )
  (local.get $1)
 )
 (func $_printf (; 339 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  (drop
   (call $_vfprintf
    (i32.load
     (i32.const 16636)
    )
    (local.get $0)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_puts (; 340 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (drop
   (if (result i32)
    (i32.gt_s
     (i32.load offset=76
      (local.tee $1
       (i32.load
        (i32.const 16636)
       )
      )
     )
     (i32.const -1)
    )
    (i32.const 1)
    (i32.const 0)
   )
  )
  (drop
   (if (result i32)
    (i32.lt_s
     (i32.shr_s
      (i32.shl
       (i32.ne
        (local.tee $2
         (call $_strlen
          (local.get $0)
         )
        )
        (call $_fwrite
         (local.get $0)
         (local.get $2)
         (local.get $1)
        )
       )
       (i32.const 31)
      )
      (i32.const 31)
     )
     (i32.const 0)
    )
    (i32.const -1)
    (block $do-once (result i32)
     (if
      (i32.ne
       (i32.load8_s offset=75
        (local.get $1)
       )
       (i32.const 10)
      )
      (if
       (i32.lt_u
        (local.tee $0
         (i32.load
          (local.tee $2
           (i32.add
            (local.get $1)
            (i32.const 20)
           )
          )
         )
        )
        (i32.load offset=16
         (local.get $1)
        )
       )
       (block
        (i32.store
         (local.get $2)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $0)
         (i32.const 10)
        )
        (br $do-once
         (i32.const 0)
        )
       )
      )
     )
     (call $___overflow
      (local.get $1)
     )
    )
   )
  )
 )
 (func $_strtod (; 341 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result f64)
  (call $_strtox
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_strtox (; 342 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (i64.store align=4
   (local.tee $2
    (local.get $3)
   )
   (i64.const 0)
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=16 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=24 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=32 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=40 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=48 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=56 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store align=4
   (i32.sub
    (local.get $2)
    (i32.const -64)
   )
   (i64.const 0)
  )
  (i64.store offset=72 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=80 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=88 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=96 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=104 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i64.store offset=112 align=4
   (local.get $2)
   (i64.const 0)
  )
  (i32.store offset=120
   (local.get $2)
   (i32.const 0)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $2)
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
   (i32.const -1)
  )
  (i32.store offset=44
   (local.get $2)
   (local.get $0)
  )
  (i32.store offset=76
   (local.get $2)
   (i32.const -1)
  )
  (call $___shlim
   (local.get $2)
  )
  (local.set $6
   (call $___floatscan
    (local.get $2)
   )
  )
  (local.set $2
   (i32.add
    (i32.load offset=108
     (local.get $2)
    )
    (i32.sub
     (i32.load
      (local.get $4)
     )
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (if
   (local.get $1)
   (i32.store
    (local.get $1)
    (select
     (i32.add
      (local.get $0)
      (local.get $2)
     )
     (local.get $0)
     (local.get $2)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $6)
 )
 (func $_pow (; 343 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 f64)
  (local $9 i32)
  (local $10 i64)
  (local $11 f64)
  (local $12 f64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i64)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (if
   (i32.eqz
    (i32.or
     (local.tee $3
      (i32.and
       (local.tee $7
        (i32.wrap_i64
         (i64.shr_u
          (local.tee $10
           (i64.reinterpret_f64
            (local.get $1)
           )
          )
          (i64.const 32)
         )
        )
       )
       (i32.const 2147483647)
      )
     )
     (local.tee $9
      (i32.wrap_i64
       (local.get $10)
      )
     )
    )
   )
   (return
    (f64.const 1)
   )
  )
  (if
   (i32.and
    (i32.eq
     (local.tee $13
      (i32.wrap_i64
       (i64.shr_u
        (local.tee $16
         (i64.reinterpret_f64
          (local.get $0)
         )
        )
        (i64.const 32)
       )
      )
     )
     (i32.const 1072693248)
    )
    (local.tee $17
     (i32.eqz
      (local.tee $14
       (i32.wrap_i64
        (local.get $16)
       )
      )
     )
    )
   )
   (return
    (f64.const 1)
   )
  )
  (if
   (i32.le_u
    (local.tee $5
     (i32.and
      (local.get $13)
      (i32.const 2147483647)
     )
    )
    (i32.const 2146435072)
   )
   (if
    (i32.eqz
     (i32.or
      (i32.and
       (i32.eq
        (local.get $5)
        (i32.const 2146435072)
       )
       (i32.ne
        (local.get $14)
        (i32.const 0)
       )
      )
      (i32.gt_u
       (local.get $3)
       (i32.const 2146435072)
      )
     )
    )
    (if
     (i32.eqz
      (i32.and
       (local.tee $18
        (i32.eq
         (local.get $3)
         (i32.const 2146435072)
        )
       )
       (i32.ne
        (local.get $9)
        (i32.const 0)
       )
      )
     )
     (block
      (block $__rjto$1
       (block $__rjti$1
        (block $__rjti$0
         (br_if $__rjti$0
          (i32.eqz
           (local.tee $15
            (i32.lt_s
             (local.get $13)
             (i32.const 0)
            )
           )
          )
         )
         (local.set $2
          (if (result i32)
           (i32.gt_u
            (local.get $3)
            (i32.const 1128267775)
           )
           (block
            (local.set $2
             (i32.const 2)
            )
            (br $__rjti$0)
           )
           (if (result i32)
            (i32.gt_u
             (local.get $3)
             (i32.const 1072693247)
            )
            (block (result i32)
             (local.set $2
              (i32.shr_u
               (local.get $3)
               (i32.const 20)
              )
             )
             (if
              (i32.gt_u
               (local.get $3)
               (i32.const 1094713343)
              )
              (block
               (local.set $2
                (select
                 (i32.sub
                  (i32.const 2)
                  (i32.and
                   (local.tee $19
                    (i32.shr_u
                     (local.get $9)
                     (local.tee $2
                      (i32.sub
                       (i32.const 1075)
                       (local.get $2)
                      )
                     )
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (i32.const 0)
                 (i32.eq
                  (i32.shl
                   (local.get $19)
                   (local.get $2)
                  )
                  (local.get $9)
                 )
                )
               )
               (br $__rjti$0)
              )
             )
             (if (result i32)
              (local.get $9)
              (i32.const 0)
              (block
               (local.set $2
                (select
                 (i32.sub
                  (i32.const 2)
                  (i32.and
                   (local.tee $9
                    (i32.shr_u
                     (local.get $3)
                     (local.tee $2
                      (i32.sub
                       (i32.const 1043)
                       (local.get $2)
                      )
                     )
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (i32.const 0)
                 (i32.eq
                  (local.get $3)
                  (i32.shl
                   (local.get $9)
                   (local.get $2)
                  )
                 )
                )
               )
               (br $__rjti$1)
              )
             )
            )
            (br $__rjti$0)
           )
          )
         )
         (br $__rjto$1)
        )
        (br_if $__rjti$1
         (i32.eqz
          (local.get $9)
         )
        )
        (br $__rjto$1)
       )
       (if
        (local.get $18)
        (block
         (if
          (i32.eqz
           (i32.or
            (i32.add
             (local.get $5)
             (i32.const -1072693248)
            )
            (local.get $14)
           )
          )
          (return
           (f64.const 1)
          )
         )
         (local.set $2
          (i32.gt_s
           (local.get $7)
           (i32.const -1)
          )
         )
         (if
          (i32.gt_u
           (local.get $5)
           (i32.const 1072693247)
          )
          (return
           (select
            (local.get $1)
            (f64.const 0)
            (local.get $2)
           )
          )
          (return
           (select
            (f64.const 0)
            (f64.neg
             (local.get $1)
            )
            (local.get $2)
           )
          )
         )
        )
       )
       (if
        (i32.eq
         (local.get $3)
         (i32.const 1072693248)
        )
        (return
         (select
          (local.get $0)
          (f64.div
           (f64.const 1)
           (local.get $0)
          )
          (i32.gt_s
           (local.get $7)
           (i32.const -1)
          )
         )
        )
       )
       (if
        (i32.eq
         (local.get $7)
         (i32.const 1073741824)
        )
        (return
         (f64.mul
          (local.get $0)
          (local.get $0)
         )
        )
       )
       (if
        (i32.and
         (i32.eq
          (local.get $7)
          (i32.const 1071644672)
         )
         (i32.gt_s
          (local.get $13)
          (i32.const -1)
         )
        )
        (return
         (f64.sqrt
          (local.get $0)
         )
        )
       )
      )
      (local.set $4
       (f64.abs
        (local.get $0)
       )
      )
      (if
       (local.get $17)
       (if
        (i32.or
         (i32.eqz
          (local.get $5)
         )
         (i32.eq
          (i32.or
           (local.get $5)
           (i32.const 1073741824)
          )
          (i32.const 2146435072)
         )
        )
        (block
         (local.set $0
          (select
           (f64.div
            (f64.const 1)
            (local.get $4)
           )
           (local.get $4)
           (i32.lt_s
            (local.get $7)
            (i32.const 0)
           )
          )
         )
         (if
          (i32.eqz
           (local.get $15)
          )
          (return
           (local.get $0)
          )
         )
         (if
          (i32.or
           (local.get $2)
           (i32.add
            (local.get $5)
            (i32.const -1072693248)
           )
          )
          (return
           (select
            (f64.neg
             (local.get $0)
            )
            (local.get $0)
            (i32.eq
             (local.get $2)
             (i32.const 1)
            )
           )
          )
         )
         (return
          (f64.div
           (local.tee $0
            (f64.sub
             (local.get $0)
             (local.get $0)
            )
           )
           (local.get $0)
          )
         )
        )
       )
      )
      (if
       (local.get $15)
       (block $label$break$L55
        (block $switch
         (block $switch-default
          (block $switch-case1
           (br_table $switch $switch-case1 $switch-default
            (local.get $2)
           )
          )
          (local.set $8
           (f64.const -1)
          )
          (br $label$break$L55)
         )
         (local.set $8
          (f64.const 1)
         )
         (br $label$break$L55)
        )
        (return
         (f64.div
          (local.tee $0
           (f64.sub
            (local.get $0)
            (local.get $0)
           )
          )
          (local.get $0)
         )
        )
       )
       (local.set $8
        (f64.const 1)
       )
      )
      (if
       (i32.gt_u
        (local.get $3)
        (i32.const 1105199104)
       )
       (block $do-once2
        (if
         (i32.gt_u
          (local.get $3)
          (i32.const 1139802112)
         )
         (if
          (i32.lt_u
           (local.get $5)
           (i32.const 1072693248)
          )
          (return
           (select
            (global.get $inf)
            (f64.const 0)
            (i32.lt_s
             (local.get $7)
             (i32.const 0)
            )
           )
          )
          (return
           (select
            (global.get $inf)
            (f64.const 0)
            (i32.gt_s
             (local.get $7)
             (i32.const 0)
            )
           )
          )
         )
        )
        (if
         (i32.lt_u
          (local.get $5)
          (i32.const 1072693247)
         )
         (return
          (select
           (f64.mul
            (f64.mul
             (local.get $8)
             (f64.const 1.e+300)
            )
            (f64.const 1.e+300)
           )
           (f64.mul
            (f64.mul
             (local.get $8)
             (f64.const 1e-300)
            )
            (f64.const 1e-300)
           )
           (i32.lt_s
            (local.get $7)
            (i32.const 0)
           )
          )
         )
        )
        (if
         (i32.le_u
          (local.get $5)
          (i32.const 1072693248)
         )
         (block
          (local.set $4
           (local.tee $11
            (f64.reinterpret_i64
             (i64.and
              (i64.reinterpret_f64
               (f64.add
                (local.tee $6
                 (f64.mul
                  (local.tee $0
                   (f64.add
                    (local.get $4)
                    (f64.const -1)
                   )
                  )
                  (f64.const 1.4426950216293335)
                 )
                )
                (local.tee $0
                 (f64.sub
                  (f64.mul
                   (local.get $0)
                   (f64.const 1.9259629911266175e-08)
                  )
                  (f64.mul
                   (f64.mul
                    (f64.mul
                     (local.get $0)
                     (local.get $0)
                    )
                    (f64.sub
                     (f64.const 0.5)
                     (f64.mul
                      (local.get $0)
                      (f64.sub
                       (f64.const 0.3333333333333333)
                       (f64.mul
                        (local.get $0)
                        (f64.const 0.25)
                       )
                      )
                     )
                    )
                   )
                   (f64.const 1.4426950408889634)
                  )
                 )
                )
               )
              )
              (i64.const -4294967296)
             )
            )
           )
          )
          (local.set $6
           (f64.sub
            (local.get $11)
            (local.get $6)
           )
          )
          (br $do-once2)
         )
        )
        (return
         (select
          (f64.mul
           (f64.mul
            (local.get $8)
            (f64.const 1.e+300)
           )
           (f64.const 1.e+300)
          )
          (f64.mul
           (f64.mul
            (local.get $8)
            (f64.const 1e-300)
           )
           (f64.const 1e-300)
          )
          (i32.gt_s
           (local.get $7)
           (i32.const 0)
          )
         )
        )
       )
       (block
        (local.set $3
         (i32.add
          (i32.shr_s
           (local.tee $2
            (select
             (i32.wrap_i64
              (i64.shr_u
               (i64.reinterpret_f64
                (local.tee $0
                 (f64.mul
                  (local.get $4)
                  (f64.const 9007199254740992)
                 )
                )
               )
               (i64.const 32)
              )
             )
             (local.get $5)
             (local.tee $7
              (i32.lt_u
               (local.get $5)
               (i32.const 1048576)
              )
             )
            )
           )
           (i32.const 20)
          )
          (select
           (i32.const -1076)
           (i32.const -1023)
           (local.get $7)
          )
         )
        )
        (local.set $2
         (i32.or
          (local.tee $5
           (i32.and
            (local.get $2)
            (i32.const 1048575)
           )
          )
          (i32.const 1072693248)
         )
        )
        (if
         (i32.lt_u
          (local.get $5)
          (i32.const 235663)
         )
         (local.set $5
          (i32.const 0)
         )
         (block
          (local.set $5
           (local.tee $9
            (i32.lt_u
             (local.get $5)
             (i32.const 767610)
            )
           )
          )
          (local.set $3
           (i32.add
            (local.get $3)
            (i32.and
             (i32.xor
              (local.get $9)
              (i32.const 1)
             )
             (i32.const 1)
            )
           )
          )
          (local.set $2
           (select
            (local.get $2)
            (i32.add
             (local.get $2)
             (i32.const -1048576)
            )
            (local.get $9)
           )
          )
         )
        )
        (local.set $4
         (local.tee $12
          (f64.reinterpret_i64
           (i64.and
            (i64.reinterpret_f64
             (f64.add
              (f64.add
               (local.tee $20
                (f64.load
                 (i32.add
                  (i32.shl
                   (local.get $5)
                   (i32.const 3)
                  )
                  (i32.const 16432)
                 )
                )
               )
               (f64.add
                (local.tee $6
                 (f64.mul
                  (local.tee $0
                   (f64.reinterpret_i64
                    (i64.and
                     (i64.reinterpret_f64
                      (f64.add
                       (local.tee $12
                        (f64.mul
                         (local.tee $0
                          (f64.reinterpret_i64
                           (i64.and
                            (i64.reinterpret_f64
                             (local.tee $4
                              (f64.mul
                               (local.tee $12
                                (f64.sub
                                 (local.tee $6
                                  (f64.reinterpret_i64
                                   (i64.or
                                    (i64.and
                                     (i64.reinterpret_f64
                                      (select
                                       (local.get $0)
                                       (local.get $4)
                                       (local.get $7)
                                      )
                                     )
                                     (i64.const 4294967295)
                                    )
                                    (i64.shl
                                     (i64.extend_i32_u
                                      (local.get $2)
                                     )
                                     (i64.const 32)
                                    )
                                   )
                                  )
                                 )
                                 (local.tee $11
                                  (f64.load
                                   (i32.add
                                    (i32.shl
                                     (local.get $5)
                                     (i32.const 3)
                                    )
                                    (i32.const 16400)
                                   )
                                  )
                                 )
                                )
                               )
                               (local.tee $21
                                (f64.div
                                 (f64.const 1)
                                 (f64.add
                                  (local.get $11)
                                  (local.get $6)
                                 )
                                )
                               )
                              )
                             )
                            )
                            (i64.const -4294967296)
                           )
                          )
                         )
                         (local.tee $0
                          (f64.reinterpret_i64
                           (i64.and
                            (i64.reinterpret_f64
                             (f64.add
                              (f64.add
                               (local.tee $22
                                (f64.mul
                                 (local.get $0)
                                 (local.get $0)
                                )
                               )
                               (f64.const 3)
                              )
                              (local.tee $11
                               (f64.add
                                (f64.mul
                                 (f64.add
                                  (local.get $4)
                                  (local.get $0)
                                 )
                                 (local.tee $6
                                  (f64.mul
                                   (local.get $21)
                                   (f64.sub
                                    (f64.sub
                                     (local.get $12)
                                     (f64.mul
                                      (local.tee $12
                                       (f64.reinterpret_i64
                                        (i64.shl
                                         (i64.extend_i32_u
                                          (i32.add
                                           (i32.add
                                            (i32.or
                                             (i32.shr_s
                                              (local.get $2)
                                              (i32.const 1)
                                             )
                                             (i32.const 536870912)
                                            )
                                            (i32.const 524288)
                                           )
                                           (i32.shl
                                            (local.get $5)
                                            (i32.const 18)
                                           )
                                          )
                                         )
                                         (i64.const 32)
                                        )
                                       )
                                      )
                                      (local.get $0)
                                     )
                                    )
                                    (f64.mul
                                     (f64.sub
                                      (local.get $6)
                                      (f64.sub
                                       (local.get $12)
                                       (local.get $11)
                                      )
                                     )
                                     (local.get $0)
                                    )
                                   )
                                  )
                                 )
                                )
                                (f64.mul
                                 (f64.mul
                                  (local.tee $0
                                   (f64.mul
                                    (local.get $4)
                                    (local.get $4)
                                   )
                                  )
                                  (local.get $0)
                                 )
                                 (f64.add
                                  (f64.mul
                                   (local.get $0)
                                   (f64.add
                                    (f64.mul
                                     (local.get $0)
                                     (f64.add
                                      (f64.mul
                                       (local.get $0)
                                       (f64.add
                                        (f64.mul
                                         (local.get $0)
                                         (f64.add
                                          (f64.mul
                                           (local.get $0)
                                           (f64.const 0.20697501780033842)
                                          )
                                          (f64.const 0.23066074577556175)
                                         )
                                        )
                                        (f64.const 0.272728123808534)
                                       )
                                      )
                                      (f64.const 0.33333332981837743)
                                     )
                                    )
                                    (f64.const 0.4285714285785502)
                                   )
                                  )
                                  (f64.const 0.5999999999999946)
                                 )
                                )
                               )
                              )
                             )
                            )
                            (i64.const -4294967296)
                           )
                          )
                         )
                        )
                       )
                       (local.tee $4
                        (f64.add
                         (f64.mul
                          (local.get $6)
                          (local.get $0)
                         )
                         (f64.mul
                          (local.get $4)
                          (f64.sub
                           (local.get $11)
                           (f64.sub
                            (f64.add
                             (local.get $0)
                             (f64.const -3)
                            )
                            (local.get $22)
                           )
                          )
                         )
                        )
                       )
                      )
                     )
                     (i64.const -4294967296)
                    )
                   )
                  )
                  (f64.const 0.9617967009544373)
                 )
                )
                (local.tee $0
                 (f64.add
                  (f64.load
                   (i32.add
                    (i32.shl
                     (local.get $5)
                     (i32.const 3)
                    )
                    (i32.const 16416)
                   )
                  )
                  (f64.sub
                   (f64.mul
                    (f64.sub
                     (local.get $4)
                     (f64.sub
                      (local.get $0)
                      (local.get $12)
                     )
                    )
                    (f64.const 0.9617966939259756)
                   )
                   (f64.mul
                    (local.get $0)
                    (f64.const 7.028461650952758e-09)
                   )
                  )
                 )
                )
               )
              )
              (local.tee $11
               (f64.convert_i32_s
                (local.get $3)
               )
              )
             )
            )
            (i64.const -4294967296)
           )
          )
         )
        )
        (local.set $6
         (f64.sub
          (f64.sub
           (f64.sub
            (local.get $12)
            (local.get $11)
           )
           (local.get $20)
          )
          (local.get $6)
         )
        )
       )
      )
      (local.set $1
       (f64.add
        (f64.mul
         (f64.sub
          (local.get $0)
          (local.get $6)
         )
         (local.get $1)
        )
        (f64.mul
         (f64.sub
          (local.get $1)
          (local.tee $0
           (f64.reinterpret_i64
            (i64.and
             (local.get $10)
             (i64.const -4294967296)
            )
           )
          )
         )
         (local.get $4)
        )
       )
      )
      (local.set $2
       (i32.wrap_i64
        (i64.shr_u
         (local.tee $10
          (i64.reinterpret_f64
           (local.tee $4
            (f64.add
             (local.tee $0
              (f64.mul
               (local.get $4)
               (local.get $0)
              )
             )
             (local.get $1)
            )
           )
          )
         )
         (i64.const 32)
        )
       )
      )
      (local.set $3
       (i32.wrap_i64
        (local.get $10)
       )
      )
      (if
       (i32.gt_s
        (local.get $2)
        (i32.const 1083179007)
       )
       (block
        (if
         (i32.or
          (local.get $3)
          (i32.add
           (local.get $2)
           (i32.const -1083179008)
          )
         )
         (return
          (f64.mul
           (f64.mul
            (local.get $8)
            (f64.const 1.e+300)
           )
           (f64.const 1.e+300)
          )
         )
        )
        (if
         (f64.gt
          (f64.add
           (local.get $1)
           (f64.const 8.008566259537294e-17)
          )
          (f64.sub
           (local.get $4)
           (local.get $0)
          )
         )
         (return
          (f64.mul
           (f64.mul
            (local.get $8)
            (f64.const 1.e+300)
           )
           (f64.const 1.e+300)
          )
         )
        )
       )
       (if
        (i32.gt_u
         (i32.and
          (local.get $2)
          (i32.const 2147482624)
         )
         (i32.const 1083231231)
        )
        (block
         (if
          (i32.or
           (local.get $3)
           (i32.add
            (local.get $2)
            (i32.const 1064252416)
           )
          )
          (return
           (f64.mul
            (f64.mul
             (local.get $8)
             (f64.const 1e-300)
            )
            (f64.const 1e-300)
           )
          )
         )
         (if
          (f64.le
           (local.get $1)
           (f64.sub
            (local.get $4)
            (local.get $0)
           )
          )
          (return
           (f64.mul
            (f64.mul
             (local.get $8)
             (f64.const 1e-300)
            )
            (f64.const 1e-300)
           )
          )
         )
        )
       )
      )
      (local.set $2
       (if (result i32)
        (i32.gt_u
         (local.tee $3
          (i32.and
           (local.get $2)
           (i32.const 2147483647)
          )
         )
         (i32.const 1071644672)
        )
        (block (result i32)
         (local.set $5
          (i32.and
           (i32.shr_u
            (local.tee $3
             (i32.add
              (local.get $2)
              (i32.shr_u
               (i32.const 1048576)
               (i32.add
                (i32.shr_u
                 (local.get $3)
                 (i32.const 20)
                )
                (i32.const -1022)
               )
              )
             )
            )
            (i32.const 20)
           )
           (i32.const 2047)
          )
         )
         (local.set $0
          (local.tee $4
           (f64.sub
            (local.get $0)
            (f64.reinterpret_i64
             (i64.shl
              (i64.extend_i32_u
               (i32.and
                (local.get $3)
                (i32.shr_s
                 (i32.const -1048576)
                 (i32.add
                  (local.get $5)
                  (i32.const -1023)
                 )
                )
               )
              )
              (i64.const 32)
             )
            )
           )
          )
         )
         (local.set $10
          (i64.reinterpret_f64
           (f64.add
            (local.get $1)
            (local.get $4)
           )
          )
         )
         (select
          (i32.sub
           (i32.const 0)
           (local.tee $3
            (i32.shr_u
             (i32.or
              (i32.and
               (local.get $3)
               (i32.const 1048575)
              )
              (i32.const 1048576)
             )
             (i32.sub
              (i32.const 1043)
              (local.get $5)
             )
            )
           )
          )
          (local.get $3)
          (i32.lt_s
           (local.get $2)
           (i32.const 0)
          )
         )
        )
        (i32.const 0)
       )
      )
      (return
       (f64.mul
        (local.get $8)
        (if (result f64)
         (i32.lt_s
          (local.tee $3
           (i32.add
            (i32.wrap_i64
             (i64.shr_u
              (local.tee $10
               (i64.reinterpret_f64
                (local.tee $0
                 (f64.sub
                  (f64.const 1)
                  (f64.sub
                   (f64.sub
                    (f64.div
                     (f64.mul
                      (local.tee $0
                       (f64.add
                        (local.tee $6
                         (f64.mul
                          (local.tee $4
                           (f64.reinterpret_i64
                            (i64.and
                             (local.get $10)
                             (i64.const -4294967296)
                            )
                           )
                          )
                          (f64.const 0.6931471824645996)
                         )
                        )
                        (local.tee $4
                         (f64.sub
                          (f64.mul
                           (f64.sub
                            (local.get $1)
                            (f64.sub
                             (local.get $4)
                             (local.get $0)
                            )
                           )
                           (f64.const 0.6931471805599453)
                          )
                          (f64.mul
                           (local.get $4)
                           (f64.const 1.904654299957768e-09)
                          )
                         )
                        )
                       )
                      )
                      (local.tee $1
                       (f64.sub
                        (local.get $0)
                        (f64.mul
                         (local.tee $1
                          (f64.mul
                           (local.get $0)
                           (local.get $0)
                          )
                         )
                         (f64.add
                          (f64.mul
                           (local.get $1)
                           (f64.add
                            (f64.mul
                             (local.get $1)
                             (f64.add
                              (f64.mul
                               (local.get $1)
                               (f64.add
                                (f64.mul
                                 (local.get $1)
                                 (f64.const 4.1381367970572385e-08)
                                )
                                (f64.const -1.6533902205465252e-06)
                               )
                              )
                              (f64.const 6.613756321437934e-05)
                             )
                            )
                            (f64.const -2.7777777777015593e-03)
                           )
                          )
                          (f64.const 0.16666666666666602)
                         )
                        )
                       )
                      )
                     )
                     (f64.add
                      (local.get $1)
                      (f64.const -2)
                     )
                    )
                    (f64.add
                     (local.tee $1
                      (f64.sub
                       (local.get $4)
                       (f64.sub
                        (local.get $0)
                        (local.get $6)
                       )
                      )
                     )
                     (f64.mul
                      (local.get $0)
                      (local.get $1)
                     )
                    )
                   )
                   (local.get $0)
                  )
                 )
                )
               )
              )
              (i64.const 32)
             )
            )
            (i32.shl
             (local.get $2)
             (i32.const 20)
            )
           )
          )
          (i32.const 1048576)
         )
         (call $_scalbn
          (local.get $0)
          (local.get $2)
         )
         (f64.reinterpret_i64
          (i64.or
           (i64.and
            (local.get $10)
            (i64.const 4294967295)
           )
           (i64.shl
            (i64.extend_i32_u
             (local.get $3)
            )
            (i64.const 32)
           )
          )
         )
        )
       )
      )
     )
    )
   )
  )
  (f64.add
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_saveSetjmp (; 344 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (global.set $setjmpId
   (i32.add
    (global.get $setjmpId)
    (i32.const 1)
   )
  )
  (i32.store
   (local.get $0)
   (global.get $setjmpId)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (local.get $4)
     (local.get $3)
    )
    (block
     (if
      (i32.eqz
       (i32.load
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 3)
         )
         (local.get $2)
        )
       )
      )
      (block
       (i32.store
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 3)
         )
         (local.get $2)
        )
        (global.get $setjmpId)
       )
       (i32.store
        (i32.add
         (i32.add
          (i32.shl
           (local.get $4)
           (i32.const 3)
          )
          (i32.const 4)
         )
         (local.get $2)
        )
        (local.get $1)
       )
       (i32.store
        (i32.add
         (i32.add
          (i32.shl
           (local.get $4)
           (i32.const 3)
          )
          (i32.const 8)
         )
         (local.get $2)
        )
        (i32.const 0)
       )
       (call $setTempRet0
        (local.get $3)
       )
       (return
        (local.get $2)
       )
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $2
   (call $_saveSetjmp
    (local.get $0)
    (local.get $1)
    (call $_realloc
     (local.get $2)
     (i32.shl
      (i32.add
       (local.tee $3
        (i32.shl
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.const 1)
      )
      (i32.const 3)
     )
    )
    (local.get $3)
   )
  )
  (call $setTempRet0
   (local.get $3)
  )
  (local.get $2)
 )
 (func $_testSetjmp (; 345 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.ge_s
      (local.get $3)
      (local.get $2)
     )
    )
    (br_if $while-out
     (i32.eqz
      (local.tee $4
       (i32.load
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 3)
         )
         (local.get $1)
        )
       )
      )
     )
    )
    (if
     (i32.eq
      (local.get $0)
      (local.get $4)
     )
     (return
      (i32.load
       (i32.add
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 3)
         )
         (i32.const 4)
        )
        (local.get $1)
       )
      )
     )
     (block
      (local.set $3
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (br $while-in)
     )
    )
   )
  )
  (i32.const 0)
 )
 (func $_setThrew (; 346 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (if
   (i32.eqz
    (global.get $__THREW__)
   )
   (block
    (global.set $__THREW__
     (local.get $0)
    )
    (global.set $threwValue
     (local.get $1)
    )
   )
  )
 )
 (func $_memcpy (; 347 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.ge_s
    (local.get $2)
    (i32.const 8192)
   )
   (block
    (drop
     (call $_emscripten_memcpy_big
      (local.get $0)
      (local.get $1)
      (local.get $2)
     )
    )
    (return
     (local.get $0)
    )
   )
  )
  (local.set $4
   (local.get $0)
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.and
     (local.get $1)
     (i32.const 3)
    )
   )
   (block
    (loop $while-in
     (if
      (i32.and
       (local.get $0)
       (i32.const 3)
      )
      (block
       (if
        (i32.eqz
         (local.get $2)
        )
        (return
         (local.get $4)
        )
       )
       (i32.store8
        (local.get $0)
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $2)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $5
     (i32.add
      (local.tee $2
       (i32.and
        (local.get $3)
        (i32.const -4)
       )
      )
      (i32.const -64)
     )
    )
    (loop $while-in1
     (if
      (i32.le_s
       (local.get $0)
       (local.get $5)
      )
      (block
       (i32.store
        (local.get $0)
        (i32.load
         (local.get $1)
        )
       )
       (i32.store offset=4
        (local.get $0)
        (i32.load offset=4
         (local.get $1)
        )
       )
       (i32.store offset=8
        (local.get $0)
        (i32.load offset=8
         (local.get $1)
        )
       )
       (i32.store offset=12
        (local.get $0)
        (i32.load offset=12
         (local.get $1)
        )
       )
       (i32.store offset=16
        (local.get $0)
        (i32.load offset=16
         (local.get $1)
        )
       )
       (i32.store offset=20
        (local.get $0)
        (i32.load offset=20
         (local.get $1)
        )
       )
       (i32.store offset=24
        (local.get $0)
        (i32.load offset=24
         (local.get $1)
        )
       )
       (i32.store offset=28
        (local.get $0)
        (i32.load offset=28
         (local.get $1)
        )
       )
       (i32.store offset=32
        (local.get $0)
        (i32.load offset=32
         (local.get $1)
        )
       )
       (i32.store offset=36
        (local.get $0)
        (i32.load offset=36
         (local.get $1)
        )
       )
       (i32.store offset=40
        (local.get $0)
        (i32.load offset=40
         (local.get $1)
        )
       )
       (i32.store offset=44
        (local.get $0)
        (i32.load offset=44
         (local.get $1)
        )
       )
       (i32.store offset=48
        (local.get $0)
        (i32.load offset=48
         (local.get $1)
        )
       )
       (i32.store offset=52
        (local.get $0)
        (i32.load offset=52
         (local.get $1)
        )
       )
       (i32.store offset=56
        (local.get $0)
        (i32.load offset=56
         (local.get $1)
        )
       )
       (i32.store offset=60
        (local.get $0)
        (i32.load offset=60
         (local.get $1)
        )
       )
       (local.set $0
        (i32.sub
         (local.get $0)
         (i32.const -64)
        )
       )
       (local.set $1
        (i32.sub
         (local.get $1)
         (i32.const -64)
        )
       )
       (br $while-in1)
      )
     )
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $2)
      )
      (block
       (i32.store
        (local.get $0)
        (i32.load
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
   (block
    (local.set $2
     (i32.sub
      (local.get $3)
      (i32.const 4)
     )
    )
    (loop $while-in5
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $2)
      )
      (block
       (i32.store8
        (local.get $0)
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.store8 offset=1
        (local.get $0)
        (i32.load8_s offset=1
         (local.get $1)
        )
       )
       (i32.store8 offset=2
        (local.get $0)
        (i32.load8_s offset=2
         (local.get $1)
        )
       )
       (i32.store8 offset=3
        (local.get $0)
        (i32.load8_s offset=3
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-in5)
      )
     )
    )
   )
  )
  (loop $while-in7
   (if
    (i32.lt_s
     (local.get $0)
     (local.get $3)
    )
    (block
     (i32.store8
      (local.get $0)
      (i32.load8_s
       (local.get $1)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (local.get $4)
 )
 (func $_memset (; 348 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  (local.set $1
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
  )
  (if
   (i32.ge_s
    (local.get $2)
    (i32.const 67)
   )
   (block
    (loop $while-in
     (if
      (i32.and
       (local.get $0)
       (i32.const 3)
      )
      (block
       (i32.store8
        (local.get $0)
        (local.get $1)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $3
     (i32.or
      (i32.or
       (i32.or
        (i32.shl
         (local.get $1)
         (i32.const 8)
        )
        (local.get $1)
       )
       (i32.shl
        (local.get $1)
        (i32.const 16)
       )
      )
      (i32.shl
       (local.get $1)
       (i32.const 24)
      )
     )
    )
    (local.set $6
     (i32.add
      (local.tee $5
       (i32.and
        (local.get $4)
        (i32.const -4)
       )
      )
      (i32.const -64)
     )
    )
    (loop $while-in1
     (if
      (i32.le_s
       (local.get $0)
       (local.get $6)
      )
      (block
       (i32.store
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=4
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=8
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=12
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=16
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=20
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=24
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=28
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=32
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=36
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=40
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=44
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=48
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=52
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=56
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=60
        (local.get $0)
        (local.get $3)
       )
       (local.set $0
        (i32.sub
         (local.get $0)
         (i32.const -64)
        )
       )
       (br $while-in1)
      )
     )
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $5)
      )
      (block
       (i32.store
        (local.get $0)
        (local.get $3)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (local.get $0)
     (local.get $4)
    )
    (block
     (i32.store8
      (local.get $0)
      (local.get $1)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (i32.sub
   (local.get $4)
   (local.get $2)
  )
 )
 (func $_sbrk (; 349 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (i32.or
    (i32.and
     (i32.lt_s
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.tee $2
         (i32.load
          (global.get $DYNAMICTOP_PTR)
         )
        )
       )
      )
      (local.get $2)
     )
     (i32.gt_s
      (local.get $0)
      (i32.const 0)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 0)
    )
   )
   (block
    (drop
     (call $abortOnCannotGrowMemory
      (local.get $1)
     )
    )
    (call $___setErrNo
     (i32.const 12)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (call $_emscripten_get_heap_size)
   )
   (if
    (i32.eqz
     (call $_emscripten_resize_heap
      (local.get $1)
     )
    )
    (block
     (call $___setErrNo
      (i32.const 12)
     )
     (return
      (i32.const -1)
     )
    )
   )
  )
  (i32.store
   (global.get $DYNAMICTOP_PTR)
   (local.get $1)
  )
  (local.get $2)
 )
 (func $dynCall_ii (; 350 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call_indirect (type $FUNCSIG$ii)
   (local.get $1)
   (i32.and
    (local.get $0)
    (i32.const 3)
   )
  )
 )
 (func $dynCall_iii (; 351 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call_indirect (type $FUNCSIG$iii)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 4)
   )
  )
 )
 (func $dynCall_iiii (; 352 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 15)
    )
    (i32.const 12)
   )
  )
 )
 (func $dynCall_iiiii (; 353 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 28)
   )
  )
 )
 (func $dynCall_v (; 354 ;) (; has Stack IR ;) (param $0 i32)
  (call_indirect (type $FUNCSIG$v)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 32)
   )
  )
 )
 (func $dynCall_vi (; 355 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call_indirect (type $FUNCSIG$vi)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 34)
   )
  )
 )
 (func $dynCall_vii (; 356 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call_indirect (type $FUNCSIG$vii)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 15)
    )
    (i32.const 42)
   )
  )
 )
 (func $dynCall_viii (; 357 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call_indirect (type $FUNCSIG$viii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 58)
   )
  )
 )
 (func $dynCall_viiii (; 358 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (call_indirect (type $FUNCSIG$viiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 66)
   )
  )
 )
 (func $dynCall_viiiii (; 359 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (call_indirect (type $FUNCSIG$viiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 74)
   )
  )
 )
 (func $b0 (; 360 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $abort
   (i32.const 0)
  )
  (i32.const 0)
 )
 (func $b1 (; 361 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call $abort
   (i32.const 1)
  )
  (i32.const 0)
 )
 (func $b2 (; 362 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call $abort
   (i32.const 2)
  )
  (i32.const 0)
 )
 (func $b3 (; 363 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call $abort
   (i32.const 3)
  )
  (i32.const 0)
 )
 (func $b4 (; 364 ;) (; has Stack IR ;)
  (call $abort
   (i32.const 4)
  )
 )
 (func $b5 (; 365 ;) (; has Stack IR ;) (param $0 i32)
  (call $abort
   (i32.const 5)
  )
 )
 (func $b6 (; 366 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $abort
   (i32.const 6)
  )
 )
 (func $b7 (; 367 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $abort
   (i32.const 7)
  )
 )
 (func $b8 (; 368 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $abort
   (i32.const 8)
  )
 )
 (func $b9 (; 369 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (call $abort
   (i32.const 9)
  )
 )
)
